!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^  scoped_ptr<BlockSparseMatrix> A;$/;"	m	class:ceres::internal::BlockJacobiPreconditionerTest	file:
A	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Matcher<T> A() { return MakeMatcher(new internal::AnyMatcherImpl<T>()); }$/;"	f	namespace:testing
A	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  scoped_ptr<SparseMatrix> A;$/;"	m	struct:ceres::internal::LinearLeastSquaresProblem
A	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  scoped_ptr<BlockSparseMatrix> A;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
A	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  scoped_ptr<BlockSparseMatrix> A;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
AATranspose	ceres-solver/internal/ceres/suitesparse.h	/^  cholmod_sparse* AATranspose(cholmod_sparse* A) {$/;"	f	class:ceres::internal::SuiteSparse
ACQUIRE	cartographer/cartographer/common/mutex.h	47;"	d
ACTION	ceres-solver/internal/ceres/gmock/gmock.h	3632;"	d
ACTION_P	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_P(ReturnPointee, pointer) { return *pointer; }$/;"	f	namespace:testing
ACTION_P	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_P(Throw, exception) { throw exception; }$/;"	f	namespace:testing
ACTION_P	ceres-solver/internal/ceres/gmock/gmock.h	3677;"	d
ACTION_P10	ceres-solver/internal/ceres/gmock/gmock.h	4309;"	d
ACTION_P2	ceres-solver/internal/ceres/gmock/gmock.h	3727;"	d
ACTION_P3	ceres-solver/internal/ceres/gmock/gmock.h	3782;"	d
ACTION_P4	ceres-solver/internal/ceres/gmock/gmock.h	3840;"	d
ACTION_P5	ceres-solver/internal/ceres/gmock/gmock.h	3907;"	d
ACTION_P6	ceres-solver/internal/ceres/gmock/gmock.h	3977;"	d
ACTION_P7	ceres-solver/internal/ceres/gmock/gmock.h	4050;"	d
ACTION_P8	ceres-solver/internal/ceres/gmock/gmock.h	4131;"	d
ACTION_P9	ceres-solver/internal/ceres/gmock/gmock.h	4218;"	d
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(DeleteArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(InvokeArgument,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(ReturnArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(ReturnNew,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(SaveArg,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(SaveArgPointee,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(SetArgReferee,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	/^ACTION_TEMPLATE(SetArrayArgument,$/;"	f	namespace:testing
ACTION_TEMPLATE	ceres-solver/internal/ceres/gmock/gmock.h	3568;"	d
ADD_FAILURE	ceres-solver/internal/ceres/gtest/gtest.h	20417;"	d
ADD_FAILURE_AT	ceres-solver/internal/ceres/gtest/gtest.h	20421;"	d
ALIGNOF_DOUBLE	cartographer/bazel/third_party/fontconfig/config.h	21;"	d
ALIGNOF_VOID_P	cartographer/bazel/third_party/fontconfig/config.h	24;"	d
AMD	ceres-solver/internal/ceres/linear_solver.h	/^  AMD      \/\/ Use the Approximate Minimum Degree algorithm to re-order$/;"	e	enum:ceres::internal::OrderingType
APPEND_BUNDLING_INTRINSICS	ceres-solver/examples/libmv_bundle_adjuster.cc	553;"	d	file:
APPEND_DISTORTION_COEFFICIENT	ceres-solver/examples/libmv_bundle_adjuster.cc	582;"	d	file:
APPEND_DISTORTION_COEFFICIENT	ceres-solver/examples/libmv_bundle_adjuster.cc	595;"	d	file:
APP_ABI	ceres-solver/jni/Application.mk	/^APP_ABI := armeabi-v7a$/;"	m
APP_BUILD_SCRIPT	ceres-solver/jni/Application.mk	/^APP_BUILD_SCRIPT := $(call my-dir)\/Android.mk$/;"	m
APP_OPTIM	ceres-solver/jni/Application.mk	/^APP_OPTIM := release$/;"	m
APP_PROJECT_PATH	ceres-solver/jni/Application.mk	/^APP_PROJECT_PATH := $(call my-dir)$/;"	m
APP_STL	ceres-solver/jni/Application.mk	/^APP_STL := c++_static$/;"	m
ARMIJO	ceres-solver/include/ceres/types.h	/^  ARMIJO,$/;"	e	enum:ceres::LineSearchType
ASSERT_ANY_THROW	ceres-solver/internal/ceres/gtest/gtest.h	20462;"	d
ASSERT_DEATH	ceres-solver/internal/ceres/gtest/gtest.h	9479;"	d
ASSERT_DEATH_IF_SUPPORTED	ceres-solver/internal/ceres/gtest/gtest.h	9583;"	d
ASSERT_DEATH_IF_SUPPORTED	ceres-solver/internal/ceres/gtest/gtest.h	9588;"	d
ASSERT_DEBUG_DEATH	ceres-solver/internal/ceres/gtest/gtest.h	9561;"	d
ASSERT_DEBUG_DEATH	ceres-solver/internal/ceres/gtest/gtest.h	9569;"	d
ASSERT_DOUBLE_EQ	ceres-solver/internal/ceres/gtest/gtest.h	21005;"	d
ASSERT_EQ	ceres-solver/internal/ceres/gtest/gtest.h	20922;"	d
ASSERT_EXIT	ceres-solver/internal/ceres/gtest/gtest.h	9468;"	d
ASSERT_FALSE	ceres-solver/internal/ceres/gtest/gtest.h	20477;"	d
ASSERT_FLOAT_EQ	ceres-solver/internal/ceres/gtest/gtest.h	21001;"	d
ASSERT_GE	ceres-solver/internal/ceres/gtest/gtest.h	20938;"	d
ASSERT_GT	ceres-solver/internal/ceres/gtest/gtest.h	20942;"	d
ASSERT_HRESULT_FAILED	ceres-solver/internal/ceres/gtest/gtest.h	21050;"	d
ASSERT_HRESULT_SUCCEEDED	ceres-solver/internal/ceres/gtest/gtest.h	21044;"	d
ASSERT_LE	ceres-solver/internal/ceres/gtest/gtest.h	20930;"	d
ASSERT_LT	ceres-solver/internal/ceres/gtest/gtest.h	20934;"	d
ASSERT_NE	ceres-solver/internal/ceres/gtest/gtest.h	20926;"	d
ASSERT_NEAR	ceres-solver/internal/ceres/gtest/gtest.h	21013;"	d
ASSERT_NO_FATAL_FAILURE	ceres-solver/internal/ceres/gtest/gtest.h	21065;"	d
ASSERT_NO_THROW	ceres-solver/internal/ceres/gtest/gtest.h	20460;"	d
ASSERT_PRED1	ceres-solver/internal/ceres/gtest/gtest.h	20601;"	d
ASSERT_PRED2	ceres-solver/internal/ceres/gtest/gtest.h	20649;"	d
ASSERT_PRED3	ceres-solver/internal/ceres/gtest/gtest.h	20704;"	d
ASSERT_PRED4	ceres-solver/internal/ceres/gtest/gtest.h	20766;"	d
ASSERT_PRED5	ceres-solver/internal/ceres/gtest/gtest.h	20835;"	d
ASSERT_PRED_FORMAT1	ceres-solver/internal/ceres/gtest/gtest.h	20599;"	d
ASSERT_PRED_FORMAT2	ceres-solver/internal/ceres/gtest/gtest.h	20647;"	d
ASSERT_PRED_FORMAT3	ceres-solver/internal/ceres/gtest/gtest.h	20702;"	d
ASSERT_PRED_FORMAT4	ceres-solver/internal/ceres/gtest/gtest.h	20764;"	d
ASSERT_PRED_FORMAT5	ceres-solver/internal/ceres/gtest/gtest.h	20833;"	d
ASSERT_STRCASEEQ	ceres-solver/internal/ceres/gtest/gtest.h	20974;"	d
ASSERT_STRCASENE	ceres-solver/internal/ceres/gtest/gtest.h	20976;"	d
ASSERT_STREQ	ceres-solver/internal/ceres/gtest/gtest.h	20970;"	d
ASSERT_STRNE	ceres-solver/internal/ceres/gtest/gtest.h	20972;"	d
ASSERT_THAT	ceres-solver/internal/ceres/gmock/gmock.h	9207;"	d
ASSERT_THROW	ceres-solver/internal/ceres/gtest/gtest.h	20458;"	d
ASSERT_TRUE	ceres-solver/internal/ceres/gtest/gtest.h	20474;"	d
AVX	ceres-solver/include/ceres/jet.h	/^      AVX = true,$/;"	e	enum:Eigen::NumTraits::Div::__anon151
A_	ceres-solver/include/ceres/normal_prior.h	/^  Matrix A_;$/;"	m	class:ceres::NormalPrior
A_	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^  scoped_ptr<BlockSparseMatrix> A_;$/;"	m	class:ceres::internal::BlockSparseMatrixTest	file:
A_	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  const LinearOperator& A_;$/;"	m	class:ceres::internal::CgnrLinearOperator
A_	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^  scoped_ptr<CompressedRowSparseMatrix> A_;$/;"	m	class:ceres::internal::DynamicSparseNormalCholeskySolverTest	file:
A_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  scoped_ptr<PartitionedMatrixViewBase> A_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
A_	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  scoped_ptr<BlockSparseMatrix> A_;$/;"	m	class:ceres::internal::ImplicitSchurComplementTest	file:
A_	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  scoped_ptr<BlockSparseMatrix> A_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolverTest	file:
A_	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^  scoped_ptr<SparseMatrix> A_;$/;"	m	class:ceres::internal::PartitionedMatrixViewTest	file:
A_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^  scoped_ptr<BlockSparseMatrix> A_;$/;"	m	class:ceres::internal::SparseNormalCholeskySolverTest	file:
Abort	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Abort() {$/;"	f	namespace:testing::internal::posix
Abort	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void DeathTestImpl::Abort(AbortReason reason) {$/;"	f	class:testing::internal::DeathTestImpl
AbortReason	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum AbortReason {$/;"	g	class:testing::internal::DeathTest
AbortingIterationCallback	ceres-solver/internal/ceres/minimizer_test.cc	/^class AbortingIterationCallback : public IterationCallback {$/;"	c	namespace:ceres::internal	file:
AbstractSocketWriter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  class AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener	file:
AccelerationCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  AccelerationCostFunction3D(const double scaling_factor,$/;"	f	class:cartographer::mapping::AccelerationCostFunction3D
AccelerationCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^class AccelerationCostFunction3D {$/;"	c	namespace:cartographer::mapping
AccumulatePixelData	cartographer/cartographer/mapping/3d/submap_3d.cc	/^std::vector<PixelData> AccumulatePixelData($/;"	f	namespace:cartographer::mapping::__anon106
Action	ceres-solver/internal/ceres/gmock/gmock.h	/^  Action() : impl_(NULL) {}$/;"	f	class:testing::Action
Action	ceres-solver/internal/ceres/gmock/gmock.h	/^  Action(const Action& action) : impl_(action.impl_) {}$/;"	f	class:testing::Action
Action	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Action(ActionInterface<F>* impl) : impl_(impl) {}$/;"	f	class:testing::Action
Action	ceres-solver/internal/ceres/gmock/gmock.h	/^Action<To>::Action(const Action<From>& from)$/;"	f	class:testing::Action
Action	ceres-solver/internal/ceres/gmock/gmock.h	/^class Action {$/;"	c	namespace:testing
ActionAdaptor	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ActionAdaptor(const Action<F2>& from) : impl_(from.impl_) {}$/;"	f	class:testing::internal::ActionAdaptor
ActionAdaptor	ceres-solver/internal/ceres/gmock/gmock.h	/^class ActionAdaptor : public ActionInterface<F1> {$/;"	c	namespace:testing::internal
ActionHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class ActionHelper {$/;"	c	namespace:testing::internal
ActionInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^  ActionInterface() {}$/;"	f	class:testing::ActionInterface
ActionInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^class ActionInterface {$/;"	c	namespace:testing
ActionResultHolder	ceres-solver/internal/ceres/gmock/gmock.h	/^  ActionResultHolder() {}$/;"	f	class:testing::internal::ActionResultHolder
ActionResultHolder	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ActionResultHolder(Wrapper result)$/;"	f	class:testing::internal::ActionResultHolder
ActionResultHolder	ceres-solver/internal/ceres/gmock/gmock.h	/^class ActionResultHolder : public UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
ActionResultHolder	ceres-solver/internal/ceres/gmock/gmock.h	/^class ActionResultHolder<void> : public UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
ActiveSubmaps2D	cartographer/cartographer/mapping/2d/submap_2d.cc	/^ActiveSubmaps2D::ActiveSubmaps2D(const proto::SubmapsOptions2D& options)$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
ActiveSubmaps2D	cartographer/cartographer/mapping/2d/submap_2d.h	/^class ActiveSubmaps2D {$/;"	c	namespace:cartographer::mapping
ActiveSubmaps3D	cartographer/cartographer/mapping/3d/submap_3d.cc	/^ActiveSubmaps3D::ActiveSubmaps3D(const proto::SubmapsOptions3D& options)$/;"	f	class:cartographer::mapping::ActiveSubmaps3D
ActiveSubmaps3D	cartographer/cartographer/mapping/3d/submap_3d.h	/^class ActiveSubmaps3D {$/;"	c	namespace:cartographer::mapping
AdaptiveVoxelFilter	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^AdaptiveVoxelFilter::AdaptiveVoxelFilter($/;"	f	class:cartographer::sensor::AdaptiveVoxelFilter
AdaptiveVoxelFilter	cartographer/cartographer/sensor/internal/voxel_filter.h	/^class AdaptiveVoxelFilter {$/;"	c	namespace:cartographer::sensor
AdaptivelyVoxelFiltered	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^PointCloud AdaptivelyVoxelFiltered($/;"	f	namespace:cartographer::sensor::__anon127
Add	cartographer/cartographer/common/histogram.cc	/^void Histogram::Add(const float value) { values_.push_back(value); }$/;"	f	class:cartographer::common::Histogram
Add	cartographer/cartographer/mapping/internal/connected_components.cc	/^void ConnectedComponents::Add(const int trajectory_id) {$/;"	f	class:cartographer::mapping::ConnectedComponents
Add	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^void TrajectoryConnectivityState::Add(const int trajectory_id) {$/;"	f	class:cartographer::mapping::TrajectoryConnectivityState
Add	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^void OrderedMultiQueue::Add(const QueueKey& queue_key,$/;"	f	class:cartographer::sensor::OrderedMultiQueue
AddAccumulatedRangeData	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^LocalTrajectoryBuilder2D::AddAccumulatedRangeData($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
AddAccumulatedRangeData	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^LocalTrajectoryBuilder3D::AddAccumulatedRangeData($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
AddArgument	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void AddArgument(const char* argument) {$/;"	f	class:testing::internal::Arguments
AddArguments	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void AddArguments(const ::std::vector<Str>& arguments) {$/;"	f	class:testing::internal::Arguments
AddComplexRootPair	ceres-solver/internal/ceres/polynomial_test.cc	/^Vector AddComplexRootPair(const Vector& poly, double real, double imag) {$/;"	f	namespace:ceres::internal::__anon163
AddConstraint	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^  void AddConstraint(int submap_index, int node_index, bool is_intra_submap) {$/;"	f	class:cartographer::mapping::__anon83::OverlappingSubmapsTrimmer2DTest
AddCost	ceres-solver/include/ceres/jet.h	/^    AddCost = 1,$/;"	e	enum:Eigen::NumTraits::__anon150
AddData	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^void CollatedTrajectoryBuilder::AddData(std::unique_ptr<sensor::Data> data) {$/;"	f	class:cartographer::mapping::CollatedTrajectoryBuilder
AddDependency	cartographer/cartographer/common/task.cc	/^void Task::AddDependency(std::weak_ptr<Task> dependency) {$/;"	f	class:cartographer::common::Task
AddDependentTask	cartographer/cartographer/common/task.cc	/^void Task::AddDependentTask(Task* dependent_task) {$/;"	f	class:cartographer::common::Task
AddDiagonalAndInvert	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^void ImplicitSchurComplement::AddDiagonalAndInvert($/;"	f	class:ceres::internal::ImplicitSchurComplement
AddEdge	ceres-solver/internal/ceres/graph.h	/^  void AddEdge(const Vertex& vertex1, const Vertex& vertex2) {$/;"	f	class:ceres::internal::Graph
AddEdge	ceres-solver/internal/ceres/graph.h	/^  void AddEdge(const Vertex& vertex1, const Vertex& vertex2) {$/;"	f	class:ceres::internal::WeightedGraph
AddEdge	ceres-solver/internal/ceres/graph.h	/^  void AddEdge(const Vertex& vertex1, const Vertex& vertex2, double weight) {$/;"	f	class:ceres::internal::WeightedGraph
AddElementToGroup	ceres-solver/include/ceres/ordered_groups.h	/^  bool AddElementToGroup(const T element, const int group) {$/;"	f	class:ceres::OrderedGroups
AddEnvironment	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;"	f	class:testing::UnitTest
AddEvent	ceres-solver/internal/ceres/wall_time.cc	/^void EventLogger::AddEvent(const std::string& event_name) {$/;"	f	class:ceres::internal::EventLogger
AddExpectation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Sequence::AddExpectation(const Expectation& expectation) const {$/;"	f	class:testing::Sequence
AddExtrapolator	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::AddExtrapolator(const int trajectory_id,$/;"	f	class:cartographer_ros::Node
AddFixedFramePoseData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddFixedFramePoseData($/;"	f	class:cartographer::mapping::PoseGraph2D
AddFixedFramePoseData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddFixedFramePoseData($/;"	f	class:cartographer::mapping::PoseGraph3D
AddFixedFramePoseData	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::AddFixedFramePoseData($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
AddFixedFramePoseDataHandler	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	/^class AddFixedFramePoseDataHandler$/;"	c	namespace:cartographer::cloud::handlers
AddGlobalTestEnvironment	ceres-solver/internal/ceres/gtest/gtest.h	/^inline Environment* AddGlobalTestEnvironment(Environment* env) {$/;"	f	namespace:testing
AddImuAngularVelocityObservation	cartographer/cartographer/mapping/imu_tracker.cc	/^void ImuTracker::AddImuAngularVelocityObservation($/;"	f	class:cartographer::mapping::ImuTracker
AddImuData	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^void LocalTrajectoryBuilder2D::AddImuData(const sensor::ImuData& imu_data) {$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
AddImuData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddImuData(const int trajectory_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
AddImuData	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^void LocalTrajectoryBuilder3D::AddImuData(const sensor::ImuData& imu_data) {$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
AddImuData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddImuData(const int trajectory_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
AddImuData	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::AddImuData(const int trajectory_id,$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
AddImuData	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::AddImuData(const int trajectory_id,$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
AddImuData	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::AddImuData(const sensor::ImuData& imu_data) {$/;"	f	class:cartographer::mapping::PoseExtrapolator
AddImuDataHandler	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	/^class AddImuDataHandler : public async_grpc::RpcHandler<AddImuDataSignature> {$/;"	c	namespace:cartographer::cloud::handlers
AddImuLinearAccelerationObservation	cartographer/cartographer/mapping/imu_tracker.cc	/^void ImuTracker::AddImuLinearAccelerationObservation($/;"	f	class:cartographer::mapping::ImuTracker
AddLandmarkCostFunctions	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void AddLandmarkCostFunctions($/;"	f	namespace:cartographer::mapping::optimization::__anon93
AddLandmarkCostFunctions	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void AddLandmarkCostFunctions($/;"	f	namespace:cartographer::mapping::optimization::__anon88
AddLandmarkDataHandler	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	/^class AddLandmarkDataHandler$/;"	c	namespace:cartographer::cloud::handlers
AddLinearOnlyImuObservation	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  void AddLinearOnlyImuObservation(const common::Time time,$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
AddLocalSlamResultData	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^void TrajectoryBuilderStub::AddLocalSlamResultData($/;"	f	class:cartographer::cloud::TrajectoryBuilderStub
AddLogSink	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^inline void AddLogSink(LogSink *sink) {$/;"	f	namespace:google
AddNode	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^NodeId PoseGraph2D::AddNode($/;"	f	class:cartographer::mapping::PoseGraph2D
AddNode	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^NodeId PoseGraph3D::AddNode($/;"	f	class:cartographer::mapping::PoseGraph3D
AddNodeFromProto	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddNodeFromProto(const transform::Rigid3d& global_pose,$/;"	f	class:cartographer::mapping::PoseGraph2D
AddNodeFromProto	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddNodeFromProto(const transform::Rigid3d& global_pose,$/;"	f	class:cartographer::mapping::PoseGraph3D
AddNodeToSubmap	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddNodeToSubmap(const NodeId& node_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
AddNodeToSubmap	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddNodeToSubmap(const NodeId& node_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
AddNoise	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^transform::Rigid3d AddNoise(const transform::Rigid3d& transform,$/;"	f	namespace:cartographer::mapping::optimization::__anon87
AddOdometryData	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^void LocalTrajectoryBuilder2D::AddOdometryData($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
AddOdometryData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddOdometryData(const int trajectory_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
AddOdometryData	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^void LocalTrajectoryBuilder3D::AddOdometryData($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
AddOdometryData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddOdometryData(const int trajectory_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
AddOdometryData	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::AddOdometryData($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
AddOdometryData	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::AddOdometryData($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
AddOdometryData	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::AddOdometryData($/;"	f	class:cartographer::mapping::PoseExtrapolator
AddOdometryDataHandler	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	/^class AddOdometryDataHandler$/;"	c	namespace:cartographer::cloud::handlers
AddOfflineTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^int Node::AddOfflineTrajectory($/;"	f	class:cartographer_ros::Node
AddOption	cartographer/scripts/update_configuration_doc.py	/^  def AddOption(self, option_type, name, comments):$/;"	m	class:Message
AddParameter	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  void AddParameter(const Matrix& residual_J_param) {$/;"	f	class:ceres::internal::LinearCostFunction
AddParameterBlock	ceres-solver/include/ceres/dynamic_cost_function.h	/^  virtual void AddParameterBlock(int size) {$/;"	f	class:ceres::DynamicCostFunction
AddParameterBlock	ceres-solver/internal/ceres/problem.cc	/^void Problem::AddParameterBlock(double* values, int size) {$/;"	f	class:ceres::Problem
AddParameterBlock	ceres-solver/internal/ceres/problem.cc	/^void Problem::AddParameterBlock(double* values,$/;"	f	class:ceres::Problem
AddParameterBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::AddParameterBlock($/;"	f	class:ceres::internal::ProblemImpl
AddParameterBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::AddParameterBlock(double* values, int size) {$/;"	f	class:ceres::internal::ProblemImpl
AddPlayableBag	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^void PlayableBagMultiplexer::AddPlayableBag(PlayableBag playable_bag) {$/;"	f	class:cartographer_ros::PlayableBagMultiplexer
AddPoint	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^  void AddPoint(const Eigen::Vector2d& point, const SubmapId& submap_id,$/;"	f	class:cartographer::mapping::__anon82::SubmapCoverageGrid2D
AddPointCloudSliceToHistogram	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^void AddPointCloudSliceToHistogram(const sensor::PointCloud& slice,$/;"	f	namespace:cartographer::mapping::scan_matching::__anon98
AddPose	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::AddPose(const common::Time time,$/;"	f	class:cartographer::mapping::PoseExtrapolator
AddProto	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  void AddProto(const MessageType& proto) {$/;"	f	class:cartographer::io::InMemoryProtoStreamReader
AddQueue	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^void OrderedMultiQueue::AddQueue(const QueueKey& queue_key, Callback callback) {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
AddRandomBlock	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void AddRandomBlock(const int num_rows,$/;"	f	namespace:ceres::internal::__anon189
AddRangeData	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^LocalTrajectoryBuilder2D::AddRangeData($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
AddRangeData	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^LocalTrajectoryBuilder3D::AddRangeData($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
AddRangeData	cartographer/cartographer/mapping/internal/range_data_collator.cc	/^sensor::TimedPointCloudOriginData RangeDataCollator::AddRangeData($/;"	f	class:cartographer::mapping::RangeDataCollator
AddRangefinderDataHandler	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	/^class AddRangefinderDataHandler$/;"	c	namespace:cartographer::cloud::handlers
AddRealRoot	ceres-solver/internal/ceres/polynomial_test.cc	/^Vector AddRealRoot(const Vector& poly, double root) {$/;"	f	namespace:ceres::internal::__anon163
AddRef	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddRef	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
AddReference	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddReference	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
AddResidualBlock	ceres-solver/internal/ceres/parameter_block.h	/^  void AddResidualBlock(ResidualBlock* residual_block) {$/;"	f	class:ceres::internal::ParameterBlock
AddResidualBlock	ceres-solver/internal/ceres/problem.cc	/^ResidualBlockId Problem::AddResidualBlock($/;"	f	class:ceres::Problem
AddResidualBlock	ceres-solver/internal/ceres/problem_impl.cc	/^ResidualBlock* ProblemImpl::AddResidualBlock($/;"	f	class:ceres::internal::ProblemImpl
AddSensorData	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^void TrajectoryBuilderStub::AddSensorData($/;"	f	class:cartographer::cloud::TrajectoryBuilderStub
AddSensorData	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^void TrajectoryBuilderStub::AddSensorData(const std::string& sensor_id,$/;"	f	class:cartographer::cloud::TrajectoryBuilderStub
AddSensorData	cartographer/cartographer/sensor/internal/collator.cc	/^void Collator::AddSensorData(const int trajectory_id,$/;"	f	class:cartographer::sensor::Collator
AddSensorData	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^void TrajectoryCollator::AddSensorData(const int trajectory_id,$/;"	f	class:cartographer::sensor::TrajectoryCollator
AddSensorDataBatchHandler	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.h	/^class AddSensorDataBatchHandler$/;"	c	namespace:cartographer::cloud::handlers
AddSensorDataToTrajectory	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^void MapBuilderContext<SubmapType>::AddSensorDataToTrajectory($/;"	f	class:cartographer::cloud::MapBuilderContext
AddSensorSamplers	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::AddSensorSamplers(const int trajectory_id,$/;"	f	class:cartographer_ros::Node
AddSerializedConstraints	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddSerializedConstraints($/;"	f	class:cartographer::mapping::PoseGraph2D
AddSerializedConstraints	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddSerializedConstraints($/;"	f	class:cartographer::mapping::PoseGraph3D
AddSquareSubmap	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^  void AddSquareSubmap(const Rigid2d& global_to_submap_frame,$/;"	f	class:cartographer::mapping::__anon83::OverlappingSubmapsTrimmer2DTest
AddSubmap	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void ActiveSubmaps2D::AddSubmap(const Eigen::Vector2f& origin) {$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
AddSubmap	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void ActiveSubmaps3D::AddSubmap(const transform::Rigid3d& local_submap_pose) {$/;"	f	class:cartographer::mapping::ActiveSubmaps3D
AddSubmap	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::AddSubmap($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
AddSubmap	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::AddSubmap($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
AddSubmapFromProto	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddSubmapFromProto($/;"	f	class:cartographer::mapping::PoseGraph2D
AddSubmapFromProto	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddSubmapFromProto($/;"	f	class:cartographer::mapping::PoseGraph3D
AddSubmapsToSubmapCoverageGrid2D	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^std::set<SubmapId> AddSubmapsToSubmapCoverageGrid2D($/;"	f	namespace:cartographer::mapping::__anon82
AddTestCaseInstantiation	ceres-solver/internal/ceres/gtest/gtest.h	/^  int AddTestCaseInstantiation(const string& instantiation_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddTestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void AddTestInfo(Test::SetUpTestCaseFunc set_up_tc,$/;"	f	class:testing::internal::UnitTestImpl
AddTestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestCase::AddTestInfo(TestInfo * test_info) {$/;"	f	class:testing::TestCase
AddTestName	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool AddTestName(const char* file, int line, const char* case_name,$/;"	f	class:testing::internal::TypedTestCasePState
AddTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::TestResult
AddTestPattern	ceres-solver/internal/ceres/gtest/gtest.h	/^  void AddTestPattern(const char* test_case_name,$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
AddToPoseGraph	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.cc	/^void LocalSlamResult2D::AddToPoseGraph(int trajectory_id,$/;"	f	class:cartographer::mapping::LocalSlamResult2D
AddToPoseGraph	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.cc	/^void LocalSlamResult3D::AddToPoseGraph(int trajectory_id,$/;"	f	class:cartographer::mapping::LocalSlamResult3D
AddToProtoGraph	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^void AddToProtoGraph(const proto::Node& node_data,$/;"	f	namespace:cartographer::mapping::test
AddToProtoGraph	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^void AddToProtoGraph(const proto::PoseGraph::Constraint& constraint,$/;"	f	namespace:cartographer::mapping::test
AddToProtoGraph	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^void AddToProtoGraph(const proto::PoseGraph::LandmarkPose& landmark,$/;"	f	namespace:cartographer::mapping::test
AddToProtoGraph	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^void AddToProtoGraph(const proto::Submap& submap_data,$/;"	f	namespace:cartographer::mapping::test
AddToTextureProto	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void AddToTextureProto($/;"	f	namespace:cartographer::mapping::__anon106
AddToTrajectoryBuilder	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.cc	/^void LocalSlamResult2D::AddToTrajectoryBuilder($/;"	f	class:cartographer::mapping::LocalSlamResult2D
AddToTrajectoryBuilder	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.cc	/^void LocalSlamResult3D::AddToTrajectoryBuilder($/;"	f	class:cartographer::mapping::LocalSlamResult3D
AddTrailingComments	cartographer/scripts/update_configuration_doc.py	/^  def AddTrailingComments(self, comments):$/;"	m	class:Message
AddTrajectory	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::AddTrajectory($/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
AddTrajectory	cartographer/cartographer/sensor/internal/collator.cc	/^void Collator::AddTrajectory($/;"	f	class:cartographer::sensor::Collator
AddTrajectory	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^void TrajectoryCollator::AddTrajectory($/;"	f	class:cartographer::sensor::TrajectoryCollator
AddTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^int MapBuilderBridge::AddTrajectory($/;"	f	class:cartographer_ros::MapBuilderBridge
AddTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^int Node::AddTrajectory(const TrajectoryOptions& options,$/;"	f	class:cartographer_ros::Node
AddTrajectoryBuilder	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^int MapBuilderStub::AddTrajectoryBuilder($/;"	f	class:cartographer::cloud::MapBuilderStub
AddTrajectoryBuilder	cartographer/cartographer/mapping/map_builder.cc	/^int MapBuilder::AddTrajectoryBuilder($/;"	f	class:cartographer::mapping::MapBuilder
AddTrajectoryForDeserialization	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^int MapBuilderStub::AddTrajectoryForDeserialization($/;"	f	class:cartographer::cloud::MapBuilderStub
AddTrajectoryForDeserialization	cartographer/cartographer/mapping/map_builder.cc	/^int MapBuilder::AddTrajectoryForDeserialization($/;"	f	class:cartographer::mapping::MapBuilder
AddTrajectoryHandler	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.h	/^class AddTrajectoryHandler$/;"	c	namespace:cartographer::cloud::handlers
AddTrajectoryHandlerTest	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^class AddTrajectoryHandlerTest$/;"	c	namespace:cartographer::cloud::handlers::__anon47	file:
AddTrajectoryIfNeeded	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddTrajectoryIfNeeded(const int trajectory_id) {$/;"	f	class:cartographer::mapping::PoseGraph2D
AddTrajectoryIfNeeded	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddTrajectoryIfNeeded(const int trajectory_id) {$/;"	f	class:cartographer::mapping::PoseGraph3D
AddTrajectoryNode	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^  void AddTrajectoryNode(int node_index, int64 timestamp) {$/;"	f	class:cartographer::mapping::__anon83::OverlappingSubmapsTrimmer2DTest
AddTrajectoryNode	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::AddTrajectoryNode(const int trajectory_id,$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
AddTrajectoryNode	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::AddTrajectoryNode(const int trajectory_id,$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
AddTrimmer	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddTrimmer(std::unique_ptr<PoseGraphTrimmer> trimmer) {$/;"	f	class:cartographer::mapping::PoseGraph2D
AddTrimmer	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddTrimmer(std::unique_ptr<PoseGraphTrimmer> trimmer) {$/;"	f	class:cartographer::mapping::PoseGraph3D
AddValue	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^  void AddValue(const float value) {$/;"	f	class:cartographer::mapping::scan_matching::__anon78::SlidingWindowMaximum
AddValueToHistogram	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^void AddValueToHistogram(float angle, const float value,$/;"	f	namespace:cartographer::mapping::scan_matching::__anon98
AddVertex	ceres-solver/internal/ceres/graph.h	/^  void AddVertex(const Vertex& vertex) {$/;"	f	class:ceres::internal::Graph
AddVertex	ceres-solver/internal/ceres/graph.h	/^  void AddVertex(const Vertex& vertex) {$/;"	f	class:ceres::internal::WeightedGraph
AddVertex	ceres-solver/internal/ceres/graph.h	/^  void AddVertex(const Vertex& vertex, double weight) {$/;"	f	class:ceres::internal::WeightedGraph
AddWorkItem	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::AddWorkItem(const std::function<void()>& work_item) {$/;"	f	class:cartographer::mapping::PoseGraph2D
AddWorkItem	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::AddWorkItem(const std::function<void()>& work_item) {$/;"	f	class:cartographer::mapping::PoseGraph3D
AdlTag	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AdlTag {};$/;"	s	namespace:testing::internal::invoke_argument
Advance	cartographer/cartographer/mapping/imu_tracker.cc	/^void ImuTracker::Advance(const common::Time time) {$/;"	f	class:cartographer::mapping::ImuTracker
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Advance	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Advance() {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
AdvanceImu	cartographer/cartographer/mapping/imu_tracker_test.cc	/^  void AdvanceImu() {$/;"	f	class:cartographer::mapping::__anon54::ImuTrackerTest
AdvanceImuTracker	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::AdvanceImuTracker(const common::Time time,$/;"	f	class:cartographer::mapping::PoseExtrapolator
AdvanceOneMessage	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^void PlayableBag::AdvanceOneMessage() {$/;"	f	class:cartographer_ros::PlayableBag
AdvanceToValidDataIterator	cartographer/cartographer/mapping/id.h	/^    void AdvanceToValidDataIterator() {$/;"	f	class:cartographer::mapping::MapById::ConstIterator
AdvanceUntilMessageAvailable	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^void PlayableBag::AdvanceUntilMessageAvailable() {$/;"	f	class:cartographer_ros::PlayableBag
After	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& After(const ExpectationSet& s) {$/;"	f	class:testing::internal::TypedExpectation
After	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2) {$/;"	f	class:testing::internal::TypedExpectation
After	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,$/;"	f	class:testing::internal::TypedExpectation
Aggregation	cartographer/cartographer/io/xray_points_processor.h	/^  struct Aggregation {$/;"	s	class:cartographer::io::XRayPointsProcessor
Algorithm	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^class Algorithm {$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
AlignType	ceres-solver/include/ceres/internal/manual_constructor.h	/^template<int alignment, int size> struct AlignType { };$/;"	s	namespace:ceres::internal
AlignType	ceres-solver/include/ceres/internal/manual_constructor.h	/^template<int size> struct AlignType<0, size> { typedef char result[size]; };$/;"	s	namespace:ceres::internal
AllArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^inline InnerMatcher AllArgs(const InnerMatcher& matcher) { return matcher; }$/;"	f	namespace:testing
AllEnabledToggled	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::AllEnabledToggled() {$/;"	f	class:cartographer_rviz::SubmapsDisplay
AllEnabledToggled	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void Trajectory::AllEnabledToggled() {$/;"	f	class:cartographer_rviz::Trajectory
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AllOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9, M10 m10) {$/;"	f	namespace:testing
AllOf	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::AllOfMatcher<Args...> AllOf(const Args&... matchers) {$/;"	f	namespace:testing
AllOfResult1	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult1 {$/;"	s	namespace:testing::internal
AllOfResult10	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult10 {$/;"	s	namespace:testing::internal
AllOfResult2	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult2 {$/;"	s	namespace:testing::internal
AllOfResult3	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult3 {$/;"	s	namespace:testing::internal
AllOfResult4	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult4 {$/;"	s	namespace:testing::internal
AllOfResult5	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult5 {$/;"	s	namespace:testing::internal
AllOfResult6	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult6 {$/;"	s	namespace:testing::internal
AllOfResult7	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult7 {$/;"	s	namespace:testing::internal
AllOfResult8	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult8 {$/;"	s	namespace:testing::internal
AllOfResult9	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AllOfResult9 {$/;"	s	namespace:testing::internal
AllTripletsWithinBounds	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^bool TripletSparseMatrix::AllTripletsWithinBounds() const {$/;"	f	class:ceres::internal::TripletSparseMatrix
AllocateMemory	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::AllocateMemory() {$/;"	f	class:ceres::internal::TripletSparseMatrix
AlmostEquals	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool AlmostEquals(const FloatingPoint& rhs) const {$/;"	f	class:testing::internal::FloatingPoint
AlternateLinearSolverAndPreconditionerForSchurTypeLinearSolver	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^void AlternateLinearSolverAndPreconditionerForSchurTypeLinearSolver($/;"	f	namespace:ceres::internal::__anon192
AlwaysFalse	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool AlwaysFalse() { return !AlwaysTrue(); }$/;"	f	namespace:testing::internal
AlwaysTrue	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool AlwaysTrue() {$/;"	f	namespace:testing::internal
An	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Matcher<T> An() { return A<T>(); }$/;"	f	namespace:testing
AnalyticalSpaCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  explicit AnalyticalSpaCostFunction2D($/;"	f	class:cartographer::mapping::optimization::__anon90::AnalyticalSpaCostFunction2D
AnalyticalSpaCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^class AnalyticalSpaCostFunction2D$/;"	c	namespace:cartographer::mapping::optimization::__anon90	file:
AnalyzeCholesky	ceres-solver/internal/ceres/cxsparse.cc	/^cs_dis* CXSparse::AnalyzeCholesky(cs_di* A) {$/;"	f	class:ceres::internal::CXSparse
AnalyzeCholesky	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_factor* SuiteSparse::AnalyzeCholesky(cholmod_sparse* A,$/;"	f	class:ceres::internal::SuiteSparse
AnalyzeCholeskyWithNaturalOrdering	ceres-solver/internal/ceres/cxsparse.cc	/^cs_dis* CXSparse::AnalyzeCholeskyWithNaturalOrdering(cs_di* A) {$/;"	f	class:ceres::internal::CXSparse
AnalyzeCholeskyWithNaturalOrdering	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_factor* SuiteSparse::AnalyzeCholeskyWithNaturalOrdering($/;"	f	class:ceres::internal::SuiteSparse
AnalyzeCholeskyWithUserOrdering	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_factor* SuiteSparse::AnalyzeCholeskyWithUserOrdering($/;"	f	class:ceres::internal::SuiteSparse
AnalyzeElements	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatchMatrix AnalyzeElements(ElementIter elem_first, ElementIter elem_last,$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
AngleAxisAndCenterToCamera	ceres-solver/examples/bal_problem.cc	/^void BALProblem::AngleAxisAndCenterToCamera(const double* angle_axis,$/;"	f	class:ceres::examples::BALProblem
AngleAxisRotatePoint	ceres-solver/include/ceres/rotation.h	/^void AngleAxisRotatePoint(const T angle_axis[3], const T pt[3], T result[3]) {$/;"	f	namespace:ceres
AngleAxisToQuaternion	ceres-solver/include/ceres/rotation.h	/^inline void AngleAxisToQuaternion(const T* angle_axis, T* quaternion) {$/;"	f	namespace:ceres
AngleAxisToRotationMatrix	ceres-solver/include/ceres/rotation.h	/^inline void AngleAxisToRotationMatrix(const T* angle_axis, T* R) {$/;"	f	namespace:ceres
AngleAxisToRotationMatrix	ceres-solver/include/ceres/rotation.h	/^void AngleAxisToRotationMatrix($/;"	f	namespace:ceres
AngleAxisVectorToRotationQuaternion	cartographer/cartographer/transform/transform.h	/^Eigen::Quaternion<T> AngleAxisVectorToRotationQuaternion($/;"	f	namespace:cartographer::transform
AngleLocalParameterization	ceres-solver/examples/slam/pose_graph_2d/angle_local_parameterization.h	/^class AngleLocalParameterization {$/;"	c	namespace:ceres::examples
AnsiToUtf16	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^LPCWSTR String::AnsiToUtf16(const char* ansi) {$/;"	f	class:testing::internal::String
AnyEq	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyEq {$/;"	s	namespace:testing::internal
AnyGe	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyGe {$/;"	s	namespace:testing::internal
AnyGt	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyGt {$/;"	s	namespace:testing::internal
AnyLe	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyLe {$/;"	s	namespace:testing::internal
AnyLt	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyLt {$/;"	s	namespace:testing::internal
AnyMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class AnyMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
AnyNe	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyNe {$/;"	s	namespace:testing::internal
AnyNumber	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ Cardinality AnyNumber() { return AtLeast(0); }$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^AnyOf(M1 m1, M2 m2, M3 m3, M4 m4, M5 m5, M6 m6, M7 m7, M8 m8, M9 m9, M10 m10) {$/;"	f	namespace:testing
AnyOf	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::AnyOfMatcher<Args...> AnyOf(const Args&... matchers) {$/;"	f	namespace:testing
AnyOfResult1	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult1 {$/;"	s	namespace:testing::internal
AnyOfResult10	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult10 {$/;"	s	namespace:testing::internal
AnyOfResult2	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult2 {$/;"	s	namespace:testing::internal
AnyOfResult3	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult3 {$/;"	s	namespace:testing::internal
AnyOfResult4	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult4 {$/;"	s	namespace:testing::internal
AnyOfResult5	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult5 {$/;"	s	namespace:testing::internal
AnyOfResult6	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult6 {$/;"	s	namespace:testing::internal
AnyOfResult7	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult7 {$/;"	s	namespace:testing::internal
AnyOfResult8	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult8 {$/;"	s	namespace:testing::internal
AnyOfResult9	ceres-solver/internal/ceres/gmock/gmock.h	/^struct AnyOfResult9 {$/;"	s	namespace:testing::internal
AnythingMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class AnythingMatcher {$/;"	c	namespace:testing::internal
Append	cartographer/cartographer/mapping/id.h	/^  IdType Append(const int trajectory_id, const DataType& data) {$/;"	f	class:cartographer::mapping::MapById
Append	cartographer/cartographer/sensor/map_by_time.h	/^  void Append(const int trajectory_id, const DataType& data) {$/;"	f	class:cartographer::sensor::MapByTime
Append	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventListeners::Append(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Append	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventRepeater::Append(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
Append	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestPartResultArray::Append(const TestPartResult& result) {$/;"	f	class:testing::TestPartResultArray
AppendArrayToString	ceres-solver/internal/ceres/array_utils.cc	/^void AppendArrayToString(const int size, const double* x, string* result) {$/;"	f	namespace:ceres::internal
AppendCols	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::AppendCols(const TripletSparseMatrix& B) {$/;"	f	class:ceres::internal::TripletSparseMatrix
AppendDiagonal	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::AppendDiagonal(double *d) {$/;"	f	class:ceres::internal::DenseSparseMatrix
AppendMessage	ceres-solver/internal/ceres/gtest/gtest.h	/^  void AppendMessage(const Message& a_message) {$/;"	f	class:testing::AssertionResult
AppendRows	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::AppendRows(const BlockSparseMatrix& m) {$/;"	f	class:ceres::internal::BlockSparseMatrix
AppendRows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::AppendRows(const CompressedRowSparseMatrix& m) {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
AppendRows	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::AppendRows(const TripletSparseMatrix& B) {$/;"	f	class:ceres::internal::TripletSparseMatrix
AppendUserMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string AppendUserMessage(const std::string& gtest_msg,$/;"	f	namespace:testing::internal
ApplyLookupTable	cartographer/cartographer/mapping/2d/probability_grid.cc	/^bool ProbabilityGrid::ApplyLookupTable(const Eigen::Array2i& cell_index,$/;"	f	class:cartographer::mapping::ProbabilityGrid
ApplyOrdering	ceres-solver/internal/ceres/reorder_program.cc	/^bool ApplyOrdering(const ProblemImpl::ParameterMap& parameter_map,$/;"	f	namespace:ceres::internal
ApplyRadialDistortionCameraIntrinsics	ceres-solver/examples/libmv_bundle_adjuster.cc	/^inline void ApplyRadialDistortionCameraIntrinsics(const T &focal_length_x,$/;"	f	namespace:__anon155
ApproximateMinimumDegreeOrdering	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparse::ApproximateMinimumDegreeOrdering(cs_di* A, int* ordering) {$/;"	f	class:ceres::internal::CXSparse
ApproximateMinimumDegreeOrdering	ceres-solver/internal/ceres/suitesparse.cc	/^bool SuiteSparse::ApproximateMinimumDegreeOrdering(cholmod_sparse* matrix,$/;"	f	class:ceres::internal::SuiteSparse
ArctanLoss	ceres-solver/include/ceres/loss_function.h	/^  explicit ArctanLoss(double a) : a_(a), b_(1 \/ (a * a)) { }$/;"	f	class:ceres::ArctanLoss
ArctanLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT ArctanLoss : public LossFunction {$/;"	c	namespace:ceres
ArePointTimestampsSorted	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^bool ArePointTimestampsSorted(const sensor::TimedPointCloudOriginData& data) {$/;"	f	namespace:cartographer::mapping::__anon85
ArgTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef ::testing::tuple<T, Second> ArgTuple;$/;"	t	class:testing::internal::BoundSecondMatcher::Impl
Args	ceres-solver/internal/ceres/gmock/gmock.h	/^Args(const InnerMatcher& matcher) {$/;"	f	namespace:testing
ArgsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ArgsMatcher(const InnerMatcher& inner_matcher)$/;"	f	class:testing::internal::ArgsMatcher
ArgsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class ArgsMatcher {$/;"	c	namespace:testing::internal
ArgsMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ArgsMatcherImpl(const InnerMatcher& inner_matcher)$/;"	f	class:testing::internal::ArgsMatcherImpl
ArgsMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class ArgsMatcherImpl : public MatcherInterface<ArgsTuple> {$/;"	c	namespace:testing::internal
Argument1	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A1 Argument1;$/;"	t	struct:testing::internal::Function
Argument10	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A10 Argument10;$/;"	t	struct:testing::internal::Function
Argument2	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A2 Argument2;$/;"	t	struct:testing::internal::Function
Argument3	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A3 Argument3;$/;"	t	struct:testing::internal::Function
Argument4	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A4 Argument4;$/;"	t	struct:testing::internal::Function
Argument5	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A5 Argument5;$/;"	t	struct:testing::internal::Function
Argument6	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A6 Argument6;$/;"	t	struct:testing::internal::Function
Argument7	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A7 Argument7;$/;"	t	struct:testing::internal::Function
Argument8	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A8 Argument8;$/;"	t	struct:testing::internal::Function
Argument9	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef A9 Argument9;$/;"	t	struct:testing::internal::Function
ArgumentMatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^      ArgumentMatcherTuple;$/;"	t	class:testing::internal::MockSpec
ArgumentMatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::FunctionMockerBase
ArgumentMatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::OnCallSpec
ArgumentMatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;$/;"	t	class:testing::internal::TypedExpectation
ArgumentMatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename MatcherTuple<ArgumentTuple>::type ArgumentMatcherTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^      A10> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::DoBothAction::Impl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnAction::Impl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnRefAction::Impl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ReturnRefOfCopyAction::Impl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::WithArgsAction::Impl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::PolymorphicAction::MonomorphicImpl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::IgnoreResultAction::Impl
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6, A7> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5, A6> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3, A4, A5> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3, A4> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2, A3> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1, A2> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<A1> ArgumentTuple;$/;"	t	struct:testing::internal::Function
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::FunctionMockerBase
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::OnCallSpec
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::TypedExpectation
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F1>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::ActionAdaptor
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::Action
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::ActionInterface
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::FunctionMocker
ArgumentTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;$/;"	t	class:testing::internal::MockSpec
Arguments	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  Arguments() {$/;"	f	class:testing::internal::Arguments
Arguments	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class Arguments {$/;"	c	namespace:testing::internal	file:
Argv	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  char* const* Argv() {$/;"	f	class:testing::internal::Arguments
ArmijoLineSearch	ceres-solver/internal/ceres/line_search.cc	/^ArmijoLineSearch::ArmijoLineSearch(const LineSearch::Options& options)$/;"	f	class:ceres::internal::ArmijoLineSearch
ArmijoLineSearch	ceres-solver/internal/ceres/line_search.h	/^class ArmijoLineSearch : public LineSearch {$/;"	c	namespace:ceres::internal
ArrayAsVector	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {$/;"	f	namespace:testing
ArrayAwareFind	ceres-solver/internal/ceres/gtest/gtest.h	/^Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {$/;"	f	namespace:testing::internal
ArrayEq	ceres-solver/internal/ceres/gtest/gtest.h	/^bool ArrayEq(const T* lhs, size_t size, const U* rhs) {$/;"	f	namespace:testing::internal
ArrayEq	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }$/;"	f	namespace:testing::internal
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R()> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3, A4)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3, A4, A5)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6, A7)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6, A7, A8)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AsStdFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  std::function<R(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)> AsStdFunction() {$/;"	f	class:testing::MockFunction
AssertHeld	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Mutex::AssertHeld() {$/;"	f	class:testing::internal::Mutex
AssertHeld	ceres-solver/internal/ceres/gtest/gtest.h	/^  void AssertHeld() const {$/;"	f	class:std::tr1::MutexBase
AssertHeld	ceres-solver/internal/ceres/gtest/gtest.h	/^  void AssertHeld() const {}$/;"	f	class:std::tr1::Mutex
AssertHeld	ceres-solver/internal/ceres/mutex.h	/^  inline void AssertHeld() {}$/;"	f	class:ceres::internal::Mutex
AssertHelper	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertHelper::AssertHelper(TestPartResult::Type type,$/;"	f	class:testing::internal::AssertHelper
AssertHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ AssertHelper {$/;"	c	namespace:testing::internal
AssertHelperData	ceres-solver/internal/ceres/gtest/gtest.h	/^    AssertHelperData(TestPartResult::Type t,$/;"	f	struct:testing::internal::AssertHelper::AssertHelperData
AssertHelperData	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct AssertHelperData {$/;"	s	class:testing::internal::AssertHelper
AssertLossFunctionIsValid	ceres-solver/internal/ceres/loss_function_test.cc	/^void AssertLossFunctionIsValid(const LossFunction& loss, double s) {$/;"	f	namespace:ceres::internal::__anon160
AssertPred1Helper	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult AssertPred1Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred2Helper	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult AssertPred2Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred3Helper	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult AssertPred3Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred4Helper	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult AssertPred4Helper(const char* pred_text,$/;"	f	namespace:testing
AssertPred5Helper	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult AssertPred5Helper(const char* pred_text,$/;"	f	namespace:testing
AssertSpecProperty	ceres-solver/internal/ceres/gmock/gmock.h	/^  void AssertSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::ExpectationBase
AssertSpecProperty	ceres-solver/internal/ceres/gmock/gmock.h	/^  void AssertSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::UntypedOnCallSpecBase
AssertTypeEq	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AssertTypeEq<T, T> {$/;"	s	namespace:testing::internal
AssertionFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult AssertionFailure() {$/;"	f	namespace:testing
AssertionFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult AssertionFailure(const Message& message) {$/;"	f	namespace:testing
AssertionResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult::AssertionResult(const AssertionResult& other)$/;"	f	class:testing::AssertionResult
AssertionResult	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit AssertionResult($/;"	f	class:testing::AssertionResult
AssertionResult	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ AssertionResult {$/;"	c	namespace:testing
AssertionSuccess	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult AssertionSuccess() {$/;"	f	namespace:testing
AssetsWriter	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^AssetsWriter::AssetsWriter(const std::string& pose_graph_filename,$/;"	f	class:cartographer_ros::AssetsWriter
AssetsWriter	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	/^class AssetsWriter {$/;"	c	namespace:cartographer_ros
Assign	ceres-solver/internal/ceres/gmock/gmock.h	/^PolymorphicAction<internal::AssignAction<T1, T2> > Assign(T1* ptr, T2 val) {$/;"	f	namespace:testing
AssignAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  AssignAction(T1* ptr, T2 value) : ptr_(ptr), value_(value) {}$/;"	f	class:testing::internal::AssignAction
AssignAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class AssignAction {$/;"	c	namespace:testing::internal
AssumeRole	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^DeathTest::TestRole ExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::ExecDeathTest
AssumeRole	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^DeathTest::TestRole NoExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::NoExecDeathTest
AssumeRole	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^DeathTest::TestRole WindowsDeathTest::AssumeRole() {$/;"	f	class:testing::internal::WindowsDeathTest
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
AtEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
AtLeast	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ Cardinality AtLeast(int n) { return Between(n, INT_MAX); }$/;"	f	namespace:testing
AtMost	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ Cardinality AtMost(int n) { return Between(0, n); }$/;"	f	namespace:testing
AtomMatchesChar	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {$/;"	f	namespace:testing::internal
AutoDiff	ceres-solver/include/ceres/internal/autodiff.h	/^struct AutoDiff {$/;"	s	namespace:ceres::internal
AutoDiffCostFunction	ceres-solver/include/ceres/autodiff_cost_function.h	/^  AutoDiffCostFunction(CostFunctor* functor, int num_residuals)$/;"	f	class:ceres::AutoDiffCostFunction
AutoDiffCostFunction	ceres-solver/include/ceres/autodiff_cost_function.h	/^  explicit AutoDiffCostFunction(CostFunctor* functor)$/;"	f	class:ceres::AutoDiffCostFunction
AutoDiffCostFunction	ceres-solver/include/ceres/autodiff_cost_function.h	/^class AutoDiffCostFunction : public SizedCostFunction<kNumResiduals,$/;"	c	namespace:ceres
AutoDiffLocalParameterization	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  AutoDiffLocalParameterization() :$/;"	f	class:ceres::AutoDiffLocalParameterization
AutoDiffLocalParameterization	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  explicit AutoDiffLocalParameterization(Functor* functor) :$/;"	f	class:ceres::AutoDiffLocalParameterization
AutoDiffLocalParameterization	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^class AutoDiffLocalParameterization : public LocalParameterization {$/;"	c	namespace:ceres
AutoHandle	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AutoHandle::AutoHandle()$/;"	f	class:testing::internal::AutoHandle
AutoHandle	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AutoHandle::AutoHandle(Handle handle)$/;"	f	class:testing::internal::AutoHandle
AutoHandle	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ AutoHandle {$/;"	c	namespace:std::tr1
BALProblem	ceres-solver/examples/bal_problem.cc	/^BALProblem::BALProblem(const std::string& filename, bool use_quaternions) {$/;"	f	class:ceres::examples::BALProblem
BALProblem	ceres-solver/examples/bal_problem.h	/^class BALProblem {$/;"	c	namespace:ceres::examples
BALProblem	ceres-solver/examples/simple_bundle_adjuster.cc	/^class BALProblem {$/;"	c	file:
BEGIN_MGH_PROBLEM	ceres-solver/examples/more_garbow_hillstrom.cc	535;"	d	file:
BEGIN_MGH_PROBLEM	ceres-solver/examples/more_garbow_hillstrom.cc	81;"	d	file:
BFGS	ceres-solver/include/ceres/types.h	/^  BFGS,$/;"	e	enum:ceres::LineSearchDirectionType
BFGS	ceres-solver/internal/ceres/line_search_direction.cc	/^  BFGS(const int num_parameters,$/;"	f	class:ceres::internal::BFGS
BFGS	ceres-solver/internal/ceres/line_search_direction.cc	/^class BFGS : public LineSearchDirection {$/;"	c	namespace:ceres::internal	file:
BISECTION	ceres-solver/include/ceres/types.h	/^  BISECTION,$/;"	e	enum:ceres::LineSearchInterpolationType
BLAS	ceres-solver/internal/ceres/blas.h	/^class BLAS {$/;"	c	namespace:ceres::internal
BUNDLE_FOCAL_LENGTH	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_FOCAL_LENGTH = 1,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_NO_CONSTRAINTS	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_NO_CONSTRAINTS = 0,$/;"	e	enum:__anon155::BundleConstraints	file:
BUNDLE_NO_INTRINSICS	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_NO_INTRINSICS = 0,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_NO_TRANSLATION	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_NO_TRANSLATION = 1,$/;"	e	enum:__anon155::BundleConstraints	file:
BUNDLE_PRINCIPAL_POINT	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_PRINCIPAL_POINT = 2,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_RADIAL	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_RADIAL = 12,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_RADIAL_K1	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_RADIAL_K1 = 4,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_RADIAL_K2	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_RADIAL_K2 = 8,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_TANGENTIAL	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_TANGENTIAL = 48,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_TANGENTIAL_P1	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_TANGENTIAL_P1 = 16,$/;"	e	enum:__anon155::BundleIntrinsics	file:
BUNDLE_TANGENTIAL_P2	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  BUNDLE_TANGENTIAL_P2 = 32,$/;"	e	enum:__anon155::BundleIntrinsics	file:
B_	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^  scoped_ptr<TripletSparseMatrix> B_;$/;"	m	class:ceres::internal::BlockSparseMatrixTest	file:
BackSubstitute	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^void ImplicitSchurComplement::BackSubstitute(const double* x, double* y) {$/;"	f	class:ceres::internal::ImplicitSchurComplement
BackSubstitute	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^BackSubstitute(const BlockSparseMatrix* A,$/;"	f	class:ceres::internal::SchurEliminator
BadJacobianCostFunction	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^class BadJacobianCostFunction: public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
BadLocalParameterization	ceres-solver/internal/ceres/parameter_block_test.cc	/^  BadLocalParameterization()$/;"	f	class:ceres::internal::BadLocalParameterization
BadLocalParameterization	ceres-solver/internal/ceres/parameter_block_test.cc	/^class BadLocalParameterization : public LocalParameterization {$/;"	c	namespace:ceres::internal	file:
BadResidualCostFunction	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^class BadResidualCostFunction: public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
BadTestTerm	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  BadTestTerm(int arity, int const* dim) : arity_(arity) {$/;"	f	class:ceres::internal::BadTestTerm
BadTestTerm	ceres-solver/internal/ceres/gradient_checker_test.cc	/^class BadTestTerm : public CostFunction {$/;"	c	namespace:ceres::internal	file:
BagMessageItem	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  struct BagMessageItem {$/;"	s	class:cartographer_ros::PlayableBagMultiplexer
BalanceCompanionMatrix	ceres-solver/internal/ceres/polynomial.cc	/^void BalanceCompanionMatrix(Matrix* companion_matrix_ptr) {$/;"	f	namespace:ceres::internal::__anon183
Base	ceres-solver/internal/ceres/evaluator_test.cc	/^  typedef SizedCostFunction<kNumResiduals, N0, N1, N2> Base;$/;"	t	class:ceres::internal::ParameterIgnoringCostFunction	file:
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<ParamType>* BaseGenerator() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
BaseGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamGeneratorInterface<T>* BaseGenerator() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
BasicNarrowIoManip	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);$/;"	t	class:testing::Message::std
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* Begin() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::RangeGenerator
Begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* Begin() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
BeginEndDistanceIs	ceres-solver/internal/ceres/gmock/gmock.h	/^BeginEndDistanceIs(const DistanceMatcher& distance_matcher) {$/;"	f	namespace:testing
BeginEndDistanceIsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit BeginEndDistanceIsMatcher(const DistanceMatcher& distance_matcher)$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher
BeginEndDistanceIsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class BeginEndDistanceIsMatcher {$/;"	c	namespace:testing::internal
BeginOfTrajectory	cartographer/cartographer/mapping/id.h	/^  ConstIterator BeginOfTrajectory(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::MapById
BeginOfTrajectory	cartographer/cartographer/sensor/map_by_time.h	/^  ConstIterator BeginOfTrajectory(const int trajectory_id) const {$/;"	f	class:cartographer::sensor::MapByTime
BesselJ0	ceres-solver/include/ceres/jet.h	/^Jet<T, N> BesselJ0(const Jet<T, N>& f) {$/;"	f	namespace:ceres
BesselJ0	ceres-solver/include/ceres/jet.h	/^inline double BesselJ0(double x) {$/;"	f	namespace:ceres
BesselJ1	ceres-solver/include/ceres/jet.h	/^Jet<T, N> BesselJ1(const Jet<T, N>& f) {$/;"	f	namespace:ceres
BesselJ1	ceres-solver/include/ceres/jet.h	/^inline double BesselJ1(double x) {$/;"	f	namespace:ceres
BesselJn	ceres-solver/include/ceres/jet.h	/^Jet<T, N> BesselJn(int n, const Jet<T, N>& f) {$/;"	f	namespace:ceres
BesselJn	ceres-solver/include/ceres/jet.h	/^inline double BesselJn(int n, double x) {$/;"	f	namespace:ceres
Between	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ Cardinality Between(int min, int max) {$/;"	f	namespace:testing
BetweenCardinalityImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  BetweenCardinalityImpl(int min, int max)$/;"	f	class:testing::__anon175::BetweenCardinalityImpl
BetweenCardinalityImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class BetweenCardinalityImpl : public CardinalityInterface {$/;"	c	namespace:testing::__anon175	file:
BiCubicInterpolator	ceres-solver/include/ceres/cubic_interpolation.h	/^  explicit BiCubicInterpolator(const Grid& grid)$/;"	f	class:ceres::BiCubicInterpolator
BiCubicInterpolator	ceres-solver/include/ceres/cubic_interpolation.h	/^class BiCubicInterpolator {$/;"	c	namespace:ceres
BiCubicInterpolatorTest	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^class BiCubicInterpolatorTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
BiggestInt	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef __int64 BiggestInt;$/;"	t	namespace:std::tr1
BiggestInt	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef long long BiggestInt;  \/\/ NOLINT$/;"	t	namespace:std::tr1
BinaryCostFunction	ceres-solver/internal/ceres/covariance_test.cc	/^  BinaryCostFunction(const int num_residuals,$/;"	f	class:ceres::internal::BinaryCostFunction
BinaryCostFunction	ceres-solver/internal/ceres/covariance_test.cc	/^class BinaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
BinaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  BinaryCostFunction(int num_residuals,$/;"	f	class:ceres::internal::BinaryCostFunction
BinaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^class BinaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
BinaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  BinaryCostFunction(int num_residuals,$/;"	f	class:ceres::internal::BinaryCostFunction
BinaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^class BinaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
BinaryCostFunction	ceres-solver/internal/ceres/program_test.cc	/^class BinaryCostFunction : public MockCostFunctionBase<2, 1, 1, 0> {};$/;"	c	namespace:ceres::internal	file:
BinaryCostFunction	ceres-solver/internal/ceres/reorder_program_test.cc	/^class BinaryCostFunction : public MockCostFunctionBase<2, 1, 1, 0> {};$/;"	c	namespace:ceres::internal	file:
BinaryScalarCost	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^  explicit BinaryScalarCost(double a): a_(a) {}$/;"	f	class:ceres::internal::BinaryScalarCost
BinaryScalarCost	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^class BinaryScalarCost {$/;"	c	namespace:ceres::internal	file:
Bind	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct Bind {$/;"	s	struct:testing::internal::TemplateSel
Bits	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;$/;"	t	class:testing::internal::FloatingPoint
Block	ceres-solver/internal/ceres/block_structure.h	/^  Block() : size(-1), position(-1) {}$/;"	f	struct:ceres::internal::Block
Block	ceres-solver/internal/ceres/block_structure.h	/^  Block(int size_, int position_) : size(size_), position(position_) {}$/;"	f	struct:ceres::internal::Block
Block	ceres-solver/internal/ceres/block_structure.h	/^struct Block {$/;"	s	namespace:ceres::internal
BlockAMDOrdering	ceres-solver/internal/ceres/suitesparse.cc	/^bool SuiteSparse::BlockAMDOrdering(const cholmod_sparse* A,$/;"	f	class:ceres::internal::SuiteSparse
BlockAnalyzeCholesky	ceres-solver/internal/ceres/cxsparse.cc	/^cs_dis* CXSparse::BlockAnalyzeCholesky(cs_di* A,$/;"	f	class:ceres::internal::CXSparse
BlockAnalyzeCholesky	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_factor* SuiteSparse::BlockAnalyzeCholesky(cholmod_sparse* A,$/;"	f	class:ceres::internal::SuiteSparse
BlockEvaluatePreparer	ceres-solver/internal/ceres/block_evaluate_preparer.h	/^class BlockEvaluatePreparer {$/;"	c	namespace:ceres::internal
BlockJacobiPreconditioner	ceres-solver/internal/ceres/block_jacobi_preconditioner.cc	/^BlockJacobiPreconditioner::BlockJacobiPreconditioner($/;"	f	class:ceres::internal::BlockJacobiPreconditioner
BlockJacobiPreconditioner	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^class BlockJacobiPreconditioner : public BlockSparseMatrixPreconditioner {$/;"	c	namespace:ceres::internal
BlockJacobiPreconditionerTest	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^class BlockJacobiPreconditionerTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
BlockJacobianWriter	ceres-solver/internal/ceres/block_jacobian_writer.cc	/^BlockJacobianWriter::BlockJacobianWriter(const Evaluator::Options& options,$/;"	f	class:ceres::internal::BlockJacobianWriter
BlockJacobianWriter	ceres-solver/internal/ceres/block_jacobian_writer.h	/^class BlockJacobianWriter {$/;"	c	namespace:ceres::internal
BlockOrderingToScalarOrdering	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.cc	/^void BlockOrderingToScalarOrdering(const vector<int>& blocks,$/;"	f	namespace:ceres::internal
BlockRandomAccessDenseMatrix	ceres-solver/internal/ceres/block_random_access_dense_matrix.cc	/^BlockRandomAccessDenseMatrix::BlockRandomAccessDenseMatrix($/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
BlockRandomAccessDenseMatrix	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^class BlockRandomAccessDenseMatrix : public BlockRandomAccessMatrix {$/;"	c	namespace:ceres::internal
BlockRandomAccessDiagonalMatrix	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^BlockRandomAccessDiagonalMatrix::BlockRandomAccessDiagonalMatrix($/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
BlockRandomAccessDiagonalMatrix	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^class BlockRandomAccessDiagonalMatrix : public BlockRandomAccessMatrix {$/;"	c	namespace:ceres::internal
BlockRandomAccessDiagonalMatrixAdapter	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  explicit BlockRandomAccessDiagonalMatrixAdapter($/;"	f	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter
BlockRandomAccessDiagonalMatrixAdapter	ceres-solver/internal/ceres/schur_complement_solver.cc	/^class BlockRandomAccessDiagonalMatrixAdapter : public LinearOperator {$/;"	c	namespace:ceres::internal::__anon184	file:
BlockRandomAccessDiagonalMatrixTest	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^class BlockRandomAccessDiagonalMatrixTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
BlockRandomAccessMatrix	ceres-solver/internal/ceres/block_random_access_matrix.h	/^class BlockRandomAccessMatrix {$/;"	c	namespace:ceres::internal
BlockRandomAccessSparseMatrix	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^BlockRandomAccessSparseMatrix::BlockRandomAccessSparseMatrix($/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
BlockRandomAccessSparseMatrix	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^class BlockRandomAccessSparseMatrix : public BlockRandomAccessMatrix {$/;"	c	namespace:ceres::internal
BlockRandomAccessSparseMatrixAdapter	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  explicit BlockRandomAccessSparseMatrixAdapter($/;"	f	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter
BlockRandomAccessSparseMatrixAdapter	ceres-solver/internal/ceres/schur_complement_solver.cc	/^class BlockRandomAccessSparseMatrixAdapter : public LinearOperator {$/;"	c	namespace:ceres::internal::__anon184	file:
BlockRandomAccessSparseMatrixTest	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^class BlockRandomAccessSparseMatrixTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
BlockSize	ceres-solver/internal/ceres/block_structure.h	/^typedef int32 BlockSize;$/;"	t	namespace:ceres::internal
BlockSparseMatrix	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^BlockSparseMatrix::BlockSparseMatrix($/;"	f	class:ceres::internal::BlockSparseMatrix
BlockSparseMatrix	ceres-solver/internal/ceres/block_sparse_matrix.h	/^class BlockSparseMatrix : public SparseMatrix {$/;"	c	namespace:ceres::internal
BlockSparseMatrixPreconditioner	ceres-solver/internal/ceres/preconditioner.h	/^typedef TypedPreconditioner<BlockSparseMatrix>         BlockSparseMatrixPreconditioner;          \/\/ NOLINT$/;"	t	namespace:ceres::internal
BlockSparseMatrixSolver	ceres-solver/internal/ceres/linear_solver.h	/^typedef TypedLinearSolver<BlockSparseMatrix>         BlockSparseMatrixSolver;          \/\/ NOLINT$/;"	t	namespace:ceres::internal
BlockSparseMatrixTest	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^class BlockSparseMatrixTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
BlockingQueue	cartographer/cartographer/common/blocking_queue.h	/^  BlockingQueue() : BlockingQueue(kInfiniteQueueSize) {}$/;"	f	class:cartographer::common::BlockingQueue
BlockingQueue	cartographer/cartographer/common/blocking_queue.h	/^  explicit BlockingQueue(const size_t queue_size) : queue_size_(queue_size) {}$/;"	f	class:cartographer::common::BlockingQueue
BlockingQueue	cartographer/cartographer/common/blocking_queue.h	/^class BlockingQueue {$/;"	c	namespace:cartographer::common
Bool	ceres-solver/internal/ceres/gtest/gtest.h	/^inline internal::ParamGenerator<bool> Bool() {$/;"	f	namespace:testing
BoolFromGTestEnv	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool BoolFromGTestEnv(const char* flag, bool default_value) {$/;"	f	namespace:testing::internal
BooleanConstant	ceres-solver/internal/ceres/gmock/gmock.h	/^struct BooleanConstant {};$/;"	s	namespace:testing::internal
BothOfMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  BothOfMatcher(Matcher1 matcher1, Matcher2 matcher2)$/;"	f	class:testing::internal::BothOfMatcher
BothOfMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class BothOfMatcher {$/;"	c	namespace:testing::internal
BothOfMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  BothOfMatcherImpl(const Matcher<T>& matcher1, const Matcher<T>& matcher2)$/;"	f	class:testing::internal::BothOfMatcherImpl
BothOfMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class BothOfMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
BoundSecondMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  BoundSecondMatcher(const Tuple2Matcher& tm, const Second& second)$/;"	f	class:testing::internal::BoundSecondMatcher
BoundSecondMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class BoundSecondMatcher {$/;"	c	namespace:testing::internal
BoundedFloatToValue	cartographer/cartographer/mapping/probability_values.h	/^inline uint16 BoundedFloatToValue(const float float_value,$/;"	f	namespace:cartographer::mapping::__anon63
BoundsMap	ceres-solver/internal/ceres/covariance_test.cc	/^  typedef map<const double*, pair<int, int> > BoundsMap;$/;"	t	class:ceres::internal::CovarianceTest	file:
BracketingPhase	ceres-solver/internal/ceres/line_search.cc	/^bool WolfeLineSearch::BracketingPhase($/;"	f	class:ceres::internal::WolfeLineSearch
BranchAndBound	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^Candidate2D FastCorrelativeScanMatcher2D::BranchAndBound($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
BranchAndBound	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^Candidate3D FastCorrelativeScanMatcher3D::BranchAndBound($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
BriefReport	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^string GradientProblemSolver::Summary::BriefReport() const {$/;"	f	class:ceres::GradientProblemSolver::Summary
BriefReport	ceres-solver/internal/ceres/solver.cc	/^string Solver::Summary::BriefReport() const {$/;"	f	class:ceres::Solver::Summary
BufferLayoutType	ceres-solver/internal/ceres/schur_eliminator.h	/^  typedef std::map<int, int> BufferLayoutType;$/;"	t	class:ceres::internal::SchurEliminator
BuildCompanionMatrix	ceres-solver/internal/ceres/polynomial.cc	/^void BuildCompanionMatrix(const Vector& polynomial,$/;"	f	namespace:ceres::internal::__anon183
BuildDataPredicateEquals	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^DataPredicateType BuildDataPredicateEquals<proto::AddFixedFramePoseDataRequest>($/;"	f	namespace:cartographer::cloud::testing
BuildDataPredicateEquals	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^DataPredicateType BuildDataPredicateEquals<proto::AddImuDataRequest>($/;"	f	namespace:cartographer::cloud::testing
BuildDataPredicateEquals	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^DataPredicateType BuildDataPredicateEquals<proto::AddLandmarkDataRequest>($/;"	f	namespace:cartographer::cloud::testing
BuildDataPredicateEquals	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^DataPredicateType BuildDataPredicateEquals<proto::AddOdometryDataRequest>($/;"	f	namespace:cartographer::cloud::testing
BuildDataPredicateEquals	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^DataPredicateType BuildDataPredicateEquals<proto::AddRangefinderDataRequest>($/;"	f	namespace:cartographer::cloud::testing
BuildJacobianLayout	ceres-solver/internal/ceres/block_jacobian_writer.cc	/^void BuildJacobianLayout(const Program& program,$/;"	f	namespace:ceres::internal::__anon188
BuildList	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ListType BuildList(const Head& matcher, const Tail&... tail) {$/;"	f	struct:testing::internal::MatcherList
BuildList	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ListType BuildList(const Matcher1& matcher1,$/;"	f	struct:testing::internal::MatcherList
BuildMapBuilder	cartographer/cartographer/mapping/map_builder_test.cc	/^  void BuildMapBuilder() {$/;"	f	class:cartographer::mapping::__anon55::MapBuilderTest
BuildOptimizationProblem	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d.cc	/^void BuildOptimizationProblem(const std::vector<Constraint2d>& constraints,$/;"	f	namespace:ceres::examples
BuildOptimizationProblem	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d.cc	/^void BuildOptimizationProblem(const VectorOfConstraints& constraints,$/;"	f	namespace:ceres::examples
BuildPoseGraph	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  void BuildPoseGraph() {$/;"	f	class:cartographer::mapping::__anon105::PoseGraph3DTest
BuildPoseGraphWithFakeOptimization	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  void BuildPoseGraphWithFakeOptimization() {$/;"	f	class:cartographer::mapping::__anon105::PoseGraph3DTest
BuildProblem	ceres-solver/examples/bundle_adjuster.cc	/^void BuildProblem(BALProblem* bal_problem, Problem* problem) {$/;"	f	namespace:ceres::examples
BuildProblem	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  void BuildProblem() {$/;"	f	class:ceres::internal::BundleAdjustmentProblem	file:
BuildProtoPredicateEquals	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^ProtoPredicateType BuildProtoPredicateEquals($/;"	f	namespace:cartographer::cloud::testing
BuildResidualLayout	ceres-solver/internal/ceres/program_evaluator.h	/^  static void BuildResidualLayout(const Program& program,$/;"	f	class:ceres::internal::ProgramEvaluator
BuiltInDefaultValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class BuiltInDefaultValue {$/;"	c	namespace:testing::internal
BuiltInDefaultValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class BuiltInDefaultValue<T*> {$/;"	c	namespace:testing::internal
BuiltInDefaultValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class BuiltInDefaultValue<const T> {$/;"	c	namespace:testing::internal
BuiltInDefaultValueGetter	ceres-solver/internal/ceres/gmock/gmock.h	/^struct BuiltInDefaultValueGetter {$/;"	s	namespace:testing::internal
BuiltInDefaultValueGetter	ceres-solver/internal/ceres/gmock/gmock.h	/^struct BuiltInDefaultValueGetter<T, false> {$/;"	s	namespace:testing::internal
BundleAdjustmentProblem	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  BundleAdjustmentProblem() {$/;"	f	class:ceres::internal::BundleAdjustmentProblem
BundleAdjustmentProblem	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^class BundleAdjustmentProblem {$/;"	c	namespace:ceres::internal	file:
BundleAdjustmentTest	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^typedef SystemTest<BundleAdjustmentProblem> BundleAdjustmentTest;$/;"	t	namespace:ceres::internal	file:
BundleConstraints	ceres-solver/examples/libmv_bundle_adjuster.cc	/^enum BundleConstraints {$/;"	g	namespace:__anon155	file:
BundleIntrinsics	ceres-solver/examples/libmv_bundle_adjuster.cc	/^enum BundleIntrinsics {$/;"	g	namespace:__anon155	file:
BundleIntrinsicsLogMessage	ceres-solver/examples/libmv_bundle_adjuster.cc	/^void BundleIntrinsicsLogMessage(const int bundle_intrinsics) {$/;"	f	namespace:__anon155
BundlerResidual	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^    BundlerResidual(double u, double v): u(u), v(v) {}$/;"	f	struct:ceres::internal::BundleAdjustmentProblem::BundlerResidual
BundlerResidual	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  struct BundlerResidual {$/;"	s	class:ceres::internal::BundleAdjustmentProblem	file:
ByMove	ceres-solver/internal/ceres/gmock/gmock.h	/^internal::ByMoveWrapper<R> ByMove(R x) {$/;"	f	namespace:testing
ByMoveWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ByMoveWrapper(T value) : payload(internal::move(value)) {}$/;"	f	struct:testing::internal::ByMoveWrapper
ByMoveWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^struct ByMoveWrapper {$/;"	s	namespace:testing::internal
ByRef	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::ReferenceWrapper<T> ByRef(T& l_value) {  \/\/ NOLINT$/;"	f	namespace:testing
ByRef	ceres-solver/internal/ceres/gtest/gtest.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
ByRef	ceres-solver/internal/ceres/gtest/gtest.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	s	namespace:std::tr1::gtest_internal
CAIRO_CAN_TEST_PS_SURFACE	cartographer/bazel/third_party/cairo/config.h	28;"	d
CAIRO_FEATURES_H	cartographer/bazel/third_party/cairo/cairo-features.h	18;"	d
CAIRO_HAS_DLSYM	cartographer/bazel/third_party/cairo/config.h	38;"	d
CAIRO_HAS_FC_FONT	cartographer/bazel/third_party/cairo/cairo-features.h	20;"	d
CAIRO_HAS_FT_FONT	cartographer/bazel/third_party/cairo/cairo-features.h	21;"	d
CAIRO_HAS_GIF_FUNCTIONS	cartographer/bazel/third_party/cairo/cairo-features.h	35;"	d
CAIRO_HAS_GOBJECT_FUNCTIONS	cartographer/bazel/third_party/cairo/cairo-features.h	22;"	d
CAIRO_HAS_IMAGE_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	23;"	d
CAIRO_HAS_JPEG_FUNCTIONS	cartographer/bazel/third_party/cairo/cairo-features.h	36;"	d
CAIRO_HAS_MIME_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	24;"	d
CAIRO_HAS_OBSERVER_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	25;"	d
CAIRO_HAS_PDF_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	26;"	d
CAIRO_HAS_PNG_FUNCTIONS	cartographer/bazel/third_party/cairo/cairo-features.h	27;"	d
CAIRO_HAS_PS_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	28;"	d
CAIRO_HAS_PTHREAD	cartographer/bazel/third_party/cairo/config.h	44;"	d
CAIRO_HAS_REAL_PTHREAD	cartographer/bazel/third_party/cairo/config.h	47;"	d
CAIRO_HAS_RECORDING_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	29;"	d
CAIRO_HAS_SCRIPT_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	30;"	d
CAIRO_HAS_SVG_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	31;"	d
CAIRO_HAS_TEE_SURFACE	cartographer/bazel/third_party/cairo/cairo-features.h	32;"	d
CAIRO_HAS_USER_FONT	cartographer/bazel/third_party/cairo/cairo-features.h	33;"	d
CANONICAL_VIEWS	ceres-solver/include/ceres/types.h	/^  CANONICAL_VIEWS,$/;"	e	enum:ceres::VisibilityClusteringType
CAPABILITY	cartographer/cartographer/common/mutex.h	36;"	d
CARTOGRAPHER_CLOUD_CLIENT_MAP_BUILDER_STUB_H_	cartographer/cartographer/cloud/client/map_builder_stub.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_CLIENT_POSE_GRAPH_STUB_H_	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_CLIENT_TRAJECTORY_BUILDER_STUB_H_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_FIXED_FRAME_POSE_DATA_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_IMU_DATA_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_LANDMARK_DATA_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_ODOMETRY_DATA_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_RANGEFINDER_DATA_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_SENSOR_DATA_BATCH_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_SET_LANDMARK_POSE_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_ADD_TRAJECTORY_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_FINISH_TRAJECTORY_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_GET_ALL_SUBMAP_POSES_H	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_GET_CONSTRAINTS_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_GET_LANDMARK_POSES_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_GET_LOCAL_TO_GLOBAL_TRANSFORM_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_GET_SUBMAP_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_GET_TRAJECTORY_NODE_POSES_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_IS_TRAJECTORY_FINISHED_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_IS_TRAJECTORY_FROZEN_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_LOAD_STATE_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_RECEIVE_GLOBAL_SLAM_OPTIMIZATIONS_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	17;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_RECEIVE_LOCAL_SLAM_RESULTS_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_RUN_FINAL_OPTIMIZATION_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_HANDLERS_WRITE_STATE_HANDLER_H	cartographer/cartographer/cloud/internal/handlers/write_state_handler.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_LOCAL_TRAJECTORY_UPLOADER_H	cartographer/cartographer/cloud/internal/local_trajectory_uploader.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_MAP_BUILDER_SERVER_H	cartographer/cartographer/cloud/internal/map_builder_server.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_SENSOR_SERIALIZATION_H	cartographer/cartographer/cloud/internal/sensor/serialization.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_TESTING_HANDLER_TEST_H	cartographer/cartographer/cloud/internal/testing/handler_test.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_TESTING_MOCK_LOCAL_TRAJECTORY_UPLOADER_H	cartographer/cartographer/cloud/internal/testing/mock_local_trajectory_uploader.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_TESTING_MOCK_MAP_BUILDER_CONTEXT_H	cartographer/cartographer/cloud/internal/testing/mock_map_builder_context.h	18;"	d
CARTOGRAPHER_CLOUD_INTERNAL_TESTING_TEST_HELPERS_H	cartographer/cartographer/cloud/internal/testing/test_helpers.h	18;"	d
CARTOGRAPHER_CLOUD_MAP_BUILDER_CONTEXT_INTERFACE_H	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	18;"	d
CARTOGRAPHER_CLOUD_MAP_BUILDER_SERVER_INTERFACE_H	cartographer/cartographer/cloud/map_builder_server_interface.h	18;"	d
CARTOGRAPHER_CLOUD_MAP_BUILDER_SERVER_OPTIONS_H_	cartographer/cartographer/cloud/map_builder_server_options.h	18;"	d
CARTOGRAPHER_CLOUD_METRICS_PROMETHEUS_FAMILY_FACTORY_H_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	18;"	d
CARTOGRAPHER_COMMON_BLOCKING_QUEUE_H_	cartographer/cartographer/common/blocking_queue.h	18;"	d
CARTOGRAPHER_COMMON_CERES_SOLVER_OPTIONS_H_	cartographer/cartographer/common/ceres_solver_options.h	18;"	d
CARTOGRAPHER_COMMON_CONFIGURATION_FILE_RESOLVER_H_	cartographer/cartographer/common/configuration_file_resolver.h	18;"	d
CARTOGRAPHER_COMMON_FIXED_RATIO_SAMPLER_H_	cartographer/cartographer/common/fixed_ratio_sampler.h	18;"	d
CARTOGRAPHER_COMMON_HISTOGRAM_H_	cartographer/cartographer/common/histogram.h	18;"	d
CARTOGRAPHER_COMMON_INTERNAL_TESTING_THREAD_POOL_FOR_TESTING_H_	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	18;"	d
CARTOGRAPHER_COMMON_LOCKLESS_QUEUE_H_	cartographer/cartographer/common/lockless_queue.h	18;"	d
CARTOGRAPHER_COMMON_LUA_H_	cartographer/cartographer/common/lua.h	18;"	d
CARTOGRAPHER_COMMON_LUA_PARAMETER_DICTIONARY_H_	cartographer/cartographer/common/lua_parameter_dictionary.h	18;"	d
CARTOGRAPHER_COMMON_LUA_PARAMETER_DICTIONARY_TEST_HELPERS_H_	cartographer/cartographer/common/lua_parameter_dictionary_test_helpers.h	18;"	d
CARTOGRAPHER_COMMON_MAKE_UNIQUE_H_	cartographer/cartographer/common/make_unique.h	18;"	d
CARTOGRAPHER_COMMON_MATH_H_	cartographer/cartographer/common/math.h	18;"	d
CARTOGRAPHER_COMMON_MUTEX_H_	cartographer/cartographer/common/mutex.h	18;"	d
CARTOGRAPHER_COMMON_OPTIONAL_H_	cartographer/cartographer/common/optional.h	18;"	d
CARTOGRAPHER_COMMON_PORT_H_	cartographer/cartographer/common/port.h	18;"	d
CARTOGRAPHER_COMMON_RATE_TIMER_H_	cartographer/cartographer/common/rate_timer.h	18;"	d
CARTOGRAPHER_COMMON_TASK_H_	cartographer/cartographer/common/task.h	18;"	d
CARTOGRAPHER_COMMON_THREAD_POOL_H_	cartographer/cartographer/common/thread_pool.h	18;"	d
CARTOGRAPHER_COMMON_TIME_H_	cartographer/cartographer/common/time.h	18;"	d
CARTOGRAPHER_GROUND_TRUTH_RELATIONS_TEXT_FILE_H_	cartographer/cartographer/ground_truth/relations_text_file.h	18;"	d
CARTOGRAPHER_INTERNAL_CLOUD_MAP_BUILDER_CONTEXT_IMPL_H	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	18;"	d
CARTOGRAPHER_IO_COLORING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/coloring_points_processor.h	18;"	d
CARTOGRAPHER_IO_COLOR_H_	cartographer/cartographer/io/color.h	18;"	d
CARTOGRAPHER_IO_COUNTING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/counting_points_processor.h	18;"	d
CARTOGRAPHER_IO_DRAW_TRAJECTORIES_H_	cartographer/cartographer/io/draw_trajectories.h	18;"	d
CARTOGRAPHER_IO_FAKE_FILE_WRITER_H_	cartographer/cartographer/io/fake_file_writer.h	18;"	d
CARTOGRAPHER_IO_FILE_WRITER_H_	cartographer/cartographer/io/file_writer.h	18;"	d
CARTOGRAPHER_IO_FIXED_RATIO_SAMPLING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	18;"	d
CARTOGRAPHER_IO_FRAME_ID_FILTERING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/frame_id_filtering_points_processor.h	18;"	d
CARTOGRAPHER_IO_HYBRID_GRID_POINTS_PROCESSOR_H_	cartographer/cartographer/io/hybrid_grid_points_processor.h	2;"	d
CARTOGRAPHER_IO_IMAGE_H_	cartographer/cartographer/io/image.h	18;"	d
CARTOGRAPHER_IO_INTENSITY_TO_COLOR_POINTS_PROCESSOR_H_	cartographer/cartographer/io/intensity_to_color_points_processor.h	18;"	d
CARTOGRAPHER_IO_INTERNAL_IN_MEMORY_PROTO_STREAM_H_	cartographer/cartographer/io/internal/in_memory_proto_stream.h	18;"	d
CARTOGRAPHER_IO_INTERNAL_MAPPING_STATE_SERIALIZATION_H_	cartographer/cartographer/io/internal/mapping_state_serialization.h	17;"	d
CARTOGRAPHER_IO_MIN_MAX_RANGE_FILTERING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	18;"	d
CARTOGRAPHER_IO_NULL_POINTS_PROCESSOR_H_	cartographer/cartographer/io/null_points_processor.h	18;"	d
CARTOGRAPHER_IO_OUTLIER_REMOVING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/outlier_removing_points_processor.h	18;"	d
CARTOGRAPHER_IO_POINTS_BATCH_H_	cartographer/cartographer/io/points_batch.h	18;"	d
CARTOGRAPHER_IO_POINTS_PROCESSOR_H_	cartographer/cartographer/io/points_processor.h	18;"	d
CARTOGRAPHER_IO_POINTS_PROCESSOR_PIPELINE_BUILDER_H_	cartographer/cartographer/io/points_processor_pipeline_builder.h	18;"	d
CARTOGRAPHER_IO_PROBABILITY_GRID_POINTS_PROCESSOR_H_	cartographer/cartographer/io/probability_grid_points_processor.h	18;"	d
CARTOGRAPHER_IO_PROTO_STREAM_DESERIALIZER_H_	cartographer/cartographer/io/proto_stream_deserializer.h	18;"	d
CARTOGRAPHER_IO_PROTO_STREAM_H_	cartographer/cartographer/io/proto_stream.h	18;"	d
CARTOGRAPHER_IO_PROTO_STREAM_INTERFACE_H_	cartographer/cartographer/io/proto_stream_interface.h	18;"	d
CARTOGRAPHER_IO_SERIALIZATION_FORMAT_MIGRATION_H_	cartographer/cartographer/io/serialization_format_migration.h	18;"	d
CARTOGRAPHER_IO_SUBMAP_PAINTER_H_	cartographer/cartographer/io/submap_painter.h	18;"	d
CARTOGRAPHER_IO_XRAY_POINTS_PROCESSOR_H_	cartographer/cartographer/io/xray_points_processor.h	18;"	d
CARTOGRAPHER_IO_XYZ_WRITING_POINTS_PROCESSOR_H_	cartographer/cartographer/io/xyz_writing_points_processor.h	18;"	d
CARTOGRAPHER_MAPPING_2D_GRID_2D_H_	cartographer/cartographer/mapping/2d/grid_2d.h	18;"	d
CARTOGRAPHER_MAPPING_2D_MAP_LIMITS_H_	cartographer/cartographer/mapping/2d/map_limits.h	18;"	d
CARTOGRAPHER_MAPPING_2D_PROBABILITY_GRID_H_	cartographer/cartographer/mapping/2d/probability_grid.h	18;"	d
CARTOGRAPHER_MAPPING_2D_RANGE_DATA_INSERTER_2D_PROBABILITY_GRID_H_	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	18;"	d
CARTOGRAPHER_MAPPING_2D_SUBMAP_2D_H_	cartographer/cartographer/mapping/2d/submap_2d.h	18;"	d
CARTOGRAPHER_MAPPING_2D_XY_INDEX_H_	cartographer/cartographer/mapping/2d/xy_index.h	18;"	d
CARTOGRAPHER_MAPPING_3D_HYBRID_GRID_H_	cartographer/cartographer/mapping/3d/hybrid_grid.h	18;"	d
CARTOGRAPHER_MAPPING_3D_RANGE_DATA_INSERTER_3D_H_	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	18;"	d
CARTOGRAPHER_MAPPING_3D_SUBMAP_3D_H_	cartographer/cartographer/mapping/3d/submap_3d.h	18;"	d
CARTOGRAPHER_MAPPING_DATA_H_	cartographer/cartographer/sensor/data.h	18;"	d
CARTOGRAPHER_MAPPING_DETECT_FLOORS_H_	cartographer/cartographer/mapping/detect_floors.h	18;"	d
CARTOGRAPHER_MAPPING_GRID_H_	cartographer/cartographer/mapping/grid_interface.h	18;"	d
CARTOGRAPHER_MAPPING_ID_H_	cartographer/cartographer/mapping/id.h	18;"	d
CARTOGRAPHER_MAPPING_IMU_TRACKER_H_	cartographer/cartographer/mapping/imu_tracker.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_LOCAL_SLAM_RESULT_2D_H_	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_LOCAL_TRAJECTORY_BUILDER_2D_H_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_LOCAL_TRAJECTORY_BUILDER_OPTIONS_2D_H_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_options_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_OVERLAPPING_SUBMAPS_TRIMMER_H_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_POSE_GRAPH_2D_H_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_RAY_CASTING_H_	cartographer/cartographer/mapping/internal/2d/ray_casting.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_CERES_SCAN_MATCHER_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_CORRELATIVE_SCAN_MATCHER_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_FAST_CORRELATIVE_SCAN_MATCHER_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	26;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_OCCUPIED_SPACE_COST_FUNCTION_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_REAL_TIME_CORRELATIVE_SCAN_MATCHER_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_ROTATION_DELTA_COST_FUNCTOR_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_2D_SCAN_MATCHING_TRANSLATION_DELTA_COST_FUNCTOR_2D_H_	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_IMU_INTEGRATION_H_	cartographer/cartographer/mapping/internal/3d/imu_integration.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_LOCAL_SLAM_RESULT_3D_H_	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_LOCAL_TRAJECTORY_BUILDER_3D_H_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_LOCAL_TRAJECTORY_BUILDER_OPTIONS_3D_H_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_options_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_POSE_GRAPH_3D_H_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_ROTATION_PARAMETERIZATION_H_	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_CERES_SCAN_MATCHER_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_FAST_CORRELATIVE_SCAN_MATCHER_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	21;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_INTERPOLATED_GRID_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_LOW_RESOLUTION_MATCHER_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_OCCUPIED_SPACE_COST_FUNCTION_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_PRECOMPUTATION_GRID_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_REAL_TIME_CORRELATIVE_SCAN_MATCHER_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_ROTATIONAL_SCAN_MATCHER_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_ROTATION_DELTA_COST_FUNCTOR_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_3D_SCAN_MATCHING_TRANSLATION_DELTA_COST_FUNCTOR_3D_H_	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_COLLATED_TRAJECTORY_BUILDER_H_	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_CONNECTED_COMPONENTS_H_	cartographer/cartographer/mapping/internal/connected_components.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_CONSTRAINTS_CONSTRAINT_BUILDER_2D_H_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_CONSTRAINTS_CONSTRAINT_BUILDER_3D_H_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_CONSTRAINTS_CONSTRAINT_BUILDER_H_	cartographer/cartographer/mapping/internal/constraints/constraint_builder.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_GLOBAL_TRAJECTORY_BUILDER_H_	cartographer/cartographer/mapping/internal/global_trajectory_builder.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_KIDNAP_DETECTION_H_	cartographer/cartographer/mapping/internal/kidnap_detection.h	2;"	d
CARTOGRAPHER_MAPPING_INTERNAL_MOTION_FILTER_H_	cartographer/cartographer/mapping/internal/motion_filter.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_CERES_POSE_H_	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_ACCELERATION_COST_FUNCTION_3D_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_COST_HELPERS_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_COST_HELPERS_IMPL_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_LANDMARK_COST_FUNCTION_2D_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_LANDMARK_COST_FUNCTION_3D_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_ROTATION_COST_FUNCTION_3D_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_SPA_COST_FUNCTION_2D_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_COST_FUNCTIONS_SPA_COST_FUNCTION_3D_H_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_OPTIMIZATION_PROBLEM_2D_H_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_OPTIMIZATION_PROBLEM_3D_H_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_OPTIMIZATION_PROBLEM_INTERFACE_H_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_OPTIMIZATION_OPTIMIZATION_PROBLEM_OPTIONS_H_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_RANGE_DATA_COLLATOR_H_	cartographer/cartographer/mapping/internal/range_data_collator.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_SCAN_MATCHING_REAL_TIME_CORRELATIVE_SCAN_MATCHER_H_	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.h	19;"	d
CARTOGRAPHER_MAPPING_INTERNAL_SUBMAP_CONTROLLER_H	cartographer/cartographer/mapping/internal/submap_controller.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_TESTING_FAKE_TRIMMABLE_H_	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_TESTING_MOCK_MAP_BUILDER_H_	cartographer/cartographer/mapping/internal/testing/mock_map_builder.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_TESTING_MOCK_POSE_GRAPH_H_	cartographer/cartographer/mapping/internal/testing/mock_pose_graph.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_TESTING_MOCK_TRAJECTORY_BUILDER_H_	cartographer/cartographer/mapping/internal/testing/mock_trajectory_builder.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_TESTING_TEST_HELPERS_H_	cartographer/cartographer/mapping/internal/testing/test_helpers.h	18;"	d
CARTOGRAPHER_MAPPING_INTERNAL_TRAJECTORY_CONNECTIVITY_STATE_H_	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	18;"	d
CARTOGRAPHER_MAPPING_LOCAL_SLAM_RESULT_DATA_H_	cartographer/cartographer/mapping/local_slam_result_data.h	18;"	d
CARTOGRAPHER_MAPPING_MAP_BUILDER_H_	cartographer/cartographer/mapping/map_builder.h	18;"	d
CARTOGRAPHER_MAPPING_MAP_BUILDER_INTERFACE_H_	cartographer/cartographer/mapping/map_builder_interface.h	18;"	d
CARTOGRAPHER_MAPPING_POSE_EXTRAPOLATOR_H_	cartographer/cartographer/mapping/pose_extrapolator.h	18;"	d
CARTOGRAPHER_MAPPING_POSE_GRAPH_H_	cartographer/cartographer/mapping/pose_graph.h	18;"	d
CARTOGRAPHER_MAPPING_POSE_GRAPH_INTERFACE_H_	cartographer/cartographer/mapping/pose_graph_interface.h	18;"	d
CARTOGRAPHER_MAPPING_POSE_GRAPH_TRIMMER_H_	cartographer/cartographer/mapping/pose_graph_trimmer.h	18;"	d
CARTOGRAPHER_MAPPING_PROBABILITY_VALUES_H_	cartographer/cartographer/mapping/probability_values.h	18;"	d
CARTOGRAPHER_MAPPING_RANGE_DATA_INSERTER_H_	cartographer/cartographer/mapping/range_data_inserter_interface.h	18;"	d
CARTOGRAPHER_MAPPING_SUBMAPS_H_	cartographer/cartographer/mapping/submaps.h	18;"	d
CARTOGRAPHER_MAPPING_TRAJECTORY_BUILDER_INTERFACE_H_	cartographer/cartographer/mapping/trajectory_builder_interface.h	18;"	d
CARTOGRAPHER_MAPPING_TRAJECTORY_NODE_H_	cartographer/cartographer/mapping/trajectory_node.h	18;"	d
CARTOGRAPHER_METRICS_COUNTER_H_	cartographer/cartographer/metrics/counter.h	18;"	d
CARTOGRAPHER_METRICS_FAMILY_FACTORY_H_	cartographer/cartographer/metrics/family_factory.h	18;"	d
CARTOGRAPHER_METRICS_GAUGE_H_	cartographer/cartographer/metrics/gauge.h	18;"	d
CARTOGRAPHER_METRICS_HISTOGRAM_H_	cartographer/cartographer/metrics/histogram.h	18;"	d
CARTOGRAPHER_METRICS_REGISTER_H_	cartographer/cartographer/metrics/register.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_ASSETS_WRITER_H	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	26;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_MAP_BUILDER_BRIDGE_H	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_MSG_CONVERSION_H	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_NODE_CONSTANTS_H	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_NODE_H	cartographer_ros/cartographer_ros/cartographer_ros/node.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_NODE_OPTIONS_H	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_OFFLINE_NODE_H	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_PLAYABLE_BAG_H	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_ROS_LOG_SINK_H	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_ROS_MAP_H	cartographer_ros/cartographer_ros/cartographer_ros/ros_map.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_ROS_MAP_WRITING_POINTS_PROCESSOR_H	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_SENSOR_BRIDGE_H	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_SPLIT_STRING_H	cartographer_ros/cartographer_ros/cartographer_ros/split_string.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_SUBMAP_H	cartographer_ros/cartographer_ros/cartographer_ros/submap.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_TF_BRIDGE_H	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_TIME_CONVERSION_H	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_TRAJECTORY_OPTIONS_H	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	18;"	d
CARTOGRAPHER_ROS_CARTOGRAPHER_ROS_URDF_READER_H	cartographer_ros/cartographer_ros/cartographer_ros/urdf_reader.h	18;"	d
CARTOGRAPHER_RVIZ_SRC_DRAWABLE_SUBMAP_H_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	18;"	d
CARTOGRAPHER_RVIZ_SRC_OGRE_SLICE_H_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	18;"	d
CARTOGRAPHER_RVIZ_SRC_SUBMAPS_DISPLAY_H_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	18;"	d
CARTOGRAPHER_SENSOR_COLLATOR_INTERFACE_H_	cartographer/cartographer/sensor/collator_interface.h	18;"	d
CARTOGRAPHER_SENSOR_COMPRESSED_POINT_CLOUD_H_	cartographer/cartographer/sensor/compressed_point_cloud.h	18;"	d
CARTOGRAPHER_SENSOR_FIXED_FRAME_POSE_DATA_H_	cartographer/cartographer/sensor/fixed_frame_pose_data.h	18;"	d
CARTOGRAPHER_SENSOR_IMU_DATA_H_	cartographer/cartographer/sensor/imu_data.h	18;"	d
CARTOGRAPHER_SENSOR_INTERNAL_COLLATOR_H_	cartographer/cartographer/sensor/internal/collator.h	18;"	d
CARTOGRAPHER_SENSOR_INTERNAL_DISPATCHABLE_H_	cartographer/cartographer/sensor/internal/dispatchable.h	18;"	d
CARTOGRAPHER_SENSOR_INTERNAL_ORDERED_MULTI_QUEUE_H_	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	18;"	d
CARTOGRAPHER_SENSOR_INTERNAL_TEST_HELPERS_H_	cartographer/cartographer/sensor/internal/test_helpers.h	18;"	d
CARTOGRAPHER_SENSOR_INTERNAL_TRAJECTORY_COLLATOR_H_	cartographer/cartographer/sensor/internal/trajectory_collator.h	18;"	d
CARTOGRAPHER_SENSOR_INTERNAL_VOXEL_FILTER_H_	cartographer/cartographer/sensor/internal/voxel_filter.h	18;"	d
CARTOGRAPHER_SENSOR_LANDMARK_DATA_H_	cartographer/cartographer/sensor/landmark_data.h	18;"	d
CARTOGRAPHER_SENSOR_MAP_BY_TIME_H_	cartographer/cartographer/sensor/map_by_time.h	18;"	d
CARTOGRAPHER_SENSOR_ODOMETRY_DATA_H_	cartographer/cartographer/sensor/odometry_data.h	18;"	d
CARTOGRAPHER_SENSOR_POINT_CLOUD_H_	cartographer/cartographer/sensor/point_cloud.h	18;"	d
CARTOGRAPHER_SENSOR_RANGE_DATA_H_	cartographer/cartographer/sensor/range_data.h	18;"	d
CARTOGRAPHER_SENSOR_TIMED_POINT_CLOUD_DATA_H_	cartographer/cartographer/sensor/timed_point_cloud_data.h	18;"	d
CARTOGRAPHER_TRANSFORM_RIGID_TRANSFORM_H_	cartographer/cartographer/transform/rigid_transform.h	18;"	d
CARTOGRAPHER_TRANSFORM_RIGID_TRANSFORM_TEST_HELPERS_H_	cartographer/cartographer/transform/rigid_transform_test_helpers.h	18;"	d
CARTOGRAPHER_TRANSFORM_TIMESTAMPED_TRANSFORM_H_	cartographer/cartographer/transform/timestamped_transform.h	18;"	d
CARTOGRAPHER_TRANSFORM_TRANSFORM_H_	cartographer/cartographer/transform/transform.h	18;"	d
CARTOGRAPHER_TRANSFORM_TRANSFORM_INTERPOLATION_BUFFER_H_	cartographer/cartographer/transform/transform_interpolation_buffer.h	18;"	d
CASESTR	ceres-solver/internal/ceres/types.cc	337;"	d	file:
CASESTR	ceres-solver/internal/ceres/types.cc	41;"	d	file:
CENTRAL	ceres-solver/include/ceres/types.h	/^  CENTRAL,$/;"	e	enum:ceres::NumericDiffMethodType
CERCES_INTERNAL_MINIGLOG_GLOG_LOGGING_H_	ceres-solver/internal/ceres/miniglog/glog/logging.h	93;"	d
CERES_ADD_PARAMETER_BLOCK	ceres-solver/include/ceres/sized_cost_function.h	74;"	d
CERES_ADD_PARAMETER_BLOCK	ceres-solver/include/ceres/sized_cost_function.h	86;"	d
CERES_ALIGNED_CHAR_ARRAY	ceres-solver/include/ceres/internal/manual_constructor.h	203;"	d
CERES_ALIGNED_CHAR_ARRAY	ceres-solver/include/ceres/internal/manual_constructor.h	59;"	d
CERES_ALIGNED_CHAR_ARRAY	ceres-solver/include/ceres/internal/manual_constructor.h	85;"	d
CERES_ALIGN_ATTRIBUTE	ceres-solver/include/ceres/internal/macros.h	163;"	d
CERES_ALIGN_ATTRIBUTE	ceres-solver/include/ceres/internal/macros.h	166;"	d
CERES_ALIGN_OF	ceres-solver/include/ceres/internal/macros.h	164;"	d
CERES_ALIGN_OF	ceres-solver/include/ceres/internal/macros.h	167;"	d
CERES_ALIGN_TYPE_TEMPLATE	ceres-solver/include/ceres/internal/manual_constructor.h	62;"	d
CERES_ALIGN_TYPE_TEMPLATE	ceres-solver/include/ceres/internal/manual_constructor.h	83;"	d
CERES_ARRAYSIZE	ceres-solver/include/ceres/internal/macros.h	138;"	d
CERES_CALL_GEMM	ceres-solver/internal/ceres/small_blas.h	376;"	d
CERES_CALL_GEMM	ceres-solver/internal/ceres/small_blas.h	86;"	d
CERES_COPY_PARAMETER_BLOCK	ceres-solver/include/ceres/numeric_diff_cost_function.h	255;"	d
CERES_COPY_PARAMETER_BLOCK	ceres-solver/include/ceres/numeric_diff_cost_function.h	271;"	d
CERES_DEFINE_JET_COMPARISON_OPERATOR	ceres-solver/include/ceres/jet.h	403;"	d
CERES_DEFINE_JET_COMPARISON_OPERATOR	ceres-solver/include/ceres/jet.h	422;"	d
CERES_DISALLOW_COPY_AND_ASSIGN	ceres-solver/include/ceres/internal/macros.h	52;"	d
CERES_DISALLOW_IMPLICIT_CONSTRUCTORS	ceres-solver/include/ceres/internal/macros.h	62;"	d
CERES_EIGEN_VERSION	ceres-solver/internal/ceres/solver_utils.cc	41;"	d	file:
CERES_EVALUATE_JACOBIAN_FOR_BLOCK	ceres-solver/include/ceres/numeric_diff_cost_function.h	273;"	d
CERES_EVALUATE_JACOBIAN_FOR_BLOCK	ceres-solver/include/ceres/numeric_diff_cost_function.h	306;"	d
CERES_EXAMPLES_BAL_PROBLEM_H_	ceres-solver/examples/bal_problem.h	38;"	d
CERES_EXAMPLES_FIELDS_OF_EXPERTS_H_	ceres-solver/examples/fields_of_experts.h	45;"	d
CERES_EXAMPLES_PGM_IMAGE_H_	ceres-solver/examples/pgm_image.h	34;"	d
CERES_EXAMPLES_POSE_GRAPH_2D_ANGLE_LOCAL_PARAMETERIZATION_H_	ceres-solver/examples/slam/pose_graph_2d/angle_local_parameterization.h	32;"	d
CERES_EXAMPLES_POSE_GRAPH_2D_NORMALIZE_ANGLE_H_	ceres-solver/examples/slam/pose_graph_2d/normalize_angle.h	32;"	d
CERES_EXAMPLES_POSE_GRAPH_2D_POSE_GRAPH_2D_ERROR_TERM_H_	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	34;"	d
CERES_EXAMPLES_POSE_GRAPH_2D_TYPES_H_	ceres-solver/examples/slam/pose_graph_2d/types.h	36;"	d
CERES_EXAMPLES_RANDOM_H_	ceres-solver/examples/random.h	32;"	d
CERES_EXAMPLES_SNAVELY_REPROJECTION_ERROR_H_	ceres-solver/examples/snavely_reprojection_error.h	42;"	d
CERES_EXPORT	ceres-solver/include/ceres/internal/port.h	91;"	d
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	/^CERES_GEMM_BEGIN(MatrixMatrixMultiply) {$/;"	f	namespace:ceres::internal
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	/^CERES_GEMM_BEGIN(MatrixMatrixMultiplyEigen) {$/;"	f	namespace:ceres::internal
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	/^CERES_GEMM_BEGIN(MatrixMatrixMultiplyNaive) {$/;"	f	namespace:ceres::internal
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	/^CERES_GEMM_BEGIN(MatrixTransposeMatrixMultiply) {$/;"	f	namespace:ceres::internal
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	/^CERES_GEMM_BEGIN(MatrixTransposeMatrixMultiplyEigen) {$/;"	f	namespace:ceres::internal
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	/^CERES_GEMM_BEGIN(MatrixTransposeMatrixMultiplyNaive) {$/;"	f	namespace:ceres::internal
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	373;"	d
CERES_GEMM_BEGIN	ceres-solver/internal/ceres/small_blas.h	47;"	d
CERES_GEMM_EIGEN_HEADER	ceres-solver/internal/ceres/small_blas.h	374;"	d
CERES_GEMM_EIGEN_HEADER	ceres-solver/internal/ceres/small_blas.h	79;"	d
CERES_GEMM_NAIVE_HEADER	ceres-solver/internal/ceres/small_blas.h	375;"	d
CERES_GEMM_NAIVE_HEADER	ceres-solver/internal/ceres/small_blas.h	61;"	d
CERES_HASH_NAMESPACE_END	ceres-solver/internal/ceres/collections_port.h	47;"	d
CERES_HASH_NAMESPACE_END	ceres-solver/internal/ceres/collections_port.h	54;"	d
CERES_HASH_NAMESPACE_END	ceres-solver/internal/ceres/collections_port.h	61;"	d
CERES_HASH_NAMESPACE_START	ceres-solver/internal/ceres/collections_port.h	46;"	d
CERES_HASH_NAMESPACE_START	ceres-solver/internal/ceres/collections_port.h	53;"	d
CERES_HASH_NAMESPACE_START	ceres-solver/internal/ceres/collections_port.h	60;"	d
CERES_INCLUDE_PATHS	ceres-solver/jni/Android.mk	/^CERES_INCLUDE_PATHS := $(CERES_EXTRA_INCLUDES)$/;"	m
CERES_INTERNAL_ARRAY_UTILS_H_	ceres-solver/internal/ceres/array_utils.h	44;"	d
CERES_INTERNAL_BLAS_H_	ceres-solver/internal/ceres/blas.h	34;"	d
CERES_INTERNAL_BLOCK_EVALUATE_PREPARER_H_	ceres-solver/internal/ceres/block_evaluate_preparer.h	37;"	d
CERES_INTERNAL_BLOCK_JACOBIAN_WRITER_H_	ceres-solver/internal/ceres/block_jacobian_writer.h	39;"	d
CERES_INTERNAL_BLOCK_JACOBI_PRECONDITIONER_H_	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	32;"	d
CERES_INTERNAL_BLOCK_RANDOM_ACCESS_DENSE_MATRIX_H_	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	32;"	d
CERES_INTERNAL_BLOCK_RANDOM_ACCESS_DIAGONAL_MATRIX_H_	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	32;"	d
CERES_INTERNAL_BLOCK_RANDOM_ACCESS_MATRIX_H_	ceres-solver/internal/ceres/block_random_access_matrix.h	34;"	d
CERES_INTERNAL_BLOCK_RANDOM_ACCESS_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	32;"	d
CERES_INTERNAL_BLOCK_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/block_sparse_matrix.h	35;"	d
CERES_INTERNAL_BLOCK_STRUCTURE_H_	ceres-solver/internal/ceres/block_structure.h	39;"	d
CERES_INTERNAL_CALLBACKS_H_	ceres-solver/internal/ceres/callbacks.h	32;"	d
CERES_INTERNAL_CANONICAL_VIEWS_CLUSTERING_H_	ceres-solver/internal/ceres/canonical_views_clustering.h	42;"	d
CERES_INTERNAL_CASTS_H_	ceres-solver/internal/ceres/casts.h	32;"	d
CERES_INTERNAL_CGNR_LINEAR_OPERATOR_H_	ceres-solver/internal/ceres/cgnr_linear_operator.h	32;"	d
CERES_INTERNAL_CGNR_SOLVER_H_	ceres-solver/internal/ceres/cgnr_solver.h	32;"	d
CERES_INTERNAL_COLLECTIONS_PORT_H_	ceres-solver/internal/ceres/collections_port.h	34;"	d
CERES_INTERNAL_COMPRESSED_COL_SPARSE_MATRIX_UTILS_H_	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.h	32;"	d
CERES_INTERNAL_COMPRESSED_ROW_JACOBIAN_WRITER_H_	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	34;"	d
CERES_INTERNAL_COMPRESSED_ROW_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	32;"	d
CERES_INTERNAL_CONJUGATE_GRADIENTS_SOLVER_H_	ceres-solver/internal/ceres/conjugate_gradients_solver.h	35;"	d
CERES_INTERNAL_COORDINATE_DESCENT_MINIMIZER_H_	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	32;"	d
CERES_INTERNAL_CORRECTOR_H_	ceres-solver/internal/ceres/corrector.h	36;"	d
CERES_INTERNAL_COVARIANCE_IMPL_H_	ceres-solver/internal/ceres/covariance_impl.h	32;"	d
CERES_INTERNAL_CXSPARSE_H_	ceres-solver/internal/ceres/cxsparse.h	32;"	d
CERES_INTERNAL_DENSE_JACOBIAN_WRITER_H_	ceres-solver/internal/ceres/dense_jacobian_writer.h	34;"	d
CERES_INTERNAL_DENSE_NORMAL_CHOLESKY_SOLVER_H_	ceres-solver/internal/ceres/dense_normal_cholesky_solver.h	35;"	d
CERES_INTERNAL_DENSE_QR_SOLVER_H_	ceres-solver/internal/ceres/dense_qr_solver.h	33;"	d
CERES_INTERNAL_DENSE_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/dense_sparse_matrix.h	34;"	d
CERES_INTERNAL_DETECT_STRUCTURE_H_	ceres-solver/internal/ceres/detect_structure.h	32;"	d
CERES_INTERNAL_DOGLEG_STRATEGY_H_	ceres-solver/internal/ceres/dogleg_strategy.h	32;"	d
CERES_INTERNAL_DYNAMIC_COMPRESED_ROW_FINALIZER_H_	ceres-solver/internal/ceres/dynamic_compressed_row_finalizer.h	32;"	d
CERES_INTERNAL_DYNAMIC_COMPRESSED_ROW_JACOBIAN_WRITER_H_	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h	35;"	d
CERES_INTERNAL_DYNAMIC_COMPRESSED_ROW_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h	42;"	d
CERES_INTERNAL_DYNAMIC_SPARSE_NORMAL_CHOLESKY_SOLVER_H_	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.h	35;"	d
CERES_INTERNAL_EIGENSPARSE_H_	ceres-solver/internal/ceres/eigensparse.h	34;"	d
CERES_INTERNAL_EIGEN_H_	ceres-solver/include/ceres/internal/eigen.h	32;"	d
CERES_INTERNAL_EVALUATOR_H_	ceres-solver/internal/ceres/evaluator.h	33;"	d
CERES_INTERNAL_EXECUTION_SUMMARY_H_	ceres-solver/internal/ceres/execution_summary.h	32;"	d
CERES_INTERNAL_FILE_H_	ceres-solver/internal/ceres/file.h	34;"	d
CERES_INTERNAL_FUNCTION_SAMPLE_H_	ceres-solver/internal/ceres/function_sample.h	32;"	d
CERES_INTERNAL_GRADIENT_CHECKING_COST_FUNCTION_H_	ceres-solver/internal/ceres/gradient_checking_cost_function.h	33;"	d
CERES_INTERNAL_GRADIENT_PROBLEM_EVALUATOR_H_	ceres-solver/internal/ceres/gradient_problem_evaluator.h	32;"	d
CERES_INTERNAL_GRAPH_ALGORITHMS_H_	ceres-solver/internal/ceres/graph_algorithms.h	34;"	d
CERES_INTERNAL_GRAPH_H_	ceres-solver/internal/ceres/graph.h	32;"	d
CERES_INTERNAL_IMPLICIT_SCHUR_COMPLEMENT_H_	ceres-solver/internal/ceres/implicit_schur_complement.h	35;"	d
CERES_INTERNAL_INNER_PRODUCT_COMPUTER_H_	ceres-solver/internal/ceres/inner_product_computer.h	32;"	d
CERES_INTERNAL_INTEGRAL_TYPES_H_	ceres-solver/internal/ceres/integral_types.h	35;"	d
CERES_INTERNAL_INVERT_PSD_MATRIX_H_	ceres-solver/internal/ceres/invert_psd_matrix.h	32;"	d
CERES_INTERNAL_IS_CLOSE_H_	ceres-solver/internal/ceres/is_close.h	34;"	d
CERES_INTERNAL_ITERATIVE_SCHUR_COMPLEMENT_SOLVER_H_	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	32;"	d
CERES_INTERNAL_LAPACK_H_	ceres-solver/internal/ceres/lapack.h	32;"	d
CERES_INTERNAL_LEVENBERG_MARQUARDT_STRATEGY_H_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	32;"	d
CERES_INTERNAL_LINEAR_LEAST_SQUARES_PROBLEMS_H_	ceres-solver/internal/ceres/linear_least_squares_problems.h	32;"	d
CERES_INTERNAL_LINEAR_OPERATOR_H_	ceres-solver/internal/ceres/linear_operator.h	34;"	d
CERES_INTERNAL_LINEAR_SOLVER_H_	ceres-solver/internal/ceres/linear_solver.h	35;"	d
CERES_INTERNAL_LINE_SEARCH_DIRECTION_H_	ceres-solver/internal/ceres/line_search_direction.h	32;"	d
CERES_INTERNAL_LINE_SEARCH_H_	ceres-solver/internal/ceres/line_search.h	34;"	d
CERES_INTERNAL_LINE_SEARCH_MINIMIZER_H_	ceres-solver/internal/ceres/line_search_minimizer.h	32;"	d
CERES_INTERNAL_LINE_SEARCH_PREPROCESSOR_H_	ceres-solver/internal/ceres/line_search_preprocessor.h	32;"	d
CERES_INTERNAL_LOW_RANK_INVERSE_HESSIAN_H_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	35;"	d
CERES_INTERNAL_MAP_UTIL_H_	ceres-solver/internal/ceres/map_util.h	34;"	d
CERES_INTERNAL_MINIMIZER_H_	ceres-solver/internal/ceres/minimizer.h	32;"	d
CERES_INTERNAL_MUTEX_H_	ceres-solver/internal/ceres/mutex.h	96;"	d
CERES_INTERNAL_NUMERIC_DIFF_TEST_UTILS_H_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	32;"	d
CERES_INTERNAL_PARAMETER_BLOCK_H_	ceres-solver/internal/ceres/parameter_block.h	32;"	d
CERES_INTERNAL_PARAMETER_BLOCK_ORDERING_H_	ceres-solver/internal/ceres/parameter_block_ordering.h	32;"	d
CERES_INTERNAL_PARTITIONED_MATRIX_VIEW_H_	ceres-solver/internal/ceres/partitioned_matrix_view.h	37;"	d
CERES_INTERNAL_POLYNOMIAL_SOLVER_H_	ceres-solver/internal/ceres/polynomial.h	33;"	d
CERES_INTERNAL_PRECONDITIONER_H_	ceres-solver/internal/ceres/preconditioner.h	32;"	d
CERES_INTERNAL_PREPROCESSOR_H_	ceres-solver/internal/ceres/preprocessor.h	32;"	d
CERES_INTERNAL_PROGRAM_EVALUATOR_H_	ceres-solver/internal/ceres/program_evaluator.h	80;"	d
CERES_INTERNAL_PROGRAM_H_	ceres-solver/internal/ceres/program.h	32;"	d
CERES_INTERNAL_RANDOM_H_	ceres-solver/internal/ceres/random.h	33;"	d
CERES_INTERNAL_REORDER_PROGRAM_H_	ceres-solver/internal/ceres/reorder_program.h	32;"	d
CERES_INTERNAL_RESIDUAL_BLOCK_H_	ceres-solver/internal/ceres/residual_block.h	35;"	d
CERES_INTERNAL_RESIDUAL_BLOCK_UTILS_H_	ceres-solver/internal/ceres/residual_block_utils.h	44;"	d
CERES_INTERNAL_SCHUR_COMPLEMENT_SOLVER_H_	ceres-solver/internal/ceres/schur_complement_solver.h	32;"	d
CERES_INTERNAL_SCHUR_ELIMINATOR_H_	ceres-solver/internal/ceres/schur_eliminator.h	32;"	d
CERES_INTERNAL_SCHUR_ELIMINATOR_IMPL_H_	ceres-solver/internal/ceres/schur_eliminator_impl.h	35;"	d
CERES_INTERNAL_SCHUR_JACOBI_PRECONDITIONER_H_	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	39;"	d
CERES_INTERNAL_SCHUR_TEMPLATES_H_	ceres-solver/internal/ceres/schur_templates.h	33;"	d
CERES_INTERNAL_SCRATCH_EVALUATE_PREPARER_H_	ceres-solver/internal/ceres/scratch_evaluate_preparer.h	36;"	d
CERES_INTERNAL_SINGLE_LINKAGE_CLUSTERING_H_	ceres-solver/internal/ceres/single_linkage_clustering.h	32;"	d
CERES_INTERNAL_SMALL_BLAS_H_	ceres-solver/internal/ceres/small_blas.h	36;"	d
CERES_INTERNAL_SPARSE_CHOLESKY_H_	ceres-solver/internal/ceres/sparse_cholesky.h	32;"	d
CERES_INTERNAL_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/sparse_matrix.h	34;"	d
CERES_INTERNAL_SPARSE_NORMAL_CHOLESKY_SOLVER_H_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	35;"	d
CERES_INTERNAL_SPLIT_H_	ceres-solver/internal/ceres/split.h	32;"	d
CERES_INTERNAL_STL_UTIL_H_	ceres-solver/internal/ceres/stl_util.h	32;"	d
CERES_INTERNAL_STRINGPRINTF_H_	ceres-solver/internal/ceres/stringprintf.h	39;"	d
CERES_INTERNAL_SUITESPARSE_H_	ceres-solver/internal/ceres/suitesparse.h	34;"	d
CERES_INTERNAL_TEST_UTIL_H_	ceres-solver/internal/ceres/test_util.h	40;"	d
CERES_INTERNAL_TRIPLET_SPARSE_MATRIX_H_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	32;"	d
CERES_INTERNAL_TRUST_REGION_MINIMIZER_H_	ceres-solver/internal/ceres/trust_region_minimizer.h	32;"	d
CERES_INTERNAL_TRUST_REGION_PREPROCESSOR_H_	ceres-solver/internal/ceres/trust_region_preprocessor.h	32;"	d
CERES_INTERNAL_TRUST_REGION_STEP_EVALUATOR_H_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	32;"	d
CERES_INTERNAL_TRUST_REGION_STRATEGY_H_	ceres-solver/internal/ceres/trust_region_strategy.h	32;"	d
CERES_INTERNAL_VISIBILITY_BASED_PRECONDITIONER_H_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	49;"	d
CERES_INTERNAL_VISIBILITY_H_	ceres-solver/internal/ceres/visibility.h	36;"	d
CERES_INTERNAL_WALL_TIME_H_	ceres-solver/internal/ceres/wall_time.h	32;"	d
CERES_INTSIZE	ceres-solver/internal/ceres/integral_types.h	50;"	d
CERES_INTSIZE	ceres-solver/internal/ceres/integral_types.h	77;"	d
CERES_JET_ALIGN_BYTES	ceres-solver/include/ceres/jet.h	285;"	d
CERES_JET_ALIGN_BYTES	ceres-solver/include/ceres/jet.h	288;"	d
CERES_JET_ALIGN_BYTES	ceres-solver/include/ceres/jet.h	295;"	d
CERES_MAKE_1ST_ORDER_PERTURBATION	ceres-solver/include/ceres/internal/autodiff.h	269;"	d
CERES_MAKE_1ST_ORDER_PERTURBATION	ceres-solver/include/ceres/internal/autodiff.h	286;"	d
CERES_MUST_USE_RESULT	ceres-solver/include/ceres/internal/macros.h	150;"	d
CERES_MUST_USE_RESULT	ceres-solver/include/ceres/internal/macros.h	152;"	d
CERES_NO_CAMD	ceres-solver/internal/ceres/suitesparse.h	61;"	d
CERES_PRINTF_ATTRIBUTE	ceres-solver/internal/ceres/stringprintf.h	57;"	d
CERES_PRINTF_ATTRIBUTE	ceres-solver/internal/ceres/stringprintf.h	84;"	d
CERES_PUBLIC_AUTODIFF_COST_FUNCTION_H_	ceres-solver/include/ceres/autodiff_cost_function.h	130;"	d
CERES_PUBLIC_AUTODIFF_LOCAL_PARAMETERIZATION_H_	ceres-solver/include/ceres/autodiff_local_parameterization.h	34;"	d
CERES_PUBLIC_CERES_H_	ceres-solver/include/ceres/ceres.h	35;"	d
CERES_PUBLIC_CONDITIONED_COST_FUNCTION_H_	ceres-solver/include/ceres/conditioned_cost_function.h	35;"	d
CERES_PUBLIC_COST_FUNCTION_H_	ceres-solver/include/ceres/cost_function.h	45;"	d
CERES_PUBLIC_COST_FUNCTION_TO_FUNCTOR_H_	ceres-solver/include/ceres/cost_function_to_functor.h	88;"	d
CERES_PUBLIC_COVARIANCE_H_	ceres-solver/include/ceres/covariance.h	32;"	d
CERES_PUBLIC_CRS_MATRIX_H_	ceres-solver/include/ceres/crs_matrix.h	32;"	d
CERES_PUBLIC_CUBIC_INTERPOLATION_H_	ceres-solver/include/ceres/cubic_interpolation.h	32;"	d
CERES_PUBLIC_C_API_H_	ceres-solver/include/ceres/c_api.h	39;"	d
CERES_PUBLIC_DYNAMIC_AUTODIFF_COST_FUNCTION_H_	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	33;"	d
CERES_PUBLIC_DYNAMIC_COST_FUNCTION_H_	ceres-solver/include/ceres/dynamic_cost_function.h	32;"	d
CERES_PUBLIC_DYNAMIC_COST_FUNCTION_TO_FUNCTOR_H_	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	33;"	d
CERES_PUBLIC_DYNAMIC_NUMERIC_DIFF_COST_FUNCTION_H_	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	35;"	d
CERES_PUBLIC_FPCLASSIFY_H_	ceres-solver/include/ceres/fpclassify.h	38;"	d
CERES_PUBLIC_GRADIENT_CHECKER_H_	ceres-solver/include/ceres/gradient_checker.h	35;"	d
CERES_PUBLIC_GRADIENT_PROBLEM_H_	ceres-solver/include/ceres/gradient_problem.h	32;"	d
CERES_PUBLIC_GRADIENT_PROBLEM_SOLVER_H_	ceres-solver/include/ceres/gradient_problem_solver.h	32;"	d
CERES_PUBLIC_HOUSEHOLDER_VECTOR_H_	ceres-solver/internal/ceres/householder_vector.h	32;"	d
CERES_PUBLIC_INTERNAL_AUTODIFF_H_	ceres-solver/include/ceres/internal/autodiff.h	141;"	d
CERES_PUBLIC_INTERNAL_CONFIG_H_	ceres-solver/config/ceres/internal/config.h	45;"	d
CERES_PUBLIC_INTERNAL_FIXED_ARRAY_H_	ceres-solver/include/ceres/internal/fixed_array.h	33;"	d
CERES_PUBLIC_INTERNAL_MACROS_H_	ceres-solver/include/ceres/internal/macros.h	37;"	d
CERES_PUBLIC_INTERNAL_MANUAL_CONSTRUCTOR_H_	ceres-solver/include/ceres/internal/manual_constructor.h	41;"	d
CERES_PUBLIC_INTERNAL_NUMERIC_DIFF_H_	ceres-solver/include/ceres/internal/numeric_diff.h	36;"	d
CERES_PUBLIC_INTERNAL_PORT_H_	ceres-solver/include/ceres/internal/port.h	32;"	d
CERES_PUBLIC_INTERNAL_SCOPED_PTR_H_	ceres-solver/include/ceres/internal/scoped_ptr.h	36;"	d
CERES_PUBLIC_INTERNAL_VARIADIC_EVALUATE_H_	ceres-solver/include/ceres/internal/variadic_evaluate.h	33;"	d
CERES_PUBLIC_ITERATION_CALLBACK_H_	ceres-solver/include/ceres/iteration_callback.h	36;"	d
CERES_PUBLIC_JET_H_	ceres-solver/include/ceres/jet.h	157;"	d
CERES_PUBLIC_LOCAL_PARAMETERIZATION_H_	ceres-solver/include/ceres/local_parameterization.h	33;"	d
CERES_PUBLIC_LOSS_FUNCTION_H_	ceres-solver/include/ceres/loss_function.h	76;"	d
CERES_PUBLIC_NORMAL_PRIOR_H_	ceres-solver/include/ceres/normal_prior.h	35;"	d
CERES_PUBLIC_NUMERIC_DIFF_COST_FUNCTION_H_	ceres-solver/include/ceres/numeric_diff_cost_function.h	162;"	d
CERES_PUBLIC_NUMERIC_DIFF_OPTIONS_H_	ceres-solver/include/ceres/numeric_diff_options.h	33;"	d
CERES_PUBLIC_ORDERED_GROUPS_H_	ceres-solver/include/ceres/ordered_groups.h	32;"	d
CERES_PUBLIC_PROBLEM_H_	ceres-solver/include/ceres/problem.h	35;"	d
CERES_PUBLIC_PROBLEM_IMPL_H_	ceres-solver/internal/ceres/problem_impl.h	40;"	d
CERES_PUBLIC_ROTATION_H_	ceres-solver/include/ceres/rotation.h	46;"	d
CERES_PUBLIC_SIZED_COST_FUNCTION_H_	ceres-solver/include/ceres/sized_cost_function.h	39;"	d
CERES_PUBLIC_SOLVER_H_	ceres-solver/include/ceres/solver.h	32;"	d
CERES_PUBLIC_TYPES_H_	ceres-solver/include/ceres/types.h	38;"	d
CERES_PUBLIC_VERSION_H_	ceres-solver/include/ceres/version.h	32;"	d
CERES_SAFE_PTHREAD	ceres-solver/internal/ceres/mutex.h	229;"	d
CERES_SAFE_PTHREAD	ceres-solver/internal/ceres/mutex.h	247;"	d
CERES_SAFE_PTHREAD	ceres-solver/internal/ceres/mutex.h	251;"	d
CERES_SAFE_PTHREAD	ceres-solver/internal/ceres/mutex.h	268;"	d
CERES_SCANF_ATTRIBUTE	ceres-solver/internal/ceres/stringprintf.h	59;"	d
CERES_SRC_PATH	ceres-solver/jni/Android.mk	/^CERES_SRC_PATH := ..\/internal\/ceres$/;"	m
CERES_TAKE_1ST_ORDER_PERTURBATION	ceres-solver/include/ceres/internal/autodiff.h	296;"	d
CERES_TAKE_1ST_ORDER_PERTURBATION	ceres-solver/include/ceres/internal/autodiff.h	316;"	d
CERES_TEST_SRCDIR_SUFFIX	ceres-solver/internal/ceres/test_util.cc	50;"	d	file:
CERES_TO_STRING	ceres-solver/include/ceres/version.h	41;"	d
CERES_TO_STRING_HELPER	ceres-solver/include/ceres/version.h	40;"	d
CERES_VERSION_MAJOR	ceres-solver/include/ceres/version.h	34;"	d
CERES_VERSION_MINOR	ceres-solver/include/ceres/version.h	35;"	d
CERES_VERSION_REVISION	ceres-solver/include/ceres/version.h	36;"	d
CERES_VERSION_STRING	ceres-solver/include/ceres/version.h	44;"	d
CERES_WARNINGS_DISABLED	ceres-solver/include/ceres/internal/disable_warnings.h	34;"	d
CERES_WARNINGS_DISABLED	ceres-solver/include/ceres/internal/reenable_warnings.h	32;"	d
CERES_WIN32_LEAN_AND_MEAN	ceres-solver/internal/ceres/mutex.h	103;"	d
CGNR	ceres-solver/include/ceres/types.h	/^  CGNR$/;"	e	enum:ceres::LinearSolverType
CHECK	ceres-solver/internal/ceres/miniglog/glog/logging.h	341;"	d
CHECK_EQ	ceres-solver/internal/ceres/miniglog/glog/logging.h	362;"	d
CHECK_GE	ceres-solver/internal/ceres/miniglog/glog/logging.h	366;"	d
CHECK_GT	ceres-solver/internal/ceres/miniglog/glog/logging.h	367;"	d
CHECK_LE	ceres-solver/internal/ceres/miniglog/glog/logging.h	364;"	d
CHECK_LT	ceres-solver/internal/ceres/miniglog/glog/logging.h	365;"	d
CHECK_NE	ceres-solver/internal/ceres/miniglog/glog/logging.h	363;"	d
CHECK_NOTNULL	ceres-solver/internal/ceres/miniglog/glog/logging.h	410;"	d
CHECK_OP	ceres-solver/internal/ceres/miniglog/glog/logging.h	358;"	d
CLUSTER_JACOBI	ceres-solver/include/ceres/types.h	/^  CLUSTER_JACOBI,$/;"	e	enum:ceres::PreconditionerType
CLUSTER_TRIDIAGONAL	ceres-solver/include/ceres/types.h	/^  CLUSTER_TRIDIAGONAL$/;"	e	enum:ceres::PreconditionerType
COLOR_DEFAULT	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  COLOR_DEFAULT,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_GREEN	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  COLOR_GREEN,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_RED	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  COLOR_RED,$/;"	e	enum:testing::internal::GTestColor	file:
COLOR_YELLOW	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  COLOR_YELLOW$/;"	e	enum:testing::internal::GTestColor	file:
COMPLETED	cartographer/cartographer/common/task.h	/^  enum State { NEW, DISPATCHED, DEPENDENCIES_COMPLETED, RUNNING, COMPLETED };$/;"	e	enum:cartographer::common::Task::State
COMPUTE_AND_COMPARE	ceres-solver/internal/ceres/inner_product_computer_test.cc	225;"	d	file:
COMPUTE_AND_COMPARE	ceres-solver/internal/ceres/inner_product_computer_test.cc	47;"	d	file:
CONSOLE	ceres-solver/include/ceres/types.h	/^  CONSOLE,$/;"	e	enum:ceres::DumpFormatType
CONSTRAINED_SOLVE	ceres-solver/examples/more_garbow_hillstrom.cc	644;"	d	file:
CONSTRAINT_STATS_PATTERN	cartographer_ros/jenkins/worker.py	/^CONSTRAINT_STATS_PATTERN = Pattern($/;"	v
CONVERGENCE	ceres-solver/include/ceres/types.h	/^  CONVERGENCE,$/;"	e	enum:ceres::TerminationType
COPY_OPTION	ceres-solver/internal/ceres/gradient_problem_solver.cc	55;"	d	file:
COPY_OPTION	ceres-solver/internal/ceres/gradient_problem_solver.cc	82;"	d	file:
CRSMatrix	ceres-solver/include/ceres/crs_matrix.h	/^  CRSMatrix() : num_rows(0), num_cols(0) {}$/;"	f	struct:ceres::CRSMatrix
CRSMatrix	ceres-solver/include/ceres/crs_matrix.h	/^struct CERES_EXPORT CRSMatrix {$/;"	s	namespace:ceres
CRSToDenseMatrix	ceres-solver/internal/ceres/problem_test.cc	/^void CRSToDenseMatrix(const CRSMatrix& input, Matrix* output) {$/;"	f	namespace:ceres::internal
CStringEquals	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool String::CStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CUBIC	ceres-solver/include/ceres/types.h	/^  CUBIC$/;"	e	enum:ceres::LineSearchInterpolationType
CXSparse	ceres-solver/internal/ceres/cxsparse.cc	/^CXSparse::CXSparse() : scratch_(NULL), scratch_size_(0) {}$/;"	f	class:ceres::internal::CXSparse
CXSparse	ceres-solver/internal/ceres/cxsparse.h	/^class CXSparse {$/;"	c	namespace:ceres::internal
CXSparseCholesky	ceres-solver/internal/ceres/cxsparse.cc	/^CXSparseCholesky::CXSparseCholesky(const OrderingType ordering_type)$/;"	f	class:ceres::internal::CXSparseCholesky
CXSparseCholesky	ceres-solver/internal/ceres/cxsparse.h	/^class CXSparseCholesky : public SparseCholesky {$/;"	c	namespace:ceres::internal
CX_SPARSE	ceres-solver/include/ceres/types.h	/^  CX_SPARSE,$/;"	e	enum:ceres::SparseLinearAlgebraLibraryType
CairoPaintSubmapSlices	cartographer/cartographer/io/submap_painter.cc	/^void CairoPaintSubmapSlices($/;"	f	namespace:cartographer::io::__anon29
CairoToUint8Color	cartographer/cartographer/io/image.cc	/^Uint8Color CairoToUint8Color(uint32 color) {$/;"	f	namespace:cartographer::io::__anon23
CairoWriteCallback	cartographer/cartographer/io/image.cc	/^cairo_status_t CairoWriteCallback(void* const closure,$/;"	f	namespace:cartographer::io::__anon23
CalculateEndIndex	ceres-solver/internal/ceres/gtest/gtest.h	/^  static int CalculateEndIndex(const T& begin,$/;"	f	class:testing::internal::RangeGenerator
CalculateOdometryBetweenNodes	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^OptimizationProblem2D::CalculateOdometryBetweenNodes($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
CalculateOdometryBetweenNodes	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^OptimizationProblem3D::CalculateOdometryBetweenNodes($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
CalculateOptimalEdits	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::vector<EditType> CalculateOptimalEdits($/;"	f	namespace:testing::internal::edit_distance
CalculateOptimalEdits	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::vector<EditType> CalculateOptimalEdits(const std::vector<size_t>& left,$/;"	f	namespace:testing::internal::edit_distance
CalculateReserveForVector	ceres-solver/internal/ceres/split.cc	/^static int CalculateReserveForVector(const string& full, const char* delim) {$/;"	f	namespace:ceres::internal
Call	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^  static bool Call(const Functor& functor, T const *const *input, T* output) {$/;"	f	struct:ceres::internal::VariadicEvaluate
CallReaction	ceres-solver/internal/ceres/gmock/gmock.h	/^enum CallReaction {$/;"	g	namespace:testing::internal
CallStatistics	ceres-solver/internal/ceres/evaluator.h	/^  virtual std::map<std::string, int> CallStatistics() const {$/;"	f	class:ceres::internal::Evaluator
CallStatistics	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual std::map<std::string, int> CallStatistics() const {$/;"	f	class:ceres::internal::GradientProblemEvaluator
CallStatistics	ceres-solver/internal/ceres/linear_solver.h	/^  virtual std::map<std::string, int> CallStatistics() const {$/;"	f	class:ceres::internal::LinearSolver
CallStatistics	ceres-solver/internal/ceres/linear_solver.h	/^  virtual std::map<std::string, int> CallStatistics() const {$/;"	f	class:ceres::internal::TypedLinearSolver
CallStatistics	ceres-solver/internal/ceres/program_evaluator.h	/^  virtual std::map<std::string, int> CallStatistics() const {$/;"	f	class:ceres::internal::ProgramEvaluator
CallableStorageType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename CallableTraits<Callable>::StorageType CallableStorageType;$/;"	t	class:testing::internal::ResultOfMatcher
CallableTraits	ceres-solver/internal/ceres/gmock/gmock.h	/^struct CallableTraits {$/;"	s	namespace:testing::internal
CallableTraits	ceres-solver/internal/ceres/gmock/gmock.h	/^struct CallableTraits<ResType(*)(ArgType)> {$/;"	s	namespace:testing::internal
CallbackCostFunction	ceres-solver/internal/ceres/c_api.cc	/^  CallbackCostFunction(ceres_cost_function_t cost_function,$/;"	f	class:CallbackCostFunction
CallbackCostFunction	ceres-solver/internal/ceres/c_api.cc	/^class CallbackCostFunction : public ceres::CostFunction {$/;"	c	file:
CallbackLossFunction	ceres-solver/internal/ceres/c_api.cc	/^  explicit CallbackLossFunction(ceres_loss_function_t loss_function,$/;"	f	class:CallbackLossFunction
CallbackLossFunction	ceres-solver/internal/ceres/c_api.cc	/^class CallbackLossFunction : public ceres::LossFunction {$/;"	c	file:
CallbackReturnType	ceres-solver/include/ceres/types.h	/^enum CallbackReturnType {$/;"	g	namespace:ceres
CameraForImage	ceres-solver/examples/libmv_bundle_adjuster.cc	/^EuclideanCamera *CameraForImage(vector<EuclideanCamera> *all_cameras,$/;"	f	namespace:__anon155
CameraForImage	ceres-solver/examples/libmv_bundle_adjuster.cc	/^const EuclideanCamera *CameraForImage($/;"	f	namespace:__anon155
CameraToAngleAxisAndCenter	ceres-solver/examples/bal_problem.cc	/^void BALProblem::CameraToAngleAxisAndCenter(const double* camera,$/;"	f	class:ceres::examples::BALProblem
Candidate2D	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  Candidate2D(const int init_scan_index, const int init_x_index_offset,$/;"	f	struct:cartographer::mapping::scan_matching::Candidate2D
Candidate2D	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^struct Candidate2D {$/;"	s	namespace:cartographer::mapping::scan_matching
Candidate3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  Candidate3D(const int scan_index, const Eigen::Array3i& offset)$/;"	f	struct:cartographer::mapping::scan_matching::Candidate3D
Candidate3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^struct Candidate3D {$/;"	s	namespace:cartographer::mapping::scan_matching	file:
CannotMakeProgress	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^void OrderedMultiQueue::CannotMakeProgress(const QueueKey& queue_key) {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
CanonicalViewsClustering	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^  CanonicalViewsClustering() {}$/;"	f	class:ceres::internal::CanonicalViewsClustering
CanonicalViewsClustering	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^class CanonicalViewsClustering {$/;"	c	namespace:ceres::internal	file:
CanonicalViewsClusteringOptions	ceres-solver/internal/ceres/canonical_views_clustering.h	/^  CanonicalViewsClusteringOptions()$/;"	f	struct:ceres::internal::CanonicalViewsClusteringOptions
CanonicalViewsClusteringOptions	ceres-solver/internal/ceres/canonical_views_clustering.h	/^struct CanonicalViewsClusteringOptions {$/;"	s	namespace:ceres::internal
CanonicalViewsTest	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^class CanonicalViewsTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
CaptureStderr	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void CaptureStderr() {$/;"	f	namespace:testing::internal
CaptureStdout	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void CaptureStdout() {$/;"	f	namespace:testing::internal
CaptureStream	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void CaptureStream(int fd, const char* stream_name, CapturedStream** stream) {$/;"	f	namespace:testing::internal
CapturedStream	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {$/;"	f	class:testing::internal::CapturedStream
CapturedStream	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class CapturedStream {$/;"	c	namespace:testing::internal	file:
Cardinality	ceres-solver/internal/ceres/gmock/gmock.h	/^  Cardinality() {}$/;"	f	class:testing::Cardinality
Cardinality	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Cardinality(const CardinalityInterface* impl) : impl_(impl) {}$/;"	f	class:testing::Cardinality
Cardinality	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Cardinality {$/;"	c	namespace:testing
CardinalityInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^class CardinalityInterface {$/;"	c	namespace:testing
CartesianProductGenerator10	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator10(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator10
CartesianProductGenerator10	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator10$/;"	c	namespace:testing::internal
CartesianProductGenerator2	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator2(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator2
CartesianProductGenerator2	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator2$/;"	c	namespace:testing::internal
CartesianProductGenerator3	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator3(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator3
CartesianProductGenerator3	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator3$/;"	c	namespace:testing::internal
CartesianProductGenerator4	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator4(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator4
CartesianProductGenerator4	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator4$/;"	c	namespace:testing::internal
CartesianProductGenerator5	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator5(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator5
CartesianProductGenerator5	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator5$/;"	c	namespace:testing::internal
CartesianProductGenerator6	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator6(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator6
CartesianProductGenerator6	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator6$/;"	c	namespace:testing::internal
CartesianProductGenerator7	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator7(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator7
CartesianProductGenerator7	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator7$/;"	c	namespace:testing::internal
CartesianProductGenerator8	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator8(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator8
CartesianProductGenerator8	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator8$/;"	c	namespace:testing::internal
CartesianProductGenerator9	ceres-solver/internal/ceres/gtest/gtest.h	/^  CartesianProductGenerator9(const ParamGenerator<T1>& g1,$/;"	f	class:testing::internal::CartesianProductGenerator9
CartesianProductGenerator9	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductGenerator9$/;"	c	namespace:testing::internal
CartesianProductHolder10	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder10(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder10
CartesianProductHolder10	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder10 {$/;"	c	namespace:testing::internal
CartesianProductHolder2	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder2(const Generator1& g1, const Generator2& g2)$/;"	f	class:testing::internal::CartesianProductHolder2
CartesianProductHolder2	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder2 {$/;"	c	namespace:testing::internal
CartesianProductHolder3	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder3(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder3
CartesianProductHolder3	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder3 {$/;"	c	namespace:testing::internal
CartesianProductHolder4	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder4(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder4
CartesianProductHolder4	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder4 {$/;"	c	namespace:testing::internal
CartesianProductHolder5	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder5(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder5
CartesianProductHolder5	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder5 {$/;"	c	namespace:testing::internal
CartesianProductHolder6	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder6(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder6
CartesianProductHolder6	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder6 {$/;"	c	namespace:testing::internal
CartesianProductHolder7	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder7(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder7
CartesianProductHolder7	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder7 {$/;"	c	namespace:testing::internal
CartesianProductHolder8	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder8(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder8
CartesianProductHolder8	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder8 {$/;"	c	namespace:testing::internal
CartesianProductHolder9	ceres-solver/internal/ceres/gtest/gtest.h	/^CartesianProductHolder9(const Generator1& g1, const Generator2& g2,$/;"	f	class:testing::internal::CartesianProductHolder9
CartesianProductHolder9	ceres-solver/internal/ceres/gtest/gtest.h	/^class CartesianProductHolder9 {$/;"	c	namespace:testing::internal
CaseInsensitiveCStringEquals	ceres-solver/internal/ceres/gmock/gmock.h	/^inline bool CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {$/;"	f	namespace:testing::internal
CaseInsensitiveCStringEquals	ceres-solver/internal/ceres/gmock/gmock.h	/^inline bool CaseInsensitiveCStringEquals(const wchar_t* lhs,$/;"	f	namespace:testing::internal
CaseInsensitiveCStringEquals	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {$/;"	f	class:testing::internal::String
CaseInsensitiveStringEquals	ceres-solver/internal/ceres/gmock/gmock.h	/^bool CaseInsensitiveStringEquals(const StringType& s1,$/;"	f	namespace:testing::internal
CaseInsensitiveWideCStringEquals	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,$/;"	f	class:testing::internal::String
Cast	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Matcher<T> Cast(const M& polymorphic_matcher_or_value) {$/;"	f	class:testing::internal::MatcherCastImpl
Cast	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Matcher<T> Cast(const Matcher<T>& matcher) { return matcher; }$/;"	f	class:testing::internal::MatcherCastImpl
Cast	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Matcher<T> Cast(const Matcher<U>& source_matcher) {$/;"	f	class:testing::internal::MatcherCastImpl
Cast	ceres-solver/internal/ceres/gmock/gmock.h	/^  static inline Matcher<T> Cast(const M& polymorphic_matcher_or_value) {$/;"	f	class:testing::SafeMatcherCastImpl
Cast	ceres-solver/internal/ceres/gmock/gmock.h	/^  static inline Matcher<T> Cast(const Matcher<U>& matcher) {$/;"	f	class:testing::SafeMatcherCastImpl
CastAndAppendTransform	ceres-solver/internal/ceres/gmock/gmock.h	/^struct CastAndAppendTransform {$/;"	s	namespace:testing::internal
CastImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Matcher<T> CastImpl(const M& polymorphic_matcher_or_value,$/;"	f	class:testing::internal::MatcherCastImpl
CastImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Matcher<T> CastImpl(const M& value, BooleanConstant<false>) {$/;"	f	class:testing::internal::MatcherCastImpl
CastRay	cartographer/cartographer/mapping/internal/2d/ray_casting.cc	/^void CastRay(const Eigen::Array2i& begin, const Eigen::Array2i& end,$/;"	f	namespace:cartographer::mapping::__anon74
CastRays	cartographer/cartographer/mapping/internal/2d/ray_casting.cc	/^void CastRays(const sensor::RangeData& range_data,$/;"	f	namespace:cartographer::mapping
CauchyLoss	ceres-solver/include/ceres/loss_function.h	/^  explicit CauchyLoss(double a) : b_(a * a), c_(1 \/ b_) { }$/;"	f	class:ceres::CauchyLoss
CauchyLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT CauchyLoss : public LossFunction {$/;"	c	namespace:ceres
Cell	ceres-solver/internal/ceres/block_structure.h	/^  Cell() : block_id(-1), position(-1) {}$/;"	f	struct:ceres::internal::Cell
Cell	ceres-solver/internal/ceres/block_structure.h	/^  Cell(int block_id_, int position_)$/;"	f	struct:ceres::internal::Cell
Cell	ceres-solver/internal/ceres/block_structure.h	/^struct Cell {$/;"	s	namespace:ceres::internal
CellIndexAtHalfResolution	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^Eigen::Array3i CellIndexAtHalfResolution(const Eigen::Array3i& cell_index) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon102
CellInfo	ceres-solver/internal/ceres/block_random_access_matrix.h	/^  CellInfo()$/;"	f	struct:ceres::internal::CellInfo
CellInfo	ceres-solver/internal/ceres/block_random_access_matrix.h	/^  explicit CellInfo(double* ptr)$/;"	f	struct:ceres::internal::CellInfo
CellInfo	ceres-solver/internal/ceres/block_random_access_matrix.h	/^struct CellInfo {$/;"	s	namespace:ceres::internal
CellLessThan	ceres-solver/internal/ceres/block_structure.cc	/^bool CellLessThan(const Cell& lhs, const Cell& rhs) {$/;"	f	namespace:ceres::internal
CellLimits	cartographer/cartographer/mapping/2d/xy_index.h	/^  CellLimits(int init_num_x_cells, int init_num_y_cells)$/;"	f	struct:cartographer::mapping::CellLimits
CellLimits	cartographer/cartographer/mapping/2d/xy_index.h	/^  explicit CellLimits(const proto::CellLimits& cell_limits)$/;"	f	struct:cartographer::mapping::CellLimits
CellLimits	cartographer/cartographer/mapping/2d/xy_index.h	/^struct CellLimits {$/;"	s	namespace:cartographer::mapping
CenterOfLowerVoxel	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^  Eigen::Vector3f CenterOfLowerVoxel(const T& jet_x, const T& jet_y,$/;"	f	class:cartographer::mapping::scan_matching::InterpolatedGrid
CenterOfLowerVoxel	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^  Eigen::Vector3f CenterOfLowerVoxel(const double x, const double y,$/;"	f	class:cartographer::mapping::scan_matching::InterpolatedGrid
CeresMutexLock	ceres-solver/internal/ceres/mutex.h	/^  explicit CeresMutexLock(Mutex *mu) : mu_(mu) { mu_->Lock(); }$/;"	f	class:ceres::internal::CeresMutexLock
CeresMutexLock	ceres-solver/internal/ceres/mutex.h	/^class CeresMutexLock {$/;"	c	namespace:ceres::internal
CeresMutexLock	ceres-solver/internal/ceres/mutex.h	319;"	d
CeresPose	cartographer/cartographer/mapping/internal/optimization/ceres_pose.cc	/^CeresPose::CeresPose($/;"	f	class:cartographer::mapping::optimization::CeresPose
CeresPose	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^class CeresPose {$/;"	c	namespace:cartographer::mapping::optimization
CeresReaderMutexLock	ceres-solver/internal/ceres/mutex.h	/^  explicit CeresReaderMutexLock(Mutex *mu) : mu_(mu) { mu_->ReaderLock(); }$/;"	f	class:ceres::internal::CeresReaderMutexLock
CeresReaderMutexLock	ceres-solver/internal/ceres/mutex.h	/^class CeresReaderMutexLock {$/;"	c	namespace:ceres::internal
CeresReaderMutexLock	ceres-solver/internal/ceres/mutex.h	321;"	d
CeresScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^CeresScanMatcher2D::CeresScanMatcher2D($/;"	f	class:cartographer::mapping::scan_matching::CeresScanMatcher2D
CeresScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	/^class CeresScanMatcher2D {$/;"	c	namespace:cartographer::mapping::scan_matching
CeresScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.cc	/^CeresScanMatcher3D::CeresScanMatcher3D($/;"	f	class:cartographer::mapping::scan_matching::CeresScanMatcher3D
CeresScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	/^class CeresScanMatcher3D {$/;"	c	namespace:cartographer::mapping::scan_matching
CeresScanMatcher3DTest	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  CeresScanMatcher3DTest()$/;"	f	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest
CeresScanMatcher3DTest	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^class CeresScanMatcher3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon94	file:
CeresScanMatcherTest	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^  CeresScanMatcherTest()$/;"	f	class:cartographer::mapping::scan_matching::__anon81::CeresScanMatcherTest
CeresScanMatcherTest	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^class CeresScanMatcherTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon81	file:
CeresWriterMutexLock	ceres-solver/internal/ceres/mutex.h	/^  explicit CeresWriterMutexLock(Mutex *mu) : mu_(mu) { mu_->WriterLock(); }$/;"	f	class:ceres::internal::CeresWriterMutexLock
CeresWriterMutexLock	ceres-solver/internal/ceres/mutex.h	/^class CeresWriterMutexLock {$/;"	c	namespace:ceres::internal
CeresWriterMutexLock	ceres-solver/internal/ceres/mutex.h	323;"	d
CgnrLinearOperator	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  CgnrLinearOperator(const LinearOperator& A, const double *D)$/;"	f	class:ceres::internal::CgnrLinearOperator
CgnrLinearOperator	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^class CgnrLinearOperator : public LinearOperator {$/;"	c	namespace:ceres::internal
CgnrSolver	ceres-solver/internal/ceres/cgnr_solver.cc	/^CgnrSolver::CgnrSolver(const LinearSolver::Options& options)$/;"	f	class:ceres::internal::CgnrSolver
CgnrSolver	ceres-solver/internal/ceres/cgnr_solver.h	/^class CgnrSolver : public BlockSparseMatrixSolver {$/;"	c	namespace:ceres::internal
ChDir	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int ChDir(const char* dir) { return chdir(dir); }$/;"	f	namespace:std::tr1::posix
ChangeNumThreadsIfNeeded	ceres-solver/internal/ceres/preprocessor.cc	/^void ChangeNumThreadsIfNeeded(Solver::Options* options) {$/;"	f	namespace:ceres::internal
CharFormat	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum CharFormat {$/;"	g	namespace:testing::internal	file:
CheckAllEvaluationCombinations	ceres-solver/internal/ceres/evaluator_test.cc	/^  void CheckAllEvaluationCombinations(const ExpectedEvaluation &expected) {$/;"	f	struct:ceres::internal::EvaluatorTest
CheckAllEvaluationCombinations	ceres-solver/internal/ceres/problem_test.cc	/^  void CheckAllEvaluationCombinations(const Problem::EvaluateOptions& options,$/;"	f	class:ceres::internal::ProblemEvaluateTest
CheckAllKeysWereUsedExactlyOnceAndReset	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void LuaParameterDictionary::CheckAllKeysWereUsedExactlyOnceAndReset() {$/;"	f	class:cartographer::common::LuaParameterDictionary
CheckDimensions	ceres-solver/internal/ceres/gradient_checker_test.cc	/^void CheckDimensions(const GradientChecker::ProbeResults& results,$/;"	f	namespace:ceres::internal
CheckEvaluation	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^void CheckEvaluation(const CostFunction& cost_function, bool is_good) {$/;"	f	namespace:ceres::internal
CheckForDuplicates	ceres-solver/internal/ceres/covariance_impl.cc	/^template <typename T> void CheckForDuplicates(vector<T> blocks) {$/;"	f	namespace:ceres::internal
CheckForLuaErrors	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void CheckForLuaErrors(lua_State* L, int status) {$/;"	f	namespace:cartographer::common::__anon9
CheckForNoAliasing	ceres-solver/internal/ceres/problem_impl.cc	/^void CheckForNoAliasing(double* existing_block,$/;"	f	namespace:ceres::internal::__anon159
CheckHasKey	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void LuaParameterDictionary::CheckHasKey(const std::string& key) const {$/;"	f	class:cartographer::common::LuaParameterDictionary
CheckHasKeyAndReference	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void LuaParameterDictionary::CheckHasKeyAndReference(const std::string& key) {$/;"	f	class:cartographer::common::LuaParameterDictionary
CheckImuMessage	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^void CheckImuMessage(const sensor_msgs::Imu& imu_message) {$/;"	f	namespace:cartographer_ros::__anon128
CheckIntPairToLong	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^  void CheckIntPairToLong(int a, int b) {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrixTest
CheckIsEmpty	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^  void CheckIsEmpty() const { CHECK_EQ(non_ascending_maxima_.size(), 0); }$/;"	f	class:cartographer::mapping::scan_matching::__anon78::SlidingWindowMaximum
CheckIsValid	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void CheckIsValid(Functor \/* functor *\/) {}$/;"	f	struct:testing::internal::CallableTraits
CheckIsValid	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void CheckIsValid(ResType(*f)(ArgType)) {$/;"	f	struct:testing::internal::CallableTraits
CheckLongToIntPair	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^  void CheckLongToIntPair() {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrixTest
CheckMessage	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  void CheckMessage(const MessageType& message) {$/;"	f	class:cartographer_ros::__anon128::RangeDataChecker
CheckNoLeadingSlash	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^const std::string& CheckNoLeadingSlash(const std::string& frame_id) {$/;"	f	namespace:cartographer_ros::__anon129
CheckNotNull	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^T& CheckNotNull(const char *file, int line, const char *names, T& t) {$/;"	f
CheckNotNull	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^T* CheckNotNull(const char *file, int line, const char *names, T* t) {$/;"	f
CheckNotNullCommon	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^T& CheckNotNullCommon(const char *file, int line, const char *names, T& t) {$/;"	f
CheckOdometryMessage	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^void CheckOdometryMessage(const nav_msgs::Odometry& message) {$/;"	f	namespace:cartographer_ros::__anon128
CheckRotationMatrixToAngleAxisRoundTrip	ceres-solver/internal/ceres/rotation_test.cc	/^void CheckRotationMatrixToAngleAxisRoundTrip(const double theta,$/;"	f	namespace:ceres::internal
CheckStrideIsAsExpected	cartographer/cartographer/io/image.cc	/^void CheckStrideIsAsExpected(int width) {$/;"	f	namespace:cartographer::io::__anon23
CheckTableIsAtTopOfStack	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void CheckTableIsAtTopOfStack(lua_State* L) {$/;"	f	namespace:cartographer::common::__anon9
CheckTfMessage	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^void CheckTfMessage(const tf2_msgs::TFMessage& message) {$/;"	f	namespace:cartographer_ros::__anon128
CheckTrajectoryOptions	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.cc	/^void CheckTrajectoryOptions(const TrajectoryOptions& options) {$/;"	f	namespace:cartographer_ros::__anon141
CheckedDowncastToActualType	ceres-solver/internal/ceres/gtest/gtest.h	/^Derived* CheckedDowncastToActualType(Base* base) {$/;"	f	namespace:std::tr1
Cholesky	ceres-solver/internal/ceres/cxsparse.cc	/^csn* CXSparse::Cholesky(cs_di* A, cs_dis* symbolic_factor) {$/;"	f	class:ceres::internal::CXSparse
Cholesky	ceres-solver/internal/ceres/suitesparse.cc	/^LinearSolverTerminationType SuiteSparse::Cholesky(cholmod_sparse* A,$/;"	f	class:ceres::internal::SuiteSparse
ChopLowBits	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline UInt32 ChopLowBits(UInt32* bits, int n) {$/;"	f	namespace:testing::internal
Chunk	ceres-solver/internal/ceres/schur_eliminator.h	/^    Chunk() : size(0) {}$/;"	f	struct:ceres::internal::SchurEliminator::Chunk
Chunk	ceres-solver/internal/ceres/schur_eliminator.h	/^  struct Chunk {$/;"	s	class:ceres::internal::SchurEliminator
ChunkDiagonalBlockAndGradient	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^ChunkDiagonalBlockAndGradient($/;"	f	class:ceres::internal::SchurEliminator
ChunkOuterProduct	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^ChunkOuterProduct(const CompressedRowBlockStructure* bs,$/;"	f	class:ceres::internal::SchurEliminator
Clamp	cartographer/cartographer/common/math.h	/^T Clamp(const T value, const T min, const T max) {$/;"	f	namespace:cartographer::common
ClampCorrespondenceCost	cartographer/cartographer/mapping/probability_values.h	/^inline float ClampCorrespondenceCost(const float correspondence_cost) {$/;"	f	namespace:cartographer::mapping
ClampProbability	cartographer/cartographer/mapping/probability_values.h	/^inline float ClampProbability(const float probability) {$/;"	f	namespace:cartographer::mapping
ClassUniqueToAlwaysTrue	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class ClassUniqueToAlwaysTrue {};$/;"	c	namespace:testing::internal::__anon171	file:
Clause	ceres-solver/internal/ceres/gmock/gmock.h	/^  enum Clause {$/;"	g	class:testing::internal::ExpectationBase
Clause	ceres-solver/internal/ceres/gmock/gmock.h	/^  enum Clause {$/;"	g	class:testing::internal::UntypedOnCallSpecBase
Clear	ceres-solver/include/ceres/ordered_groups.h	/^  void Clear() {$/;"	f	class:ceres::OrderedGroups
Clear	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void Clear() {$/;"	f	class:testing::DefaultValue
Clear	ceres-solver/internal/ceres/gmock/gmock.h	/^  void Clear() { ss_.str(""); }$/;"	f	class:testing::StringMatchResultListener
Clear	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestResult::Clear() {$/;"	f	class:testing::TestResult
ClearAdHocTestResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void ClearAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearNonAdHocTestResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void ClearNonAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl
ClearResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestCase::ClearResult() {$/;"	f	class:testing::TestCase
ClearRows	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc	/^void DynamicCompressedRowSparseMatrix::ClearRows(int row_start,$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrix
ClearTestCaseResult	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void ClearTestCaseResult(TestCase* test_case) {$/;"	f	class:testing::TestCase
ClearTestPartResults	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static void ClearTestPartResults(TestResult* test_result) {$/;"	f	class:testing::internal::TestResultAccessor
ClearTestPartResults	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestResult::ClearTestPartResults() {$/;"	f	class:testing::TestResult
ClearTestResult	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void ClearTestResult(TestInfo* test_info) {$/;"	f	class:testing::TestInfo
ClientServerTest	cartographer/cartographer/cloud/internal/client_server_test.cc	/^class ClientServerTest : public ::testing::Test {$/;"	c	namespace:cartographer::cloud::__anon48	file:
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<ParamType>* Clone() const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Clone	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ParamIteratorInterface<T>* Clone() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Close	cartographer/cartographer/io/fake_file_writer.cc	/^bool FakeFileWriter::Close() {$/;"	f	class:cartographer::io::FakeFileWriter
Close	cartographer/cartographer/io/file_writer.cc	/^bool StreamFileWriter::Close() {$/;"	f	class:cartographer::io::StreamFileWriter
Close	cartographer/cartographer/io/internal/in_memory_proto_stream.cc	/^bool ForwardingProtoStreamWriter::Close() { return writer_callback_(nullptr); }$/;"	f	class:cartographer::io::ForwardingProtoStreamWriter
Close	cartographer/cartographer/io/proto_stream.cc	/^bool ProtoStreamWriter::Close() {$/;"	f	class:cartographer::io::ProtoStreamWriter
Close	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int Close(int fd) { return close(fd); }$/;"	f	namespace:std::tr1::posix
CloseConnection	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    virtual void CloseConnection() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
CloseConnection	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    void CloseConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	file:
ClusterCameras	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ClusterCameras($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
CmpHelperEQ	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult CmpHelperEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperEQ	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult CmpHelperEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperEQFailure	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult CmpHelperEQFailure(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperFloatingPointEQ	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult CmpHelperFloatingPointEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperOpFailure	ceres-solver/internal/ceres/gtest/gtest.h	/^AssertionResult CmpHelperOpFailure(const char* expr1, const char* expr2,$/;"	f	namespace:testing::internal
CmpHelperSTRCASEEQ	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult CmpHelperSTRCASEEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRCASENE	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult CmpHelperSTRCASENE(const char* s1_expression,$/;"	f	namespace:testing::internal
CmpHelperSTREQ	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult CmpHelperSTREQ(const char* lhs_expression,$/;"	f	namespace:testing::internal
CmpHelperSTRNE	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult CmpHelperSTRNE(const char* s1_expression,$/;"	f	namespace:testing::internal
CodeLocation	ceres-solver/internal/ceres/gtest/gtest.h	/^  CodeLocation(const string& a_file, int a_line) : file(a_file), line(a_line) {}$/;"	f	struct:testing::internal::CodeLocation
CodeLocation	ceres-solver/internal/ceres/gtest/gtest.h	/^struct CodeLocation {$/;"	s	namespace:testing::internal
CodePointToUtf8	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string CodePointToUtf8(UInt32 code_point) {$/;"	f	namespace:testing::internal
ColMajorMatrix	ceres-solver/include/ceres/internal/eigen.h	/^                      Eigen::ColMajor> ColMajorMatrix;$/;"	t	namespace:ceres
ColMajorMatrixRef	ceres-solver/include/ceres/internal/eigen.h	/^                   Eigen::Stride<Eigen::Dynamic, 1> > ColMajorMatrixRef;$/;"	t	namespace:ceres
CollatedTrajectoryBuilder	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^CollatedTrajectoryBuilder::CollatedTrajectoryBuilder($/;"	f	class:cartographer::mapping::CollatedTrajectoryBuilder
CollatedTrajectoryBuilder	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^class CollatedTrajectoryBuilder : public TrajectoryBuilderInterface {$/;"	c	namespace:cartographer::mapping
Collator	cartographer/cartographer/sensor/internal/collator.h	/^  Collator() {}$/;"	f	class:cartographer::sensor::Collator
Collator	cartographer/cartographer/sensor/internal/collator.h	/^class Collator : public CollatorInterface {$/;"	c	namespace:cartographer::sensor
CollatorInput	cartographer/cartographer/sensor/internal/test_helpers.h	/^struct CollatorInput {$/;"	s	namespace:cartographer::sensor::test
CollatorInterface	cartographer/cartographer/sensor/collator_interface.h	/^  CollatorInterface() {}$/;"	f	class:cartographer::sensor::CollatorInterface
CollatorInterface	cartographer/cartographer/sensor/collator_interface.h	/^class CollatorInterface {$/;"	c	namespace:cartographer::sensor
CollatorOutput	cartographer/cartographer/sensor/internal/test_helpers.h	/^    CollatorOutput;$/;"	t	namespace:cartographer::sensor::test
CollideWithBox	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  Eigen::Vector3f CollideWithBox(const Eigen::Vector3f& from,$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
CollideWithBubbles	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  Eigen::Vector3f CollideWithBubbles(const Eigen::Vector3f& from,$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
ColoredPrintf	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ColoredPrintf(GTestColor color, const char* fmt, ...) {$/;"	f	namespace:testing::internal
ColoringPointsProcessor	cartographer/cartographer/io/coloring_points_processor.cc	/^ColoringPointsProcessor::ColoringPointsProcessor(const FloatColor& color,$/;"	f	class:cartographer::io::ColoringPointsProcessor
ColoringPointsProcessor	cartographer/cartographer/io/coloring_points_processor.h	/^class ColoringPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
ColumnData	cartographer/cartographer/io/xray_points_processor.h	/^  struct ColumnData {$/;"	s	class:cartographer::io::XRayPointsProcessor
ColumnMajorAdapter3x3	ceres-solver/include/ceres/rotation.h	/^MatrixAdapter<T, 1, 3> ColumnMajorAdapter3x3(T* pointer) {$/;"	f	namespace:ceres
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator10> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator4, Generator5, Generator6, Generator7, Generator8> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator4, Generator5, Generator6, Generator7> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator4, Generator5, Generator6> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator4, Generator5> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator4> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^    Generator9> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::CartesianProductHolder2<Generator1, Generator2> Combine($/;"	f	namespace:testing
Combine	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine($/;"	f	namespace:testing
CommonOptionsAreValid	ceres-solver/internal/ceres/solver.cc	/^bool CommonOptionsAreValid(const Solver::Options& options, string* error) {$/;"	f	namespace:ceres::__anon190
Compare	ceres-solver/internal/ceres/gtest/gtest.h	/^  static AssertionResult Compare($/;"	f	class:testing::internal::EqHelper
Compare	ceres-solver/internal/ceres/gtest/gtest.h	/^  static AssertionResult Compare(const char* lhs_expression,$/;"	f	class:testing::internal::EqHelper
CompareEulerToAngleAxis	ceres-solver/internal/ceres/rotation_test.cc	/^static void CompareEulerToAngleAxis(double aa[3], double ea[3]) {$/;"	f	namespace:ceres::internal
CompareEvaluations	ceres-solver/internal/ceres/evaluator_test_utils.cc	/^void CompareEvaluations(int expected_num_rows,$/;"	f	namespace:ceres::internal
CompareMatrices	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^void CompareMatrices(const SparseMatrix* a, const SparseMatrix* b) {$/;"	f	namespace:ceres::internal
CompareMatrices	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^void CompareMatrices(const SparseMatrix* a, const SparseMatrix* b) {$/;"	f	namespace:ceres::internal
ComparisonBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ComparisonBase(const Rhs& rhs) : rhs_(rhs) {}$/;"	f	class:testing::internal::ComparisonBase
ComparisonBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class ComparisonBase {$/;"	c	namespace:testing::internal
CompileAssertTypesEqual	ceres-solver/internal/ceres/gtest/gtest.h	/^struct CompileAssertTypesEqual<T, T> {$/;"	s	namespace:testing::internal
Components	cartographer/cartographer/mapping/internal/connected_components.cc	/^std::vector<std::vector<int>> ConnectedComponents::Components() {$/;"	f	class:cartographer::mapping::ConnectedComponents
Components	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^std::vector<std::vector<int>> TrajectoryConnectivityState::Components() const {$/;"	f	class:cartographer::mapping::TrajectoryConnectivityState
ComposedLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT ComposedLoss : public LossFunction {$/;"	c	namespace:ceres
ComposedLoss	ceres-solver/internal/ceres/loss_function.cc	/^ComposedLoss::ComposedLoss(const LossFunction* f, Ownership ownership_f,$/;"	f	class:ceres::ComposedLoss
CompressedColumn	ceres-solver/internal/ceres/block_structure.h	/^typedef CompressedList CompressedColumn;$/;"	t	namespace:ceres::internal
CompressedColumnBlockStructure	ceres-solver/internal/ceres/block_structure.h	/^struct CompressedColumnBlockStructure {$/;"	s	namespace:ceres::internal
CompressedColumnScalarMatrixToBlockMatrix	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.cc	/^void CompressedColumnScalarMatrixToBlockMatrix($/;"	f	namespace:ceres::internal
CompressedList	ceres-solver/internal/ceres/block_structure.h	/^  CompressedList() {}$/;"	f	struct:ceres::internal::CompressedList
CompressedList	ceres-solver/internal/ceres/block_structure.h	/^  CompressedList(int num_cells) : cells(num_cells) {}$/;"	f	struct:ceres::internal::CompressedList
CompressedList	ceres-solver/internal/ceres/block_structure.h	/^struct CompressedList {$/;"	s	namespace:ceres::internal
CompressedPointCloud	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^CompressedPointCloud::CompressedPointCloud($/;"	f	class:cartographer::sensor::CompressedPointCloud
CompressedPointCloud	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^CompressedPointCloud::CompressedPointCloud(const PointCloud& point_cloud)$/;"	f	class:cartographer::sensor::CompressedPointCloud
CompressedPointCloud	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  CompressedPointCloud() : num_points_(0) {}$/;"	f	class:cartographer::sensor::CompressedPointCloud
CompressedPointCloud	cartographer/cartographer/sensor/compressed_point_cloud.h	/^class CompressedPointCloud {$/;"	c	namespace:cartographer::sensor
CompressedRow	ceres-solver/internal/ceres/block_structure.h	/^typedef CompressedList CompressedRow;$/;"	t	namespace:ceres::internal
CompressedRowBlockStructure	ceres-solver/internal/ceres/block_structure.h	/^struct CompressedRowBlockStructure {$/;"	s	namespace:ceres::internal
CompressedRowJacobianWriter	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	/^  CompressedRowJacobianWriter(Evaluator::Options \/* ignored *\/,$/;"	f	class:ceres::internal::CompressedRowJacobianWriter
CompressedRowJacobianWriter	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	/^class CompressedRowJacobianWriter {$/;"	c	namespace:ceres::internal
CompressedRowSparseMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix::CompressedRowSparseMatrix(const double* diagonal,$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
CompressedRowSparseMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix::CompressedRowSparseMatrix(int num_rows,$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
CompressedRowSparseMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^class CompressedRowSparseMatrix : public SparseMatrix {$/;"	c	namespace:ceres::internal
CompressedRowSparseMatrixPreconditioner	ceres-solver/internal/ceres/preconditioner.h	/^typedef TypedPreconditioner<CompressedRowSparseMatrix> CompressedRowSparseMatrixPreconditioner;  \/\/ NOLINT$/;"	t	namespace:ceres::internal
CompressedRowSparseMatrixSolver	ceres-solver/internal/ceres/linear_solver.h	/^typedef TypedLinearSolver<CompressedRowSparseMatrix> CompressedRowSparseMatrixSolver;  \/\/ NOLINT$/;"	t	namespace:ceres::internal
CompressedRowSparseMatrixTest	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^class CompressedRowSparseMatrixTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Compute	ceres-solver/internal/ceres/covariance.cc	/^bool Covariance::Compute($/;"	f	class:ceres::Covariance
Compute	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::Compute(const CovarianceBlocks& covariance_blocks,$/;"	f	class:ceres::internal::CovarianceImpl
Compute	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::Compute(const vector<const double*>& parameter_blocks,$/;"	f	class:ceres::internal::CovarianceImpl
Compute	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ElementMatcherPairs Compute() {$/;"	f	class:testing::internal::MaxBipartiteMatchState
Compute	ceres-solver/internal/ceres/inner_product_computer.cc	/^void InnerProductComputer::Compute() {$/;"	f	class:ceres::internal::InnerProductComputer
ComputeAndCompare	ceres-solver/internal/ceres/covariance_test.cc	/^  void ComputeAndCompare($/;"	f	class:ceres::internal::LargeScaleCovarianceTest
ComputeAndCompareCovarianceBlocks	ceres-solver/internal/ceres/covariance_test.cc	/^  void ComputeAndCompareCovarianceBlocks(const Covariance::Options& options,$/;"	f	class:ceres::internal::CovarianceTest
ComputeAndCompareCovarianceBlocksInTangentOrAmbientSpace	ceres-solver/internal/ceres/covariance_test.cc	/^  void ComputeAndCompareCovarianceBlocksInTangentOrAmbientSpace($/;"	f	class:ceres::internal::CovarianceTest
ComputeAndCompareCovarianceBlocksInTangentSpace	ceres-solver/internal/ceres/covariance_test.cc	/^  void ComputeAndCompareCovarianceBlocksInTangentSpace($/;"	f	class:ceres::internal::CovarianceTest
ComputeAndCompareSolutions	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  void ComputeAndCompareSolutions($/;"	f	class:ceres::internal::SchurComplementSolverTest
ComputeAndValidateOrdering	ceres-solver/internal/ceres/reorder_program_test.cc	/^  void ComputeAndValidateOrdering($/;"	f	class:ceres::internal::ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest
ComputeBlockPairsInPreconditioner	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ComputeBlockPairsInPreconditioner($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
ComputeCandidatePointAndEvaluateCost	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^void TrustRegionMinimizer::ComputeCandidatePointAndEvaluateCost() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
ComputeCanonicalViewsClustering	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^void ComputeCanonicalViewsClustering($/;"	f	namespace:ceres::internal
ComputeCauchyPoint	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::ComputeCauchyPoint(SparseMatrix* jacobian) {$/;"	f	class:ceres::internal::DoglegStrategy
ComputeCellValue	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^uint8 PrecomputationGrid2D::ComputeCellValue(const float probability) const {$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
ComputeCentroid	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^Eigen::Vector3f ComputeCentroid(const sensor::PointCloud& slice) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon98
ComputeClusterJacobiSparsity	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ComputeClusterJacobiSparsity($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
ComputeClusterMembership	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^void CanonicalViewsClustering::ComputeClusterMembership($/;"	f	class:ceres::internal::CanonicalViewsClustering
ComputeClusterTridiagonalSparsity	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ComputeClusterTridiagonalSparsity($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
ComputeClusterVisibility	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ComputeClusterVisibility($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
ComputeClustering	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^void CanonicalViewsClustering::ComputeClustering($/;"	f	class:ceres::internal::CanonicalViewsClustering
ComputeClustering	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^  void ComputeClustering() {$/;"	f	class:ceres::internal::CanonicalViewsTest
ComputeClusteringQualityDifference	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^double CanonicalViewsClustering::ComputeClusteringQualityDifference($/;"	f	class:ceres::internal::CanonicalViewsClustering
ComputeConstraint	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::ComputeConstraint(const NodeId& node_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
ComputeConstraint	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::ComputeConstraint(const NodeId& node_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
ComputeConstraint	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::ComputeConstraint($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
ComputeConstraint	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::ComputeConstraint($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
ComputeConstraintsForNode	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::ComputeConstraintsForNode($/;"	f	class:cartographer::mapping::PoseGraph2D
ComputeConstraintsForNode	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::ComputeConstraintsForNode($/;"	f	class:cartographer::mapping::PoseGraph3D
ComputeConstraintsForOldNodes	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::ComputeConstraintsForOldNodes(const SubmapId& submap_id) {$/;"	f	class:cartographer::mapping::PoseGraph2D
ComputeConstraintsForOldNodes	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::ComputeConstraintsForOldNodes(const SubmapId& submap_id) {$/;"	f	class:cartographer::mapping::PoseGraph3D
ComputeCovarianceSparsity	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::ComputeCovarianceSparsity($/;"	f	class:ceres::internal::CovarianceImpl
ComputeCovarianceValues	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::ComputeCovarianceValues() {$/;"	f	class:ceres::internal::CovarianceImpl
ComputeCovarianceValuesUsingDenseSVD	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::ComputeCovarianceValuesUsingDenseSVD() {$/;"	f	class:ceres::internal::CovarianceImpl
ComputeCovarianceValuesUsingEigenSparseQR	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::ComputeCovarianceValuesUsingEigenSparseQR() {$/;"	f	class:ceres::internal::CovarianceImpl
ComputeCovarianceValuesUsingSuiteSparseQR	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::ComputeCovarianceValuesUsingSuiteSparseQR() {$/;"	f	class:ceres::internal::CovarianceImpl
ComputeCoveredDistance	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^std::vector<double> ComputeCoveredDistance($/;"	f	namespace:cartographer::ground_truth::__anon51
ComputeCroppedGrid	cartographer/cartographer/mapping/2d/probability_grid.cc	/^std::unique_ptr<Grid2D> ProbabilityGrid::ComputeCroppedGrid() const {$/;"	f	class:cartographer::mapping::ProbabilityGrid
ComputeCroppedLimits	cartographer/cartographer/mapping/2d/grid_2d.cc	/^void Grid2D::ComputeCroppedLimits(Eigen::Array2i* const offset,$/;"	f	class:cartographer::mapping::Grid2D
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
ComputeCurrentValue	ceres-solver/internal/ceres/gtest/gtest.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
ComputeDefaultSensorIdsForMultipleBags	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^Node::ComputeDefaultSensorIdsForMultipleBags($/;"	f	class:cartographer_ros::Node
ComputeDeltasInSeconds	cartographer/cartographer/common/rate_timer.h	/^  std::vector<double> ComputeDeltasInSeconds() const {$/;"	f	class:cartographer::common::RateTimer
ComputeError	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^Error ComputeError(const transform::Rigid3d& pose1,$/;"	f	namespace:cartographer::ground_truth::__anon49
ComputeExpectedSensorIds	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^Node::ComputeExpectedSensorIds($/;"	f	class:cartographer_ros::Node
ComputeExpectedSolution	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^bool ComputeExpectedSolution(const CompressedRowSparseMatrix& lhs,$/;"	f	namespace:ceres::internal
ComputeGaussNewtonStep	ceres-solver/internal/ceres/dogleg_strategy.cc	/^LinearSolver::Summary DoglegStrategy::ComputeGaussNewtonStep($/;"	f	class:ceres::internal::DoglegStrategy
ComputeGradient	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::ComputeGradient($/;"	f	class:ceres::internal::DoglegStrategy
ComputeHistogram	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^Eigen::VectorXf RotationalScanMatcher::ComputeHistogram($/;"	f	class:cartographer::mapping::scan_matching::RotationalScanMatcher
ComputeHouseholderVector	ceres-solver/internal/ceres/householder_vector.h	/^void ComputeHouseholderVector(const Eigen::Matrix<Scalar, Eigen::Dynamic, 1>& x,$/;"	f	namespace:ceres::internal
ComputeInterpolationDataPoints	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^  void ComputeInterpolationDataPoints(const T& x, const T& y, const T& z,$/;"	f	class:cartographer::mapping::scan_matching::InterpolatedGrid
ComputeJacobian	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  virtual bool ComputeJacobian(const double* x, double* jacobian) const {$/;"	f	class:ceres::AutoDiffLocalParameterization
ComputeJacobian	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual bool ComputeJacobian(const double* x, double* jacobian) const {$/;"	f	class:ceres::internal::PolynomialParameterization
ComputeJacobian	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  virtual bool ComputeJacobian(const double* \/*x*\/, double* jacobian) const {$/;"	f	class:ceres::internal::MatrixParameterization
ComputeJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool EigenQuaternionParameterization::ComputeJacobian(const double* x,$/;"	f	class:ceres::EigenQuaternionParameterization
ComputeJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool HomogeneousVectorParameterization::ComputeJacobian($/;"	f	class:ceres::HomogeneousVectorParameterization
ComputeJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool IdentityParameterization::ComputeJacobian(const double* x,$/;"	f	class:ceres::IdentityParameterization
ComputeJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool ProductParameterization::ComputeJacobian(const double* x,$/;"	f	class:ceres::ProductParameterization
ComputeJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool QuaternionParameterization::ComputeJacobian(const double* x,$/;"	f	class:ceres::QuaternionParameterization
ComputeJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool SubsetParameterization::ComputeJacobian(const double* x,$/;"	f	class:ceres::SubsetParameterization
ComputeJacobian	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual bool ComputeJacobian(const double* x, double* jacobian) const {$/;"	f	class:ceres::internal::BadLocalParameterization
ComputeJacobian	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual bool ComputeJacobian(const double* x,$/;"	f	struct:ceres::internal::TestParameterization
ComputeLocalFrameFromLatLong	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^cartographer::transform::Rigid3d ComputeLocalFrameFromLatLong($/;"	f	namespace:cartographer_ros
ComputeLocalToGlobalTransform	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^transform::Rigid3d PoseGraph2D::ComputeLocalToGlobalTransform($/;"	f	class:cartographer::mapping::PoseGraph2D
ComputeLocalToGlobalTransform	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^transform::Rigid3d PoseGraph3D::ComputeLocalToGlobalTransform($/;"	f	class:cartographer::mapping::PoseGraph3D
ComputeLookupTableToApplyCorrespondenceCostOdds	cartographer/cartographer/mapping/probability_values.cc	/^std::vector<uint16> ComputeLookupTableToApplyCorrespondenceCostOdds($/;"	f	namespace:cartographer::mapping
ComputeLookupTableToApplyOdds	cartographer/cartographer/mapping/probability_values.cc	/^std::vector<uint16> ComputeLookupTableToApplyOdds(const float odds) {$/;"	f	namespace:cartographer::mapping
ComputeLowestResolutionCandidates	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^FastCorrelativeScanMatcher2D::ComputeLowestResolutionCandidates($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
ComputeLowestResolutionCandidates	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::ComputeLowestResolutionCandidates($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
ComputeNonzeros	ceres-solver/internal/ceres/inner_product_computer.cc	/^int InnerProductComputer::ComputeNonzeros($/;"	f	class:ceres::internal::InnerProductComputer
ComputeOffsetsAndCreateResultMatrix	ceres-solver/internal/ceres/inner_product_computer.cc	/^void InnerProductComputer::ComputeOffsetsAndCreateResultMatrix($/;"	f	class:ceres::internal::InnerProductComputer
ComputePixelValues	cartographer/cartographer/mapping/3d/submap_3d.cc	/^std::string ComputePixelValues($/;"	f	namespace:cartographer::mapping::__anon106
ComputeRate	cartographer/cartographer/common/rate_timer.h	/^  double ComputeRate() const {$/;"	f	class:cartographer::common::RateTimer
ComputeRecursiveIndependentSetOrdering	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^void ComputeRecursiveIndependentSetOrdering(const Program& program,$/;"	f	namespace:ceres::internal
ComputeReferenceSolution	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  void ComputeReferenceSolution(const Vector& D) {$/;"	f	class:ceres::internal::SchurEliminatorTest
ComputeRepeatedTopicNames	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.cc	/^std::vector<std::string> ComputeRepeatedTopicNames(const std::string& topic,$/;"	f	namespace:cartographer_ros
ComputeRotationDeltaSquaredCost	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^double ComputeRotationDeltaSquaredCost($/;"	f	namespace:cartographer::mapping::scan_matching::__anon101
ComputeSchurOrdering	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^int ComputeSchurOrdering(const Program& program,$/;"	f	namespace:ceres::internal
ComputeSingleLinkageClustering	ceres-solver/internal/ceres/single_linkage_clustering.cc	/^int ComputeSingleLinkageClustering($/;"	f	namespace:ceres::internal
ComputeStableSchurOrdering	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^int ComputeStableSchurOrdering(const Program& program,$/;"	f	namespace:ceres::internal
ComputeStep	ceres-solver/internal/ceres/dogleg_strategy.cc	/^TrustRegionStrategy::Summary DoglegStrategy::ComputeStep($/;"	f	class:ceres::internal::DoglegStrategy
ComputeStep	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^TrustRegionStrategy::Summary LevenbergMarquardtStrategy::ComputeStep($/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
ComputeSubmapFreshness	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^std::map<SubmapId, common::Time> ComputeSubmapFreshness($/;"	f	namespace:cartographer::mapping::__anon82
ComputeSubmapPose	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^transform::Rigid2d ComputeSubmapPose(const Submap2D& submap) {$/;"	f	namespace:cartographer::mapping::constraints
ComputeSubmapRepresentativeNode	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^std::vector<int> ComputeSubmapRepresentativeNode($/;"	f	namespace:cartographer::ground_truth::__anon51
ComputeSubspaceDoglegStep	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::ComputeSubspaceDoglegStep(double* dogleg) {$/;"	f	class:ceres::internal::DoglegStrategy
ComputeSubspaceModel	ceres-solver/internal/ceres/dogleg_strategy.cc	/^bool DoglegStrategy::ComputeSubspaceModel(SparseMatrix* jacobian) {$/;"	f	class:ceres::internal::DoglegStrategy
ComputeSubspaceStepFromRoot	ceres-solver/internal/ceres/dogleg_strategy.cc	/^DoglegStrategy::Vector2d DoglegStrategy::ComputeSubspaceStepFromRoot($/;"	f	class:ceres::internal::DoglegStrategy
ComputeTraditionalDoglegStep	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::ComputeTraditionalDoglegStep(double* dogleg) {$/;"	f	class:ceres::internal::DoglegStrategy
ComputeTrustRegionStep	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::ComputeTrustRegionStep() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
ComputeUnscaledError	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^static std::array<T, 3> ComputeUnscaledError($/;"	f	namespace:cartographer::mapping::optimization
ComputeUnscaledError	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^static std::array<T, 6> ComputeUnscaledError($/;"	f	namespace:cartographer::mapping::optimization
ComputeVisibility	ceres-solver/internal/ceres/visibility.cc	/^void ComputeVisibility(const CompressedRowBlockStructure& block_structure,$/;"	f	namespace:ceres::internal
ComputeWallTimeRateRatio	cartographer/cartographer/common/rate_timer.h	/^  double ComputeWallTimeRateRatio() const {$/;"	f	class:cartographer::common::RateTimer
ConcatPaths	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::ConcatPaths(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
ConditionedCostFunction	ceres-solver/include/ceres/conditioned_cost_function.h	/^class CERES_EXPORT ConditionedCostFunction : public CostFunction {$/;"	c	namespace:ceres
ConditionedCostFunction	ceres-solver/internal/ceres/conditioned_cost_function.cc	/^ConditionedCostFunction::ConditionedCostFunction($/;"	f	class:ceres::ConditionedCostFunction
ConfigurationFileResolver	cartographer/cartographer/common/configuration_file_resolver.cc	/^ConfigurationFileResolver::ConfigurationFileResolver($/;"	f	class:cartographer::common::ConfigurationFileResolver
ConfigurationFileResolver	cartographer/cartographer/common/configuration_file_resolver.h	/^class ConfigurationFileResolver : public FileResolver {$/;"	c	namespace:cartographer::common
ConfigurationFilesTest	cartographer_ros/cartographer_ros/cartographer_ros/configuration_files_test.cc	/^class ConfigurationFilesTest : public ::testing::TestWithParam<const char*> {};$/;"	c	namespace:cartographer_ros::__anon137	file:
ConfigureStreamingOutput	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::ConfigureStreamingOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConfigureXmlOutput	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::ConfigureXmlOutput() {$/;"	f	class:testing::internal::UnitTestImpl
ConjugateGradientsSolver	ceres-solver/internal/ceres/conjugate_gradients_solver.cc	/^ConjugateGradientsSolver::ConjugateGradientsSolver($/;"	f	class:ceres::internal::ConjugateGradientsSolver
ConjugateGradientsSolver	ceres-solver/internal/ceres/conjugate_gradients_solver.h	/^class ConjugateGradientsSolver : public LinearSolver {$/;"	c	namespace:ceres::internal
Connect	cartographer/cartographer/mapping/internal/connected_components.cc	/^void ConnectedComponents::Connect(const int trajectory_id_a,$/;"	f	class:cartographer::mapping::ConnectedComponents
Connect	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^void TrajectoryConnectivityState::Connect(const int trajectory_id_a,$/;"	f	class:cartographer::mapping::TrajectoryConnectivityState
ConnectedComponents	cartographer/cartographer/mapping/internal/connected_components.cc	/^ConnectedComponents::ConnectedComponents()$/;"	f	class:cartographer::mapping::ConnectedComponents
ConnectedComponents	cartographer/cartographer/mapping/internal/connected_components.h	/^class ConnectedComponents {$/;"	c	namespace:cartographer::mapping
ConnectionCount	cartographer/cartographer/mapping/internal/connected_components.cc	/^int ConnectedComponents::ConnectionCount(const int trajectory_id_a,$/;"	f	class:cartographer::mapping::ConnectedComponents
ConservativeLowerBound	ceres-solver/internal/ceres/gmock/gmock.h	/^  int ConservativeLowerBound() const { return impl_->ConservativeLowerBound(); }$/;"	f	class:testing::Cardinality
ConservativeLowerBound	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual int ConservativeLowerBound() const { return 0; }$/;"	f	class:testing::CardinalityInterface
ConservativeLowerBound	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual int ConservativeLowerBound() const { return min_; }$/;"	f	class:testing::__anon175::BetweenCardinalityImpl
ConservativeUpperBound	ceres-solver/internal/ceres/gmock/gmock.h	/^  int ConservativeUpperBound() const { return impl_->ConservativeUpperBound(); }$/;"	f	class:testing::Cardinality
ConservativeUpperBound	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual int ConservativeUpperBound() const { return INT_MAX; }$/;"	f	class:testing::CardinalityInterface
ConservativeUpperBound	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual int ConservativeUpperBound() const { return max_; }$/;"	f	class:testing::__anon175::BetweenCardinalityImpl
Const	ceres-solver/internal/ceres/gmock/gmock.h	/^inline const T& Const(const T& x) { return x; }$/;"	f	namespace:testing
ConstCharPtr	ceres-solver/internal/ceres/gtest/gtest.h	/^  ConstCharPtr(const char* str) : value(str) {}$/;"	f	struct:testing::internal::ConstCharPtr
ConstCharPtr	ceres-solver/internal/ceres/gtest/gtest.h	/^struct GTEST_API_ ConstCharPtr {$/;"	s	namespace:testing::internal
ConstColMajorMatrixRef	ceres-solver/include/ceres/internal/eigen.h	/^                   Eigen::Stride<Eigen::Dynamic, 1> > ConstColMajorMatrixRef;$/;"	t	namespace:ceres
ConstIterator	cartographer/cartographer/mapping/id.h	/^    explicit ConstIterator(const MapById& map_by_id, const IdType& id)$/;"	f	class:cartographer::mapping::MapById::ConstIterator
ConstIterator	cartographer/cartographer/mapping/id.h	/^    explicit ConstIterator(const MapById& map_by_id, const int trajectory_id)$/;"	f	class:cartographer::mapping::MapById::ConstIterator
ConstIterator	cartographer/cartographer/mapping/id.h	/^  class ConstIterator {$/;"	c	class:cartographer::mapping::MapById
ConstIterator	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^CompressedPointCloud::ConstIterator::ConstIterator($/;"	f	class:cartographer::sensor::CompressedPointCloud::ConstIterator
ConstIterator	cartographer/cartographer/sensor/compressed_point_cloud.h	/^class CompressedPointCloud::ConstIterator {$/;"	c	class:cartographer::sensor::CompressedPointCloud
ConstIterator	cartographer/cartographer/sensor/map_by_time.h	/^    explicit ConstIterator($/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
ConstIterator	cartographer/cartographer/sensor/map_by_time.h	/^  class ConstIterator {$/;"	c	class:cartographer::sensor::MapByTime
ConstMatrixRef	ceres-solver/include/ceres/internal/eigen.h	/^  ConstMatrixRef;$/;"	t	struct:ceres::EigenTypes
ConstMatrixRef	ceres-solver/include/ceres/internal/eigen.h	/^typedef Eigen::Map<const Matrix> ConstMatrixRef;$/;"	t	namespace:ceres
ConstReference	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const_reference ConstReference($/;"	f	class:testing::internal::StlContainerView
ConstReference	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const_reference ConstReference(const RawContainer& container) {$/;"	f	class:testing::internal::StlContainerView
ConstTrajectoryIterator	cartographer/cartographer/mapping/id.h	/^    explicit ConstTrajectoryIterator($/;"	f	class:cartographer::mapping::MapById::ConstTrajectoryIterator
ConstTrajectoryIterator	cartographer/cartographer/mapping/id.h	/^  class ConstTrajectoryIterator {$/;"	c	class:cartographer::mapping::MapById
ConstTrajectoryIterator	cartographer/cartographer/sensor/map_by_time.h	/^    explicit ConstTrajectoryIterator($/;"	f	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
ConstTrajectoryIterator	cartographer/cartographer/sensor/map_by_time.h	/^  class ConstTrajectoryIterator {$/;"	c	class:cartographer::sensor::MapByTime
ConstVectorRef	ceres-solver/examples/bal_problem.cc	/^typedef Eigen::Map<const Eigen::VectorXd> ConstVectorRef;$/;"	t	namespace:ceres::examples::__anon154	file:
ConstVectorRef	ceres-solver/include/ceres/internal/eigen.h	/^  ConstVectorRef;$/;"	t	struct:ceres::EigenTypes
ConstVectorRef	ceres-solver/include/ceres/internal/eigen.h	/^typedef Eigen::Map<const Vector> ConstVectorRef;$/;"	t	namespace:ceres
ConstantPolynomial	ceres-solver/internal/ceres/polynomial_test.cc	/^Vector ConstantPolynomial(double value) {$/;"	f	namespace:ceres::internal::__anon163
ConstantPoseData	cartographer/cartographer/mapping/trajectory_node.h	/^  struct ConstantPoseData {$/;"	s	struct:cartographer::mapping::TrajectoryNodePose
ConstantYawQuaternionPlus	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	/^struct ConstantYawQuaternionPlus {$/;"	s	namespace:cartographer::mapping
ConstrainedApproximateMinimumDegreeOrdering	ceres-solver/internal/ceres/suitesparse.cc	/^bool SuiteSparse::ConstrainedApproximateMinimumDegreeOrdering($/;"	f	class:ceres::internal::SuiteSparse
Constraint	cartographer/cartographer/mapping/pose_graph_interface.h	/^  struct Constraint {$/;"	s	class:cartographer::mapping::PoseGraphInterface
Constraint2d	ceres-solver/examples/slam/pose_graph_2d/types.h	/^struct Constraint2d {$/;"	s	namespace:ceres::examples
Constraint3d	ceres-solver/examples/slam/pose_graph_3d/types.h	/^struct Constraint3d {$/;"	s	namespace:ceres::examples
ConstraintBuilder2D	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^ConstraintBuilder2D::ConstraintBuilder2D($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
ConstraintBuilder2D	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^class ConstraintBuilder2D {$/;"	c	namespace:cartographer::mapping::constraints
ConstraintBuilder2DTest	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^class ConstraintBuilder2DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::constraints::__anon71	file:
ConstraintBuilder3D	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^ConstraintBuilder3D::ConstraintBuilder3D($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
ConstraintBuilder3D	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^class ConstraintBuilder3D {$/;"	c	namespace:cartographer::mapping::constraints
ConstraintBuilder3DTest	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^class ConstraintBuilder3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::constraints::__anon72	file:
ContainedIn	cartographer/cartographer/io/xray_points_processor.cc	/^bool ContainedIn(const common::Time& time,$/;"	f	namespace:cartographer::io::__anon25
ContainerEq	ceres-solver/internal/ceres/gmock/gmock.h	/^    ContainerEq(const Container& rhs) {$/;"	f	namespace:testing
ContainerEqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ContainerEqMatcher(const Container& expected)$/;"	f	class:testing::internal::ContainerEqMatcher
ContainerEqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class ContainerEqMatcher {$/;"	c	namespace:testing::internal
ContainerType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename ::std::vector<T> ContainerType;$/;"	t	class:testing::internal::ValuesInIteratorRangeGenerator
ContainerView	ceres-solver/internal/ceres/gmock/gmock.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(Container)> ContainerView;$/;"	t	class:testing::internal::SizeIsMatcher::Impl
ContainerView	ceres-solver/internal/ceres/gmock/gmock.h	/^        GTEST_REMOVE_REFERENCE_AND_CONST_(Container)> ContainerView;$/;"	t	class:testing::internal::BeginEndDistanceIsMatcher::Impl
Contains	cartographer/cartographer/mapping/2d/map_limits.h	/^  bool Contains(const Eigen::Array2i& cell_index) const {$/;"	f	class:cartographer::mapping::MapLimits
Contains	cartographer/cartographer/mapping/id.h	/^  bool Contains(const IdType& id) const {$/;"	f	class:cartographer::mapping::MapById
Contains	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::ContainsMatcher<M> Contains(M matcher) {$/;"	f	namespace:testing
ContainsKey	ceres-solver/internal/ceres/map_util.h	/^bool ContainsKey(const Collection& collection, const Key& key) {$/;"	f	namespace:ceres
ContainsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ContainsMatcher(M m) : inner_matcher_(m) {}$/;"	f	class:testing::internal::ContainsMatcher
ContainsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class ContainsMatcher {$/;"	c	namespace:testing::internal
ContainsMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ContainsMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::ContainsMatcherImpl
ContainsMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class ContainsMatcherImpl : public QuantifierMatcherImpl<Container> {$/;"	c	namespace:testing::internal
ContainsRegex	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex($/;"	f	namespace:testing
ConvertIdentifierNameToWords	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ string ConvertIdentifierNameToWords(const char* id_name) {$/;"	f	namespace:testing::internal
ConvertToPrecomputationGrid	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^PrecomputationGrid3D ConvertToPrecomputationGrid($/;"	f	namespace:cartographer::mapping::scan_matching
CoordinateDescentMinimizer	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^class CoordinateDescentMinimizer : public Minimizer {$/;"	c	namespace:ceres::internal
Copy	ceres-solver/internal/ceres/gmock/gmock.h	/^  static type Copy(const ::testing::tuple<ElementPointer, Size>& array) {$/;"	f	class:testing::internal::StlContainerView
Copy	ceres-solver/internal/ceres/gmock/gmock.h	/^  static type Copy(const RawContainer& container) { return container; }$/;"	f	class:testing::internal::StlContainerView
CopyArray	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void CopyArray(const T& from, U* to) { *to = from; }$/;"	f	namespace:testing::internal
CopyArray	ceres-solver/internal/ceres/gtest/gtest.h	/^void CopyArray(const T* from, size_t size, U* to) {$/;"	f	namespace:testing::internal
CopyData	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::CopyData(const TripletSparseMatrix& orig) {$/;"	f	class:ceres::internal::TripletSparseMatrix
CopyElements	ceres-solver/internal/ceres/gmock/gmock.h	/^inline OutputIterator CopyElements(InputIterator first,$/;"	f	namespace:testing::internal
CopyParameterBlockStateToUserState	ceres-solver/internal/ceres/program.cc	/^void Program::CopyParameterBlockStateToUserState() {$/;"	f	class:ceres::internal::Program
CorrectJacobian	ceres-solver/internal/ceres/corrector.cc	/^void Corrector::CorrectJacobian(const int num_rows,$/;"	f	class:ceres::internal::Corrector
CorrectResiduals	ceres-solver/internal/ceres/corrector.cc	/^void Corrector::CorrectResiduals(const int num_rows, double* residuals) {$/;"	f	class:ceres::internal::Corrector
Corrector	ceres-solver/internal/ceres/corrector.cc	/^Corrector::Corrector(const double sq_norm, const double rho[3]) {$/;"	f	class:ceres::internal::Corrector
Corrector	ceres-solver/internal/ceres/corrector.h	/^class Corrector {$/;"	c	namespace:ceres::internal
CorrespondenceCostToProbability	cartographer/cartographer/mapping/probability_values.h	/^inline float CorrespondenceCostToProbability(const float correspondence_cost) {$/;"	f	namespace:cartographer::mapping
CorrespondenceCostToValue	cartographer/cartographer/mapping/probability_values.h	/^inline uint16 CorrespondenceCostToValue(const float correspondence_cost) {$/;"	f	namespace:cartographer::mapping
CorrespondenceCostValueToProbabilityValue	cartographer/cartographer/mapping/probability_values.h	/^inline uint16 CorrespondenceCostValueToProbabilityValue($/;"	f	namespace:cartographer::mapping
Cost	ceres-solver/include/ceres/jet.h	/^      Cost = 3$/;"	e	enum:Eigen::NumTraits::Div::__anon151
CostFunction	ceres-solver/include/ceres/cost_function.h	/^  CostFunction() : num_residuals_(0) {}$/;"	f	class:ceres::CostFunction
CostFunction	ceres-solver/include/ceres/cost_function.h	/^class CERES_EXPORT CostFunction {$/;"	c	namespace:ceres
CostFunctionToFunctor	ceres-solver/include/ceres/cost_function_to_functor.h	/^  explicit CostFunctionToFunctor(CostFunction* cost_function)$/;"	f	class:ceres::CostFunctionToFunctor
CostFunctionToFunctor	ceres-solver/include/ceres/cost_function_to_functor.h	/^class CostFunctionToFunctor {$/;"	c	namespace:ceres
CostFunctor	ceres-solver/examples/helloworld.cc	/^struct CostFunctor {$/;"	s	file:
CostFunctor	ceres-solver/examples/helloworld_numeric_diff.cc	/^struct CostFunctor {$/;"	s	file:
CountIf	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline int CountIf(const Container& c, Predicate predicate) {$/;"	f	namespace:testing::internal
Counter	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  explicit Counter(::prometheus::Counter* prometheus)$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon34::Counter
Counter	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^class Counter : public ::cartographer::metrics::Counter {$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon34	file:
Counter	cartographer/cartographer/metrics/counter.h	/^class Counter {$/;"	c	namespace:cartographer::metrics
CounterClear	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        void CounterClear(){counter = 0;};$/;"	f	class:cartographer::mapping::KidnapDetection
CounterFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  explicit CounterFamily($/;"	f	class:cartographer::cloud::metrics::prometheus::__anon34::CounterFamily
CounterFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^class CounterFamily$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon34	file:
CountingPointsProcessor	cartographer/cartographer/io/counting_points_processor.cc	/^CountingPointsProcessor::CountingPointsProcessor(PointsProcessor* next)$/;"	f	class:cartographer::io::CountingPointsProcessor
CountingPointsProcessor	cartographer/cartographer/io/counting_points_processor.h	/^class CountingPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
Covariance	ceres-solver/include/ceres/covariance.h	/^class CERES_EXPORT Covariance {$/;"	c	namespace:ceres
Covariance	ceres-solver/internal/ceres/covariance.cc	/^Covariance::Covariance(const Covariance::Options& options) {$/;"	f	class:ceres::Covariance
CovarianceAlgorithmType	ceres-solver/include/ceres/types.h	/^enum CovarianceAlgorithmType {$/;"	g	namespace:ceres
CovarianceAlgorithmTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* CovarianceAlgorithmTypeToString($/;"	f	namespace:ceres
CovarianceBlocks	ceres-solver/internal/ceres/covariance_impl.cc	/^typedef vector<pair<const double*, const double*> > CovarianceBlocks;$/;"	t	namespace:ceres::internal	file:
CovarianceImpl	ceres-solver/internal/ceres/covariance_impl.cc	/^CovarianceImpl::CovarianceImpl(const Covariance::Options& options)$/;"	f	class:ceres::internal::CovarianceImpl
CovarianceImpl	ceres-solver/internal/ceres/covariance_impl.h	/^class CovarianceImpl {$/;"	c	namespace:ceres::internal
CovarianceTest	ceres-solver/internal/ceres/covariance_test.cc	/^class CovarianceTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Create	ceres-solver/examples/ellipse_approximation.cc	/^  static ceres::CostFunction* Create(const double sqrt_weight) {$/;"	f	class:EuclideanDistanceFunctor
Create	ceres-solver/examples/ellipse_approximation.cc	/^  static ceres::CostFunction* Create(const int num_segments,$/;"	f	class:PointToLineSegmentContourCostFunction
Create	ceres-solver/examples/robot_pose_mle.cc	/^  static OdometryCostFunction* Create(const double odometry_value) {$/;"	f	struct:OdometryConstraint
Create	ceres-solver/examples/robot_pose_mle.cc	/^  static RangeCostFunction* Create(const int pose_index,$/;"	f	struct:RangeConstraint
Create	ceres-solver/examples/sampled_function/sampled_function.cc	/^  static CostFunction* Create($/;"	f	struct:InterpolatedCostFunctor
Create	ceres-solver/examples/simple_bundle_adjuster.cc	/^  static ceres::CostFunction* Create(const double observed_x,$/;"	f	struct:SnavelyReprojectionError
Create	ceres-solver/examples/slam/pose_graph_2d/angle_local_parameterization.h	/^  static ceres::LocalParameterization* Create() {$/;"	f	class:ceres::examples::AngleLocalParameterization
Create	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^  static ceres::CostFunction* Create(double x_ab, double y_ab,$/;"	f	class:ceres::examples::PoseGraph2dErrorTerm
Create	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^  static ceres::CostFunction* Create($/;"	f	class:ceres::examples::PoseGraph3dErrorTerm
Create	ceres-solver/examples/snavely_reprojection_error.h	/^  static ceres::CostFunction* Create(const double observed_x,$/;"	f	struct:ceres::examples::SnavelyReprojectionError
Create	ceres-solver/examples/snavely_reprojection_error.h	/^  static ceres::CostFunction* Create(const double observed_x,$/;"	f	struct:ceres::examples::SnavelyReprojectionErrorWithQuaternions
Create	ceres-solver/internal/ceres/cxsparse.cc	/^CXSparseCholesky* CXSparseCholesky::Create(const OrderingType ordering_type) {$/;"	f	class:ceres::internal::CXSparseCholesky
Create	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  static CostFunction* Create(const double sqrt_weight) {$/;"	f	class:ceres::internal::EuclideanDistanceFunctor
Create	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  static CostFunction* Create(const int num_segments, const Eigen::Vector2d& y) {$/;"	f	class:ceres::internal::PointToLineSegmentContourCostFunction
Create	ceres-solver/internal/ceres/eigensparse.cc	/^EigenSparseCholesky* EigenSparseCholesky::Create($/;"	f	class:ceres::internal::EigenSparseCholesky
Create	ceres-solver/internal/ceres/evaluator.cc	/^Evaluator* Evaluator::Create(const Evaluator::Options& options,$/;"	f	class:ceres::internal::Evaluator
Create	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool DeathTest::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DeathTest
Create	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool DefaultDeathTestFactory::Create(const char* statement, const RE* regex,$/;"	f	class:testing::internal::DefaultDeathTestFactory
Create	ceres-solver/internal/ceres/inner_product_computer.cc	/^InnerProductComputer* InnerProductComputer::Create($/;"	f	class:ceres::internal::InnerProductComputer
Create	ceres-solver/internal/ceres/line_search.cc	/^LineSearch* LineSearch::Create(const LineSearchType line_search_type,$/;"	f	class:ceres::internal::LineSearch
Create	ceres-solver/internal/ceres/line_search_direction.cc	/^LineSearchDirection::Create(const LineSearchDirection::Options& options) {$/;"	f	class:ceres::internal::LineSearchDirection
Create	ceres-solver/internal/ceres/linear_solver.cc	/^LinearSolver* LinearSolver::Create(const LinearSolver::Options& options) {$/;"	f	class:ceres::internal::LinearSolver
Create	ceres-solver/internal/ceres/minimizer.cc	/^Minimizer* Minimizer::Create(MinimizerType minimizer_type) {$/;"	f	class:ceres::internal::Minimizer
Create	ceres-solver/internal/ceres/partitioned_matrix_view.cc	/^PartitionedMatrixViewBase::Create(const LinearSolver::Options& options,$/;"	f	class:ceres::internal::PartitionedMatrixViewBase
Create	ceres-solver/internal/ceres/preprocessor.cc	/^Preprocessor* Preprocessor::Create(MinimizerType minimizer_type) {$/;"	f	class:ceres::internal::Preprocessor
Create	ceres-solver/internal/ceres/schur_eliminator.cc	/^SchurEliminatorBase::Create(const LinearSolver::Options& options) {$/;"	f	class:ceres::internal::SchurEliminatorBase
Create	ceres-solver/internal/ceres/scratch_evaluate_preparer.cc	/^ScratchEvaluatePreparer* ScratchEvaluatePreparer::Create($/;"	f	class:ceres::internal::ScratchEvaluatePreparer
Create	ceres-solver/internal/ceres/solver_test.cc	/^  static CostFunction* Create() {$/;"	f	struct:ceres::internal::Quadratic4DCostFunction
Create	ceres-solver/internal/ceres/solver_test.cc	/^  static CostFunction* Create() {$/;"	f	struct:ceres::internal::QuadraticCostFunctor
Create	ceres-solver/internal/ceres/sparse_cholesky.cc	/^SparseCholesky* SparseCholesky::Create($/;"	f	class:ceres::internal::SparseCholesky
Create	ceres-solver/internal/ceres/suitesparse.cc	/^SuiteSparseCholesky* SuiteSparseCholesky::Create($/;"	f	class:ceres::internal::SuiteSparseCholesky
Create	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  static CostFunction* Create() {$/;"	f	struct:ceres::internal::ExpCostFunctor
Create	ceres-solver/internal/ceres/trust_region_strategy.cc	/^TrustRegionStrategy* TrustRegionStrategy::Create(const Options& options) {$/;"	f	class:ceres::internal::TrustRegionStrategy
CreateAdaptiveVoxelFilterOptions	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^proto::AdaptiveVoxelFilterOptions CreateAdaptiveVoxelFilterOptions($/;"	f	namespace:cartographer::sensor
CreateAddFixedFramePoseDataRequest	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateAddFixedFramePoseDataRequest($/;"	f	namespace:cartographer::cloud
CreateAddImuDataRequest	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateAddImuDataRequest(const std::string& sensor_id,$/;"	f	namespace:cartographer::cloud
CreateAddLandmarkDataRequest	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateAddLandmarkDataRequest($/;"	f	namespace:cartographer::cloud
CreateAddOdometryDataRequest	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateAddOdometryDataRequest($/;"	f	namespace:cartographer::cloud
CreateAddRangeFinderDataRequest	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateAddRangeFinderDataRequest($/;"	f	namespace:cartographer::cloud
CreateAllTrajectoryBuilderOptionsProto	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^CreateAllTrajectoryBuilderOptionsProto($/;"	f	namespace:cartographer::io::__anon26
CreateAnalyticalSpaCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^ceres::CostFunction* CreateAnalyticalSpaCostFunction($/;"	f	namespace:cartographer::mapping::optimization
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor2D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor2D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor3D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::AccelerationCostFunction3D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::optimization::LandmarkCostFunction2D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::optimization::LandmarkCostFunction3D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::RotationCostFunction3D
CreateAutoDiffCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^  static ceres::CostFunction* CreateAutoDiffCostFunction($/;"	f	class:cartographer::mapping::optimization::SpaCostFunction3D
CreateAutoDiffSpaCostFunction	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^ceres::CostFunction* CreateAutoDiffSpaCostFunction($/;"	f	namespace:cartographer::mapping::optimization
CreateBlockDiagonalEtE	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^CreateBlockDiagonalEtE() const {$/;"	f	class:ceres::internal::PartitionedMatrixView
CreateBlockDiagonalFtF	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^CreateBlockDiagonalFtF() const {$/;"	f	class:ceres::internal::PartitionedMatrixView
CreateBlockDiagonalMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix* CompressedRowSparseMatrix::CreateBlockDiagonalMatrix($/;"	f	class:ceres::internal::CompressedRowSparseMatrix
CreateBlockDiagonalMatrixLayout	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^CreateBlockDiagonalMatrixLayout(int start_col_block, int end_col_block) const {$/;"	f	class:ceres::internal::PartitionedMatrixView
CreateBlockJacobian	ceres-solver/internal/ceres/reorder_program.cc	/^Eigen::SparseMatrix<int> CreateBlockJacobian($/;"	f	namespace:ceres::internal::__anon185
CreateCeresScanMatcherOptions2D	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^proto::CeresScanMatcherOptions2D CreateCeresScanMatcherOptions2D($/;"	f	namespace:cartographer::mapping::scan_matching
CreateCeresScanMatcherOptions3D	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.cc	/^proto::CeresScanMatcherOptions3D CreateCeresScanMatcherOptions3D($/;"	f	namespace:cartographer::mapping::scan_matching
CreateCeresSolverOptions	cartographer/cartographer/common/ceres_solver_options.cc	/^ceres::Solver::Options CreateCeresSolverOptions($/;"	f	namespace:cartographer::common
CreateCeresSolverOptionsProto	cartographer/cartographer/common/ceres_solver_options.cc	/^proto::CeresSolverOptions CreateCeresSolverOptionsProto($/;"	f	namespace:cartographer::common
CreateClient	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::CreateClient() {$/;"	f	class:cartographer_rviz::SubmapsDisplay
CreateClusterGraph	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^WeightedGraph<int>* VisibilityBasedPreconditioner::CreateClusterGraph($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
CreateCodePointFromUtf16SurrogatePair	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline UInt32 CreateCodePointFromUtf16SurrogatePair(wchar_t first,$/;"	f	namespace:testing::internal
CreateConstantData	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  TrajectoryNode::Data CreateConstantData($/;"	f	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest
CreateConstraintBuilderOptions	cartographer/cartographer/mapping/internal/constraints/constraint_builder.cc	/^proto::ConstraintBuilderOptions CreateConstraintBuilderOptions($/;"	f	namespace:cartographer::mapping::constraints
CreateDefaultLinearSolverOrdering	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^ParameterBlockOrdering* CreateDefaultLinearSolverOrdering($/;"	f	namespace:ceres::internal::__anon192
CreateDenseVector	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_dense* SuiteSparse::CreateDenseVector(const double* x,$/;"	f	class:ceres::internal::SuiteSparse
CreateDiagonalMatrix	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^BlockSparseMatrix* BlockSparseMatrix::CreateDiagonalMatrix($/;"	f	class:ceres::internal::BlockSparseMatrix
CreateDirectoriesRecursively	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::CreateDirectoriesRecursively() const {$/;"	f	class:testing::internal::FilePath
CreateEvaluatePreparers	ceres-solver/internal/ceres/block_jacobian_writer.cc	/^BlockEvaluatePreparer* BlockJacobianWriter::CreateEvaluatePreparers($/;"	f	class:ceres::internal::BlockJacobianWriter
CreateEvaluatePreparers	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	/^  ScratchEvaluatePreparer* CreateEvaluatePreparers(int num_threads) {$/;"	f	class:ceres::internal::CompressedRowJacobianWriter
CreateEvaluatePreparers	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^  ScratchEvaluatePreparer* CreateEvaluatePreparers(int num_threads) {$/;"	f	class:ceres::internal::DenseJacobianWriter
CreateEvaluatePreparers	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc	/^DynamicCompressedRowJacobianWriter::CreateEvaluatePreparers(int num_threads) {$/;"	f	class:ceres::internal::DynamicCompressedRowJacobianWriter
CreateEvaluator	ceres-solver/internal/ceres/evaluator_test.cc	/^  Evaluator* CreateEvaluator(Program* program) {$/;"	f	struct:ceres::internal::EvaluatorTest
CreateEvaluatorScratch	ceres-solver/internal/ceres/program_evaluator.h	/^  static EvaluateScratch* CreateEvaluatorScratch(const Program& program,$/;"	f	class:ceres::internal::ProgramEvaluator
CreateFakeConstraint	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^proto::PoseGraph::Constraint CreateFakeConstraint(const proto::Node& node,$/;"	f	namespace:cartographer::mapping::test
CreateFakeLandmark	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^proto::PoseGraph::LandmarkPose CreateFakeLandmark($/;"	f	namespace:cartographer::mapping::test
CreateFakeNode	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^proto::Node CreateFakeNode(int trajectory_id, int node_index) {$/;"	f	namespace:cartographer::mapping::test
CreateFakeRangeData	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^sensor::TimedPointCloudData CreateFakeRangeData(int from, int to) {$/;"	f	namespace:cartographer::mapping::__anon85
CreateFakeSubmap3D	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^proto::Submap CreateFakeSubmap3D(int trajectory_id, int submap_index) {$/;"	f	namespace:cartographer::mapping::test
CreateFastCorrelativeScanMatcher3DTestOptions3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  CreateFastCorrelativeScanMatcher3DTestOptions3D($/;"	f	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest
CreateFastCorrelativeScanMatcherOptions2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^CreateFastCorrelativeScanMatcherOptions2D($/;"	f	namespace:cartographer::mapping::scan_matching
CreateFastCorrelativeScanMatcherOptions3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^CreateFastCorrelativeScanMatcherOptions3D($/;"	f	namespace:cartographer::mapping::scan_matching
CreateFastCorrelativeScanMatcherTestOptions2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^CreateFastCorrelativeScanMatcherTestOptions2D($/;"	f	namespace:cartographer::mapping::scan_matching::__anon80
CreateFileWriterFactory	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^::cartographer::io::FileWriterFactory AssetsWriter::CreateFileWriterFactory($/;"	f	class:cartographer_ros::AssetsWriter
CreateFolder	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::CreateFolder() const {$/;"	f	class:testing::internal::FilePath
CreateGlobalTrajectoryBuilder2D	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^std::unique_ptr<TrajectoryBuilderInterface> CreateGlobalTrajectoryBuilder2D($/;"	f	namespace:cartographer::mapping
CreateGlobalTrajectoryBuilder3D	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^std::unique_ptr<TrajectoryBuilderInterface> CreateGlobalTrajectoryBuilder3D($/;"	f	namespace:cartographer::mapping
CreateGradientCheckingCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^CostFunction* CreateGradientCheckingCostFunction($/;"	f	namespace:ceres::internal
CreateGradientCheckingProblemImpl	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^ProblemImpl* CreateGradientCheckingProblemImpl($/;"	f	namespace:ceres::internal
CreateGrid	cartographer/cartographer/mapping/2d/submap_2d.cc	/^std::unique_ptr<GridInterface> ActiveSubmaps2D::CreateGrid($/;"	f	class:cartographer::mapping::ActiveSubmaps2D
CreateGridOptions2D	cartographer/cartographer/mapping/2d/grid_2d.cc	/^proto::GridOptions2D CreateGridOptions2D($/;"	f	namespace:cartographer::mapping
CreateHeader	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^mapping::proto::SerializationHeader CreateHeader() {$/;"	f	namespace:cartographer::io::__anon26
CreateHessianGraph	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^Graph<ParameterBlock*>* CreateHessianGraph(const Program& program) {$/;"	f	namespace:ceres::internal
CreateImuData	cartographer/cartographer/sensor/internal/test_helpers.h	/^  static CollatorInput CreateImuData(int trajectory_id,$/;"	f	struct:cartographer::sensor::test::CollatorInput
CreateInitialTrajectoryPose	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.cc	/^CreateInitialTrajectoryPose($/;"	f	namespace:cartographer_ros
CreateJacobian	ceres-solver/internal/ceres/block_jacobian_writer.cc	/^SparseMatrix* BlockJacobianWriter::CreateJacobian() const {$/;"	f	class:ceres::internal::BlockJacobianWriter
CreateJacobian	ceres-solver/internal/ceres/compressed_row_jacobian_writer.cc	/^SparseMatrix* CompressedRowJacobianWriter::CreateJacobian() const {$/;"	f	class:ceres::internal::CompressedRowJacobianWriter
CreateJacobian	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^  SparseMatrix* CreateJacobian() const {$/;"	f	class:ceres::internal::DenseJacobianWriter
CreateJacobian	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc	/^SparseMatrix* DynamicCompressedRowJacobianWriter::CreateJacobian() const {$/;"	f	class:ceres::internal::DynamicCompressedRowJacobianWriter
CreateJacobian	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual SparseMatrix* CreateJacobian() const { return NULL; }$/;"	f	class:ceres::internal::GradientProblemEvaluator
CreateJacobian	ceres-solver/internal/ceres/program_evaluator.h	/^  SparseMatrix* CreateJacobian() const {$/;"	f	class:ceres::internal::ProgramEvaluator
CreateJacobian	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual SparseMatrix* CreateJacobian() const {$/;"	f	class:ceres::internal::PowellEvaluator2
CreateJacobianBlockSparsityTranspose	ceres-solver/internal/ceres/program.cc	/^TripletSparseMatrix* Program::CreateJacobianBlockSparsityTranspose() const {$/;"	f	class:ceres::internal::Program
CreateKey	ceres-solver/internal/ceres/gtest/gtest.h	/^  static pthread_key_t CreateKey() {$/;"	f	class:std::tr1::ThreadLocal
CreateLandmarkMarker	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^visualization_msgs::Marker CreateLandmarkMarker(int landmark_index,$/;"	f	namespace:cartographer_ros::__anon140
CreateLinearLeastSquaresProblemFromId	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^LinearLeastSquaresProblem* CreateLinearLeastSquaresProblemFromId(int id) {$/;"	f	namespace:ceres::internal
CreateLocalTrajectoryBuilderOptions2D	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_options_2d.cc	/^proto::LocalTrajectoryBuilderOptions2D CreateLocalTrajectoryBuilderOptions2D($/;"	f	namespace:cartographer::mapping
CreateLocalTrajectoryBuilderOptions3D	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_options_3d.cc	/^proto::LocalTrajectoryBuilderOptions3D CreateLocalTrajectoryBuilderOptions3D($/;"	f	namespace:cartographer::mapping
CreateLocalTrajectoryUploader	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^std::unique_ptr<LocalTrajectoryUploaderInterface> CreateLocalTrajectoryUploader($/;"	f	namespace:cartographer::cloud
CreateLowResolutionMatcher	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.cc	/^std::function<float(const transform::Rigid3f&)> CreateLowResolutionMatcher($/;"	f	namespace:cartographer::mapping::scan_matching
CreateMapBuilderOptions	cartographer/cartographer/mapping/map_builder.cc	/^proto::MapBuilderOptions CreateMapBuilderOptions($/;"	f	namespace:cartographer::mapping
CreateMapBuilderServer	cartographer/cartographer/cloud/map_builder_server_interface.cc	/^std::unique_ptr<MapBuilderServerInterface> CreateMapBuilderServer($/;"	f	namespace:cartographer::cloud
CreateMapBuilderServerOptions	cartographer/cartographer/cloud/map_builder_server_options.cc	/^proto::MapBuilderServerOptions CreateMapBuilderServerOptions($/;"	f	namespace:cartographer::cloud
CreateMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Matcher<T> CreateMatcher(const ListType& matchers) {$/;"	f	struct:testing::internal::MatcherList
CreateMotionFilterOptions	cartographer/cartographer/mapping/internal/motion_filter.cc	/^proto::MotionFilterOptions CreateMotionFilterOptions($/;"	f	namespace:cartographer::mapping
CreateNodeOptions	cartographer_ros/cartographer_ros/cartographer_ros/node_options.cc	/^NodeOptions CreateNodeOptions($/;"	f	namespace:cartographer_ros
CreateOccupancyGridMsg	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^std::unique_ptr<nav_msgs::OccupancyGrid> CreateOccupancyGridMsg($/;"	f	namespace:cartographer_ros
CreateOdometryData	cartographer/cartographer/sensor/internal/test_helpers.h	/^  static CollatorInput CreateOdometryData(int trajectory_id,$/;"	f	struct:cartographer::sensor::test::CollatorInput
CreateOptimizationProblemOptions	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.cc	/^proto::OptimizationProblemOptions CreateOptimizationProblemOptions($/;"	f	namespace:cartographer::mapping::optimization
CreateOptions	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^  optimization::proto::OptimizationProblemOptions CreateOptions() {$/;"	f	class:cartographer::mapping::optimization::__anon87::OptimizationProblem3DTest
CreateOrdering	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^ParameterBlockOrdering* CoordinateDescentMinimizer::CreateOrdering($/;"	f	class:ceres::internal::CoordinateDescentMinimizer
CreatePipeline	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^PointsProcessorPipelineBuilder::CreatePipeline($/;"	f	class:cartographer::io::PointsProcessorPipelineBuilder
CreatePipelineBuilder	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^CreatePipelineBuilder($/;"	f	namespace:cartographer_ros::__anon133
CreatePoseGraphOptions	cartographer/cartographer/mapping/pose_graph.cc	/^proto::PoseGraphOptions CreatePoseGraphOptions($/;"	f	namespace:cartographer::mapping
CreatePreconditioner	ceres-solver/internal/ceres/iterative_schur_complement_solver.cc	/^void IterativeSchurComplementSolver::CreatePreconditioner($/;"	f	class:ceres::internal::IterativeSchurComplementSolver
CreateProbabilityGrid	cartographer/cartographer/io/probability_grid_points_processor.cc	/^mapping::ProbabilityGrid CreateProbabilityGrid(const double resolution) {$/;"	f	namespace:cartographer::io
CreateProbabilityGridRangeDataInserterOptions2D	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.cc	/^CreateProbabilityGridRangeDataInserterOptions2D($/;"	f	namespace:cartographer::mapping
CreateProblem	ceres-solver/examples/denoising.cc	/^void CreateProblem(const FieldsOfExperts& foe,$/;"	f	namespace:ceres::examples
CreateRandomFullRankMatrix	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^BlockSparseMatrix* CreateRandomFullRankMatrix(const int num_col_blocks,$/;"	f	namespace:ceres::internal
CreateRandomMatrix	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^BlockSparseMatrix* BlockSparseMatrix::CreateRandomMatrix($/;"	f	class:ceres::internal::BlockSparseMatrix
CreateRandomMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix* CompressedRowSparseMatrix::CreateRandomMatrix($/;"	f	class:ceres::internal::CompressedRowSparseMatrix
CreateRandomMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix* TripletSparseMatrix::CreateRandomMatrix($/;"	f	class:ceres::internal::TripletSparseMatrix
CreateRangeDataInserter	cartographer/cartographer/mapping/2d/submap_2d.cc	/^ActiveSubmaps2D::CreateRangeDataInserter() {$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
CreateRangeDataInserterOptions	cartographer/cartographer/mapping/range_data_inserter_interface.cc	/^proto::RangeDataInserterOptions CreateRangeDataInserterOptions($/;"	f	namespace:cartographer::mapping
CreateRangeDataInserterOptions3D	cartographer/cartographer/mapping/3d/range_data_inserter_3d.cc	/^proto::RangeDataInserterOptions3D CreateRangeDataInserterOptions3D($/;"	f	namespace:cartographer::mapping
CreateRangeDataInserterTestOptions2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^CreateRangeDataInserterTestOptions2D() {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon80
CreateRangeDataInserterTestOptions3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  CreateRangeDataInserterTestOptions3D() {$/;"	f	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest
CreateRealTimeCorrelativeScanMatcherOptions	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.cc	/^CreateRealTimeCorrelativeScanMatcherOptions($/;"	f	namespace:cartographer::mapping::scan_matching
CreateReducedProgram	ceres-solver/internal/ceres/program.cc	/^Program* Program::CreateReducedProgram($/;"	f	class:ceres::internal::Program
CreateResultMatrix	ceres-solver/internal/ceres/inner_product_computer.cc	/^CompressedRowSparseMatrix* InnerProductComputer::CreateResultMatrix($/;"	f	class:ceres::internal::InnerProductComputer
CreateSchurComplementGraph	ceres-solver/internal/ceres/visibility.cc	/^WeightedGraph<int>* CreateSchurComplementGraph($/;"	f	namespace:ceres::internal
CreateSensorDataForLocalSlamResult	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateSensorDataForLocalSlamResult($/;"	f	namespace:cartographer::cloud
CreateSensorMetadata	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^void CreateSensorMetadata(const std::string& sensor_id, const int trajectory_id,$/;"	f	namespace:cartographer::cloud
CreateSerializationHeader	cartographer/cartographer/io/serialization_format_migration.cc	/^mapping::proto::SerializationHeader CreateSerializationHeader() {$/;"	f	namespace:cartographer::io::__anon19
CreateSparseDiagonalMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix* TripletSparseMatrix::CreateSparseDiagonalMatrix($/;"	f	class:ceres::internal::TripletSparseMatrix
CreateSparseMatrix	ceres-solver/internal/ceres/cxsparse.cc	/^cs_di* CXSparse::CreateSparseMatrix(TripletSparseMatrix* tsm) {$/;"	f	class:ceres::internal::CXSparse
CreateSparseMatrix	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_sparse* SuiteSparse::CreateSparseMatrix(TripletSparseMatrix* A) {$/;"	f	class:ceres::internal::SuiteSparse
CreateSparseMatrixTranspose	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_sparse* SuiteSparse::CreateSparseMatrixTranspose($/;"	f	class:ceres::internal::SuiteSparse
CreateSparseMatrixTransposeView	ceres-solver/internal/ceres/cxsparse.cc	/^cs_di CXSparse::CreateSparseMatrixTransposeView(CompressedRowSparseMatrix* A) {$/;"	f	class:ceres::internal::CXSparse
CreateSparseMatrixTransposeView	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_sparse SuiteSparse::CreateSparseMatrixTransposeView($/;"	f	class:ceres::internal::SuiteSparse
CreateSubmap	cartographer/cartographer/mapping/internal/submap_controller.cc	/^SubmapController<mapping::Submap2D>::CreateSubmap($/;"	f	class:cartographer::mapping::SubmapController
CreateSubmap	cartographer/cartographer/mapping/internal/submap_controller.cc	/^SubmapController<mapping::Submap3D>::CreateSubmap($/;"	f	class:cartographer::mapping::SubmapController
CreateSubmapsOptions2D	cartographer/cartographer/mapping/2d/submap_2d.cc	/^proto::SubmapsOptions2D CreateSubmapsOptions2D($/;"	f	namespace:cartographer::mapping
CreateSubmapsOptions3D	cartographer/cartographer/mapping/3d/submap_3d.cc	/^proto::SubmapsOptions3D CreateSubmapsOptions3D($/;"	f	namespace:cartographer::mapping
CreateTest	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual Test* CreateTest() { return new TestClass; }$/;"	f	class:testing::internal::TestFactoryImpl
CreateTest	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual Test* CreateTest() {$/;"	f	class:testing::internal::ParameterizedTestFactory
CreateTestFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual TestFactoryBase* CreateTestFactory(ParamType parameter) {$/;"	f	class:testing::internal::TestMetaFactory
CreateTestMapById	cartographer/cartographer/mapping/id_test.cc	/^static MapById<IdType, int> CreateTestMapById() {$/;"	f	namespace:cartographer::mapping::__anon65
CreateThread	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static HANDLE CreateThread(Runnable* runnable,$/;"	f	class:testing::internal::__anon173::ThreadWithParamSupport
CreateTime	cartographer/cartographer/mapping/id_test.cc	/^common::Time CreateTime(const int milliseconds) {$/;"	f	namespace:cartographer::mapping::__anon65
CreateTime	cartographer/cartographer/sensor/map_by_time_test.cc	/^common::Time CreateTime(const int milliseconds) {$/;"	f	namespace:cartographer::sensor::__anon118
CreateTimedPointCloudData	cartographer/cartographer/sensor/internal/test_helpers.h	/^  static CollatorInput CreateTimedPointCloudData(int trajectory_id,$/;"	f	struct:cartographer::sensor::test::CollatorInput
CreateTimingFile	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^std::unique_ptr<std::ofstream> CreateTimingFile(const std::string& frame_id) {$/;"	f	namespace:cartographer_ros::__anon128
CreateTrajectoryBuilderOptions	cartographer/cartographer/mapping/trajectory_builder_interface.cc	/^proto::TrajectoryBuilderOptions CreateTrajectoryBuilderOptions($/;"	f	namespace:cartographer::mapping
CreateTrajectoryBuilderOptions3D	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  CreateTrajectoryBuilderOptions3D() {$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
CreateTrajectoryIfNeeded	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^proto::Trajectory* CreateTrajectoryIfNeeded(int trajectory_id,$/;"	f	namespace:cartographer::mapping::test
CreateTrajectoryMarker	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^visualization_msgs::Marker CreateTrajectoryMarker(const int trajectory_id,$/;"	f	namespace:cartographer_ros::__anon140
CreateTrajectoryOptions	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.cc	/^TrajectoryOptions CreateTrajectoryOptions($/;"	f	namespace:cartographer_ros
CreateUnifiedDiff	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string CreateUnifiedDiff(const std::vector<std::string>& left,$/;"	f	namespace:testing::internal::edit_distance
CropAndMerge	cartographer/cartographer/mapping/internal/range_data_collator.cc	/^sensor::TimedPointCloudOriginData RangeDataCollator::CropAndMerge() {$/;"	f	class:cartographer::mapping::RangeDataCollator
CropPointCloud	cartographer/cartographer/sensor/point_cloud.cc	/^PointCloud CropPointCloud(const PointCloud& point_cloud, const float min_z,$/;"	f	namespace:cartographer::sensor
CropRangeData	cartographer/cartographer/sensor/range_data.cc	/^RangeData CropRangeData(const RangeData& range_data, const float min_z,$/;"	f	namespace:cartographer::sensor
CropTimedPointCloud	cartographer/cartographer/sensor/point_cloud.cc	/^TimedPointCloud CropTimedPointCloud(const TimedPointCloud& point_cloud,$/;"	f	namespace:cartographer::sensor
CropTimedRangeData	cartographer/cartographer/sensor/range_data.cc	/^TimedRangeData CropTimedRangeData(const TimedRangeData& range_data,$/;"	f	namespace:cartographer::sensor
CrossProduct	ceres-solver/include/ceres/rotation.h	/^void CrossProduct(const T x[3], const T y[3], T x_cross_y[3]) {$/;"	f	namespace:ceres
CubicHermiteSpline	ceres-solver/include/ceres/cubic_interpolation.h	/^void CubicHermiteSpline(const Eigen::Matrix<double, kDataDimension, 1>& p0,$/;"	f	namespace:ceres
CubicInterpolator	ceres-solver/include/ceres/cubic_interpolation.h	/^  explicit CubicInterpolator(const Grid& grid)$/;"	f	class:ceres::CubicInterpolator
CubicInterpolator	ceres-solver/include/ceres/cubic_interpolation.h	/^class CubicInterpolator {$/;"	c	namespace:ceres
CubicInterpolatorTest	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^class CubicInterpolatorTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const ParamType* Current() const { return &current_value_; }$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const T* Current() const { return &value_; }$/;"	f	class:testing::internal::RangeGenerator::Iterator
Current	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual const T* Current() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
CurrentOsStackTraceExceptTop	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {$/;"	f	class:testing::internal::UnitTestImpl
CurrentStackTrace	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^string OsStackTraceGetter::CurrentStackTrace(int \/*max_depth*\/,$/;"	f	class:testing::internal::OsStackTraceGetter
CurveCostFunction	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  CurveCostFunction(int num_vertices, double target_length)$/;"	f	class:ceres::internal::CurveCostFunction
CurveCostFunction	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^class CurveCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
D	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^  scoped_array<double> D;$/;"	m	class:ceres::internal::BlockJacobiPreconditionerTest	file:
D	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  scoped_array<double> D;$/;"	m	struct:ceres::internal::LinearLeastSquaresProblem
D	ceres-solver/internal/ceres/linear_solver.h	/^    double * D;$/;"	m	struct:ceres::internal::LinearSolver::PerSolveOptions
D	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  scoped_array<double> D;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
D	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  scoped_array<double> D;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
DATA_DIMENSION	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^    enum { DATA_DIMENSION = 1 };$/;"	e	enum:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D::GridArrayAdapter::__anon77
DATA_DIMENSION	ceres-solver/include/ceres/cubic_interpolation.h	/^  enum { DATA_DIMENSION = kDataDimension };$/;"	e	enum:ceres::Grid1D::__anon152
DATA_DIMENSION	ceres-solver/include/ceres/cubic_interpolation.h	/^  enum { DATA_DIMENSION = kDataDimension };$/;"	e	enum:ceres::Grid2D::__anon153
DCHECK	ceres-solver/internal/ceres/miniglog/glog/logging.h	346;"	d
DCHECK	ceres-solver/internal/ceres/miniglog/glog/logging.h	350;"	d
DCHECK_EQ	ceres-solver/internal/ceres/miniglog/glog/logging.h	371;"	d
DCHECK_EQ	ceres-solver/internal/ceres/miniglog/glog/logging.h	379;"	d
DCHECK_GE	ceres-solver/internal/ceres/miniglog/glog/logging.h	375;"	d
DCHECK_GE	ceres-solver/internal/ceres/miniglog/glog/logging.h	383;"	d
DCHECK_GT	ceres-solver/internal/ceres/miniglog/glog/logging.h	376;"	d
DCHECK_GT	ceres-solver/internal/ceres/miniglog/glog/logging.h	384;"	d
DCHECK_LE	ceres-solver/internal/ceres/miniglog/glog/logging.h	373;"	d
DCHECK_LE	ceres-solver/internal/ceres/miniglog/glog/logging.h	381;"	d
DCHECK_LT	ceres-solver/internal/ceres/miniglog/glog/logging.h	374;"	d
DCHECK_LT	ceres-solver/internal/ceres/miniglog/glog/logging.h	382;"	d
DCHECK_NE	ceres-solver/internal/ceres/miniglog/glog/logging.h	372;"	d
DCHECK_NE	ceres-solver/internal/ceres/miniglog/glog/logging.h	380;"	d
DCHECK_NOTNULL	ceres-solver/internal/ceres/miniglog/glog/logging.h	415;"	d
DCHECK_NOTNULL	ceres-solver/internal/ceres/miniglog/glog/logging.h	419;"	d
DENSE_NORMAL_CHOLESKY	ceres-solver/include/ceres/types.h	/^  DENSE_NORMAL_CHOLESKY,$/;"	e	enum:ceres::LinearSolverType
DENSE_QR	ceres-solver/include/ceres/types.h	/^  DENSE_QR,$/;"	e	enum:ceres::LinearSolverType
DENSE_SCHUR	ceres-solver/include/ceres/types.h	/^  DENSE_SCHUR,$/;"	e	enum:ceres::LinearSolverType
DENSE_SVD	ceres-solver/include/ceres/types.h	/^  DENSE_SVD,$/;"	e	enum:ceres::CovarianceAlgorithmType
DEPENDENCIES_COMPLETED	cartographer/cartographer/common/task.h	/^  enum State { NEW, DISPATCHED, DEPENDENCIES_COMPLETED, RUNNING, COMPLETED };$/;"	e	enum:cartographer::common::Task::State
DIED	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
DIMENSION	ceres-solver/include/ceres/jet.h	/^  enum { DIMENSION = N };$/;"	e	enum:ceres::Jet::__anon149
DISPATCHED	cartographer/cartographer/common/task.h	/^  enum State { NEW, DISPATCHED, DEPENDENCIES_COMPLETED, RUNNING, COMPLETED };$/;"	e	enum:cartographer::common::Task::State
DLOG	ceres-solver/internal/ceres/miniglog/glog/logging.h	324;"	d
DLOG	ceres-solver/internal/ceres/miniglog/glog/logging.h	326;"	d
DOGLEG	ceres-solver/include/ceres/types.h	/^  DOGLEG$/;"	e	enum:ceres::TrustRegionStrategyType
DO_NOT_TAKE_OWNERSHIP	ceres-solver/include/ceres/types.h	/^  DO_NOT_TAKE_OWNERSHIP,$/;"	e	enum:ceres::Ownership
DYNAMIC	ceres-solver/include/ceres/types.h	/^  DYNAMIC = -1$/;"	e	enum:ceres::DimensionType
D_	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  const double* D_;$/;"	m	class:ceres::internal::CgnrLinearOperator
D_	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^  scoped_array<double> D_;$/;"	m	class:ceres::internal::DynamicSparseNormalCholeskySolverTest	file:
D_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  const double* D_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
D_	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  scoped_array<double> D_;$/;"	m	class:ceres::internal::ImplicitSchurComplementTest	file:
D_	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  scoped_array<double> D_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolverTest	file:
D_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^  scoped_array<double> D_;$/;"	m	class:ceres::internal::SparseNormalCholeskySolverTest	file:
Data	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^  struct Data {$/;"	s	class:cartographer::cloud::MapBuilderContextInterface
Data	cartographer/cartographer/mapping/id_test.cc	/^  explicit Data(int milliseconds) : time_(CreateTime(milliseconds)) {}$/;"	f	class:cartographer::mapping::__anon65::Data
Data	cartographer/cartographer/mapping/id_test.cc	/^class Data {$/;"	c	namespace:cartographer::mapping::__anon65	file:
Data	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  struct Data {$/;"	s	class:cartographer::mapping::optimization::CeresPose
Data	cartographer/cartographer/mapping/trajectory_node.h	/^  struct Data {$/;"	s	struct:cartographer::mapping::TrajectoryNode
Data	cartographer/cartographer/sensor/data.h	/^  explicit Data(const std::string &sensor_id) : sensor_id_(sensor_id) {}$/;"	f	class:cartographer::sensor::Data
Data	cartographer/cartographer/sensor/data.h	/^class Data {$/;"	c	namespace:cartographer::sensor
Data	cartographer/cartographer/sensor/map_by_time_test.cc	/^struct Data {$/;"	s	namespace:cartographer::sensor::__anon118	file:
DataStruct	cartographer/cartographer/mapping/id_test.cc	/^struct DataStruct {$/;"	s	namespace:cartographer::mapping::__anon65	file:
DeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^DeathTest::DeathTest() {$/;"	f	class:testing::internal::DeathTest
DeathTest	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ DeathTest {$/;"	c	namespace:testing::internal
DeathTestAbort	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void DeathTestAbort(const std::string& message) {$/;"	f	namespace:testing::internal
DeathTestFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^class DeathTestFactory {$/;"	c	namespace:testing::internal
DeathTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  DeathTestImpl(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::DeathTestImpl
DeathTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class DeathTestImpl : public DeathTest {$/;"	c	namespace:testing::internal	file:
DeathTestOutcome	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	g	namespace:testing::internal	file:
DeathTestThreadWarning	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string DeathTestThreadWarning(size_t thread_count) {$/;"	f	namespace:testing::internal
DebugString	cartographer/cartographer/common/fixed_ratio_sampler.cc	/^std::string FixedRatioSampler::DebugString() {$/;"	f	class:cartographer::common::FixedRatioSampler
DebugString	cartographer/cartographer/common/rate_timer.h	/^  std::string DebugString() const {$/;"	f	class:cartographer::common::RateTimer
DebugString	cartographer/cartographer/transform/rigid_transform.h	/^  std::string DebugString() const {$/;"	f	class:cartographer::transform::Rigid2
DebugString	cartographer/cartographer/transform/rigid_transform.h	/^  std::string DebugString() const {$/;"	f	class:cartographer::transform::Rigid3
DebugString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^string MatchMatrix::DebugString() const {$/;"	f	class:testing::internal::MatchMatrix
DecayArray	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T, size_t N> struct DecayArray<T[N]> {$/;"	s	namespace:testing::internal
DecayArray	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct DecayArray { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
DecayArray	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct DecayArray<T[]> {$/;"	s	namespace:testing::internal
Decompress	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^PointCloud CompressedPointCloud::Decompress() const {$/;"	f	class:cartographer::sensor::CompressedPointCloud
DefaultDeathTestFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^class DefaultDeathTestFactory : public DeathTestFactory {$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
DefaultGlobalTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class DefaultGlobalTestPartResultReporter$/;"	c	namespace:testing::internal	file:
DefaultParamName	ceres-solver/internal/ceres/gtest/gtest.h	/^std::string DefaultParamName(const TestParamInfo<ParamType>& info) {$/;"	f	namespace:testing::internal
DefaultPerThreadTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
DefaultPerThreadTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class DefaultPerThreadTestPartResultReporter$/;"	c	namespace:testing::internal	file:
DefaultPrintNonContainerTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void DefaultPrintNonContainerTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing_internal
DefaultPrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void DefaultPrintTo(IsContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultPrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void DefaultPrintTo(IsNotContainer \/* dummy *\/,$/;"	f	namespace:testing::internal
DefaultSensorTopics	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^cartographer_ros_msgs::SensorTopics DefaultSensorTopics() {$/;"	f	namespace:cartographer_ros::__anon144
DefaultValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class DefaultValue {$/;"	c	namespace:testing
DefaultValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class DefaultValue<T&> {$/;"	c	namespace:testing
DefaultValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class DefaultValue<void> {$/;"	c	namespace:testing
DefaultValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^    DefaultValueHolderFactory() {}$/;"	f	class:std::tr1::ThreadLocal::DefaultValueHolderFactory
DefaultValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  class DefaultValueHolderFactory : public ValueHolderFactory {$/;"	c	class:std::tr1::ThreadLocal
DegToRad	cartographer/cartographer/common/math.h	/^constexpr double DegToRad(double deg) { return M_PI * deg \/ 180.; }$/;"	f	namespace:cartographer::common
Degree2MaximumSpanningForest	ceres-solver/internal/ceres/graph_algorithms.h	/^Degree2MaximumSpanningForest(const WeightedGraph<Vertex>& graph) {$/;"	f	namespace:ceres::internal
Delete	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void Delete(T* x) {$/;"	f	namespace:testing::internal
DeleteBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::DeleteBlock(ParameterBlock* parameter_block) {$/;"	f	class:ceres::internal::ProblemImpl
DeleteBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::DeleteBlock(ResidualBlock* residual_block) {$/;"	f	class:ceres::internal::ProblemImpl
DeleteBlockInVector	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::DeleteBlockInVector(vector<Block*>* mutable_blocks,$/;"	f	class:ceres::internal::ProblemImpl
DeleteRowBlocks	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::DeleteRowBlocks(const int delta_row_blocks) {$/;"	f	class:ceres::internal::BlockSparseMatrix
DeleteRows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::DeleteRows(int delta_rows) {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
DeleteScanMatcher	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::DeleteScanMatcher(const SubmapId& submap_id) {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
DeleteScanMatcher	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::DeleteScanMatcher(const SubmapId& submap_id) {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
DeleteSelf_	ceres-solver/internal/ceres/gtest/gtest.h	/^  void DeleteSelf_() { delete this; }$/;"	f	class:testing::Test
DeleteThreadLocalValue	ceres-solver/internal/ceres/gtest/gtest.h	/^extern "C" inline void DeleteThreadLocalValue(void* value_holder) {$/;"	f	namespace:std::tr1
DeltasDebugString	cartographer/cartographer/common/rate_timer.h	/^  std::string DeltasDebugString() const {$/;"	f	class:cartographer::common::RateTimer
DenseJacobianWriter	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^  DenseJacobianWriter(Evaluator::Options \/* ignored *\/,$/;"	f	class:ceres::internal::DenseJacobianWriter
DenseJacobianWriter	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^class DenseJacobianWriter {$/;"	c	namespace:ceres::internal
DenseLinearAlgebraLibraryType	ceres-solver/include/ceres/types.h	/^enum DenseLinearAlgebraLibraryType {$/;"	g	namespace:ceres
DenseLinearAlgebraLibraryTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* DenseLinearAlgebraLibraryTypeToString($/;"	f	namespace:ceres
DenseLinearSolverTest	ceres-solver/internal/ceres/dense_linear_solver_test.cc	/^class DenseLinearSolverTest : public ::testing::TestWithParam<Param> {};$/;"	c	namespace:ceres::internal	file:
DenseNormalCholeskySolver	ceres-solver/internal/ceres/dense_normal_cholesky_solver.cc	/^DenseNormalCholeskySolver::DenseNormalCholeskySolver($/;"	f	class:ceres::internal::DenseNormalCholeskySolver
DenseNormalCholeskySolver	ceres-solver/internal/ceres/dense_normal_cholesky_solver.h	/^class DenseNormalCholeskySolver: public DenseSparseMatrixSolver {$/;"	c	namespace:ceres::internal
DenseQRSolver	ceres-solver/internal/ceres/dense_qr_solver.cc	/^DenseQRSolver::DenseQRSolver(const LinearSolver::Options& options)$/;"	f	class:ceres::internal::DenseQRSolver
DenseQRSolver	ceres-solver/internal/ceres/dense_qr_solver.h	/^class DenseQRSolver: public DenseSparseMatrixSolver {$/;"	c	namespace:ceres::internal
DenseSchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^  explicit DenseSchurComplementSolver(const LinearSolver::Options& options)$/;"	f	class:ceres::internal::DenseSchurComplementSolver
DenseSchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^class DenseSchurComplementSolver : public SchurComplementSolver {$/;"	c	namespace:ceres::internal
DenseSparseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^DenseSparseMatrix::DenseSparseMatrix(const ColMajorMatrix& m)$/;"	f	class:ceres::internal::DenseSparseMatrix
DenseSparseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^DenseSparseMatrix::DenseSparseMatrix(const TripletSparseMatrix& m)$/;"	f	class:ceres::internal::DenseSparseMatrix
DenseSparseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^DenseSparseMatrix::DenseSparseMatrix(int num_rows, int num_cols)$/;"	f	class:ceres::internal::DenseSparseMatrix
DenseSparseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^DenseSparseMatrix::DenseSparseMatrix(int num_rows,$/;"	f	class:ceres::internal::DenseSparseMatrix
DenseSparseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^class DenseSparseMatrix : public SparseMatrix {$/;"	c	namespace:ceres::internal
DenseSparseMatrixSolver	ceres-solver/internal/ceres/linear_solver.h	/^typedef TypedLinearSolver<DenseSparseMatrix>         DenseSparseMatrixSolver;          \/\/ NOLINT$/;"	t	namespace:ceres::internal
DenseSparseMatrixTest	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^class DenseSparseMatrixTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "a pair where the first < the second"; }$/;"	f	class:testing::internal::Lt2Matcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "a pair where the first <= the second"; }$/;"	f	class:testing::internal::Le2Matcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "a pair where the first > the second"; }$/;"	f	class:testing::internal::Gt2Matcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "a pair where the first >= the second"; }$/;"	f	class:testing::internal::Ge2Matcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "an equal pair"; }$/;"	f	class:testing::internal::Eq2Matcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "an unequal pair"; }$/;"	f	class:testing::internal::Ne2Matcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "is <"; }$/;"	f	class:testing::internal::LtMatcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "is <="; }$/;"	f	class:testing::internal::LeMatcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "is >"; }$/;"	f	class:testing::internal::GtMatcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "is >="; }$/;"	f	class:testing::internal::GeMatcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "is equal to"; }$/;"	f	class:testing::internal::EqMatcher
Desc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* Desc() { return "isn't equal to"; }$/;"	f	class:testing::internal::NeMatcher
DescribeActualCallCountTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Cardinality::DescribeActualCallCountTo(int actual_call_count,$/;"	f	class:testing::Cardinality
DescribeDefaultActionTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeDefaultActionTo(const ArgumentTuple& args,$/;"	f	class:testing::internal::FunctionMockerBase
DescribeLocationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeLocationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ExpectationBase
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ComparisonBase::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatchBase::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointeeMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointwiseMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::RefMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::SizeIsMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::MatcherDescriberInterface
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::AnyMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ArgsMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BothOfMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainsMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EachMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::KeyMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainerEqMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EndsWithMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FieldMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::HasSubstrMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::IsNullMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotNullMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PropertyMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StartsWithMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::TrulyMatcher
DescribeNegationTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase
DescribeNegationToImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnorderedElementsAreMatcherImplBase::DescribeNegationToImpl($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BoundSecondMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ComparisonBase::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatchBase::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointeeMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PointwiseMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::RefMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::SizeIsMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const { *os << "is anything"; }$/;"	f	class:testing::internal::AnyMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ArgsMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::BothOfMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainsMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EachMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::KeyMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::NotMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PairMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { *os << "is NULL"; }$/;"	f	class:testing::internal::IsNullMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { *os << "isn't NULL"; }$/;"	f	class:testing::internal::NotNullMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }$/;"	f	class:testing::Cardinality
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }$/;"	f	class:testing::internal::MatcherBase
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::ContainerEqMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::EndsWithMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::FieldMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::HasSubstrMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::PropertyMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StartsWithMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::TrulyMatcher
DescribeTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase
DescribeTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void BetweenCardinalityImpl::DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::__anon175::BetweenCardinalityImpl
DescribeToHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^  void DescribeToHelper(bool expect_eq, ::std::ostream* os) const {$/;"	f	class:testing::internal::StrEqualityMatcher
DescribeToImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnorderedElementsAreMatcherImplBase::DescribeToImpl($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
DeserializeNext	cartographer/cartographer/io/serialization_format_migration.cc	/^bool DeserializeNext(cartographer::io::ProtoStreamReaderInterface* const input,$/;"	f	namespace:cartographer::io::__anon19
DeserializePoseGraphFromFile	cartographer/cartographer/io/proto_stream_deserializer.cc	/^mapping::proto::PoseGraph DeserializePoseGraphFromFile($/;"	f	namespace:cartographer::io
Destroy	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Destroy() {$/;"	f	class:ceres::internal::ManualConstructor
DestructorCountingCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  explicit DestructorCountingCostFunction(int *num_destructions)$/;"	f	class:ceres::internal::DestructorCountingCostFunction
DestructorCountingCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^class DestructorCountingCostFunction : public SizedCostFunction<3, 4, 5> {$/;"	c	namespace:ceres::internal	file:
DetectFloors	cartographer/cartographer/mapping/detect_floors.cc	/^std::vector<Floor> DetectFloors(const proto::Trajectory& trajectory) {$/;"	f	namespace:cartographer::mapping
DetectStructure	ceres-solver/internal/ceres/detect_structure.cc	/^void DetectStructure(const CompressedRowBlockStructure& bs,$/;"	f	namespace:ceres::internal
Differentiate	ceres-solver/include/ceres/internal/autodiff.h	/^  static bool Differentiate(const Functor& functor,$/;"	f	struct:ceres::internal::AutoDiff
DifferentiatePolynomial	ceres-solver/internal/ceres/polynomial.cc	/^Vector DifferentiatePolynomial(const Vector& polynomial) {$/;"	f	namespace:ceres::internal
DimensionType	ceres-solver/include/ceres/types.h	/^enum DimensionType {$/;"	g	namespace:ceres
DirectionInfinityNorm	ceres-solver/internal/ceres/line_search.cc	/^double LineSearchFunction::DirectionInfinityNorm() const {$/;"	f	class:ceres::internal::LineSearchFunction
DirectoryExists	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::DirectoryExists() const {$/;"	f	class:testing::internal::FilePath
DiscreteScan2D	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^typedef std::vector<Eigen::Array2i> DiscreteScan2D;$/;"	t	namespace:cartographer::mapping::scan_matching
DiscreteScan3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^struct DiscreteScan3D {$/;"	s	namespace:cartographer::mapping::scan_matching	file:
DiscretizeScan	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^DiscreteScan3D FastCorrelativeScanMatcher3D::DiscretizeScan($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
DiscretizeScans	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^std::vector<DiscreteScan2D> DiscretizeScans($/;"	f	namespace:cartographer::mapping::scan_matching
Dispatch	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^void OrderedMultiQueue::Dispatch() {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
DispatchOptimization	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::DispatchOptimization() {$/;"	f	class:cartographer::mapping::PoseGraph2D
DispatchOptimization	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::DispatchOptimization() {$/;"	f	class:cartographer::mapping::PoseGraph3D
DispatchScanMatcherConstruction	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^ConstraintBuilder2D::DispatchScanMatcherConstruction(const SubmapId& submap_id,$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
DispatchScanMatcherConstruction	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^ConstraintBuilder3D::DispatchScanMatcherConstruction($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
Dispatchable	cartographer/cartographer/sensor/internal/dispatchable.h	/^  Dispatchable(const std::string &sensor_id, const DataType &data)$/;"	f	class:cartographer::sensor::Dispatchable
Dispatchable	cartographer/cartographer/sensor/internal/dispatchable.h	/^class Dispatchable : public Data {$/;"	c	namespace:cartographer::sensor
DistanceBetweenSignAndMagnitudeNumbers	ceres-solver/internal/ceres/gtest/gtest.h	/^  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,$/;"	f	class:testing::internal::FloatingPoint
DistanceFromCircleCost	ceres-solver/examples/circle_fit.cc	/^  DistanceFromCircleCost(double xx, double yy) : xx_(xx), yy_(yy) {}$/;"	f	class:DistanceFromCircleCost
DistanceFromCircleCost	ceres-solver/examples/circle_fit.cc	/^class DistanceFromCircleCost {$/;"	c	file:
DistanceType	ceres-solver/internal/ceres/gmock/gmock.h	/^        DistanceType;$/;"	t	class:testing::internal::BeginEndDistanceIsMatcher::Impl
Div	ceres-solver/include/ceres/jet.h	/^  struct Div {$/;"	s	struct:Eigen::NumTraits
DivideByTwoRoundingTowardsNegativeInfinity	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^inline int DivideByTwoRoundingTowardsNegativeInfinity(const int value) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon102
DoAll	ceres-solver/internal/ceres/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2) {$/;"	f	namespace:testing
DoAll	ceres-solver/internal/ceres/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3) {$/;"	f	namespace:testing
DoAll	ceres-solver/internal/ceres/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4) {$/;"	f	namespace:testing
DoAll	ceres-solver/internal/ceres/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5) {$/;"	f	namespace:testing
DoAll	ceres-solver/internal/ceres/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5, Action6 a6) {$/;"	f	namespace:testing
DoAll	ceres-solver/internal/ceres/gmock/gmock.h	/^DoAll(Action1 a1, Action2 a2, Action3 a3, Action4 a4, Action5 a5, Action6 a6,$/;"	f	namespace:testing
DoBothAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  DoBothAction(Action1 action1, Action2 action2)$/;"	f	class:testing::internal::DoBothAction
DoBothAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class DoBothAction {$/;"	c	namespace:testing::internal
DoDefault	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::DoDefaultAction DoDefault() {$/;"	f	namespace:testing
DoDefaultAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class DoDefaultAction {$/;"	c	namespace:testing::internal
DoInnerIterationsIfNeeded	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^void TrustRegionMinimizer::DoInnerIterationsIfNeeded() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
DoLineSearch	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^void TrustRegionMinimizer::DoLineSearch(const Vector& x,$/;"	f	class:ceres::internal::TrustRegionMinimizer
DoSearch	ceres-solver/internal/ceres/line_search.cc	/^void ArmijoLineSearch::DoSearch(const double step_size_estimate,$/;"	f	class:ceres::internal::ArmijoLineSearch
DoSearch	ceres-solver/internal/ceres/line_search.cc	/^void WolfeLineSearch::DoSearch(const double step_size_estimate,$/;"	f	class:ceres::internal::WolfeLineSearch
DoToString	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::string LuaParameterDictionary::DoToString($/;"	f	class:cartographer::common::LuaParameterDictionary
DoWork	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^void ThreadPoolForTesting::DoWork() {$/;"	f	class:cartographer::common::testing::ThreadPoolForTesting
DoWork	cartographer/cartographer/common/thread_pool.cc	/^void ThreadPool::DoWork() {$/;"	f	class:cartographer::common::ThreadPool
DoglegStrategy	ceres-solver/internal/ceres/dogleg_strategy.cc	/^DoglegStrategy::DoglegStrategy(const TrustRegionStrategy::Options& options)$/;"	f	class:ceres::internal::DoglegStrategy
DoglegStrategy	ceres-solver/internal/ceres/dogleg_strategy.h	/^class DoglegStrategy : public TrustRegionStrategy {$/;"	c	namespace:ceres::internal
DoglegStrategyFixtureEllipse	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^class DoglegStrategyFixtureEllipse : public Fixture {$/;"	c	namespace:ceres::internal::__anon178	file:
DoglegStrategyFixtureValley	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^class DoglegStrategyFixtureValley : public Fixture {$/;"	c	namespace:ceres::internal::__anon178	file:
DoglegType	ceres-solver/include/ceres/types.h	/^enum DoglegType {$/;"	g	namespace:ceres
DoglegTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* DoglegTypeToString(DoglegType type) {$/;"	f	namespace:ceres
Done	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    bool Done() const { return current_ == end_; }$/;"	f	class:cartographer::mapping::FlatGrid::Iterator
DotProduct	ceres-solver/include/ceres/rotation.h	/^T DotProduct(const T x[3], const T y[3]) {$/;"	f	namespace:ceres
Double	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef FloatingPoint<double> Double;$/;"	t	namespace:testing::internal
DoubleEq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> DoubleEq(double rhs) {$/;"	f	namespace:testing
DoubleLE	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult DoubleLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
DoubleNear	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> DoubleNear($/;"	f	namespace:testing
DoubleNearPredFormat	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult DoubleNearPredFormat(const char* expr1,$/;"	f	namespace:testing::internal
DownCast_	ceres-solver/internal/ceres/gtest/gtest.h	/^inline To DownCast_(From* f) {  \/\/ so we only accept pointers$/;"	f	namespace:std::tr1
DrawAndPublish	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^void Node::DrawAndPublish(const ::ros::WallTimerEvent& unused_timer_event) {$/;"	f	class:cartographer_ros::__anon135::Node
DrawProbabilityGrid	cartographer/cartographer/io/probability_grid_points_processor.cc	/^std::unique_ptr<Image> DrawProbabilityGrid($/;"	f	namespace:cartographer::io
DrawTexture	cartographer/cartographer/io/submap_painter.cc	/^UniqueCairoSurfacePtr DrawTexture(const std::vector<char>& intensity,$/;"	f	namespace:cartographer::io
DrawToSubmapTexture	cartographer/cartographer/mapping/2d/probability_grid.cc	/^bool ProbabilityGrid::DrawToSubmapTexture($/;"	f	class:cartographer::mapping::ProbabilityGrid
DrawTrajectories	cartographer/cartographer/io/probability_grid_points_processor.h	/^  enum class DrawTrajectories { kNo, kYes };$/;"	c	class:cartographer::io::ProbabilityGridPointsProcessor
DrawTrajectories	cartographer/cartographer/io/xray_points_processor.h	/^  enum class DrawTrajectories { kNo, kYes };$/;"	c	class:cartographer::io::XRayPointsProcessor
DrawTrajectoriesIntoImage	cartographer/cartographer/io/probability_grid_points_processor.cc	/^void DrawTrajectoriesIntoImage($/;"	f	namespace:cartographer::io::__anon24
DrawTrajectory	cartographer/cartographer/io/draw_trajectories.cc	/^void DrawTrajectory(const mapping::proto::Trajectory& trajectory,$/;"	f	namespace:cartographer::io
DrawableSubmap	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^DrawableSubmap::DrawableSubmap(const ::cartographer::mapping::SubmapId& id,$/;"	f	class:cartographer_rviz::DrawableSubmap
DrawableSubmap	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^class DrawableSubmap : public QObject {$/;"	c	namespace:cartographer_rviz
DummyCostFunction	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^class DummyCostFunction : public SizedCostFunction<kNumResiduals, N1, N2, N3> {$/;"	c	namespace:ceres::internal	file:
DummyCostFunction	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^class DummyCostFunction: public SizedCostFunction<M, N1, N2, N3> {$/;"	c	namespace:ceres::internal	file:
DummyCostFunction	ceres-solver/internal/ceres/solver_test.cc	/^class DummyCostFunction : public SizedCostFunction<kNumResiduals, N1, N2, N3> {$/;"	c	namespace:ceres::internal	file:
DummyCostFunction	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^class DummyCostFunction : public SizedCostFunction<kNumResiduals, N1, N2, N3> {$/;"	c	namespace:ceres::internal	file:
DummyFileResolver	cartographer/cartographer/common/lua_parameter_dictionary_test_helpers.h	/^  DummyFileResolver() {}$/;"	f	class:cartographer::common::DummyFileResolver
DummyFileResolver	cartographer/cartographer/common/lua_parameter_dictionary_test_helpers.h	/^class DummyFileResolver : public FileResolver {$/;"	c	namespace:cartographer::common
DummyMatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^  DummyMatchResultListener() : MatchResultListener(NULL) {}$/;"	f	class:testing::internal::DummyMatchResultListener
DummyMatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^class DummyMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
DumpFormatType	ceres-solver/include/ceres/types.h	/^enum DumpFormatType {$/;"	g	namespace:ceres
DumpLinearLeastSquaresProblem	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^bool DumpLinearLeastSquaresProblem(const string& filename_base,$/;"	f	namespace:ceres::internal
DumpLinearLeastSquaresProblemToConsole	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^bool DumpLinearLeastSquaresProblemToConsole(const SparseMatrix* A,$/;"	f	namespace:ceres::internal::__anon182
DumpLinearLeastSquaresProblemToTextFile	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^bool DumpLinearLeastSquaresProblemToTextFile(const string& filename_base,$/;"	f	namespace:ceres::internal::__anon182
DynamicAutoDiffCostFunction	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	/^  explicit DynamicAutoDiffCostFunction(CostFunctor* functor)$/;"	f	class:ceres::DynamicAutoDiffCostFunction
DynamicAutoDiffCostFunction	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	/^class DynamicAutoDiffCostFunction : public DynamicCostFunction {$/;"	c	namespace:ceres
DynamicCompressedRowJacobianFinalizer	ceres-solver/internal/ceres/dynamic_compressed_row_finalizer.h	/^struct DynamicCompressedRowJacobianFinalizer {$/;"	s	namespace:ceres::internal
DynamicCompressedRowJacobianWriter	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h	/^  DynamicCompressedRowJacobianWriter(Evaluator::Options \/* ignored *\/,$/;"	f	class:ceres::internal::DynamicCompressedRowJacobianWriter
DynamicCompressedRowJacobianWriter	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h	/^class DynamicCompressedRowJacobianWriter {$/;"	c	namespace:ceres::internal
DynamicCompressedRowSparseMatrix	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc	/^DynamicCompressedRowSparseMatrix::DynamicCompressedRowSparseMatrix($/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrix
DynamicCompressedRowSparseMatrix	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h	/^class DynamicCompressedRowSparseMatrix : public CompressedRowSparseMatrix {$/;"	c	namespace:ceres::internal
DynamicCompressedRowSparseMatrixTest	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^class DynamicCompressedRowSparseMatrixTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
DynamicCostFunction	ceres-solver/include/ceres/dynamic_cost_function.h	/^class CERES_EXPORT DynamicCostFunction : public CostFunction {$/;"	c	namespace:ceres
DynamicCostFunctionToFunctor	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	/^  explicit DynamicCostFunctionToFunctor(CostFunction* cost_function)$/;"	f	class:ceres::DynamicCostFunctionToFunctor
DynamicCostFunctionToFunctor	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	/^class DynamicCostFunctionToFunctor {$/;"	c	namespace:ceres
DynamicNumericDiffCostFunction	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  explicit DynamicNumericDiffCostFunction($/;"	f	class:ceres::DynamicNumericDiffCostFunction
DynamicNumericDiffCostFunction	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^class DynamicNumericDiffCostFunction : public DynamicCostFunction {$/;"	c	namespace:ceres
DynamicProblem	ceres-solver/internal/ceres/problem_test.cc	/^  DynamicProblem() {$/;"	f	struct:ceres::internal::DynamicProblem
DynamicProblem	ceres-solver/internal/ceres/problem_test.cc	/^struct DynamicProblem : public ::testing::TestWithParam<bool> {$/;"	s	namespace:ceres::internal	file:
DynamicSparseNormalCholeskySolver	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^DynamicSparseNormalCholeskySolver::DynamicSparseNormalCholeskySolver($/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolver
DynamicSparseNormalCholeskySolver	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.h	/^class DynamicSparseNormalCholeskySolver$/;"	c	namespace:ceres::internal
DynamicSparseNormalCholeskySolverTest	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^class DynamicSparseNormalCholeskySolverTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
DynamicTwoParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^class DynamicTwoParameterBlockFunctor {$/;"	c	namespace:ceres::internal	file:
EBlockRowOuterProduct	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^EBlockRowOuterProduct(const BlockSparseMatrix* A,$/;"	f	class:ceres::internal::SchurEliminator
EIGEN	ceres-solver/include/ceres/types.h	/^  EIGEN,$/;"	e	enum:ceres::DenseLinearAlgebraLibraryType
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	ceres-solver/internal/ceres/schur_eliminator_impl.h	46;"	d
EIGEN_PATH	ceres-solver/jni/Android.mk	/^EIGEN_PATH := $(EIGEN_PATH)$/;"	m
EIGEN_SPARSE	ceres-solver/include/ceres/types.h	/^  EIGEN_SPARSE,$/;"	e	enum:ceres::SparseLinearAlgebraLibraryType
END_MGH_PROBLEM	ceres-solver/examples/more_garbow_hillstrom.cc	/^END_MGH_PROBLEM;$/;"	m	namespace:ceres::examples	file:
END_MGH_PROBLEM	ceres-solver/examples/more_garbow_hillstrom.cc	124;"	d	file:
END_MGH_PROBLEM	ceres-solver/examples/more_garbow_hillstrom.cc	536;"	d	file:
ERROR	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int ERROR   = -2;$/;"	v
ERROR	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int ERROR   = ::ERROR;$/;"	m	namespace:google
EXAMPLES_CERES_POSE_GRAPH_3D_ERROR_TERM_H_	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	32;"	d
EXAMPLES_CERES_READ_G2O_H_	ceres-solver/examples/slam/common/read_g2o.h	34;"	d
EXAMPLES_CERES_TYPES_H_	ceres-solver/examples/slam/pose_graph_3d/types.h	32;"	d
EXCLUDES	cartographer/cartographer/common/mutex.h	53;"	d
EXCLUDES	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^    EXCLUDES(mutex_) {$/;"	f	namespace:cartographer::mapping
EXCLUDES	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^    EXCLUDES(mutex_) {$/;"	f	namespace:cartographer::mapping
EXECUTE_TEST	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
EXPECT_ANY_THROW	ceres-solver/internal/ceres/gtest/gtest.h	20456;"	d
EXPECT_CALL	ceres-solver/internal/ceres/gmock/gmock.h	11023;"	d
EXPECT_DEATH	ceres-solver/internal/ceres/gtest/gtest.h	9484;"	d
EXPECT_DEATH_IF_SUPPORTED	ceres-solver/internal/ceres/gtest/gtest.h	9581;"	d
EXPECT_DEATH_IF_SUPPORTED	ceres-solver/internal/ceres/gtest/gtest.h	9586;"	d
EXPECT_DEBUG_DEATH	ceres-solver/internal/ceres/gtest/gtest.h	9558;"	d
EXPECT_DEBUG_DEATH	ceres-solver/internal/ceres/gtest/gtest.h	9566;"	d
EXPECT_DOUBLE_EQ	ceres-solver/internal/ceres/gtest/gtest.h	20997;"	d
EXPECT_EQ	ceres-solver/internal/ceres/gtest/gtest.h	20888;"	d
EXPECT_EXIT	ceres-solver/internal/ceres/gtest/gtest.h	9473;"	d
EXPECT_FALSE	ceres-solver/internal/ceres/gtest/gtest.h	20471;"	d
EXPECT_FATAL_FAILURE	ceres-solver/internal/ceres/gmock_gtest_all.cc	211;"	d	file:
EXPECT_FATAL_FAILURE_ON_ALL_THREADS	ceres-solver/internal/ceres/gmock_gtest_all.cc	228;"	d	file:
EXPECT_FLOAT_EQ	ceres-solver/internal/ceres/gtest/gtest.h	20993;"	d
EXPECT_GE	ceres-solver/internal/ceres/gtest/gtest.h	20898;"	d
EXPECT_GT	ceres-solver/internal/ceres/gtest/gtest.h	20900;"	d
EXPECT_HRESULT_FAILED	ceres-solver/internal/ceres/gtest/gtest.h	21047;"	d
EXPECT_HRESULT_SUCCEEDED	ceres-solver/internal/ceres/gtest/gtest.h	21041;"	d
EXPECT_LE	ceres-solver/internal/ceres/gtest/gtest.h	20894;"	d
EXPECT_LT	ceres-solver/internal/ceres/gtest/gtest.h	20896;"	d
EXPECT_NE	ceres-solver/internal/ceres/gtest/gtest.h	20892;"	d
EXPECT_NEAR	ceres-solver/internal/ceres/gtest/gtest.h	21009;"	d
EXPECT_NONFATAL_FAILURE	ceres-solver/internal/ceres/gmock_gtest_all.cc	277;"	d	file:
EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS	ceres-solver/internal/ceres/gmock_gtest_all.cc	291;"	d	file:
EXPECT_NO_FATAL_FAILURE	ceres-solver/internal/ceres/gtest/gtest.h	21067;"	d
EXPECT_NO_THROW	ceres-solver/internal/ceres/gtest/gtest.h	20454;"	d
EXPECT_PRED1	ceres-solver/internal/ceres/gtest/gtest.h	20597;"	d
EXPECT_PRED2	ceres-solver/internal/ceres/gtest/gtest.h	20645;"	d
EXPECT_PRED3	ceres-solver/internal/ceres/gtest/gtest.h	20700;"	d
EXPECT_PRED4	ceres-solver/internal/ceres/gtest/gtest.h	20762;"	d
EXPECT_PRED5	ceres-solver/internal/ceres/gtest/gtest.h	20831;"	d
EXPECT_PRED_FORMAT1	ceres-solver/internal/ceres/gtest/gtest.h	20595;"	d
EXPECT_PRED_FORMAT2	ceres-solver/internal/ceres/gtest/gtest.h	20643;"	d
EXPECT_PRED_FORMAT3	ceres-solver/internal/ceres/gtest/gtest.h	20698;"	d
EXPECT_PRED_FORMAT4	ceres-solver/internal/ceres/gtest/gtest.h	20760;"	d
EXPECT_PRED_FORMAT5	ceres-solver/internal/ceres/gtest/gtest.h	20829;"	d
EXPECT_STRCASEEQ	ceres-solver/internal/ceres/gtest/gtest.h	20965;"	d
EXPECT_STRCASENE	ceres-solver/internal/ceres/gtest/gtest.h	20967;"	d
EXPECT_STREQ	ceres-solver/internal/ceres/gtest/gtest.h	20961;"	d
EXPECT_STRNE	ceres-solver/internal/ceres/gtest/gtest.h	20963;"	d
EXPECT_THAT	ceres-solver/internal/ceres/gmock/gmock.h	9209;"	d
EXPECT_THROW	ceres-solver/internal/ceres/gtest/gtest.h	20452;"	d
EXPECT_TRUE	ceres-solver/internal/ceres/gtest/gtest.h	20468;"	d
Each	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::EachMatcher<M> Each(M matcher) {$/;"	f	namespace:testing
EachMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit EachMatcher(M m) : inner_matcher_(m) {}$/;"	f	class:testing::internal::EachMatcher
EachMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class EachMatcher {$/;"	c	namespace:testing::internal
EachMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit EachMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::EachMatcherImpl
EachMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class EachMatcherImpl : public QuantifierMatcherImpl<Container> {$/;"	c	namespace:testing::internal
EasyCostFunction	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class EasyCostFunction : public SizedCostFunction<3, 5, 5> {$/;"	c	namespace:ceres::internal
EasyFunctor	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class EasyFunctor {$/;"	c	namespace:ceres::internal
EdgeWeight	ceres-solver/internal/ceres/graph.h	/^  double EdgeWeight(const Vertex& vertex1, const Vertex& vertex2) const {$/;"	f	class:ceres::internal::WeightedGraph
EditType	ceres-solver/internal/ceres/gtest/gtest.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	g	namespace:testing::internal::edit_distance
Eigen	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^namespace Eigen {$/;"	n	file:
Eigen	ceres-solver/include/ceres/jet.h	/^namespace Eigen {$/;"	n
EigenComparator	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^struct EigenComparator {$/;"	s	namespace:cartographer::mapping::__anon110	file:
EigenDouble	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::NumTraits<double> EigenDouble;$/;"	t	file:
EigenQuaternionParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT EigenQuaternionParameterization$/;"	c	namespace:ceres
EigenQuaternionPlus	ceres-solver/internal/ceres/local_parameterization_test.cc	/^struct EigenQuaternionPlus {$/;"	s	namespace:ceres::internal	file:
EigenSparseCholesky	ceres-solver/internal/ceres/eigensparse.h	/^class EigenSparseCholesky : public SparseCholesky {$/;"	c	namespace:ceres::internal
EigenSparseCholeskyTemplate	ceres-solver/internal/ceres/eigensparse.cc	/^  EigenSparseCholeskyTemplate() : analyzed_(false) {}$/;"	f	class:ceres::internal::EigenSparseCholeskyTemplate
EigenSparseCholeskyTemplate	ceres-solver/internal/ceres/eigensparse.cc	/^class EigenSparseCholeskyTemplate : public EigenSparseCholesky {$/;"	c	namespace:ceres::internal	file:
EigenTypes	ceres-solver/include/ceres/internal/eigen.h	/^struct EigenTypes {$/;"	s	namespace:ceres
EightParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct EightParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
EitherOfMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  EitherOfMatcher(Matcher1 matcher1, Matcher2 matcher2)$/;"	f	class:testing::internal::EitherOfMatcher
EitherOfMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class EitherOfMatcher {$/;"	c	namespace:testing::internal
EitherOfMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  EitherOfMatcherImpl(const Matcher<T>& matcher1, const Matcher<T>& matcher2)$/;"	f	class:testing::internal::EitherOfMatcherImpl
EitherOfMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class EitherOfMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
Element	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
Element	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::QuantifierMatcherImpl
Element	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename StlContainer::value_type Element;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
ElementMatcherPair	ceres-solver/internal/ceres/gmock/gmock.h	/^typedef ::std::pair<size_t, size_t> ElementMatcherPair;$/;"	t	namespace:testing::internal
ElementMatcherPairs	ceres-solver/internal/ceres/gmock/gmock.h	/^typedef ::std::vector<ElementMatcherPair> ElementMatcherPairs;$/;"	t	namespace:testing::internal
Elements	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Message Elements(size_t count) {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
Elements	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Message Elements(size_t n) {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
ElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAre() {$/;"	f	namespace:testing
ElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAre(const T1& e1) {$/;"	f	namespace:testing
ElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2) {$/;"	f	namespace:testing
ElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3) {$/;"	f	namespace:testing
ElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4) {$/;"	f	namespace:testing
ElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4,$/;"	f	namespace:testing
ElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAreArray(::std::initializer_list<T> xs) {$/;"	f	namespace:testing
ElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAreArray(Iter first, Iter last) {$/;"	f	namespace:testing
ElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^ElementsAreArray(const Container& container) {$/;"	f	namespace:testing
ElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::ElementsAreArrayMatcher<T> ElementsAreArray($/;"	f	namespace:testing
ElementsAreArrayMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  ElementsAreArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}$/;"	f	class:testing::internal::ElementsAreArrayMatcher
ElementsAreArrayMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class ElementsAreArrayMatcher {$/;"	c	namespace:testing::internal
ElementsAreMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ElementsAreMatcher(const MatcherTuple& args) : matchers_(args) {}$/;"	f	class:testing::internal::ElementsAreMatcher
ElementsAreMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class ElementsAreMatcher {$/;"	c	namespace:testing::internal
ElementsAreMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  ElementsAreMatcherImpl(InputIter first, InputIter last) {$/;"	f	class:testing::internal::ElementsAreMatcherImpl
ElementsAreMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class ElementsAreMatcherImpl : public MatcherInterface<Container> {$/;"	c	namespace:testing::internal
Eliminate	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^Eliminate(const BlockSparseMatrix* A,$/;"	f	class:ceres::internal::SchurEliminator
EliminateSolveAndCompare	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  void EliminateSolveAndCompare(const VectorRef& diagonal,$/;"	f	class:ceres::internal::SchurEliminatorTest
Embed3D	cartographer/cartographer/transform/transform.h	/^Rigid3<T> Embed3D(const Rigid2<T>& transform) {$/;"	f	namespace:cartographer::transform
EmptyTestEventListener	ceres-solver/internal/ceres/gtest/gtest.h	/^class EmptyTestEventListener : public TestEventListener {$/;"	c	namespace:testing
EnableIf	ceres-solver/internal/ceres/gtest/gtest.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
EnableResidualBlockDependencies	ceres-solver/internal/ceres/parameter_block.h	/^  void EnableResidualBlockDependencies() {$/;"	f	class:ceres::internal::ParameterBlock
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator10
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator2
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator3
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator4
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator5
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator6
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator7
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator8
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<ParamType>* End() const {$/;"	f	class:testing::internal::CartesianProductGenerator9
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::RangeGenerator
End	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ParamIteratorInterface<T>* End() const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
EndIterator	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^CompressedPointCloud::ConstIterator::EndIterator($/;"	f	class:cartographer::sensor::CompressedPointCloud::ConstIterator
EndOfTrajectory	cartographer/cartographer/mapping/id.h	/^  ConstIterator EndOfTrajectory(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::MapById
EndOfTrajectory	cartographer/cartographer/sensor/map_by_time.h	/^  ConstIterator EndOfTrajectory(const int trajectory_id) const {$/;"	f	class:cartographer::sensor::MapByTime
EndianAwareFileReader	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  EndianAwareFileReader(void) : file_descriptor_(-1) {$/;"	f	class:__anon155::EndianAwareFileReader
EndianAwareFileReader	ceres-solver/examples/libmv_bundle_adjuster.cc	/^class EndianAwareFileReader {$/;"	c	namespace:__anon155	file:
EndsWith	ceres-solver/internal/ceres/gmock/gmock.h	/^    EndsWith(const internal::string& suffix) {$/;"	f	namespace:testing
EndsWith	ceres-solver/internal/ceres/gmock/gmock.h	/^    EndsWith(const internal::wstring& suffix) {$/;"	f	namespace:testing
EndsWithCaseInsensitive	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool String::EndsWithCaseInsensitive($/;"	f	class:testing::internal::String
EndsWithMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit EndsWithMatcher(const StringType& suffix) : suffix_(suffix) {}$/;"	f	class:testing::internal::EndsWithMatcher
EndsWithMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class EndsWithMatcher {$/;"	c	namespace:testing::internal
EnqueueLocalSlamResultData	cartographer/cartographer/cloud/internal/map_builder_context_impl.cc	/^void MapBuilderContext<mapping::Submap2D>::EnqueueLocalSlamResultData($/;"	f	class:cartographer::cloud::MapBuilderContext
EnqueueLocalSlamResultData	cartographer/cartographer/cloud/internal/map_builder_context_impl.cc	/^void MapBuilderContext<mapping::Submap3D>::EnqueueLocalSlamResultData($/;"	f	class:cartographer::cloud::MapBuilderContext
EnqueueSensorData	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::EnqueueSensorData($/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
EnqueueSensorData	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^void MapBuilderContext<SubmapType>::EnqueueSensorData($/;"	f	class:cartographer::cloud::MapBuilderContext
Environment	ceres-solver/internal/ceres/gtest/gtest.h	/^class Environment {$/;"	c	namespace:testing
Eq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::Eq2Matcher Eq() { return internal::Eq2Matcher(); }$/;"	f	namespace:testing
Eq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::EqMatcher<T> Eq(T x) { return internal::EqMatcher<T>(x); }$/;"	f	namespace:testing
Eq2Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Eq2Matcher : public PairMatchBase<Eq2Matcher, AnyEq> {$/;"	c	namespace:testing::internal
EqFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult EqFailure(const char* lhs_expression,$/;"	f	namespace:testing::internal
EqHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^class EqHelper {$/;"	c	namespace:testing::internal
EqHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^class EqHelper<true> {$/;"	c	namespace:testing::internal
EqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit EqMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::EqMatcher
EqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class EqMatcher : public ComparisonBase<EqMatcher<Rhs>, Rhs, AnyEq> {$/;"	c	namespace:testing::internal
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<ParamType>& other) const {$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::RangeGenerator::Iterator
Equals	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual bool Equals(const ParamIteratorInterface<T>& other) const {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
EqualsLandmark	cartographer/cartographer/sensor/landmark_data_test.cc	/^::testing::Matcher<const LandmarkObservation&> EqualsLandmark($/;"	f	namespace:cartographer::sensor::__anon116
EqualsLandmark	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^::testing::Matcher<const LandmarkObservation&> EqualsLandmark($/;"	f	namespace:cartographer_ros::__anon145
EqualsSubmapId	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^::testing::Matcher<const SubmapId&> EqualsSubmapId(const SubmapId& expected) {$/;"	f	namespace:cartographer::mapping::__anon83
Error	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^struct Error {$/;"	s	namespace:cartographer::ground_truth::__anon49	file:
EscapeXml	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string XmlUnitTestResultPrinter::EscapeXml($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
EscapeXmlAttribute	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static std::string EscapeXmlAttribute(const std::string& str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EscapeXmlText	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static std::string EscapeXmlText(const char* str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
EstimateGravityOrientation	cartographer/cartographer/mapping/pose_extrapolator.cc	/^Eigen::Quaterniond PoseExtrapolator::EstimateGravityOrientation($/;"	f	class:cartographer::mapping::PoseExtrapolator
EstimateHomography2DFromCorrespondences	ceres-solver/examples/libmv_homography.cc	/^bool EstimateHomography2DFromCorrespondences($/;"	f	namespace:__anon158
EstimateHomographyOptions	ceres-solver/examples/libmv_homography.cc	/^  EstimateHomographyOptions()$/;"	f	struct:__anon158::EstimateHomographyOptions
EstimateHomographyOptions	ceres-solver/examples/libmv_homography.cc	/^struct EstimateHomographyOptions {$/;"	s	namespace:__anon158	file:
EstimateWorkSizeForQR	ceres-solver/internal/ceres/lapack.cc	/^int LAPACK::EstimateWorkSizeForQR(int num_rows, int num_cols) {$/;"	f	class:ceres::internal::LAPACK
EuclideanBundleCommonIntrinsics	ceres-solver/examples/libmv_bundle_adjuster.cc	/^void EuclideanBundleCommonIntrinsics(const vector<Marker> &all_markers,$/;"	f	namespace:__anon155
EuclideanCamera	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  EuclideanCamera() : image(-1) {}$/;"	f	struct:__anon155::EuclideanCamera
EuclideanCamera	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  EuclideanCamera(const EuclideanCamera &c) : image(c.image), R(c.R), t(c.t) {}$/;"	f	struct:__anon155::EuclideanCamera
EuclideanCamera	ceres-solver/examples/libmv_bundle_adjuster.cc	/^struct EuclideanCamera {$/;"	s	namespace:__anon155	file:
EuclideanDistanceFunctor	ceres-solver/examples/ellipse_approximation.cc	/^  explicit EuclideanDistanceFunctor(const double& sqrt_weight)$/;"	f	class:EuclideanDistanceFunctor
EuclideanDistanceFunctor	ceres-solver/examples/ellipse_approximation.cc	/^class EuclideanDistanceFunctor {$/;"	c	file:
EuclideanDistanceFunctor	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  explicit EuclideanDistanceFunctor(const double sqrt_weight)$/;"	f	class:ceres::internal::EuclideanDistanceFunctor
EuclideanDistanceFunctor	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^class EuclideanDistanceFunctor {$/;"	c	namespace:ceres::internal	file:
EuclideanPoint	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  EuclideanPoint() : track(-1) {}$/;"	f	struct:__anon155::EuclideanPoint
EuclideanPoint	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  EuclideanPoint(const EuclideanPoint &p) : track(p.track), X(p.X) {}$/;"	f	struct:__anon155::EuclideanPoint
EuclideanPoint	ceres-solver/examples/libmv_bundle_adjuster.cc	/^struct EuclideanPoint {$/;"	s	namespace:__anon155	file:
EulerAnglesToRotationMatrix	ceres-solver/include/ceres/rotation.h	/^inline void EulerAnglesToRotationMatrix(const T* euler,$/;"	f	namespace:ceres
EulerAnglesToRotationMatrix	ceres-solver/include/ceres/rotation.h	/^void EulerAnglesToRotationMatrix($/;"	f	namespace:ceres
Evaluate	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  bool Evaluate(const transform::Rigid3<T>& transform,$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
Evaluate	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  std::pair<const ResidualType&, const JacobianType&> Evaluate($/;"	f	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
Evaluate	ceres-solver/examples/denoising.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::examples::QuadraticCostFunction
Evaluate	ceres-solver/examples/ellipse_approximation.cc	/^  virtual bool Evaluate(const double* const* x,$/;"	f	class:PointToLineSegmentContourCostFunction
Evaluate	ceres-solver/examples/fields_of_experts.cc	/^bool FieldsOfExpertsCost::Evaluate(double const* const* parameters,$/;"	f	class:ceres::examples::FieldsOfExpertsCost
Evaluate	ceres-solver/examples/fields_of_experts.cc	/^void FieldsOfExpertsLoss::Evaluate(double sq_norm, double rho[3]) const {$/;"	f	class:ceres::examples::FieldsOfExpertsLoss
Evaluate	ceres-solver/examples/helloworld_analytic_diff.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:QuadraticCostFunction
Evaluate	ceres-solver/examples/rosenbrock.cc	/^  virtual bool Evaluate(const double* parameters,$/;"	f	class:Rosenbrock
Evaluate	ceres-solver/include/ceres/autodiff_cost_function.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::AutoDiffCostFunction
Evaluate	ceres-solver/include/ceres/cubic_interpolation.h	/^  template<typename JetT> void Evaluate(const JetT& r,$/;"	f	class:ceres::BiCubicInterpolator
Evaluate	ceres-solver/include/ceres/cubic_interpolation.h	/^  template<typename JetT> void Evaluate(const JetT& x, JetT* f) const {$/;"	f	class:ceres::CubicInterpolator
Evaluate	ceres-solver/include/ceres/cubic_interpolation.h	/^  void Evaluate(const double& r, const double& c, double* f) const {$/;"	f	class:ceres::BiCubicInterpolator
Evaluate	ceres-solver/include/ceres/cubic_interpolation.h	/^  void Evaluate(const double& x, double* f) const {$/;"	f	class:ceres::CubicInterpolator
Evaluate	ceres-solver/include/ceres/cubic_interpolation.h	/^  void Evaluate(double r, double c,$/;"	f	class:ceres::BiCubicInterpolator
Evaluate	ceres-solver/include/ceres/cubic_interpolation.h	/^  void Evaluate(double x, double* f, double* dfdx) const {$/;"	f	class:ceres::CubicInterpolator
Evaluate	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::DynamicAutoDiffCostFunction
Evaluate	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::DynamicNumericDiffCostFunction
Evaluate	ceres-solver/include/ceres/loss_function.h	/^  virtual void Evaluate(double sq_norm, double out[3]) const {$/;"	f	class:ceres::LossFunctionWrapper
Evaluate	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::NumericDiffCostFunction
Evaluate	ceres-solver/internal/ceres/c_api.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:CallbackCostFunction
Evaluate	ceres-solver/internal/ceres/c_api.cc	/^  virtual void Evaluate(double sq_norm, double* rho) const {$/;"	f	class:CallbackLossFunction
Evaluate	ceres-solver/internal/ceres/conditioned_cost_function.cc	/^bool ConditionedCostFunction::Evaluate(double const* const* parameters,$/;"	f	class:ceres::ConditionedCostFunction
Evaluate	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::LinearCostFunction
Evaluate	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::BinaryCostFunction
Evaluate	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::UnaryCostFunction
Evaluate	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  virtual bool Evaluate(const double* const* x,$/;"	f	class:ceres::internal::PointToLineSegmentContourCostFunction
Evaluate	ceres-solver/internal/ceres/evaluator.h	/^  bool Evaluate(const double* state,$/;"	f	class:ceres::internal::Evaluator
Evaluate	ceres-solver/internal/ceres/evaluator_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::ParameterIgnoringCostFunction
Evaluate	ceres-solver/internal/ceres/evaluator_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::ParameterSensitiveCostFunction
Evaluate	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::BadTestTerm
Evaluate	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::GoodTestTerm
Evaluate	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  virtual bool Evaluate(double const* const* parameter_ptrs,$/;"	f	class:ceres::internal::LinearCostFunction
Evaluate	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::__anon179::GradientCheckingCostFunction
Evaluate	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::TestTerm
Evaluate	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::BinaryCostFunction
Evaluate	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::TernaryCostFunction
Evaluate	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::UnaryCostFunction
Evaluate	ceres-solver/internal/ceres/gradient_problem.cc	/^bool GradientProblem::Evaluate(const double* parameters,$/;"	f	class:ceres::GradientProblem
Evaluate	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual bool Evaluate(const EvaluateOptions& evaluate_options,$/;"	f	class:ceres::internal::GradientProblemEvaluator
Evaluate	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^  virtual bool Evaluate(const double* parameters,$/;"	f	class:ceres::internal::Rosenbrock
Evaluate	ceres-solver/internal/ceres/gradient_problem_test.cc	/^  virtual bool Evaluate(const double* parameters,$/;"	f	class:ceres::internal::QuadraticTestFunction
Evaluate	ceres-solver/internal/ceres/line_search.cc	/^void LineSearchFunction::Evaluate(const double x,$/;"	f	class:ceres::internal::LineSearchFunction
Evaluate	ceres-solver/internal/ceres/line_search_minimizer_test.cc	/^  virtual bool Evaluate(const double* parameters,$/;"	f	class:ceres::internal::QuadraticFirstOrderFunction
Evaluate	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::DummyCostFunction
Evaluate	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::FailingCostFunction
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void ArctanLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::ArctanLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void CauchyLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::CauchyLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void ComposedLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::ComposedLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void HuberLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::HuberLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void ScaledLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::ScaledLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void SoftLOneLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::SoftLOneLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void TolerantLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::TolerantLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void TrivialLoss::Evaluate(double s, double rho[3]) const {$/;"	f	class:ceres::TrivialLoss
Evaluate	ceres-solver/internal/ceres/loss_function.cc	/^void TukeyLoss::Evaluate(double s, double* rho) const {$/;"	f	class:ceres::TukeyLoss
Evaluate	ceres-solver/internal/ceres/normal_prior.cc	/^bool NormalPrior::Evaluate(double const* const* parameters,$/;"	f	class:ceres::NormalPrior
Evaluate	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::SizeTestingCostFunction
Evaluate	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::EasyCostFunction
Evaluate	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::ExponentialCostFunction
Evaluate	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::RandomizedCostFunction
Evaluate	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::TranscendentalCostFunction
Evaluate	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::DummyCostFunction	file:
Evaluate	ceres-solver/internal/ceres/problem.cc	/^bool Problem::Evaluate(const EvaluateOptions& evaluate_options,$/;"	f	class:ceres::Problem
Evaluate	ceres-solver/internal/ceres/problem_impl.cc	/^bool ProblemImpl::Evaluate(const Problem::EvaluateOptions& evaluate_options,$/;"	f	class:ceres::internal::ProblemImpl
Evaluate	ceres-solver/internal/ceres/problem_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::BinaryCostFunction
Evaluate	ceres-solver/internal/ceres/problem_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::DestructorCountingCostFunction
Evaluate	ceres-solver/internal/ceres/problem_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::QuadraticCostFunction
Evaluate	ceres-solver/internal/ceres/problem_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::TernaryCostFunction
Evaluate	ceres-solver/internal/ceres/problem_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::UnaryCostFunction
Evaluate	ceres-solver/internal/ceres/program_evaluator.h	/^  bool Evaluate(const Evaluator::EvaluateOptions& evaluate_options,$/;"	f	class:ceres::internal::ProgramEvaluator
Evaluate	ceres-solver/internal/ceres/program_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::MockCostFunctionBase
Evaluate	ceres-solver/internal/ceres/program_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::NumParameterBlocksCostFunction
Evaluate	ceres-solver/internal/ceres/program_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::UnaryIdentityCostFunction
Evaluate	ceres-solver/internal/ceres/reorder_program_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::MockCostFunctionBase
Evaluate	ceres-solver/internal/ceres/residual_block.cc	/^bool ResidualBlock::Evaluate(const bool apply_loss_function,$/;"	f	class:ceres::internal::ResidualBlock
Evaluate	ceres-solver/internal/ceres/residual_block_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::LocallyParameterizedCostFunction
Evaluate	ceres-solver/internal/ceres/residual_block_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::TernaryCostFunction
Evaluate	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::BadJacobianCostFunction
Evaluate	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::BadResidualCostFunction
Evaluate	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::GoodCostFunction
Evaluate	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::NoJacobianUpdateCostFunction
Evaluate	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::NoResidualUpdateCostFunction
Evaluate	ceres-solver/internal/ceres/solver_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::DummyCostFunction
Evaluate	ceres-solver/internal/ceres/solver_test.cc	/^  virtual bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::UnaryIdentityCostFunction
Evaluate	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::CurveCostFunction
Evaluate	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual bool Evaluate(const Evaluator::EvaluateOptions& evaluate_options,$/;"	f	class:ceres::internal::PowellEvaluator2
Evaluate	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::DummyCostFunction
Evaluate	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  bool Evaluate(double const* const* parameters,$/;"	f	class:ceres::internal::FailingCostFunction
EvaluateAnalyticalCost	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  std::pair<const ResidualType&, const JacobianType&> EvaluateAnalyticalCost($/;"	f	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest
EvaluateAndCompare	ceres-solver/internal/ceres/evaluator_test.cc	/^  void EvaluateAndCompare(ProblemImpl *problem,$/;"	f	struct:ceres::internal::EvaluatorTest
EvaluateAndCompare	ceres-solver/internal/ceres/problem_test.cc	/^  void EvaluateAndCompare(const Problem::EvaluateOptions& options,$/;"	f	class:ceres::internal::ProblemEvaluateTest
EvaluateAutoDiffCost	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  std::pair<const ResidualType&, const JacobianType&> EvaluateAutoDiffCost($/;"	f	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest
EvaluateCostFunction	ceres-solver/internal/ceres/gradient_checker.cc	/^bool EvaluateCostFunction($/;"	f	namespace:ceres::__anon164
EvaluateCostFunctor	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  bool EvaluateCostFunctor(double const* const* parameters,$/;"	f	class:ceres::DynamicNumericDiffCostFunction
EvaluateCostFunctorImpl	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  bool EvaluateCostFunctorImpl(const CostFunctor* functor,$/;"	f	class:ceres::DynamicNumericDiffCostFunction
EvaluateF	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  double EvaluateF(double r, double c) {$/;"	f	class:ceres::internal::BiCubicInterpolatorTest	file:
EvaluateGradientAndJacobian	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::EvaluateGradientAndJacobian() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
EvaluateGradientNorms	ceres-solver/internal/ceres/line_search_minimizer.cc	/^bool EvaluateGradientNorms(Evaluator* evaluator,$/;"	f	namespace:ceres::internal::__anon162
EvaluateImpl	ceres-solver/include/ceres/internal/numeric_diff.h	/^bool EvaluateImpl(const CostFunctor* functor,$/;"	f	namespace:ceres::internal
EvaluateJacobianColumn	ceres-solver/include/ceres/internal/numeric_diff.h	/^  static bool EvaluateJacobianColumn(const CostFunctor* functor,$/;"	f	struct:ceres::internal::NumericDiff
EvaluateJacobianForParameterBlock	ceres-solver/include/ceres/internal/numeric_diff.h	/^  static bool EvaluateJacobianForParameterBlock($/;"	f	struct:ceres::internal::NumericDiff
EvaluateOptions	ceres-solver/include/ceres/problem.h	/^    EvaluateOptions()$/;"	f	struct:ceres::Problem::EvaluateOptions
EvaluateOptions	ceres-solver/include/ceres/problem.h	/^  struct EvaluateOptions {$/;"	s	class:ceres::Problem
EvaluateOptions	ceres-solver/internal/ceres/evaluator.h	/^    EvaluateOptions()$/;"	f	struct:ceres::internal::Evaluator::EvaluateOptions
EvaluateOptions	ceres-solver/internal/ceres/evaluator.h	/^  struct EvaluateOptions {$/;"	s	class:ceres::internal::Evaluator
EvaluatePolynomial	ceres-solver/internal/ceres/polynomial.h	/^inline double EvaluatePolynomial(const Vector& polynomial, double x) {$/;"	f	namespace:ceres::internal
EvaluateRiddersJacobianColumn	ceres-solver/include/ceres/internal/numeric_diff.h	/^  static bool EvaluateRiddersJacobianColumn($/;"	f	struct:ceres::internal::NumericDiff
EvaluateScratch	ceres-solver/internal/ceres/program_evaluator.h	/^  struct EvaluateScratch {$/;"	s	class:ceres::internal::ProgramEvaluator
EvaluateSubspaceModel	ceres-solver/internal/ceres/dogleg_strategy.cc	/^double DoglegStrategy::EvaluateSubspaceModel(const Vector2d& x) const {$/;"	f	class:ceres::internal::DoglegStrategy
EvaluatedFdc	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  double EvaluatedFdc(double r, double c) {$/;"	f	class:ceres::internal::BiCubicInterpolatorTest	file:
EvaluatedFdr	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  double EvaluatedFdr(double r, double c) {$/;"	f	class:ceres::internal::BiCubicInterpolatorTest	file:
EvaluationToString	ceres-solver/internal/ceres/residual_block_utils.cc	/^string EvaluationToString(const ResidualBlock& block,$/;"	f	namespace:ceres::internal
Evaluator	ceres-solver/internal/ceres/evaluator.h	/^class Evaluator {$/;"	c	namespace:ceres::internal
EvaluatorTest	ceres-solver/internal/ceres/evaluator_test.cc	/^struct EvaluatorTest$/;"	s	namespace:ceres::internal	file:
EvaluatorTestOptions	ceres-solver/internal/ceres/evaluator_test.cc	/^  EvaluatorTestOptions(LinearSolverType linear_solver_type,$/;"	f	struct:ceres::internal::EvaluatorTestOptions
EvaluatorTestOptions	ceres-solver/internal/ceres/evaluator_test.cc	/^struct EvaluatorTestOptions {$/;"	s	namespace:ceres::internal	file:
EvenSubmapTrimmer	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  explicit EvenSubmapTrimmer(int trajectory_id)$/;"	f	class:cartographer::mapping::__anon105::EvenSubmapTrimmer
EvenSubmapTrimmer	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^class EvenSubmapTrimmer : public PoseGraphTrimmer {$/;"	c	namespace:cartographer::mapping::__anon105	file:
Event	cartographer/cartographer/common/rate_timer.h	/^  struct Event {$/;"	s	class:cartographer::common::RateTimer
EventForwardingEnabled	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool TestEventListeners::EventForwardingEnabled() const {$/;"	f	class:testing::TestEventListeners
EventLogger	ceres-solver/internal/ceres/wall_time.cc	/^EventLogger::EventLogger(const std::string& logger_name)$/;"	f	class:ceres::internal::EventLogger
EventLogger	ceres-solver/internal/ceres/wall_time.h	/^class EventLogger {$/;"	c	namespace:ceres::internal
Exactly	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ Cardinality Exactly(int n) { return Between(n, n); }$/;"	f	namespace:testing
ExcessiveArg	ceres-solver/internal/ceres/gmock/gmock.h	/^struct ExcessiveArg {};$/;"	s	namespace:testing::internal
ExecDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ExecDeathTest(const char* a_statement, const RE* a_regex,$/;"	f	class:testing::internal::ExecDeathTest
ExecDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class ExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
ExecDeathTestArgs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^struct ExecDeathTestArgs {$/;"	s	namespace:testing::internal	file:
ExecDeathTestChildMain	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static int ExecDeathTestChildMain(void* child_arg) {$/;"	f	namespace:testing::internal
ExecDeathTestSpawnChild	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {$/;"	f	namespace:testing::internal
Execute	cartographer/cartographer/common/task.cc	/^void Task::Execute() {$/;"	f	class:cartographer::common::Task
Execute	cartographer/cartographer/common/thread_pool.cc	/^void ThreadPoolInterface::Execute(Task* task) { task->Execute(); }$/;"	f	class:cartographer::common::ThreadPoolInterface
ExecutionSummary	ceres-solver/internal/ceres/execution_summary.h	/^class ExecutionSummary {$/;"	c	namespace:ceres::internal
Exists	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Exists() { return BuiltInDefaultValue<T>::Exists(); }$/;"	f	class:testing::internal::BuiltInDefaultValue
Exists	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Exists() { return true; }$/;"	f	class:testing::DefaultValue
Exists	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Exists() { return true; }$/;"	f	class:testing::internal::BuiltInDefaultValue
Exists	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Exists() {$/;"	f	class:testing::DefaultValue
Exists	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Exists() {$/;"	f	class:testing::internal::BuiltInDefaultValue
ExitSummary	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string ExitSummary(int exit_code) {$/;"	f	namespace:testing::internal
ExitedUnsuccessfully	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ExitedUnsuccessfully(int exit_status) {$/;"	f	namespace:testing::internal
ExitedWithCode	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {$/;"	f	class:testing::ExitedWithCode
ExitedWithCode	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ ExitedWithCode {$/;"	c	namespace:testing
ExpCostFunctor	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^struct ExpCostFunctor {$/;"	s	namespace:ceres::internal	file:
ExpectArraysClose	ceres-solver/internal/ceres/test_util.cc	/^void ExpectArraysClose(int n,$/;"	f	namespace:ceres::internal
ExpectArraysCloseUptoScale	ceres-solver/internal/ceres/test_util.cc	/^void ExpectArraysCloseUptoScale(int n,$/;"	f	namespace:ceres::internal
ExpectClose	ceres-solver/internal/ceres/test_util.cc	/^bool ExpectClose(double x, double y, double max_abs_relative_difference) {$/;"	f	namespace:ceres::internal
ExpectCostFunctionEvaluationIsNearlyCorrect	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^void EasyFunctor::ExpectCostFunctionEvaluationIsNearlyCorrect($/;"	f	class:ceres::internal::EasyFunctor
ExpectCostFunctionEvaluationIsNearlyCorrect	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^void ExponentialFunctor::ExpectCostFunctionEvaluationIsNearlyCorrect($/;"	f	class:ceres::internal::ExponentialFunctor
ExpectCostFunctionEvaluationIsNearlyCorrect	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^void RandomizedFunctor::ExpectCostFunctionEvaluationIsNearlyCorrect($/;"	f	class:ceres::internal::RandomizedFunctor
ExpectCostFunctionEvaluationIsNearlyCorrect	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^void TranscendentalFunctor::ExpectCostFunctionEvaluationIsNearlyCorrect($/;"	f	class:ceres::internal::TranscendentalFunctor
ExpectCostFunctionsAreEqual	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^void ExpectCostFunctionsAreEqual(const CostFunction& cost_function,$/;"	f	namespace:ceres::internal
ExpectEmpty	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void ExpectEmpty() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
ExpectEqualToCompressedRowSparseMatrixReference	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void ExpectEqualToCompressedRowSparseMatrixReference() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
ExpectEqualToDenseReference	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void ExpectEqualToDenseReference() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
ExpectJetArraysClose	ceres-solver/internal/ceres/rotation_test.cc	/^void ExpectJetArraysClose(const Jet<double, N> *x, const Jet<double, N> *y) {$/;"	f	namespace:ceres::internal
ExpectJetsClose	ceres-solver/internal/ceres/jet_test.cc	/^void ExpectJetsClose(const J &x, const J &y) {$/;"	f	namespace:ceres::internal
ExpectMatricesClose	ceres-solver/internal/ceres/gradient_checker_test.cc	/^void ExpectMatricesClose(Matrix p, Matrix q, double tolerance) {$/;"	f	namespace:ceres::internal
ExpectParameterBlockContains	ceres-solver/internal/ceres/problem_test.cc	/^  void ExpectParameterBlockContains(double* values) {$/;"	f	struct:ceres::internal::DynamicProblem
ExpectParameterBlockContains	ceres-solver/internal/ceres/problem_test.cc	/^  void ExpectParameterBlockContains(double* values,$/;"	f	struct:ceres::internal::DynamicProblem
ExpectParameterBlockContainsResidualBlock	ceres-solver/internal/ceres/problem_test.cc	/^  void ExpectParameterBlockContainsResidualBlock($/;"	f	struct:ceres::internal::DynamicProblem
ExpectProblemHasResidualBlocks	ceres-solver/internal/ceres/problem_test.cc	/^void ExpectProblemHasResidualBlocks($/;"	f	namespace:ceres::internal
ExpectSize	ceres-solver/internal/ceres/problem_test.cc	/^  void ExpectSize(double* values, int size) {$/;"	f	struct:ceres::internal::DynamicProblem
ExpectSpecProperty	ceres-solver/internal/ceres/gmock/gmock.h	/^  void ExpectSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::ExpectationBase
ExpectSpecProperty	ceres-solver/internal/ceres/gmock/gmock.h	/^  void ExpectSpecProperty(bool property, const string& failure_message) const {$/;"	f	class:testing::internal::UntypedOnCallSpecBase
ExpectVectorContainsUnordered	ceres-solver/internal/ceres/problem_test.cc	/^void ExpectVectorContainsUnordered(const T* a, const vector<T>& b) {$/;"	f	namespace:ceres::internal
Expectation	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Expectation {$/;"	c	namespace:testing
Expectation	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Expectation::Expectation(internal::ExpectationBase& exp)  \/\/ NOLINT$/;"	f	class:testing::Expectation
Expectation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Expectation::Expectation($/;"	f	class:testing::Expectation
Expectation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Expectation::Expectation() {}$/;"	f	class:testing::Expectation
ExpectationBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ ExpectationBase {$/;"	c	namespace:testing::internal
ExpectationBase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ExpectationBase::ExpectationBase(const char* a_file,$/;"	f	class:testing::internal::ExpectationBase
ExpectationSet	ceres-solver/internal/ceres/gmock/gmock.h	/^  ExpectationSet() {}$/;"	f	class:testing::ExpectationSet
ExpectationSet	ceres-solver/internal/ceres/gmock/gmock.h	/^  ExpectationSet(const Expectation& e) {  \/\/ NOLINT$/;"	f	class:testing::ExpectationSet
ExpectationSet	ceres-solver/internal/ceres/gmock/gmock.h	/^  ExpectationSet(internal::ExpectationBase& exp) {  \/\/ NOLINT$/;"	f	class:testing::ExpectationSet
ExpectationSet	ceres-solver/internal/ceres/gmock/gmock.h	/^class ExpectationSet {$/;"	c	namespace:testing
ExpectedEvaluation	ceres-solver/internal/ceres/evaluator_test_utils.h	/^struct ExpectedEvaluation {$/;"	s	namespace:ceres::internal
Expit	cartographer/cartographer/mapping/submaps_test.cc	/^inline float Expit(float log_odds) {$/;"	f	namespace:cartographer::mapping::__anon64
ExplainMatchFailureTupleTo	ceres-solver/internal/ceres/gmock/gmock.h	/^void ExplainMatchFailureTupleTo(const MatcherTuple& matchers,$/;"	f	namespace:testing::internal
ExplainMatchFailuresTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void ExplainMatchFailuresTo(const MatcherTuple& \/* matchers *\/,$/;"	f	class:testing::internal::TuplePrefix
ExplainMatchFailuresTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void ExplainMatchFailuresTo(const MatcherTuple& matchers,$/;"	f	class:testing::internal::TuplePrefix
ExplainMatchResult	ceres-solver/internal/ceres/gmock/gmock.h	/^inline bool ExplainMatchResult($/;"	f	namespace:testing
ExplainMatchResultTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  void ExplainMatchResultTo(T x, ::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase
ExplainSuccess	ceres-solver/internal/ceres/gmock/gmock.h	/^  void ExplainSuccess(const internal::string& first_explanation,$/;"	f	class:testing::internal::PairMatcherImpl
ExponentialCostFunction	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class ExponentialCostFunction : public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal
ExponentialFunctor	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class ExponentialFunctor {$/;"	c	namespace:ceres::internal
ExponentialResidual	ceres-solver/examples/curve_fitting.cc	/^  ExponentialResidual(double x, double y)$/;"	f	struct:ExponentialResidual
ExponentialResidual	ceres-solver/examples/curve_fitting.cc	/^struct ExponentialResidual {$/;"	s	file:
ExponentialResidual	ceres-solver/examples/robust_curve_fitting.cc	/^  ExponentialResidual(double x, double y)$/;"	f	struct:ExponentialResidual
ExponentialResidual	ceres-solver/examples/robust_curve_fitting.cc	/^struct ExponentialResidual {$/;"	s	file:
ExtractSummary	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string TestPartResult::ExtractSummary(const char* message) {$/;"	f	class:testing::TestPartResult
ExtractVoxelData	cartographer/cartographer/mapping/3d/submap_3d.cc	/^std::vector<Eigen::Array4i> ExtractVoxelData($/;"	f	namespace:cartographer::mapping::__anon106
ExtrapolatePose	cartographer/cartographer/mapping/pose_extrapolator.cc	/^transform::Rigid3d PoseExtrapolator::ExtrapolatePose(const common::Time time) {$/;"	f	class:cartographer::mapping::PoseExtrapolator
ExtrapolateRotation	cartographer/cartographer/mapping/pose_extrapolator.cc	/^Eigen::Quaterniond PoseExtrapolator::ExtrapolateRotation($/;"	f	class:cartographer::mapping::PoseExtrapolator
ExtrapolateTranslation	cartographer/cartographer/mapping/pose_extrapolator.cc	/^Eigen::Vector3d PoseExtrapolator::ExtrapolateTranslation(common::Time time) {$/;"	f	class:cartographer::mapping::PoseExtrapolator
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F();$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8, A9);$/;"	t	class:testing::internal::FunctionMocker
F	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R F(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);$/;"	t	class:testing::internal::FunctionMocker
F1	ceres-solver/examples/powell.cc	/^struct F1 {$/;"	s	file:
F1	ceres-solver/internal/ceres/system_test.cc	/^  class F1 {$/;"	c	class:ceres::internal::PowellsFunction	file:
F2	ceres-solver/examples/powell.cc	/^struct F2 {$/;"	s	file:
F2	ceres-solver/internal/ceres/system_test.cc	/^  class F2 {$/;"	c	class:ceres::internal::PowellsFunction	file:
F3	ceres-solver/examples/powell.cc	/^struct F3 {$/;"	s	file:
F3	ceres-solver/internal/ceres/system_test.cc	/^  class F3 {$/;"	c	class:ceres::internal::PowellsFunction	file:
F4	ceres-solver/examples/powell.cc	/^struct F4 {$/;"	s	file:
F4	ceres-solver/internal/ceres/system_test.cc	/^  class F4 {$/;"	c	class:ceres::internal::PowellsFunction	file:
FAIL	ceres-solver/internal/ceres/gtest/gtest.h	20431;"	d
FAILURE	ceres-solver/include/ceres/types.h	/^  FAILURE,$/;"	e	enum:ceres::TerminationType
FATAL	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int FATAL   = -3;$/;"	v
FATAL	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int FATAL   = ::FATAL;$/;"	m	namespace:google
FC_ADD_FONTS	cartographer/bazel/third_party/fontconfig/config.h	30;"	d
FC_ARCHITECTURE	cartographer/bazel/third_party/fontconfig/config.h	33;"	d
FC_DEFAULT_FONTS	cartographer/bazel/third_party/fontconfig/config.h	36;"	d
FC_GPERF_SIZE_T	cartographer/bazel/third_party/fontconfig/config.h	39;"	d
FClose	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int FClose(FILE* fp) { return fclose(fp); }$/;"	f	namespace:std::tr1::posix
FDOpen	ceres-solver/internal/ceres/gtest/gtest.h	/^inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }$/;"	f	namespace:std::tr1::posix
FILL_CRSM_COL_BLOCK	ceres-solver/internal/ceres/inner_product_computer.cc	274;"	d	file:
FIXED_FRAME_POSE	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^      FIXED_FRAME_POSE,$/;"	m	class:cartographer::mapping::TrajectoryBuilderInterface::SensorId::SensorType
FLETCHER_REEVES	ceres-solver/include/ceres/types.h	/^  FLETCHER_REEVES,$/;"	e	enum:ceres::NonlinearConjugateGradientType
FLEXIBLE_ARRAY_MEMBER	cartographer/bazel/third_party/fontconfig/config.h	48;"	d
FLOAT_WORDS_BIGENDIAN	cartographer/bazel/third_party/cairo/config.h	393;"	d
FORWARD	ceres-solver/include/ceres/types.h	/^  FORWARD,$/;"	e	enum:ceres::NumericDiffMethodType
FOpen	ceres-solver/internal/ceres/gtest/gtest.h	/^inline FILE* FOpen(const char* path, const char* mode) {$/;"	f	namespace:std::tr1::posix
FRIEND_TEST	ceres-solver/internal/ceres/gtest/gtest.h	18234;"	d
FReopen	ceres-solver/internal/ceres/gtest/gtest.h	/^inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {$/;"	f	namespace:std::tr1::posix
FactorAndSolve	ceres-solver/internal/ceres/sparse_cholesky.cc	/^LinearSolverTerminationType SparseCholesky::FactorAndSolve($/;"	f	class:ceres::internal::SparseCholesky
Factorize	ceres-solver/internal/ceres/cxsparse.cc	/^LinearSolverTerminationType CXSparseCholesky::Factorize($/;"	f	class:ceres::internal::CXSparseCholesky
Factorize	ceres-solver/internal/ceres/eigensparse.cc	/^  virtual LinearSolverTerminationType Factorize($/;"	f	class:ceres::internal::EigenSparseCholeskyTemplate
Factorize	ceres-solver/internal/ceres/eigensparse.cc	/^  virtual LinearSolverTerminationType Factorize(CompressedRowSparseMatrix* lhs,$/;"	f	class:ceres::internal::EigenSparseCholeskyTemplate
Factorize	ceres-solver/internal/ceres/suitesparse.cc	/^LinearSolverTerminationType SuiteSparseCholesky::Factorize($/;"	f	class:ceres::internal::SuiteSparseCholesky
Factorize	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^LinearSolverTerminationType VisibilityBasedPreconditioner::Factorize() {$/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
FactoryFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef T (*FactoryFunction)();$/;"	t	class:testing::DefaultValue
FactoryValueProducer	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit FactoryValueProducer(FactoryFunction factory)$/;"	f	class:testing::DefaultValue::FactoryValueProducer
FactoryValueProducer	ceres-solver/internal/ceres/gmock/gmock.h	/^  class FactoryValueProducer : public ValueProducer {$/;"	c	class:testing::DefaultValue
FailFromInternalError	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void FailFromInternalError(int fd) {$/;"	f	namespace:testing::internal
Failed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool Failed() const {$/;"	f	class:testing::internal::UnitTestImpl
Failed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool TestResult::Failed() const {$/;"	f	class:testing::TestResult
Failed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;"	f	class:testing::UnitTest
Failed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool Failed() const { return failed_test_count() > 0; }$/;"	f	class:testing::TestCase
FailingCostFunction	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^class FailingCostFunction : public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
FailingCostFunction	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^class FailingCostFunction : public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
FakeFileWriter	cartographer/cartographer/io/fake_file_writer.cc	/^FakeFileWriter::FakeFileWriter(const std::string& filename,$/;"	f	class:cartographer::io::FakeFileWriter
FakeFileWriter	cartographer/cartographer/io/fake_file_writer.h	/^class FakeFileWriter : public FileWriter {$/;"	c	namespace:cartographer::io
FakeIterationCallback	ceres-solver/internal/ceres/minimizer_test.cc	/^class FakeIterationCallback : public IterationCallback {$/;"	c	namespace:ceres::internal	file:
FakeThreadPool	cartographer/cartographer/common/task_test.cc	/^class FakeThreadPool : public ThreadPoolInterface {$/;"	c	namespace:cartographer::common::__anon10	file:
FakeTrimmable	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  FakeTrimmable(int trajectory_id, int num_submaps) {$/;"	f	class:cartographer::mapping::testing::FakeTrimmable
FakeTrimmable	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^class FakeTrimmable : public Trimmable {$/;"	c	namespace:cartographer::mapping::testing
Family	cartographer/cartographer/metrics/family_factory.h	/^class Family {$/;"	c	namespace:cartographer::metrics
FamilyFactory	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^FamilyFactory::FamilyFactory()$/;"	f	class:cartographer::cloud::metrics::prometheus::FamilyFactory
FamilyFactory	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^class FamilyFactory : public ::cartographer::metrics::FamilyFactory {$/;"	c	namespace:cartographer::cloud::metrics::prometheus
FamilyFactory	cartographer/cartographer/metrics/family_factory.h	/^class FamilyFactory {$/;"	c	namespace:cartographer::metrics
FastCorrelativeScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^FastCorrelativeScanMatcher2D::FastCorrelativeScanMatcher2D($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
FastCorrelativeScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^class FastCorrelativeScanMatcher2D {$/;"	c	namespace:cartographer::mapping::scan_matching
FastCorrelativeScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::FastCorrelativeScanMatcher3D($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
FastCorrelativeScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^class FastCorrelativeScanMatcher3D {$/;"	c	namespace:cartographer::mapping::scan_matching
FastCorrelativeScanMatcher3DTest	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  FastCorrelativeScanMatcher3DTest()$/;"	f	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest
FastCorrelativeScanMatcher3DTest	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^class FastCorrelativeScanMatcher3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon96	file:
FastGunzipString	cartographer/cartographer/common/port.h	/^inline void FastGunzipString(const std::string& compressed,$/;"	f	namespace:cartographer::common
FastGzipString	cartographer/cartographer/common/port.h	/^inline void FastGzipString(const std::string& uncompressed,$/;"	f	namespace:cartographer::common
FetchSubmapTextures	cartographer_ros/cartographer_ros/cartographer_ros/submap.cc	/^std::unique_ptr<::cartographer::io::SubmapTextures> FetchSubmapTextures($/;"	f	namespace:cartographer_ros
Field	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::FieldMatcher<Class, FieldType> > Field($/;"	f	namespace:testing
FieldMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  FieldMatcher(FieldType Class::*field,$/;"	f	class:testing::internal::FieldMatcher
FieldMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class FieldMatcher {$/;"	c	namespace:testing::internal
FieldsOfExperts	ceres-solver/examples/fields_of_experts.cc	/^FieldsOfExperts::FieldsOfExperts()$/;"	f	class:ceres::examples::FieldsOfExperts
FieldsOfExperts	ceres-solver/examples/fields_of_experts.h	/^class FieldsOfExperts {$/;"	c	namespace:ceres::examples
FieldsOfExpertsCost	ceres-solver/examples/fields_of_experts.cc	/^FieldsOfExpertsCost::FieldsOfExpertsCost(const std::vector<double>& filter)$/;"	f	class:ceres::examples::FieldsOfExpertsCost
FieldsOfExpertsCost	ceres-solver/examples/fields_of_experts.h	/^class FieldsOfExpertsCost : public ceres::CostFunction {$/;"	c	namespace:ceres::examples
FieldsOfExpertsLoss	ceres-solver/examples/fields_of_experts.h	/^  explicit FieldsOfExpertsLoss(double alpha) : alpha_(alpha) { }$/;"	f	class:ceres::examples::FieldsOfExpertsLoss
FieldsOfExpertsLoss	ceres-solver/examples/fields_of_experts.h	/^class FieldsOfExpertsLoss : public ceres::LossFunction {$/;"	c	namespace:ceres::examples
FileNo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int FileNo(FILE* file) { return _fileno(file); }$/;"	f	namespace:std::tr1::posix
FileNo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }$/;"	f	namespace:std::tr1::posix
FileOrDirectoryExists	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::FileOrDirectoryExists() const {$/;"	f	class:testing::internal::FilePath
FilePath	ceres-solver/internal/ceres/gtest/gtest.h	/^  FilePath() : pathname_("") { }$/;"	f	class:testing::internal::FilePath
FilePath	ceres-solver/internal/ceres/gtest/gtest.h	/^  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }$/;"	f	class:testing::internal::FilePath
FilePath	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit FilePath(const std::string& pathname) : pathname_(pathname) {$/;"	f	class:testing::internal::FilePath
FilePath	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ FilePath {$/;"	c	namespace:testing::internal
FileResolver	cartographer/cartographer/common/lua_parameter_dictionary.h	/^class FileResolver {$/;"	c	namespace:cartographer::common
FileWriter	cartographer/cartographer/io/file_writer.h	/^  FileWriter() {}$/;"	f	class:cartographer::io::FileWriter
FileWriter	cartographer/cartographer/io/file_writer.h	/^class FileWriter {$/;"	c	namespace:cartographer::io
FillBlock	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^void FillBlock(const vector<int>& row_blocks,$/;"	f	namespace:ceres::internal
FillSubmapSlice	cartographer/cartographer/io/submap_painter.cc	/^void FillSubmapSlice($/;"	f	namespace:cartographer::io
Filter	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^PointCloud AdaptiveVoxelFilter::Filter(const PointCloud& point_cloud) const {$/;"	f	class:cartographer::sensor::AdaptiveVoxelFilter
Filter	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^PointCloud VoxelFilter::Filter(const PointCloud& point_cloud) {$/;"	f	class:cartographer::sensor::VoxelFilter
Filter	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^TimedPointCloud VoxelFilter::Filter(const TimedPointCloud& timed_point_cloud) {$/;"	f	class:cartographer::sensor::VoxelFilter
Filter	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^VoxelFilter::Filter($/;"	f	class:cartographer::sensor::VoxelFilter
FilterByMaxRange	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^PointCloud FilterByMaxRange(const PointCloud& point_cloud,$/;"	f	namespace:cartographer::sensor::__anon127
FilterMatchesTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool UnitTestOptions::FilterMatchesTest(const std::string &test_case_name,$/;"	f	class:testing::internal::UnitTestOptions
FilterRangeDataByMaxRange	cartographer/cartographer/mapping/3d/submap_3d.cc	/^sensor::RangeData FilterRangeDataByMaxRange(const sensor::RangeData& range_data,$/;"	f	namespace:cartographer::mapping::__anon106
FilterTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {$/;"	f	class:testing::internal::UnitTestImpl
Finalize	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc	/^void DynamicCompressedRowSparseMatrix::Finalize(int num_additional_elements) {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrix
Finalize	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void Finalize() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
FinalizeIterationAndCheckIfMinimizerCanContinue	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::FinalizeIterationAndCheckIfMinimizerCanContinue() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
FindConnectedComponent	ceres-solver/internal/ceres/graph_algorithms.h	/^Vertex FindConnectedComponent(const Vertex& vertex,$/;"	f	namespace:ceres::internal
FindFloors	cartographer/cartographer/mapping/detect_floors.cc	/^std::vector<Floor> FindFloors(const proto::Trajectory& trajectory,$/;"	f	namespace:cartographer::mapping::__anon62
FindInterpolatingPolynomial	ceres-solver/internal/ceres/polynomial.cc	/^Vector FindInterpolatingPolynomial(const vector<FunctionSample>& samples) {$/;"	f	namespace:ceres::internal
FindInvalidValue	ceres-solver/internal/ceres/array_utils.cc	/^int FindInvalidValue(const int size, const double* x) {$/;"	f	namespace:ceres::internal
FindLastPathSeparator	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* FilePath::FindLastPathSeparator() const {$/;"	f	class:testing::internal::FilePath
FindLinearPolynomialRoots	ceres-solver/internal/ceres/polynomial.cc	/^void FindLinearPolynomialRoots(const Vector& polynomial,$/;"	f	namespace:ceres::internal::__anon183
FindMaxBipartiteMatching	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FindMaxBipartiteMatching(const MatchMatrix& g) {$/;"	f	namespace:testing::internal
FindMinimumOnTrustRegionBoundary	ceres-solver/internal/ceres/dogleg_strategy.cc	/^bool DoglegStrategy::FindMinimumOnTrustRegionBoundary(Vector2d* minimum) const {$/;"	f	class:ceres::internal::DoglegStrategy
FindOnCallSpec	ceres-solver/internal/ceres/gmock/gmock.h	/^  const OnCallSpec<F>* FindOnCallSpec($/;"	f	class:testing::internal::FunctionMockerBase
FindOrDie	ceres-solver/internal/ceres/map_util.h	/^FindOrDie(const Collection& collection,$/;"	f	namespace:ceres
FindOrNull	ceres-solver/internal/ceres/map_util.h	/^FindOrNull(Collection& collection,  \/\/ NOLINT$/;"	f	namespace:ceres
FindPairing	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ bool FindPairing(const MatchMatrix& matrix,$/;"	f	namespace:testing::internal
FindPolynomialRoots	ceres-solver/internal/ceres/polynomial.cc	/^bool FindPolynomialRoots(const Vector& polynomial_in,$/;"	f	namespace:ceres::internal
FindQuadraticPolynomialRoots	ceres-solver/internal/ceres/polynomial.cc	/^void FindQuadraticPolynomialRoots(const Vector& polynomial,$/;"	f	namespace:ceres::internal::__anon183
FindSet	cartographer/cartographer/mapping/internal/connected_components.cc	/^int ConnectedComponents::FindSet(const int trajectory_id) {$/;"	f	class:cartographer::mapping::ConnectedComponents
FindSubmapIdsToTrim	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^std::vector<SubmapId> FindSubmapIdsToTrim($/;"	f	namespace:cartographer::mapping::__anon82
FindValidViews	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^void CanonicalViewsClustering::FindValidViews($/;"	f	class:ceres::internal::CanonicalViewsClustering
FindWithDefault	ceres-solver/internal/ceres/map_util.h	/^FindWithDefault(const Collection& collection,$/;"	f	namespace:ceres
Finish	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void Submap2D::Finish() {$/;"	f	class:cartographer::mapping::Submap2D
Finish	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void Submap3D::Finish() {$/;"	f	class:cartographer::mapping::Submap3D
FinishAllTrajectories	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::FinishAllTrajectories() {$/;"	f	class:cartographer_ros::Node
FinishSubmap	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void ActiveSubmaps2D::FinishSubmap() {$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
FinishTrajectory	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^void MapBuilderStub::FinishTrajectory(int trajectory_id) {$/;"	f	class:cartographer::cloud::MapBuilderStub
FinishTrajectory	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::FinishTrajectory(int local_trajectory_id) {$/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
FinishTrajectory	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::mapping::PoseGraph2D
FinishTrajectory	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::mapping::PoseGraph3D
FinishTrajectory	cartographer/cartographer/mapping/map_builder.cc	/^void MapBuilder::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::mapping::MapBuilder
FinishTrajectory	cartographer/cartographer/sensor/internal/collator.cc	/^void Collator::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::sensor::Collator
FinishTrajectory	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^void TrajectoryCollator::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::sensor::TrajectoryCollator
FinishTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^void MapBuilderBridge::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer_ros::MapBuilderBridge
FinishTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::FinishTrajectory(const int trajectory_id) {$/;"	f	class:cartographer_ros::Node
FinishTrajectoryHandler	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.h	/^class FinishTrajectoryHandler$/;"	c	namespace:cartographer::cloud::handlers
FinishTrajectoryUnderLock	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^cartographer_ros_msgs::StatusResponse Node::FinishTrajectoryUnderLock($/;"	f	class:cartographer_ros::Node
FinishUpdate	cartographer/cartographer/mapping/2d/grid_2d.cc	/^void Grid2D::FinishUpdate() {$/;"	f	class:cartographer::mapping::Grid2D
FirstOrderFunction	ceres-solver/include/ceres/gradient_problem.h	/^class CERES_EXPORT FirstOrderFunction {$/;"	c	namespace:ceres
FirstType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename RawPairType::first_type FirstType;$/;"	t	class:testing::internal::PairMatcherImpl
FiveParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct FiveParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
FixedArray	ceres-solver/include/ceres/internal/fixed_array.h	/^class FixedArray {$/;"	c	namespace:ceres::internal
FixedArray	ceres-solver/include/ceres/internal/fixed_array.h	/^inline FixedArray<T, S>::FixedArray(typename FixedArray<T, S>::size_type n)$/;"	f	class:ceres::internal::FixedArray
FixedFramePoseData	cartographer/cartographer/sensor/fixed_frame_pose_data.h	/^struct FixedFramePoseData {$/;"	s	namespace:cartographer::sensor
FixedRatioSampler	cartographer/cartographer/common/fixed_ratio_sampler.cc	/^FixedRatioSampler::FixedRatioSampler(const double ratio) : ratio_(ratio) {$/;"	f	class:cartographer::common::FixedRatioSampler
FixedRatioSampler	cartographer/cartographer/common/fixed_ratio_sampler.h	/^class FixedRatioSampler {$/;"	c	namespace:cartographer::common
FixedRatioSamplingPointsProcessor	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.cc	/^FixedRatioSamplingPointsProcessor::FixedRatioSamplingPointsProcessor($/;"	f	class:cartographer::io::FixedRatioSamplingPointsProcessor
FixedRatioSamplingPointsProcessor	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^class FixedRatioSamplingPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
FixedValueProducer	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit FixedValueProducer(T value) : value_(value) {}$/;"	f	class:testing::DefaultValue::FixedValueProducer
FixedValueProducer	ceres-solver/internal/ceres/gmock/gmock.h	/^  class FixedValueProducer : public ValueProducer {$/;"	c	class:testing::DefaultValue
FixedWidth	cartographer/cartographer/metrics/histogram.cc	/^Histogram::BucketBoundaries Histogram::FixedWidth(double width,$/;"	f	class:cartographer::metrics::Histogram
Fixture	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^class Fixture : public testing::Test {$/;"	c	namespace:ceres::internal::__anon178	file:
FlagToEnvVar	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string FlagToEnvVar(const char* flag) {$/;"	f	namespace:testing::internal
FlatGrid	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^  FlatGrid() {$/;"	f	class:cartographer::mapping::FlatGrid
FlatGrid	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^class FlatGrid {$/;"	c	namespace:cartographer::mapping
FlattenMembershipMap	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::FlattenMembershipMap($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
Float	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef FloatingPoint<float> Float;$/;"	t	namespace:testing::internal
FloatComponentToUint8	cartographer/cartographer/io/color.h	/^inline uint8 FloatComponentToUint8(float c) {$/;"	f	namespace:cartographer::io
FloatEq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> FloatEq(float rhs) {$/;"	f	namespace:testing
FloatLE	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult FloatLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing
FloatNear	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> FloatNear($/;"	f	namespace:testing
FloatingEqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  FloatingEqMatcher(FloatType expected, bool nan_eq_nan) :$/;"	f	class:testing::internal::FloatingEqMatcher
FloatingEqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  FloatingEqMatcher(FloatType expected, bool nan_eq_nan,$/;"	f	class:testing::internal::FloatingEqMatcher
FloatingEqMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class FloatingEqMatcher {$/;"	c	namespace:testing::internal
FloatingPoint	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }$/;"	f	class:testing::internal::FloatingPoint
FloatingPoint	ceres-solver/internal/ceres/gtest/gtest.h	/^class FloatingPoint {$/;"	c	namespace:testing::internal
FloatingPointLE	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult FloatingPointLE(const char* expr1,$/;"	f	namespace:testing::internal
FloatingPointUnion	ceres-solver/internal/ceres/gtest/gtest.h	/^  union FloatingPointUnion {$/;"	u	class:testing::internal::FloatingPoint
Floor	cartographer/cartographer/mapping/detect_floors.h	/^struct Floor {$/;"	s	namespace:cartographer::mapping
Flush	cartographer/cartographer/io/coloring_points_processor.cc	/^PointsProcessor::FlushResult ColoringPointsProcessor::Flush() {$/;"	f	class:cartographer::io::ColoringPointsProcessor
Flush	cartographer/cartographer/io/counting_points_processor.cc	/^PointsProcessor::FlushResult CountingPointsProcessor::Flush() {$/;"	f	class:cartographer::io::CountingPointsProcessor
Flush	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.cc	/^PointsProcessor::FlushResult FixedRatioSamplingPointsProcessor::Flush() {$/;"	f	class:cartographer::io::FixedRatioSamplingPointsProcessor
Flush	cartographer/cartographer/io/frame_id_filtering_points_processor.cc	/^PointsProcessor::FlushResult FrameIdFilteringPointsProcessor::Flush() {$/;"	f	class:cartographer::io::FrameIdFilteringPointsProcessor
Flush	cartographer/cartographer/io/hybrid_grid_points_processor.cc	/^PointsProcessor::FlushResult HybridGridPointsProcessor::Flush() {$/;"	f	class:cartographer::io::HybridGridPointsProcessor
Flush	cartographer/cartographer/io/intensity_to_color_points_processor.cc	/^PointsProcessor::FlushResult IntensityToColorPointsProcessor::Flush() {$/;"	f	class:cartographer::io::IntensityToColorPointsProcessor
Flush	cartographer/cartographer/io/min_max_range_filtering_points_processor.cc	/^PointsProcessor::FlushResult MinMaxRangeFiteringPointsProcessor::Flush() {$/;"	f	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
Flush	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^PointsProcessor::FlushResult OutlierRemovingPointsProcessor::Flush() {$/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
Flush	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^PointsProcessor::FlushResult PcdWritingPointsProcessor::Flush() {$/;"	f	class:cartographer::io::PcdWritingPointsProcessor
Flush	cartographer/cartographer/io/ply_writing_points_processor.cc	/^PointsProcessor::FlushResult PlyWritingPointsProcessor::Flush() {$/;"	f	class:cartographer::io::PlyWritingPointsProcessor
Flush	cartographer/cartographer/io/probability_grid_points_processor.cc	/^PointsProcessor::FlushResult ProbabilityGridPointsProcessor::Flush() {$/;"	f	class:cartographer::io::ProbabilityGridPointsProcessor
Flush	cartographer/cartographer/io/xray_points_processor.cc	/^PointsProcessor::FlushResult XRayPointsProcessor::Flush() {$/;"	f	class:cartographer::io::XRayPointsProcessor
Flush	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^PointsProcessor::FlushResult XyzWriterPointsProcessor::Flush() {$/;"	f	class:cartographer::io::XyzWriterPointsProcessor
Flush	cartographer/cartographer/sensor/internal/collator.cc	/^void Collator::Flush() { queue_.Flush(); }$/;"	f	class:cartographer::sensor::Collator
Flush	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^void OrderedMultiQueue::Flush() {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
Flush	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^void TrajectoryCollator::Flush() {$/;"	f	class:cartographer::sensor::TrajectoryCollator
Flush	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.cc	/^RosMapWritingPointsProcessor::Flush() {$/;"	f	class:cartographer_ros::RosMapWritingPointsProcessor
FlushEdits	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void FlushEdits() {$/;"	f	class:testing::internal::edit_distance::__anon166::Hunk	file:
FlushInfoLog	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void FlushInfoLog() { fflush(NULL); }$/;"	f	namespace:std::tr1
FlushResult	cartographer/cartographer/io/points_processor.h	/^  enum class FlushResult {$/;"	c	class:cartographer::io::PointsProcessor
ForEach	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ForEach(const Container& c, Functor functor) {$/;"	f	namespace:testing::internal
ForestToClusterPairs	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ForestToClusterPairs($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
ForkingDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ForkingDeathTest::ForkingDeathTest(const char* a_statement, const RE* a_regex)$/;"	f	class:testing::internal::ForkingDeathTest
ForkingDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class ForkingDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
Format	ceres-solver/internal/ceres/gtest/gtest.h	/^  static ::std::string Format(const ToPrint& value) {$/;"	f	class:testing::internal::FormatForComparison
Format	ceres-solver/internal/ceres/gtest/gtest.h	/^  static ::std::string Format(const ToPrint* value) {$/;"	f	class:testing::internal::FormatForComparison
FormatBool	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  string FormatBool(bool value) { return value ? "1" : "0"; }$/;"	f	class:testing::internal::StreamingListener	file:
FormatByte	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string String::FormatByte(unsigned char value) {$/;"	f	class:testing::internal::String
FormatCompilerIndependentFileLocation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ ::std::string FormatCompilerIndependentFileLocation($/;"	f	namespace:testing::internal
FormatCountableNoun	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string FormatCountableNoun(int count,$/;"	f	namespace:testing
FormatCxxExceptionMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string FormatCxxExceptionMessage(const char* description,$/;"	f	namespace:testing::internal
FormatDeathTestOutput	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static ::std::string FormatDeathTestOutput(const ::std::string& output) {$/;"	f	namespace:testing::internal
FormatEpochTimeInMillisAsIso8601	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatFileLocation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {$/;"	f	namespace:testing::internal
FormatForComparison	ceres-solver/internal/ceres/gtest/gtest.h	/^class FormatForComparison {$/;"	c	namespace:testing::internal
FormatForComparison	ceres-solver/internal/ceres/gtest/gtest.h	/^class FormatForComparison<ToPrint[N], OtherOperand> {$/;"	c	namespace:testing::internal
FormatForComparisonFailureMessage	ceres-solver/internal/ceres/gtest/gtest.h	/^std::string FormatForComparisonFailureMessage($/;"	f	namespace:testing::internal
FormatHexInt	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string String::FormatHexInt(int value) {$/;"	f	class:testing::internal::String
FormatIntWidth2	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string String::FormatIntWidth2(int value) {$/;"	f	class:testing::internal::String
FormatMatcherDescription	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ string FormatMatcherDescription(bool negation,$/;"	f	namespace:testing::internal
FormatRegexSyntaxError	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string FormatRegexSyntaxError(const char* regex, int index) {$/;"	f	namespace:testing::internal
FormatSehExceptionMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string* FormatSehExceptionMessage(DWORD exception_code,$/;"	f	namespace:testing
FormatTestCaseCount	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string FormatTestCaseCount(int test_case_count) {$/;"	f	namespace:testing
FormatTestCount	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string FormatTestCount(int test_count) {$/;"	f	namespace:testing
FormatTimeInMillisAsSeconds	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {$/;"	f	namespace:testing::internal
FormatTimes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline internal::string FormatTimes(int n) {$/;"	f	namespace:testing::__anon175
FormatWordList	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string FormatWordList(const std::vector<std::string>& words) {$/;"	f	namespace:testing
ForwardingProtoStreamWriter	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  explicit ForwardingProtoStreamWriter(WriterCallback writer_callback)$/;"	f	class:cartographer::io::ForwardingProtoStreamWriter
ForwardingProtoStreamWriter	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^class ForwardingProtoStreamWriter$/;"	c	namespace:cartographer::io
FourParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct FourParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
FractionSmallerThan	cartographer_ros/cartographer_ros/cartographer_ros/dev/trajectory_comparison_main.cc	/^double FractionSmallerThan(const std::vector<double>& v, double x) {$/;"	f	namespace:cartographer_ros::__anon134
FrameIdFilteringPointsProcessor	cartographer/cartographer/io/frame_id_filtering_points_processor.cc	/^FrameIdFilteringPointsProcessor::FrameIdFilteringPointsProcessor($/;"	f	class:cartographer::io::FrameIdFilteringPointsProcessor
FrameIdFilteringPointsProcessor	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^class FrameIdFilteringPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
FrameProperties	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^struct FrameProperties {$/;"	s	namespace:cartographer_ros::__anon128	file:
Free	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparse::Free(cs_di* sparse_matrix) { cs_di_spfree(sparse_matrix); }$/;"	f	class:ceres::internal::CXSparse
Free	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparse::Free(cs_dis* symbolic_factor) { cs_di_sfree(symbolic_factor); }$/;"	f	class:ceres::internal::CXSparse
Free	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparse::Free(csn* numeric_factor) { cs_di_nfree(numeric_factor); }$/;"	f	class:ceres::internal::CXSparse
Free	ceres-solver/internal/ceres/suitesparse.h	/^  void Free(cholmod_dense* m)  { cholmod_free_dense(&m, &cc_);  }$/;"	f	class:ceres::internal::SuiteSparse
Free	ceres-solver/internal/ceres/suitesparse.h	/^  void Free(cholmod_factor* m) { cholmod_free_factor(&m, &cc_); }$/;"	f	class:ceres::internal::SuiteSparse
Free	ceres-solver/internal/ceres/suitesparse.h	/^  void Free(cholmod_sparse* m) { cholmod_free_sparse(&m, &cc_); }$/;"	f	class:ceres::internal::SuiteSparse
FreeNodes	cartographer/cartographer/common/lockless_queue.h	/^  void FreeNodes(Node* node) {$/;"	f	class:cartographer::common::LocklessQueue
FreeNumericFactorization	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparseCholesky::FreeNumericFactorization() {$/;"	f	class:ceres::internal::CXSparseCholesky
FreeSymbolicFactorization	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparseCholesky::FreeSymbolicFactorization() {$/;"	f	class:ceres::internal::CXSparseCholesky
FreezeTrajectory	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::FreezeTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::mapping::PoseGraph2D
FreezeTrajectory	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::FreezeTrajectory(const int trajectory_id) {$/;"	f	class:cartographer::mapping::PoseGraph3D
From	ceres-solver/examples/libmv_homography.cc	/^  static void From(const Parameterized &h, Parameters *p) {$/;"	f	class:__anon158::Homography2DNormalizedParameterization
FromArrays	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid3 FromArrays(const std::array<FloatType, 4>& rotation,$/;"	f	class:cartographer::transform::Rigid3
FromDictionary	cartographer/cartographer/io/coloring_points_processor.cc	/^ColoringPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::ColoringPointsProcessor
FromDictionary	cartographer/cartographer/io/counting_points_processor.cc	/^CountingPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::CountingPointsProcessor
FromDictionary	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.cc	/^FixedRatioSamplingPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::FixedRatioSamplingPointsProcessor
FromDictionary	cartographer/cartographer/io/frame_id_filtering_points_processor.cc	/^FrameIdFilteringPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::FrameIdFilteringPointsProcessor
FromDictionary	cartographer/cartographer/io/hybrid_grid_points_processor.cc	/^HybridGridPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::HybridGridPointsProcessor
FromDictionary	cartographer/cartographer/io/intensity_to_color_points_processor.cc	/^IntensityToColorPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::IntensityToColorPointsProcessor
FromDictionary	cartographer/cartographer/io/min_max_range_filtering_points_processor.cc	/^MinMaxRangeFiteringPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
FromDictionary	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^OutlierRemovingPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
FromDictionary	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^PcdWritingPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::PcdWritingPointsProcessor
FromDictionary	cartographer/cartographer/io/ply_writing_points_processor.cc	/^PlyWritingPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::PlyWritingPointsProcessor
FromDictionary	cartographer/cartographer/io/probability_grid_points_processor.cc	/^ProbabilityGridPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::ProbabilityGridPointsProcessor
FromDictionary	cartographer/cartographer/io/xray_points_processor.cc	/^std::unique_ptr<XRayPointsProcessor> XRayPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::XRayPointsProcessor
FromDictionary	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^XyzWriterPointsProcessor::FromDictionary($/;"	f	class:cartographer::io::XyzWriterPointsProcessor
FromDictionary	cartographer/cartographer/transform/rigid_transform.cc	/^transform::Rigid3d FromDictionary(common::LuaParameterDictionary* dictionary) {$/;"	f	namespace:cartographer::transform
FromDictionary	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.cc	/^RosMapWritingPointsProcessor::FromDictionary($/;"	f	class:cartographer_ros::RosMapWritingPointsProcessor
FromMilliseconds	cartographer/cartographer/common/time.cc	/^common::Duration FromMilliseconds(const int64 milliseconds) {$/;"	f	namespace:cartographer::common
FromPose	cartographer/cartographer/mapping/internal/optimization/ceres_pose.cc	/^CeresPose::Data FromPose(const transform::Rigid3d& pose) {$/;"	f	namespace:cartographer::mapping::optimization
FromPose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^std::array<double, 3> FromPose(const transform::Rigid2d& pose) {$/;"	f	namespace:cartographer::mapping::optimization::__anon93
FromProto	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^mapping::TrajectoryBuilderInterface::SensorId FromProto($/;"	f	namespace:cartographer::cloud
FromProto	cartographer/cartographer/mapping/pose_graph.cc	/^PoseGraph::Constraint::Tag FromProto($/;"	f	namespace:cartographer::mapping
FromProto	cartographer/cartographer/mapping/pose_graph.cc	/^std::vector<PoseGraph::Constraint> FromProto($/;"	f	namespace:cartographer::mapping
FromProto	cartographer/cartographer/mapping/trajectory_builder_interface.cc	/^TrajectoryBuilderInterface::SensorId FromProto($/;"	f	namespace:cartographer::mapping
FromProto	cartographer/cartographer/mapping/trajectory_node.cc	/^TrajectoryNode::Data FromProto(const proto::TrajectoryNodeData& proto) {$/;"	f	namespace:cartographer::mapping
FromProto	cartographer/cartographer/sensor/fixed_frame_pose_data.cc	/^FixedFramePoseData FromProto(const proto::FixedFramePoseData& proto) {$/;"	f	namespace:cartographer::sensor
FromProto	cartographer/cartographer/sensor/imu_data.cc	/^ImuData FromProto(const proto::ImuData& proto) {$/;"	f	namespace:cartographer::sensor
FromProto	cartographer/cartographer/sensor/landmark_data.cc	/^LandmarkData FromProto(const proto::LandmarkData& proto) {$/;"	f	namespace:cartographer::sensor
FromProto	cartographer/cartographer/sensor/odometry_data.cc	/^OdometryData FromProto(const proto::OdometryData& proto) {$/;"	f	namespace:cartographer::sensor
FromProto	cartographer/cartographer/sensor/range_data.cc	/^RangeData FromProto(const proto::RangeData& proto) {$/;"	f	namespace:cartographer::sensor
FromProto	cartographer/cartographer/sensor/timed_point_cloud_data.cc	/^TimedPointCloudData FromProto(const proto::TimedPointCloudData& proto) {$/;"	f	namespace:cartographer::sensor
FromRos	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion.cc	/^::cartographer::common::Time FromRos(const ::ros::Time& time) {$/;"	f	namespace:cartographer_ros
FromRosMessage	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.cc	/^bool FromRosMessage(const cartographer_ros_msgs::TrajectoryOptions& msg,$/;"	f	namespace:cartographer_ros
FromSeconds	cartographer/cartographer/common/time.cc	/^Duration FromSeconds(const double seconds) {$/;"	f	namespace:cartographer::common
FromTripletSparseMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix* CompressedRowSparseMatrix::FromTripletSparseMatrix($/;"	f	class:ceres::internal::CompressedRowSparseMatrix
FromTripletSparseMatrixTransposed	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix::FromTripletSparseMatrixTransposed($/;"	f	class:ceres::internal::CompressedRowSparseMatrix
FromUniversal	cartographer/cartographer/common/time.cc	/^Time FromUniversal(const int64 ticks) { return Time(Duration(ticks)); }$/;"	f	namespace:cartographer::common
FscanfOrDie	ceres-solver/examples/bal_problem.cc	/^void FscanfOrDie(FILE* fptr, const char* format, T* value) {$/;"	f	namespace:ceres::examples::__anon154
FscanfOrDie	ceres-solver/examples/simple_bundle_adjuster.cc	/^  void FscanfOrDie(FILE *fptr, const char *format, T *value) {$/;"	f	class:BALProblem	file:
FscanfOrDie	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  void FscanfOrDie(FILE *fptr, const char *format, T *value) {$/;"	f	class:ceres::internal::BundleAdjustmentProblem	file:
FullMatch	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool RE::FullMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
FullMatch	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool FullMatch(const ::std::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
FullMatch	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool FullMatch(const ::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
FullReport	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^string GradientProblemSolver::Summary::FullReport() const {$/;"	f	class:ceres::GradientProblemSolver::Summary
FullReport	ceres-solver/internal/ceres/solver.cc	/^string Solver::Summary::FullReport() const {$/;"	f	class:ceres::Solver::Summary
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R()> {$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8, A9)>$/;"	s	namespace:testing::internal
Function	ceres-solver/internal/ceres/gmock/gmock.h	/^struct Function<R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)>$/;"	s	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R()> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8, A9)> : public$/;"	c	namespace:testing::internal
FunctionMocker	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMocker<R(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)> : public$/;"	c	namespace:testing::internal
FunctionMockerBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  FunctionMockerBase() : current_spec_(this) {}$/;"	f	class:testing::internal::FunctionMockerBase
FunctionMockerBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class FunctionMockerBase : public UntypedFunctionMockerBase {$/;"	c	namespace:testing::internal
FunctionMockers	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^typedef std::set<internal::UntypedFunctionMockerBase*> FunctionMockers;$/;"	t	namespace:testing::__anon176	file:
FunctionSample	ceres-solver/internal/ceres/function_sample.cc	/^FunctionSample::FunctionSample()$/;"	f	class:ceres::internal::FunctionSample
FunctionSample	ceres-solver/internal/ceres/function_sample.cc	/^FunctionSample::FunctionSample(const double x, const double value)$/;"	f	class:ceres::internal::FunctionSample
FunctionSample	ceres-solver/internal/ceres/function_sample.cc	/^FunctionSample::FunctionSample(const double x,$/;"	f	class:ceres::internal::FunctionSample
FunctionSample	ceres-solver/internal/ceres/function_sample.h	/^struct FunctionSample {$/;"	s	namespace:ceres::internal
FunctionToleranceReached	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::FunctionToleranceReached() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
GIT_SHA1_PATTERN	cartographer_ros/jenkins/worker.py	/^GIT_SHA1_PATTERN = Pattern(r'^(?P<sha1>[0-9a-f]{40})\\s+HEAD')$/;"	v
GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_	ceres-solver/internal/ceres/gmock/gmock.h	3205;"	d
GMOCK_ACTION_CLASS_	ceres-solver/internal/ceres/gmock/gmock.h	3565;"	d
GMOCK_ARG_	ceres-solver/internal/ceres/gmock/gmock.h	11323;"	d
GMOCK_DECLARE_KIND_	ceres-solver/internal/ceres/gmock/gmock.h	648;"	d
GMOCK_DECLARE_KIND_	ceres-solver/internal/ceres/gmock/gmock.h	677;"	d
GMOCK_DECLARE_bool_	ceres-solver/internal/ceres/gmock/gmock.h	308;"	d
GMOCK_DECLARE_int32_	ceres-solver/internal/ceres/gmock/gmock.h	309;"	d
GMOCK_DECLARE_string_	ceres-solver/internal/ceres/gmock/gmock.h	311;"	d
GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_	ceres-solver/internal/ceres/gmock/gmock.h	1119;"	d
GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_	ceres-solver/internal/ceres/gmock/gmock.h	1158;"	d
GMOCK_DEFINE_bool_	ceres-solver/internal/ceres/gmock/gmock.h	315;"	d
GMOCK_DEFINE_int32_	ceres-solver/internal/ceres/gmock/gmock.h	317;"	d
GMOCK_DEFINE_string_	ceres-solver/internal/ceres/gmock/gmock.h	319;"	d
GMOCK_EXPECT_CALL_IMPL_	ceres-solver/internal/ceres/gmock/gmock.h	11021;"	d
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k10));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k2));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k2), GMOCK_FIELD_(ArgumentTuple, k3));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k2), GMOCK_FIELD_(ArgumentTuple, k3),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k4));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k4), GMOCK_FIELD_(ArgumentTuple, k5));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k4), GMOCK_FIELD_(ArgumentTuple, k5),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k6));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k6), GMOCK_FIELD_(ArgumentTuple, k7));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k6), GMOCK_FIELD_(ArgumentTuple, k7),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k8));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k8), GMOCK_FIELD_(ArgumentTuple, k9));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_(ArgumentTuple, k8), GMOCK_FIELD_(ArgumentTuple, k9),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1));$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Result type(GMOCK_FIELD_(ArgumentTuple, k1),$/;"	t	class:testing::internal::SelectArgs
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	2596;"	d
GMOCK_FIELD_	ceres-solver/internal/ceres/gmock/gmock.h	2779;"	d
GMOCK_FIELD_TYPE_	ceres-solver/internal/ceres/gmock/gmock.h	12521;"	d
GMOCK_FIELD_TYPE_	ceres-solver/internal/ceres/gmock/gmock.h	12675;"	d
GMOCK_FLAG	ceres-solver/internal/ceres/gmock/gmock.h	303;"	d
GMOCK_GMOCK_MORE_MATCHERS_H_	ceres-solver/internal/ceres/gmock/gmock.h	14934;"	d
GMOCK_HAS_SIGNED_WCHAR_T_	ceres-solver/internal/ceres/gmock/gmock.h	630;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_	ceres-solver/internal/ceres/gmock/gmock.h	94;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_	ceres-solver/internal/ceres/gmock/gmock.h	2220;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_ACTIONS_H_	ceres-solver/internal/ceres/gmock/gmock.h	2365;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_FUNCTION_MOCKERS_H_	ceres-solver/internal/ceres/gmock/gmock.h	4749;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_MATCHERS_H_	ceres-solver/internal/ceres/gmock/gmock.h	12510;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_GENERATED_NICE_STRICT_H_	ceres-solver/internal/ceres/gmock/gmock.h	12148;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_H_	ceres-solver/internal/ceres/gmock/gmock.h	37;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_	ceres-solver/internal/ceres/gmock/gmock.h	4861;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_	ceres-solver/internal/ceres/gmock/gmock.h	14686;"	d
GMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_	ceres-solver/internal/ceres/gmock/gmock.h	4811;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_CALLBACK_MATCHERS_H_	ceres-solver/internal/ceres/gmock/gmock.h	9253;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_	ceres-solver/internal/ceres/gmock/gmock.h	4704;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_	ceres-solver/internal/ceres/gmock/gmock.h	286;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_GENERATED_INTERNAL_UTILS_H_	ceres-solver/internal/ceres/gmock/gmock.h	188;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_	ceres-solver/internal/ceres/gmock/gmock.h	141;"	d
GMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_	ceres-solver/internal/ceres/gmock/gmock.h	229;"	d
GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3549;"	d
GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3561;"	d
GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3550;"	d
GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3551;"	d
GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3552;"	d
GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3553;"	d
GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3554;"	d
GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3555;"	d
GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3556;"	d
GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3557;"	d
GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3559;"	d
GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3521;"	d
GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3543;"	d
GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3522;"	d
GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3523;"	d
GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3525;"	d
GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3527;"	d
GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3529;"	d
GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3531;"	d
GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3534;"	d
GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3537;"	d
GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3540;"	d
GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3327;"	d
GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3300;"	d
GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3301;"	d
GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3303;"	d
GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3305;"	d
GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3308;"	d
GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3311;"	d
GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3314;"	d
GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3318;"	d
GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3322;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3363;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3390;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3364;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3365;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3367;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3369;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3372;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3375;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3378;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3382;"	d
GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3386;"	d
GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3448;"	d
GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3470;"	d
GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3449;"	d
GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3450;"	d
GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3452;"	d
GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3454;"	d
GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3456;"	d
GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3458;"	d
GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3461;"	d
GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3464;"	d
GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3467;"	d
GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3397;"	d
GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3438;"	d
GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3399;"	d
GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3401;"	d
GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3403;"	d
GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3406;"	d
GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3410;"	d
GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3414;"	d
GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3419;"	d
GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3424;"	d
GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3430;"	d
GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3476;"	d
GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3491;"	d
GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3477;"	d
GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3478;"	d
GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3479;"	d
GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3480;"	d
GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3481;"	d
GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3483;"	d
GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3485;"	d
GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3487;"	d
GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3489;"	d
GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3357;"	d
GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3334;"	d
GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3335;"	d
GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3337;"	d
GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3339;"	d
GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3341;"	d
GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3344;"	d
GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3347;"	d
GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3350;"	d
GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3353;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3495;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3516;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3496;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3497;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3499;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3501;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3503;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3505;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3507;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3510;"	d
GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS	ceres-solver/internal/ceres/gmock/gmock.h	3513;"	d
GMOCK_IS_SIGNED_	ceres-solver/internal/ceres/gmock/gmock.h	685;"	d
GMOCK_IS_SIGNED_	ceres-solver/internal/ceres/gmock/gmock.h	732;"	d
GMOCK_KIND_OF_	ceres-solver/internal/ceres/gmock/gmock.h	680;"	d
GMOCK_MATCHER_	ceres-solver/internal/ceres/gmock/gmock.h	11328;"	d
GMOCK_METHOD0_	ceres-solver/internal/ceres/gmock/gmock.h	11337;"	d
GMOCK_METHOD10_	ceres-solver/internal/ceres/gmock/gmock.h	11615;"	d
GMOCK_METHOD1_	ceres-solver/internal/ceres/gmock/gmock.h	11356;"	d
GMOCK_METHOD2_	ceres-solver/internal/ceres/gmock/gmock.h	11375;"	d
GMOCK_METHOD3_	ceres-solver/internal/ceres/gmock/gmock.h	11396;"	d
GMOCK_METHOD4_	ceres-solver/internal/ceres/gmock/gmock.h	11421;"	d
GMOCK_METHOD5_	ceres-solver/internal/ceres/gmock/gmock.h	11448;"	d
GMOCK_METHOD6_	ceres-solver/internal/ceres/gmock/gmock.h	11477;"	d
GMOCK_METHOD7_	ceres-solver/internal/ceres/gmock/gmock.h	11508;"	d
GMOCK_METHOD8_	ceres-solver/internal/ceres/gmock/gmock.h	11541;"	d
GMOCK_METHOD9_	ceres-solver/internal/ceres/gmock/gmock.h	11576;"	d
GMOCK_MOCKER_	ceres-solver/internal/ceres/gmock/gmock.h	11333;"	d
GMOCK_ON_CALL_IMPL_	ceres-solver/internal/ceres/gmock/gmock.h	11016;"	d
GMOCK_RESULT_	ceres-solver/internal/ceres/gmock/gmock.h	11318;"	d
GMOCK_WCHAR_T_IS_NATIVE_	ceres-solver/internal/ceres/gmock/gmock.h	616;"	d
GOOGLE_CERES_INTERNAL_MOCK_LOG_H_	ceres-solver/internal/ceres/gmock/mock-log.h	39;"	d
GROUND_TRUTH_STATS_PATTERN	cartographer_ros/jenkins/worker.py	/^GROUND_TRUTH_STATS_PATTERN = Pattern($/;"	v
GTEST_0_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1015;"	d
GTEST_0_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1941;"	d
GTEST_0_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1038;"	d
GTEST_0_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1953;"	d
GTEST_10_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1034;"	d
GTEST_10_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1951;"	d
GTEST_10_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1055;"	d
GTEST_10_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1963;"	d
GTEST_1_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_1_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_1_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1016;"	d
GTEST_1_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1942;"	d
GTEST_1_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1039;"	d
GTEST_1_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1954;"	d
GTEST_2_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_2_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_2_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1018;"	d
GTEST_2_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1943;"	d
GTEST_2_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1040;"	d
GTEST_2_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1955;"	d
GTEST_3_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_3_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_3_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1020;"	d
GTEST_3_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1944;"	d
GTEST_3_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1041;"	d
GTEST_3_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1956;"	d
GTEST_4_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_4_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_4_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1022;"	d
GTEST_4_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1945;"	d
GTEST_4_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1042;"	d
GTEST_4_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1957;"	d
GTEST_5_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_5_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_5_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1024;"	d
GTEST_5_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1946;"	d
GTEST_5_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1044;"	d
GTEST_5_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1958;"	d
GTEST_6_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_6_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_6_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1026;"	d
GTEST_6_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1947;"	d
GTEST_6_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1046;"	d
GTEST_6_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1959;"	d
GTEST_7_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_7_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_7_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1028;"	d
GTEST_7_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1948;"	d
GTEST_7_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1048;"	d
GTEST_7_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1960;"	d
GTEST_8_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_8_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_8_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1030;"	d
GTEST_8_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1949;"	d
GTEST_8_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1050;"	d
GTEST_8_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1961;"	d
GTEST_9_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_9_TUPLE_(T) {$/;"	f	namespace:std::tr1
GTEST_9_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1032;"	d
GTEST_9_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	1950;"	d
GTEST_9_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1052;"	d
GTEST_9_TYPENAMES_	ceres-solver/internal/ceres/gtest/gtest.h	1962;"	d
GTEST_ADD_REFERENCE_	ceres-solver/internal/ceres/gtest/gtest.h	8581;"	d
GTEST_ADD_REF_	ceres-solver/internal/ceres/gtest/gtest.h	1092;"	d
GTEST_ADD_REF_	ceres-solver/internal/ceres/gtest/gtest.h	1967;"	d
GTEST_AMBIGUOUS_ELSE_BLOCKER_	ceres-solver/internal/ceres/gtest/gtest.h	2125;"	d
GTEST_API_	ceres-solver/internal/ceres/gtest/gtest.h	2210;"	d
GTEST_API_	ceres-solver/internal/ceres/gtest/gtest.h	2219;"	d
GTEST_ARRAY_SIZE_	ceres-solver/internal/ceres/gtest/gtest.h	2377;"	d
GTEST_ASSERT_	ceres-solver/internal/ceres/gtest/gtest.h	20557;"	d
GTEST_ASSERT_EQ	ceres-solver/internal/ceres/gtest/gtest.h	20903;"	d
GTEST_ASSERT_GE	ceres-solver/internal/ceres/gtest/gtest.h	20913;"	d
GTEST_ASSERT_GT	ceres-solver/internal/ceres/gtest/gtest.h	20915;"	d
GTEST_ASSERT_LE	ceres-solver/internal/ceres/gtest/gtest.h	20909;"	d
GTEST_ASSERT_LT	ceres-solver/internal/ceres/gtest/gtest.h	20911;"	d
GTEST_ASSERT_NE	ceres-solver/internal/ceres/gtest/gtest.h	20907;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_	ceres-solver/internal/ceres/gtest/gtest.h	2252;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_	ceres-solver/internal/ceres/gtest/gtest.h	2240;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_	ceres-solver/internal/ceres/gtest/gtest.h	2264;"	d
GTEST_ATTRIBUTE_UNUSED_	ceres-solver/internal/ceres/gmock/gmock.h	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	m	namespace:testing	typeref:class:testing::InSequence
GTEST_ATTRIBUTE_UNUSED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	m	namespace:testing::internal	typeref:class:testing::internal::GTestFlagSaver	file:
GTEST_ATTRIBUTE_UNUSED_	ceres-solver/internal/ceres/gtest/gtest.h	/^  } GTEST_ATTRIBUTE_UNUSED_;$/;"	m	class:testing::internal::DeathTest	typeref:class:testing::internal::DeathTest::ReturnSentinel
GTEST_ATTRIBUTE_UNUSED_	ceres-solver/internal/ceres/gtest/gtest.h	/^} GTEST_ATTRIBUTE_UNUSED_;  \/\/ A ScopedTrace object does its job in its$/;"	m	namespace:testing::internal	typeref:class:testing::internal::ScopedTrace
GTEST_ATTRIBUTE_UNUSED_	ceres-solver/internal/ceres/gtest/gtest.h	2142;"	d
GTEST_ATTRIBUTE_UNUSED_	ceres-solver/internal/ceres/gtest/gtest.h	2149;"	d
GTEST_BIND_	ceres-solver/internal/ceres/gtest/gtest.h	6120;"	d
GTEST_BY_REF_	ceres-solver/internal/ceres/gtest/gtest.h	1082;"	d
GTEST_BY_REF_	ceres-solver/internal/ceres/gtest/gtest.h	1966;"	d
GTEST_CAN_COMPARE_NULL	ceres-solver/internal/ceres/gtest/gtest.h	3476;"	d
GTEST_CAN_STREAM_RESULTS_	ceres-solver/internal/ceres/gtest/gtest.h	2111;"	d
GTEST_CASE_NAMESPACE_	ceres-solver/internal/ceres/gtest/gtest.h	18612;"	d
GTEST_CHECK_	ceres-solver/internal/ceres/gtest/gtest.h	2580;"	d
GTEST_CHECK_POSIX_SUCCESS_	ceres-solver/internal/ceres/gtest/gtest.h	2593;"	d
GTEST_COMPILE_ASSERT_	ceres-solver/internal/ceres/gtest/gtest.h	2311;"	d
GTEST_CONCAT_TOKEN_	ceres-solver/internal/ceres/gtest/gtest.h	7821;"	d
GTEST_CONCAT_TOKEN_IMPL_	ceres-solver/internal/ceres/gtest/gtest.h	7822;"	d
GTEST_CRITICAL_SECTION	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef struct _CRITICAL_SECTION GTEST_CRITICAL_SECTION;$/;"	t	typeref:struct:_CRITICAL_SECTION
GTEST_CRITICAL_SECTION	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;$/;"	t	typeref:struct:_RTL_CRITICAL_SECTION
GTEST_DEATH_TEST_	ceres-solver/internal/ceres/gtest/gtest.h	9207;"	d
GTEST_DEATH_TEST_CHECK_	ceres-solver/internal/ceres/gmock_gtest_all.cc	7113;"	d	file:
GTEST_DEATH_TEST_CHECK_SYSCALL_	ceres-solver/internal/ceres/gmock_gtest_all.cc	7130;"	d	file:
GTEST_DECLARE_STATIC_MUTEX_	ceres-solver/internal/ceres/gtest/gtest.h	2986;"	d
GTEST_DECLARE_STATIC_MUTEX_	ceres-solver/internal/ceres/gtest/gtest.h	3253;"	d
GTEST_DECLARE_STATIC_MUTEX_	ceres-solver/internal/ceres/gtest/gtest.h	3429;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	ceres-solver/internal/ceres/gtest/gtest.h	1001;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	ceres-solver/internal/ceres/gtest/gtest.h	1965;"	d
GTEST_DECLARE_TUPLE_AS_FRIEND_	ceres-solver/internal/ceres/gtest/gtest.h	999;"	d
GTEST_DECLARE_bool_	ceres-solver/internal/ceres/gtest/gtest.h	3800;"	d
GTEST_DECLARE_int32_	ceres-solver/internal/ceres/gtest/gtest.h	3801;"	d
GTEST_DECLARE_string_	ceres-solver/internal/ceres/gtest/gtest.h	3803;"	d
GTEST_DEFINE_STATIC_MUTEX_	ceres-solver/internal/ceres/gtest/gtest.h	2989;"	d
GTEST_DEFINE_STATIC_MUTEX_	ceres-solver/internal/ceres/gtest/gtest.h	3257;"	d
GTEST_DEFINE_STATIC_MUTEX_	ceres-solver/internal/ceres/gtest/gtest.h	3432;"	d
GTEST_DEFINE_bool_	ceres-solver/internal/ceres/gtest/gtest.h	3807;"	d
GTEST_DEFINE_int32_	ceres-solver/internal/ceres/gtest/gtest.h	3809;"	d
GTEST_DEFINE_string_	ceres-solver/internal/ceres/gtest/gtest.h	3811;"	d
GTEST_DEV_EMAIL_	ceres-solver/internal/ceres/gtest/gtest.h	541;"	d
GTEST_DISABLE_MSC_WARNINGS_POP_	ceres-solver/internal/ceres/gtest/gtest.h	569;"	d
GTEST_DISABLE_MSC_WARNINGS_POP_	ceres-solver/internal/ceres/gtest/gtest.h	574;"	d
GTEST_DISABLE_MSC_WARNINGS_PUSH_	ceres-solver/internal/ceres/gtest/gtest.h	566;"	d
GTEST_DISABLE_MSC_WARNINGS_PUSH_	ceres-solver/internal/ceres/gtest/gtest.h	573;"	d
GTEST_DISALLOW_ASSIGN_	ceres-solver/internal/ceres/gtest/gtest.h	2154;"	d
GTEST_DISALLOW_COPY_AND_ASSIGN_	ceres-solver/internal/ceres/gtest/gtest.h	2159;"	d
GTEST_ELLIPSIS_NEEDS_POD_	ceres-solver/internal/ceres/gtest/gtest.h	3474;"	d
GTEST_ENV_HAS_STD_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	924;"	d
GTEST_ENV_HAS_TR1_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	917;"	d
GTEST_ERROR	ceres-solver/internal/ceres/gtest/gtest.h	/^  GTEST_ERROR,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock/gmock.h	/^          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock/gmock.h	/^          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::TypedExpectation
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::ExpectationBase
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	class:testing::internal::TypedExpectation
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {$/;"	f	namespace:testing::internal
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_EXCLUSIVE_LOCK_REQUIRED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing
GTEST_EXCLUSIVE_LOCK_REQUIRED_	ceres-solver/internal/ceres/gtest/gtest.h	3818;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	ceres-solver/internal/ceres/gtest/gtest.h	9183;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	ceres-solver/internal/ceres/gtest/gtest.h	9200;"	d
GTEST_EXECUTE_STATEMENT_	ceres-solver/internal/ceres/gtest/gtest.h	9246;"	d
GTEST_FAIL	ceres-solver/internal/ceres/gtest/gtest.h	20426;"	d
GTEST_FATAL	ceres-solver/internal/ceres/gtest/gtest.h	/^  GTEST_FATAL$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_FATAL_FAILURE_	ceres-solver/internal/ceres/gtest/gtest.h	8854;"	d
GTEST_FLAG	ceres-solver/internal/ceres/gtest/gtest.h	3789;"	d
GTEST_FLAG_PREFIX_	ceres-solver/internal/ceres/gtest/gtest.h	542;"	d
GTEST_FLAG_PREFIX_DASH_	ceres-solver/internal/ceres/gtest/gtest.h	543;"	d
GTEST_FLAG_PREFIX_UPPER_	ceres-solver/internal/ceres/gtest/gtest.h	544;"	d
GTEST_FLAG_SAVER_	ceres-solver/internal/ceres/gtest/gtest.h	3797;"	d
GTEST_GCC_VER_	ceres-solver/internal/ceres/gtest/gtest.h	556;"	d
GTEST_HAS_ALT_PATH_SEP_	ceres-solver/internal/ceres/gtest/gtest.h	3520;"	d
GTEST_HAS_ALT_PATH_SEP_	ceres-solver/internal/ceres/gtest/gtest.h	3525;"	d
GTEST_HAS_CLONE	ceres-solver/internal/ceres/gtest/gtest.h	2044;"	d
GTEST_HAS_COMBINE	ceres-solver/internal/ceres/gtest/gtest.h	2102;"	d
GTEST_HAS_CXXABI_H_	ceres-solver/internal/ceres/gtest/gtest.h	2231;"	d
GTEST_HAS_DEATH_TEST	ceres-solver/internal/ceres/gtest/gtest.h	2079;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	725;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	734;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	737;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	742;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	745;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	749;"	d
GTEST_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	753;"	d
GTEST_HAS_GETTIMEOFDAY_	ceres-solver/internal/ceres/gmock_gtest_all.cc	329;"	d	file:
GTEST_HAS_GLOBAL_STRING	ceres-solver/internal/ceres/gtest/gtest.h	770;"	d
GTEST_HAS_GLOBAL_WSTRING	ceres-solver/internal/ceres/gtest/gtest.h	791;"	d
GTEST_HAS_HASH_MAP_	ceres-solver/internal/ceres/gtest/gtest.h	882;"	d
GTEST_HAS_HASH_SET_	ceres-solver/internal/ceres/gtest/gtest.h	883;"	d
GTEST_HAS_PARAM_TEST	ceres-solver/internal/ceres/gtest/gtest.h	2085;"	d
GTEST_HAS_POSIX_RE	ceres-solver/internal/ceres/gtest/gtest.h	682;"	d
GTEST_HAS_POSIX_RE	ceres-solver/internal/ceres/gtest/gtest.h	684;"	d
GTEST_HAS_PTHREAD	ceres-solver/internal/ceres/gtest/gtest.h	865;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	803;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	805;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	818;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	820;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	823;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	831;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	838;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	840;"	d
GTEST_HAS_RTTI	ceres-solver/internal/ceres/gtest/gtest.h	846;"	d
GTEST_HAS_SEH	ceres-solver/internal/ceres/gtest/gtest.h	2195;"	d
GTEST_HAS_STD_BEGIN_AND_END_	ceres-solver/internal/ceres/gtest/gtest.h	612;"	d
GTEST_HAS_STD_FORWARD_LIST_	ceres-solver/internal/ceres/gtest/gtest.h	613;"	d
GTEST_HAS_STD_FUNCTION_	ceres-solver/internal/ceres/gtest/gtest.h	614;"	d
GTEST_HAS_STD_INITIALIZER_LIST_	ceres-solver/internal/ceres/gtest/gtest.h	615;"	d
GTEST_HAS_STD_MOVE_	ceres-solver/internal/ceres/gtest/gtest.h	616;"	d
GTEST_HAS_STD_SHARED_PTR_	ceres-solver/internal/ceres/gtest/gtest.h	617;"	d
GTEST_HAS_STD_STRING	ceres-solver/internal/ceres/gtest/gtest.h	760;"	d
GTEST_HAS_STD_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	625;"	d
GTEST_HAS_STD_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	629;"	d
GTEST_HAS_STD_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	634;"	d
GTEST_HAS_STD_TUPLE_	ceres-solver/internal/ceres/gtest/gtest.h	641;"	d
GTEST_HAS_STD_TYPE_TRAITS_	ceres-solver/internal/ceres/gtest/gtest.h	618;"	d
GTEST_HAS_STD_UNIQUE_PTR_	ceres-solver/internal/ceres/gtest/gtest.h	619;"	d
GTEST_HAS_STD_WSTRING	ceres-solver/internal/ceres/gtest/gtest.h	783;"	d
GTEST_HAS_STREAM_REDIRECTION	ceres-solver/internal/ceres/gtest/gtest.h	2064;"	d
GTEST_HAS_TR1_TUPLE	ceres-solver/internal/ceres/gtest/gtest.h	893;"	d
GTEST_HAS_TR1_TUPLE	ceres-solver/internal/ceres/gtest/gtest.h	896;"	d
GTEST_HAS_TYPED_TEST	ceres-solver/internal/ceres/gtest/gtest.h	2093;"	d
GTEST_HAS_TYPED_TEST_P	ceres-solver/internal/ceres/gtest/gtest.h	2094;"	d
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	10219;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	10220;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	1591;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	410;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	6906;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	6907;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	8626;"	d	file:
GTEST_IMPLEMENTATION_	ceres-solver/internal/ceres/gmock_gtest_all.cc	8627;"	d	file:
GTEST_IMPL_CMP_HELPER_	ceres-solver/internal/ceres/gmock_gtest_all.cc	2903;"	d	file:
GTEST_IMPL_CMP_HELPER_	ceres-solver/internal/ceres/gmock_gtest_all.cc	2932;"	d	file:
GTEST_IMPL_CMP_HELPER_	ceres-solver/internal/ceres/gtest/gtest.h	20115;"	d
GTEST_IMPL_CMP_HELPER_	ceres-solver/internal/ceres/gtest/gtest.h	20141;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	ceres-solver/internal/ceres/gtest/gtest.h	10361;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	ceres-solver/internal/ceres/gtest/gtest.h	10375;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	ceres-solver/internal/ceres/gtest/gtest.h	10380;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	ceres-solver/internal/ceres/gtest/gtest.h	10407;"	d
GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_	ceres-solver/internal/ceres/gtest/gtest.h	9022;"	d
GTEST_INCLUDE_GTEST_GTEST_H_	ceres-solver/internal/ceres/gtest/gtest.h	52;"	d
GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_	ceres-solver/internal/ceres/gtest/gtest.h	3908;"	d
GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_	ceres-solver/internal/ceres/gtest/gtest.h	9636;"	d
GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_	ceres-solver/internal/ceres/gtest/gtest.h	20518;"	d
GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_	ceres-solver/internal/ceres/gtest/gtest.h	10167;"	d
GTEST_INCLUDE_GTEST_GTEST_PROD_H_	ceres-solver/internal/ceres/gtest/gtest.h	18214;"	d
GTEST_INCLUDE_GTEST_GTEST_SPI_H_	ceres-solver/internal/ceres/gmock_gtest_all.cc	110;"	d	file:
GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_	ceres-solver/internal/ceres/gtest/gtest.h	18271;"	d
GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_	ceres-solver/internal/ceres/gtest/gtest.h	18447;"	d
GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_	ceres-solver/internal/ceres/gtest/gtest.h	536;"	d
GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_	ceres-solver/internal/ceres/gtest/gtest.h	11099;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_	ceres-solver/internal/ceres/gtest/gtest.h	9061;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_	ceres-solver/internal/ceres/gtest/gtest.h	4317;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_	ceres-solver/internal/ceres/gtest/gtest.h	95;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_	ceres-solver/internal/ceres/gtest/gtest.h	9898;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_	ceres-solver/internal/ceres/gtest/gtest.h	11831;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_	ceres-solver/internal/ceres/gtest/gtest.h	9818;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_	ceres-solver/internal/ceres/gtest/gtest.h	412;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_	ceres-solver/internal/ceres/gtest/gtest.h	140;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_	ceres-solver/internal/ceres/gtest/gtest.h	4152;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_	ceres-solver/internal/ceres/gtest/gtest.h	989;"	d
GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_	ceres-solver/internal/ceres/gtest/gtest.h	4526;"	d
GTEST_INFO	ceres-solver/internal/ceres/gtest/gtest.h	/^  GTEST_INFO,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_INIT_GOOGLE_TEST_NAME_	ceres-solver/internal/ceres/gtest/gtest.h	550;"	d
GTEST_INTENTIONAL_CONST_COND_POP_	ceres-solver/internal/ceres/gtest/gtest.h	2184;"	d
GTEST_INTENTIONAL_CONST_COND_PUSH_	ceres-solver/internal/ceres/gtest/gtest.h	2182;"	d
GTEST_IS_NULL_LITERAL_	ceres-solver/internal/ceres/gtest/gtest.h	7875;"	d
GTEST_IS_NULL_LITERAL_	ceres-solver/internal/ceres/gtest/gtest.h	7877;"	d
GTEST_IS_THREADSAFE	ceres-solver/internal/ceres/gtest/gtest.h	2201;"	d
GTEST_LANG_CXX11	ceres-solver/internal/ceres/gtest/gtest.h	584;"	d
GTEST_LANG_CXX11	ceres-solver/internal/ceres/gtest/gtest.h	586;"	d
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock/gmock.h	/^          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock/gmock.h	/^        GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	class:testing::internal::FunctionMockerBase
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^        GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^        GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {$/;"	f	namespace:testing::internal
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {$/;"	f	namespace:testing::__anon176
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing::internal
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    const std::string& os_stack_trace) GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	namespace:testing
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_LOCK_EXCLUDED_(g_linked_ptr_mutex) {$/;"	f	class:testing::internal::linked_ptr_internal
GTEST_LOCK_EXCLUDED_	ceres-solver/internal/ceres/gtest/gtest.h	3819;"	d
GTEST_LOG_	ceres-solver/internal/ceres/gtest/gtest.h	2556;"	d
GTEST_MESSAGE_	ceres-solver/internal/ceres/gtest/gtest.h	8851;"	d
GTEST_MESSAGE_AT_	ceres-solver/internal/ceres/gtest/gtest.h	8847;"	d
GTEST_MUST_USE_RESULT_	ceres-solver/internal/ceres/gtest/gtest.h	/^  int Run() GTEST_MUST_USE_RESULT_;$/;"	m	class:testing::UnitTest
GTEST_MUST_USE_RESULT_	ceres-solver/internal/ceres/gtest/gtest.h	2169;"	d
GTEST_NAME_	ceres-solver/internal/ceres/gtest/gtest.h	545;"	d
GTEST_NEEDS_IS_POINTER_	ceres-solver/internal/ceres/gtest/gtest.h	3484;"	d
GTEST_NONFATAL_FAILURE_	ceres-solver/internal/ceres/gtest/gtest.h	8857;"	d
GTEST_NO_INLINE_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string CurrentOsStackTraceExceptTop(int skip_count) GTEST_NO_INLINE_;$/;"	m	class:testing::internal::UnitTestImpl	file:
GTEST_NO_INLINE_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) GTEST_NO_INLINE_;$/;"	m	namespace:testing::internal	file:
GTEST_NO_INLINE_	ceres-solver/internal/ceres/gtest/gtest.h	2224;"	d
GTEST_OS_AIX	ceres-solver/internal/ceres/gtest/gtest.h	458;"	d
GTEST_OS_CYGWIN	ceres-solver/internal/ceres/gtest/gtest.h	416;"	d
GTEST_OS_FREEBSD	ceres-solver/internal/ceres/gtest/gtest.h	447;"	d
GTEST_OS_HPUX	ceres-solver/internal/ceres/gtest/gtest.h	460;"	d
GTEST_OS_IOS	ceres-solver/internal/ceres/gtest/gtest.h	444;"	d
GTEST_OS_LINUX	ceres-solver/internal/ceres/gtest/gtest.h	449;"	d
GTEST_OS_LINUX_ANDROID	ceres-solver/internal/ceres/gtest/gtest.h	451;"	d
GTEST_OS_MAC	ceres-solver/internal/ceres/gtest/gtest.h	442;"	d
GTEST_OS_NACL	ceres-solver/internal/ceres/gtest/gtest.h	462;"	d
GTEST_OS_OPENBSD	ceres-solver/internal/ceres/gtest/gtest.h	464;"	d
GTEST_OS_QNX	ceres-solver/internal/ceres/gtest/gtest.h	466;"	d
GTEST_OS_SOLARIS	ceres-solver/internal/ceres/gtest/gtest.h	456;"	d
GTEST_OS_SYMBIAN	ceres-solver/internal/ceres/gtest/gtest.h	418;"	d
GTEST_OS_WINDOWS	ceres-solver/internal/ceres/gtest/gtest.h	420;"	d
GTEST_OS_WINDOWS_DESKTOP	ceres-solver/internal/ceres/gtest/gtest.h	428;"	d
GTEST_OS_WINDOWS_DESKTOP	ceres-solver/internal/ceres/gtest/gtest.h	436;"	d
GTEST_OS_WINDOWS_DESKTOP	ceres-solver/internal/ceres/gtest/gtest.h	439;"	d
GTEST_OS_WINDOWS_MINGW	ceres-solver/internal/ceres/gtest/gtest.h	424;"	d
GTEST_OS_WINDOWS_MOBILE	ceres-solver/internal/ceres/gtest/gtest.h	422;"	d
GTEST_OS_WINDOWS_PHONE	ceres-solver/internal/ceres/gtest/gtest.h	430;"	d
GTEST_OS_WINDOWS_RT	ceres-solver/internal/ceres/gtest/gtest.h	432;"	d
GTEST_OS_ZOS	ceres-solver/internal/ceres/gtest/gtest.h	454;"	d
GTEST_PATH_MAX_	ceres-solver/internal/ceres/gmock_gtest_all.cc	8221;"	d	file:
GTEST_PATH_SEP_	ceres-solver/internal/ceres/gtest/gtest.h	3519;"	d
GTEST_PATH_SEP_	ceres-solver/internal/ceres/gtest/gtest.h	3524;"	d
GTEST_PRED1_	ceres-solver/internal/ceres/gtest/gtest.h	20588;"	d
GTEST_PRED2_	ceres-solver/internal/ceres/gtest/gtest.h	20634;"	d
GTEST_PRED3_	ceres-solver/internal/ceres/gtest/gtest.h	20687;"	d
GTEST_PRED4_	ceres-solver/internal/ceres/gtest/gtest.h	20747;"	d
GTEST_PRED5_	ceres-solver/internal/ceres/gtest/gtest.h	20814;"	d
GTEST_PRED_FORMAT1_	ceres-solver/internal/ceres/gtest/gtest.h	20582;"	d
GTEST_PRED_FORMAT2_	ceres-solver/internal/ceres/gtest/gtest.h	20628;"	d
GTEST_PRED_FORMAT3_	ceres-solver/internal/ceres/gtest/gtest.h	20681;"	d
GTEST_PRED_FORMAT4_	ceres-solver/internal/ceres/gtest/gtest.h	20741;"	d
GTEST_PRED_FORMAT5_	ceres-solver/internal/ceres/gtest/gtest.h	20808;"	d
GTEST_PROJECT_URL_	ceres-solver/internal/ceres/gtest/gtest.h	546;"	d
GTEST_REFERENCE_TO_CONST_	ceres-solver/internal/ceres/gtest/gtest.h	8593;"	d
GTEST_REGISTERED_TEST_NAMES_	ceres-solver/internal/ceres/gtest/gtest.h	18626;"	d
GTEST_REMOVE_CONST_	ceres-solver/internal/ceres/gtest/gtest.h	8564;"	d
GTEST_REMOVE_REFERENCE_	ceres-solver/internal/ceres/gtest/gtest.h	8533;"	d
GTEST_REMOVE_REFERENCE_AND_CONST_	ceres-solver/internal/ceres/gtest/gtest.h	8568;"	d
GTEST_REPEATER_METHOD_	ceres-solver/internal/ceres/gmock_gtest_all.cc	4742;"	d	file:
GTEST_REPEATER_METHOD_	ceres-solver/internal/ceres/gmock_gtest_all.cc	4773;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	ceres-solver/internal/ceres/gmock_gtest_all.cc	4752;"	d	file:
GTEST_REVERSE_REPEATER_METHOD_	ceres-solver/internal/ceres/gmock_gtest_all.cc	4774;"	d	file:
GTEST_SNPRINTF_	ceres-solver/internal/ceres/gtest/gtest.h	3707;"	d
GTEST_SRC_GTEST_INTERNAL_INL_H_	ceres-solver/internal/ceres/gmock_gtest_all.cc	448;"	d	file:
GTEST_STDLIB_CXX11	ceres-solver/internal/ceres/gtest/gtest.h	607;"	d
GTEST_SUCCEED	ceres-solver/internal/ceres/gtest/gtest.h	20435;"	d
GTEST_SUCCESS_	ceres-solver/internal/ceres/gtest/gtest.h	8860;"	d
GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_	ceres-solver/internal/ceres/gtest/gtest.h	8866;"	d
GTEST_TEMPLATE_	ceres-solver/internal/ceres/gtest/gtest.h	6102;"	d
GTEST_TEST	ceres-solver/internal/ceres/gtest/gtest.h	21146;"	d
GTEST_TEST_	ceres-solver/internal/ceres/gtest/gtest.h	8959;"	d
GTEST_TEST_ANY_THROW_	ceres-solver/internal/ceres/gtest/gtest.h	8909;"	d
GTEST_TEST_BOOLEAN_	ceres-solver/internal/ceres/gtest/gtest.h	8931;"	d
GTEST_TEST_CLASS_NAME_	ceres-solver/internal/ceres/gtest/gtest.h	8955;"	d
GTEST_TEST_NO_FATAL_FAILURE_	ceres-solver/internal/ceres/gtest/gtest.h	8940;"	d
GTEST_TEST_NO_THROW_	ceres-solver/internal/ceres/gtest/gtest.h	8895;"	d
GTEST_TEST_THROW_	ceres-solver/internal/ceres/gtest/gtest.h	8869;"	d
GTEST_TUPLE_ELEMENT_	ceres-solver/internal/ceres/gtest/gtest.h	1751;"	d
GTEST_TUPLE_ELEMENT_	ceres-solver/internal/ceres/gtest/gtest.h	1968;"	d
GTEST_TUPLE_NAMESPACE_	ceres-solver/internal/ceres/gtest/gtest.h	940;"	d
GTEST_TUPLE_NAMESPACE_	ceres-solver/internal/ceres/gtest/gtest.h	947;"	d
GTEST_TYPED_TEST_CASE_P_STATE_	ceres-solver/internal/ceres/gtest/gtest.h	18619;"	d
GTEST_TYPE_PARAMS_	ceres-solver/internal/ceres/gtest/gtest.h	18572;"	d
GTEST_UNSUPPORTED_DEATH_TEST_	ceres-solver/internal/ceres/gtest/gtest.h	9323;"	d
GTEST_USES_POSIX_RE	ceres-solver/internal/ceres/gtest/gtest.h	699;"	d
GTEST_USES_SIMPLE_RE	ceres-solver/internal/ceres/gtest/gtest.h	705;"	d
GTEST_USES_SIMPLE_RE	ceres-solver/internal/ceres/gtest/gtest.h	711;"	d
GTEST_USE_OWN_FLAGFILE_FLAG_	ceres-solver/internal/ceres/gtest/gtest.h	3793;"	d
GTEST_USE_OWN_TR1_TUPLE	ceres-solver/internal/ceres/gtest/gtest.h	928;"	d
GTEST_USE_OWN_TR1_TUPLE	ceres-solver/internal/ceres/gtest/gtest.h	930;"	d
GTEST_WARNING	ceres-solver/internal/ceres/gtest/gtest.h	/^  GTEST_WARNING,$/;"	e	enum:std::tr1::GTestLogSeverity
GTEST_WIDE_STRING_USES_UTF16_	ceres-solver/internal/ceres/gtest/gtest.h	2106;"	d
GTestColor	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum GTestColor {$/;"	g	namespace:testing::internal	file:
GTestFlagSaver	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
GTestFlagSaver	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GTestFlagSaver {$/;"	c	namespace:testing::internal	file:
GTestIsInitialized	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool GTestIsInitialized() { return GetArgvs().size() > 0; }$/;"	f	namespace:testing::internal
GTestLog	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)$/;"	f	class:testing::internal::GTestLog
GTestLog	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ GTestLog {$/;"	c	namespace:std::tr1
GTestLogSeverity	ceres-solver/internal/ceres/gtest/gtest.h	/^enum GTestLogSeverity {$/;"	g	namespace:std::tr1
GTestMutexLock	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit GTestMutexLock(Mutex* mutex)$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit GTestMutexLock(Mutex*) {}  \/\/ NOLINT$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit GTestMutexLock(MutexBase* mutex)$/;"	f	class:std::tr1::GTestMutexLock
GTestMutexLock	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTestMutexLock {$/;"	c	namespace:std::tr1
GTestShouldProcessSEH	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;"	f	class:testing::internal::UnitTestOptions
GUARDED_BY	cartographer/cartographer/common/mutex.h	40;"	d
Gauge	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  explicit Gauge(::prometheus::Gauge* prometheus) : prometheus_(prometheus) {}$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon34::Gauge
Gauge	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^class Gauge : public ::cartographer::metrics::Gauge {$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon34	file:
Gauge	cartographer/cartographer/metrics/gauge.h	/^class Gauge {$/;"	c	namespace:cartographer::metrics
GaugeFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  explicit GaugeFamily(::prometheus::Family<::prometheus::Gauge>* prometheus)$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon34::GaugeFamily
GaugeFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^class GaugeFamily$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon34	file:
Ge	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::Ge2Matcher Ge() { return internal::Ge2Matcher(); }$/;"	f	namespace:testing
Ge	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::GeMatcher<Rhs> Ge(Rhs x) {$/;"	f	namespace:testing
Ge2Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Ge2Matcher : public PairMatchBase<Ge2Matcher, AnyGe> {$/;"	c	namespace:testing::internal
GeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit GeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::GeMatcher
GeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class GeMatcher : public ComparisonBase<GeMatcher<Rhs>, Rhs, AnyGe> {$/;"	c	namespace:testing::internal
Generate	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UInt32 Random::Generate(UInt32 range) {$/;"	f	class:testing::internal::Random
GenerateBubbles	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  void GenerateBubbles() {$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
GenerateCorkscrewTrajectory	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  std::vector<TrajectoryNode> GenerateCorkscrewTrajectory() {$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
GenerateDiscreteScans	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^std::vector<DiscreteScan3D> FastCorrelativeScanMatcher3D::GenerateDiscreteScans($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
GenerateDocumentation	cartographer/scripts/update_configuration_doc.py	/^def GenerateDocumentation(output_file, root):$/;"	f
GenerateExhaustiveSearchCandidates	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^RealTimeCorrelativeScanMatcher2D::GenerateExhaustiveSearchCandidates($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher2D
GenerateExhaustiveSearchTransforms	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^RealTimeCorrelativeScanMatcher3D::GenerateExhaustiveSearchTransforms($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher3D
GenerateFactoryConditional	ceres-solver/internal/ceres/generate_template_specializations.py	/^def GenerateFactoryConditional(row_block_size, e_block_size, f_block_size):$/;"	f
GenerateFakeRangeMeasurements	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^GenerateFakeRangeMeasurements(double travel_distance, double duration,$/;"	f	namespace:cartographer::mapping::test
GenerateGroundTruth	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^proto::GroundTruth GenerateGroundTruth($/;"	f	namespace:cartographer::ground_truth::__anon51
GenerateLowestResolutionCandidates	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^FastCorrelativeScanMatcher2D::GenerateLowestResolutionCandidates($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
GenerateLowestResolutionCandidates	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::GenerateLowestResolutionCandidates($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
GenerateQueryFile	ceres-solver/internal/ceres/generate_template_specializations.py	/^def GenerateQueryFile():$/;"	f
GenerateRangeData	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  sensor::TimedRangeData GenerateRangeData(const transform::Rigid3d& pose) {$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
GenerateResponse	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.cc	/^std::unique_ptr<proto::ReceiveGlobalSlamOptimizationsResponse> GenerateResponse($/;"	f	namespace:cartographer::cloud::handlers::__anon42
GenerateResponse	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.cc	/^std::unique_ptr<proto::ReceiveLocalSlamResultsResponse> GenerateResponse($/;"	f	namespace:cartographer::cloud::handlers::__anon46
GenerateRotatedScans	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^std::vector<sensor::PointCloud> GenerateRotatedScans($/;"	f	namespace:cartographer::mapping::scan_matching
GenerateUniqueFileName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
GeneratorCreationFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
Get	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  const PrecomputationGrid2D& Get(int index) {$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGridStack2D
Get	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  const PrecomputationGrid3D& Get(int depth) const {$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGridStack3D
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T Get() { return BuiltInDefaultValue<T>::Get(); }$/;"	f	class:testing::internal::BuiltInDefaultValue
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T Get() { return T(); }$/;"	f	struct:testing::internal::BuiltInDefaultValueGetter
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T Get() {$/;"	f	class:testing::DefaultValue
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T Get() {$/;"	f	class:testing::internal::BuiltInDefaultValue
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T Get() {$/;"	f	struct:testing::internal::BuiltInDefaultValueGetter
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T& Get() {$/;"	f	class:testing::DefaultValue
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T* Get() { return NULL; }$/;"	f	class:testing::internal::BuiltInDefaultValue
Get	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void Get() {}$/;"	f	class:testing::DefaultValue
Get	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AutoHandle::Handle AutoHandle::Get() const {$/;"	f	class:testing::internal::AutoHandle
GetAbsolutePathToOutputFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string UnitTestOptions::GetAbsolutePathToOutputFile() {$/;"	f	class:testing::internal::UnitTestOptions
GetAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Action<F>& GetAction() const {$/;"	f	class:testing::internal::OnCallSpec
GetAllSubmapData	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::GetAllSubmapData() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
GetAllSubmapData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::GetAllSubmapData() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetAllSubmapData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::GetAllSubmapData() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetAllSubmapPoses	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::GetAllSubmapPoses() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
GetAllSubmapPoses	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::GetAllSubmapPoses() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetAllSubmapPoses	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::GetAllSubmapPoses() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetAllSubmapPosesHandler	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.h	/^class GetAllSubmapPosesHandler$/;"	c	namespace:cartographer::cloud::handlers
GetAllTrajectoryBuilderOptions	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^MapBuilderStub::GetAllTrajectoryBuilderOptions() const {$/;"	f	class:cartographer::cloud::MapBuilderStub
GetAndSplitLine	ceres-solver/examples/nist.cc	/^bool GetAndSplitLine(ifstream& ifs, vector<string>* pieces) {$/;"	f	namespace:ceres::examples
GetAngle	cartographer/cartographer/transform/transform.h	/^FloatType GetAngle(const Rigid3<FloatType>& transform) {$/;"	f	namespace:cartographer::transform
GetAnsiColorCode	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* GetAnsiColorCode(GTestColor color) {$/;"	f	namespace:testing::internal
GetArgvs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const ::std::vector<testing::internal::string>& GetArgvs() {$/;"	f	namespace:testing::internal
GetArgvsForDeathTestChildProcess	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  GetArgvsForDeathTestChildProcess() {$/;"	f	class:testing::internal::ExecDeathTest	file:
GetArrayValues	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void GetArrayValues(lua_State* L, const std::function<void()>& pop_value) {$/;"	f	namespace:cartographer::common::__anon9
GetArrayValuesAsDictionaries	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^LuaParameterDictionary::GetArrayValuesAsDictionaries() {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetArrayValuesAsDoubles	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::vector<double> LuaParameterDictionary::GetArrayValuesAsDoubles() {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetArrayValuesAsStrings	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::vector<std::string> LuaParameterDictionary::GetArrayValuesAsStrings() {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetBasename	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.cc	/^const char* GetBasename(const char* filepath) {$/;"	f	namespace:cartographer_ros::__anon136
GetBeginEndTime	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^std::tuple<ros::Time, ros::Time> PlayableBag::GetBeginEndTime() const {$/;"	f	class:cartographer_ros::PlayableBag
GetBestSchurTemplateSpecialization	ceres-solver/internal/ceres/schur_templates.cc	/^void GetBestSchurTemplateSpecialization(int* row_block_size,$/;"	f	namespace:ceres::internal
GetBlocker	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^QueueKey OrderedMultiQueue::GetBlocker() const {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
GetBlockingTrajectoryId	cartographer/cartographer/sensor/internal/collator.cc	/^common::optional<int> Collator::GetBlockingTrajectoryId() const {$/;"	f	class:cartographer::sensor::Collator
GetBlockingTrajectoryId	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^common::optional<int> TrajectoryCollator::GetBlockingTrajectoryId() const {$/;"	f	class:cartographer::sensor::TrajectoryCollator
GetBool	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^bool LuaParameterDictionary::GetBool(const std::string& key) {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetBoolAssertionFailureMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string GetBoolAssertionFailureMessage($/;"	f	namespace:testing::internal
GetCairoSurface	cartographer/cartographer/io/image.cc	/^UniqueCairoSurfacePtr Image::GetCairoSurface() {$/;"	f	class:cartographer::io::Image
GetCapturedStderr	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string GetCapturedStderr() {$/;"	f	namespace:testing::internal
GetCapturedStdout	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string GetCapturedStdout() {$/;"	f	namespace:testing::internal
GetCapturedStream	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string GetCapturedStream(CapturedStream** captured_stream) {$/;"	f	namespace:testing::internal
GetCapturedString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string GetCapturedString() {$/;"	f	class:testing::internal::CapturedStream
GetCastTypeDescription	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void GetCastTypeDescription(::std::ostream* os) {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase
GetCell	ceres-solver/internal/ceres/block_random_access_dense_matrix.cc	/^CellInfo* BlockRandomAccessDenseMatrix::GetCell(const int row_block_id,$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
GetCell	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^CellInfo* BlockRandomAccessDiagonalMatrix::GetCell(int row_block_id,$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
GetCell	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^CellInfo* BlockRandomAccessSparseMatrix::GetCell(int row_block_id,$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
GetCellIndex	cartographer/cartographer/mapping/2d/map_limits.h	/^  Eigen::Array2i GetCellIndex(const Eigen::Vector2f& point) const {$/;"	f	class:cartographer::mapping::MapLimits
GetCellIndex	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    Eigen::Array3i GetCellIndex() const {$/;"	f	class:cartographer::mapping::FlatGrid::Iterator
GetCellIndex	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^Eigen::Array3i VoxelFilter::GetCellIndex(const Eigen::Vector3f& point) const {$/;"	f	class:cartographer::sensor::VoxelFilter
GetCodeLocation	ceres-solver/internal/ceres/gtest/gtest.h	/^  const CodeLocation& GetCodeLocation(const std::string& test_name) const {$/;"	f	class:testing::internal::TypedTestCasePState
GetCollectable	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^std::weak_ptr<::prometheus::Collectable> FamilyFactory::GetCollectable() const {$/;"	f	class:cartographer::cloud::metrics::prometheus::FamilyFactory
GetColor	cartographer/cartographer/io/color.cc	/^FloatColor GetColor(int id) {$/;"	f	namespace:cartographer::io
GetColorAttribute	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^WORD GetColorAttribute(GTestColor color) {$/;"	f	namespace:testing::internal
GetCommonStartTime	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^common::Time OrderedMultiQueue::GetCommonStartTime(const int trajectory_id) {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
GetComponent	cartographer/cartographer/mapping/internal/connected_components.cc	/^std::vector<int> ConnectedComponents::GetComponent(const int trajectory_id) {$/;"	f	class:cartographer::mapping::ConnectedComponents
GetConnectedTrajectories	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^std::vector<std::vector<int>> PoseGraph2D::GetConnectedTrajectories() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetConnectedTrajectories	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^std::vector<std::vector<int>> PoseGraph3D::GetConnectedTrajectories() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetConstraintList	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^visualization_msgs::MarkerArray MapBuilderBridge::GetConstraintList() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetConstraints	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::TrimmingHandle::GetConstraints() const {$/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
GetConstraints	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::TrimmingHandle::GetConstraints() const {$/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
GetConstraintsHandler	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.h	/^class GetConstraintsHandler$/;"	c	namespace:cartographer::cloud::handlers
GetCorrespondenceCost	cartographer/cartographer/mapping/2d/grid_2d.cc	/^float Grid2D::GetCorrespondenceCost(const Eigen::Array2i& cell_index) const {$/;"	f	class:cartographer::mapping::Grid2D
GetCostFunctionForResidualBlock	ceres-solver/internal/ceres/problem.cc	/^const CostFunction* Problem::GetCostFunctionForResidualBlock($/;"	f	class:ceres::Problem
GetCostFunctionForResidualBlock	ceres-solver/internal/ceres/problem_impl.cc	/^const CostFunction* ProblemImpl::GetCostFunctionForResidualBlock($/;"	f	class:ceres::internal::ProblemImpl
GetCovarianceBlock	ceres-solver/internal/ceres/covariance.cc	/^bool Covariance::GetCovarianceBlock(const double* parameter_block1,$/;"	f	class:ceres::Covariance
GetCovarianceBlockAndCompare	ceres-solver/internal/ceres/covariance_test.cc	/^  void GetCovarianceBlockAndCompare(const double* block1,$/;"	f	class:ceres::internal::CovarianceTest
GetCovarianceBlockInTangentOrAmbientSpace	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::GetCovarianceBlockInTangentOrAmbientSpace($/;"	f	class:ceres::internal::CovarianceImpl
GetCovarianceBlockInTangentSpace	ceres-solver/internal/ceres/covariance.cc	/^bool Covariance::GetCovarianceBlockInTangentSpace($/;"	f	class:ceres::Covariance
GetCovarianceMatrix	ceres-solver/internal/ceres/covariance.cc	/^bool Covariance::GetCovarianceMatrix($/;"	f	class:ceres::Covariance
GetCovarianceMatrixInTangentOrAmbientSpace	ceres-solver/internal/ceres/covariance_impl.cc	/^bool CovarianceImpl::GetCovarianceMatrixInTangentOrAmbientSpace($/;"	f	class:ceres::internal::CovarianceImpl
GetCovarianceMatrixInTangentSpace	ceres-solver/internal/ceres/covariance.cc	/^bool Covariance::GetCovarianceMatrixInTangentSpace($/;"	f	class:ceres::Covariance
GetCurrentDir	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::GetCurrentDir() {$/;"	f	class:testing::internal::FilePath
GetCurrentExecutableName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath GetCurrentExecutableName() {$/;"	f	namespace:testing::internal
GetCurrentOsStackTraceExceptTop	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string GetCurrentOsStackTraceExceptTop(UnitTest* \/*unit_test*\/,$/;"	f	namespace:testing::internal
GetDefaultFilter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char* GetDefaultFilter() {$/;"	f	namespace:testing
GetDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ::std::ostream& GetDesc(::std::ostream& os) {  \/\/ NOLINT$/;"	f	class:testing::internal::PairMatchBase
GetDescriber	ceres-solver/internal/ceres/gmock/gmock.h	/^  const MatcherDescriberInterface* GetDescriber() const {$/;"	f	class:testing::internal::MatcherBase
GetDictionary	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::unique_ptr<LuaParameterDictionary> LuaParameterDictionary::GetDictionary($/;"	f	class:cartographer::common::LuaParameterDictionary
GetDictionaryFromRegistry	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^LuaParameterDictionary* GetDictionaryFromRegistry(lua_State* L) {$/;"	f	namespace:cartographer::common::__anon9
GetDouble	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^double LuaParameterDictionary::GetDouble(const std::string& key) {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetElementOr	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {$/;"	f	namespace:testing::internal
GetEnv	ceres-solver/internal/ceres/gtest/gtest.h	/^inline const char* GetEnv(const char* name) {$/;"	f	namespace:std::tr1::posix
GetEnviron	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline char** GetEnviron() { return environ; }$/;"	f	namespace:testing::internal
GetEnviron	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline char** GetEnviron() {$/;"	f	namespace:testing::internal
GetFailureReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ FailureReporterInterface* GetFailureReporter() {$/;"	f	namespace:testing::internal
GetFastCorrelativeScanMatcher	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  std::unique_ptr<FastCorrelativeScanMatcher3D> GetFastCorrelativeScanMatcher($/;"	f	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest
GetFileContentOrDie	cartographer/cartographer/common/configuration_file_resolver.cc	/^std::string ConfigurationFileResolver::GetFileContentOrDie($/;"	f	class:cartographer::common::ConfigurationFileResolver
GetFileSize	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^size_t GetFileSize(FILE* file) {$/;"	f	namespace:testing::internal
GetFilename	cartographer/cartographer/io/fake_file_writer.cc	/^std::string FakeFileWriter::GetFilename() { return filename_; }$/;"	f	class:cartographer::io::FakeFileWriter
GetFilename	cartographer/cartographer/io/file_writer.cc	/^std::string StreamFileWriter::GetFilename() { return filename_; }$/;"	f	class:cartographer::io::StreamFileWriter
GetFirstEcho	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^float GetFirstEcho(const sensor_msgs::LaserEcho& echo) {$/;"	f	namespace:cartographer_ros::__anon132
GetFirstEcho	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^float GetFirstEcho(float range) { return range; }$/;"	f	namespace:cartographer_ros::__anon132
GetFixedFramePoseData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::GetFixedFramePoseData() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetFixedFramePoseData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::GetFixedFramePoseData() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetFrozenTrajectoryIds	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^std::set<int> MapBuilderBridge::GetFrozenTrajectoryIds() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetFullPathOrDie	cartographer/cartographer/common/configuration_file_resolver.cc	/^std::string ConfigurationFileResolver::GetFullPathOrDie($/;"	f	class:cartographer::common::ConfigurationFileResolver
GetGlobalTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UnitTestImpl::GetGlobalTestPartResultReporter() {$/;"	f	class:testing::internal::UnitTestImpl
GetHandle	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual Expectation GetHandle() {$/;"	f	class:testing::internal::TypedExpectation
GetHandleOf	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Expectation UntypedFunctionMockerBase::GetHandleOf(ExpectationBase* exp) {$/;"	f	class:testing::internal::UntypedFunctionMockerBase
GetHybridGridProbability	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^  float GetHybridGridProbability(float x, float y, float z) const {$/;"	f	class:cartographer::mapping::scan_matching::__anon99::InterpolatedGridTest
GetId	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  size_t GetId(const std::string& str) {$/;"	f	class:testing::internal::edit_distance::__anon165::InternalStrings
GetIgnoreComment	ceres-solver/examples/pgm_image.h	/^bool GetIgnoreComment(std::istream* in, T& t) {$/;"	f	namespace:ceres::examples::__anon157
GetImuData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^sensor::MapByTime<sensor::ImuData> PoseGraph2D::GetImuData() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetImuData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^sensor::MapByTime<sensor::ImuData> PoseGraph3D::GetImuData() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetIndex	cartographer/cartographer/mapping/id.h	/^  static int GetIndex(const NodeId& id) { return id.node_index; }$/;"	f	class:cartographer::mapping::MapById
GetIndex	cartographer/cartographer/mapping/id.h	/^  static int GetIndex(const SubmapId& id) { return id.submap_index; }$/;"	f	class:cartographer::mapping::MapById
GetInitialLandmarkPose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^transform::Rigid3d GetInitialLandmarkPose($/;"	f	namespace:cartographer::mapping::optimization::__anon93
GetInitialLandmarkPose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^transform::Rigid3d GetInitialLandmarkPose($/;"	f	namespace:cartographer::mapping::optimization::__anon88
GetInjectableArgvs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const ::std::vector<testing::internal::string>& GetInjectableArgvs() {$/;"	f	namespace:testing::internal
GetInstance	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UnitTest* UnitTest::GetInstance() {$/;"	f	class:testing::UnitTest
GetInt	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^int LuaParameterDictionary::GetInt(const std::string& key) {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetInterpolatedGlobalTrajectoryPose	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^transform::Rigid3d PoseGraph2D::GetInterpolatedGlobalTrajectoryPose($/;"	f	class:cartographer::mapping::PoseGraph2D
GetInterpolatedGlobalTrajectoryPose	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^transform::Rigid3d PoseGraph3D::GetInterpolatedGlobalTrajectoryPose($/;"	f	class:cartographer::mapping::PoseGraph3D
GetKeys	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::vector<std::string> LuaParameterDictionary::GetKeys() const {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetKidnapResult	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  bool GetKidnapResult(){$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
GetKidnapSubmapList	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^cartographer_ros_msgs::SubmapList MapBuilderBridge::GetKidnapSubmapList() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetLandmarkIndex	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^int GetLandmarkIndex($/;"	f	namespace:cartographer_ros::__anon140
GetLandmarkNodes	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::GetLandmarkNodes() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetLandmarkNodes	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::GetLandmarkNodes() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetLandmarkPoses	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^std::map<std::string, transform::Rigid3d> PoseGraphStub::GetLandmarkPoses()$/;"	f	class:cartographer::cloud::PoseGraphStub
GetLandmarkPoses	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^std::map<std::string, transform::Rigid3d> PoseGraph2D::GetLandmarkPoses()$/;"	f	class:cartographer::mapping::PoseGraph2D
GetLandmarkPoses	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^std::map<std::string, transform::Rigid3d> PoseGraph3D::GetLandmarkPoses()$/;"	f	class:cartographer::mapping::PoseGraph3D
GetLandmarkPosesHandler	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.h	/^class GetLandmarkPosesHandler$/;"	c	namespace:cartographer::cloud::handlers
GetLandmarkPosesList	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^visualization_msgs::MarkerArray MapBuilderBridge::GetLandmarkPosesList() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetLastErrnoDescription	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string GetLastErrnoDescription() {$/;"	f	namespace:testing::internal
GetLastExtrapolatedTime	cartographer/cartographer/mapping/pose_extrapolator.cc	/^common::Time PoseExtrapolator::GetLastExtrapolatedTime() const {$/;"	f	class:cartographer::mapping::PoseExtrapolator
GetLastPoseTime	cartographer/cartographer/mapping/pose_extrapolator.cc	/^common::Time PoseExtrapolator::GetLastPoseTime() const {$/;"	f	class:cartographer::mapping::PoseExtrapolator
GetLatestNodeTime	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^common::Time PoseGraph2D::GetLatestNodeTime(const NodeId& node_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
GetLatestNodeTime	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^common::Time PoseGraph3D::GetLatestNodeTime(const NodeId& node_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
GetLocalSlamResultCallback	cartographer/cartographer/mapping/map_builder_test.cc	/^  MapBuilderInterface::LocalSlamResultCallback GetLocalSlamResultCallback() {$/;"	f	class:cartographer::mapping::__anon55::MapBuilderTest
GetLocalSlamResultCallbackForSubscriptions	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^MapBuilderContext<SubmapType>::GetLocalSlamResultCallbackForSubscriptions() {$/;"	f	class:cartographer::cloud::MapBuilderContext
GetLocalToGlobalTransform	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^transform::Rigid3d PoseGraphStub::GetLocalToGlobalTransform($/;"	f	class:cartographer::cloud::PoseGraphStub
GetLocalToGlobalTransform	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^transform::Rigid3d PoseGraph2D::GetLocalToGlobalTransform($/;"	f	class:cartographer::mapping::PoseGraph2D
GetLocalToGlobalTransform	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^transform::Rigid3d PoseGraph3D::GetLocalToGlobalTransform($/;"	f	class:cartographer::mapping::PoseGraph3D
GetLocalToGlobalTransformHandler	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.h	/^class GetLocalToGlobalTransformHandler$/;"	c	namespace:cartographer::cloud::handlers
GetLossFunctionForResidualBlock	ceres-solver/internal/ceres/problem.cc	/^const LossFunction* Problem::GetLossFunctionForResidualBlock($/;"	f	class:ceres::Problem
GetLossFunctionForResidualBlock	ceres-solver/internal/ceres/problem_impl.cc	/^const LossFunction* ProblemImpl::GetLossFunctionForResidualBlock($/;"	f	class:ceres::internal::ProblemImpl
GetMaxCorrespondenceCost	cartographer/cartographer/mapping/2d/grid_2d.h	/^  float GetMaxCorrespondenceCost() const { return max_correspondence_cost_; }$/;"	f	class:cartographer::mapping::Grid2D
GetMaximum	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^  float GetMaximum() const {$/;"	f	class:cartographer::mapping::scan_matching::__anon78::SlidingWindowMaximum
GetMinCorrespondenceCost	cartographer/cartographer/mapping/2d/grid_2d.h	/^  float GetMinCorrespondenceCost() const { return min_correspondence_cost_; }$/;"	f	class:cartographer::mapping::Grid2D
GetMutableTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestCase* GetMutableTestCase(int i) {$/;"	f	class:testing::internal::UnitTestImpl
GetMutableTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestCase* UnitTest::GetMutableTestCase(int i) {$/;"	f	class:testing::UnitTest
GetMutableTestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestInfo* TestCase::GetMutableTestInfo(int i) {$/;"	f	class:testing::TestCase
GetNextMessage	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^PlayableBagMultiplexer::GetNextMessage() {$/;"	f	class:cartographer_ros::PlayableBagMultiplexer
GetNextMessage	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^rosbag::MessageInstance PlayableBag::GetNextMessage() {$/;"	f	class:cartographer_ros::PlayableBag
GetNextRandomSeed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline int GetNextRandomSeed(int seed) {$/;"	f	namespace:testing::internal
GetNonNegativeInt	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^int LuaParameterDictionary::GetNonNegativeInt(const std::string& key) {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetNumFinishedNodes	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^int ConstraintBuilder2D::GetNumFinishedNodes() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
GetNumFinishedNodes	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^int ConstraintBuilder3D::GetNumFinishedNodes() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
GetOdometryData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^sensor::MapByTime<sensor::OdometryData> PoseGraph2D::GetOdometryData() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetOdometryData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^sensor::MapByTime<sensor::OdometryData> PoseGraph3D::GetOdometryData() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetOptimizedSubmapData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::TrimmingHandle::GetOptimizedSubmapData() const {$/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
GetOptimizedSubmapData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::TrimmingHandle::GetOptimizedSubmapData() const {$/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
GetOrCreateValue	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* GetOrCreateValue() const {$/;"	f	class:std::tr1::ThreadLocal
GetOrderedParameterBlocks	ceres-solver/internal/ceres/compressed_row_jacobian_writer.cc	/^void CompressedRowJacobianWriter::GetOrderedParameterBlocks($/;"	f	class:ceres::internal::CompressedRowJacobianWriter
GetOutputFormat	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;"	f	class:testing::internal::UnitTestOptions
GetParam	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamType& GetParam() const {$/;"	f	class:testing::WithParamInterface
GetParamNameGen	ceres-solver/internal/ceres/gtest/gtest.h	/^ParamNameGenFunctor GetParamNameGen(ParamNameGenFunctor func) {$/;"	f	namespace:testing::internal
GetParamNameGen	ceres-solver/internal/ceres/gtest/gtest.h	/^typename ParamNameGenFunc<ParamType>::Type *GetParamNameGen() {$/;"	f	namespace:testing::internal
GetParameterBlock	ceres-solver/internal/ceres/problem_test.cc	/^  ParameterBlock* GetParameterBlock(int block) {$/;"	f	struct:ceres::internal::DynamicProblem
GetParameterBlocks	ceres-solver/internal/ceres/problem.cc	/^void Problem::GetParameterBlocks(vector<double*>* parameter_blocks) const {$/;"	f	class:ceres::Problem
GetParameterBlocks	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::GetParameterBlocks(vector<double*>* parameter_blocks) const {$/;"	f	class:ceres::internal::ProblemImpl
GetParameterBlocksForResidualBlock	ceres-solver/internal/ceres/problem.cc	/^void Problem::GetParameterBlocksForResidualBlock($/;"	f	class:ceres::Problem
GetParameterBlocksForResidualBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::GetParameterBlocksForResidualBlock($/;"	f	class:ceres::internal::ProblemImpl
GetParameterization	ceres-solver/internal/ceres/problem.cc	/^const LocalParameterization* Problem::GetParameterization($/;"	f	class:ceres::Problem
GetParameterization	ceres-solver/internal/ceres/problem_impl.cc	/^const LocalParameterization* ProblemImpl::GetParameterization($/;"	f	class:ceres::internal::ProblemImpl
GetPixel	cartographer/cartographer/io/image.cc	/^const Uint8Color Image::GetPixel(int x, int y) const {$/;"	f	class:cartographer::io::Image
GetPoseFromCandidate	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^transform::Rigid3f FastCorrelativeScanMatcher3D::GetPoseFromCandidate($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
GetPrefixUntilComma	ceres-solver/internal/ceres/gtest/gtest.h	/^inline std::string GetPrefixUntilComma(const char* str) {$/;"	f	namespace:testing::internal
GetProbability	cartographer/cartographer/mapping/2d/probability_grid.cc	/^float ProbabilityGrid::GetProbability(const Eigen::Array2i& cell_index) const {$/;"	f	class:cartographer::mapping::ProbabilityGrid
GetProbability	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  float GetProbability(float x, float y, float z) const {$/;"	f	class:cartographer::mapping::__anon109::RangeDataInserter3DTest
GetProbability	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^  T GetProbability(const T& x, const T& y, const T& z) const {$/;"	f	class:cartographer::mapping::scan_matching::InterpolatedGrid
GetRandomPose	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  transform::Rigid3f GetRandomPose() {$/;"	f	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest
GetRandomRigid2	cartographer/cartographer/transform/rigid_transform_test.cc	/^  Rigid2<T> GetRandomRigid2() {$/;"	f	class:cartographer::transform::__anon112::RigidTransformTest
GetRandomRigid3	cartographer/cartographer/transform/rigid_transform_test.cc	/^  Rigid3<T> GetRandomRigid3() {$/;"	f	class:cartographer::transform::__anon112::RigidTransformTest
GetRandomSeedFromFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline int GetRandomSeedFromFlag(Int32 random_seed_flag) {$/;"	f	namespace:testing::internal
GetRawPointer	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Element* GetRawPointer(Element* p) { return p; }$/;"	f	namespace:testing::internal
GetRawPointer	ceres-solver/internal/ceres/gmock/gmock.h	/^inline const typename Pointer::element_type* GetRawPointer(const Pointer& p) {$/;"	f	namespace:testing::internal
GetReservedAttributesForElement	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::vector<std::string> GetReservedAttributesForElement($/;"	f	namespace:testing
GetResidualBlock	ceres-solver/internal/ceres/problem_test.cc	/^  ResidualBlock* GetResidualBlock(int block) {$/;"	f	struct:ceres::internal::DynamicProblem
GetResidualBlocks	ceres-solver/internal/ceres/problem.cc	/^void Problem::GetResidualBlocks($/;"	f	class:ceres::Problem
GetResidualBlocks	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::GetResidualBlocks($/;"	f	class:ceres::internal::ProblemImpl
GetResidualBlocksForParameterBlock	ceres-solver/internal/ceres/problem.cc	/^void Problem::GetResidualBlocksForParameterBlock($/;"	f	class:ceres::Problem
GetResidualBlocksForParameterBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::GetResidualBlocksForParameterBlock($/;"	f	class:ceres::internal::ProblemImpl
GetResult	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        bool GetResult(){return IfKidnapped;}$/;"	f	class:cartographer::mapping::KidnapDetection
GetSelectedArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^  static SelectedArgs GetSelectedArgs(ArgsTuple args) {$/;"	f	class:testing::internal::ArgsMatcherImpl
GetSelectedFields	ceres-solver/internal/ceres/gmock/gmock.h	/^  static type GetSelectedFields(const Tuple& \/* t *\/) {$/;"	f	class:testing::internal::TupleFields
GetSelectedFields	ceres-solver/internal/ceres/gmock/gmock.h	/^  static type GetSelectedFields(const Tuple& t) {$/;"	f	class:testing::internal::TupleFields
GetSensorId	cartographer/cartographer/sensor/data.h	/^  const std::string &GetSensorId() const { return sensor_id_; }$/;"	f	class:cartographer::sensor::Data
GetSliceIdentifier	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^std::string GetSliceIdentifier($/;"	f	namespace:cartographer_rviz::__anon146
GetState	cartographer/cartographer/common/task.cc	/^Task::State Task::GetState() {$/;"	f	class:cartographer::common::Task
GetState	ceres-solver/internal/ceres/parameter_block.h	/^  void GetState(double *x) const {$/;"	f	class:ceres::internal::ParameterBlock
GetStatusFileDescriptor	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int GetStatusFileDescriptor(unsigned int parent_process_id,$/;"	f	namespace:testing::internal
GetStream	ceres-solver/internal/ceres/gtest/gtest.h	/^  ::std::ostream& GetStream() { return ::std::cerr; }$/;"	f	class:std::tr1::GTestLog
GetString	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::string LuaParameterDictionary::GetString(const std::string& key) {$/;"	f	class:cartographer::common::LuaParameterDictionary
GetString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string Message::GetString() const {$/;"	f	class:testing::Message
GetSubmapData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraphInterface::SubmapData PoseGraph2D::GetSubmapData($/;"	f	class:cartographer::mapping::PoseGraph2D
GetSubmapData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraphInterface::SubmapData PoseGraph3D::GetSubmapData($/;"	f	class:cartographer::mapping::PoseGraph3D
GetSubmapDataUnderLock	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::GetSubmapDataUnderLock() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetSubmapDataUnderLock	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraphInterface::SubmapData PoseGraph2D::GetSubmapDataUnderLock($/;"	f	class:cartographer::mapping::PoseGraph2D
GetSubmapDataUnderLock	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::GetSubmapDataUnderLock() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetSubmapDataUnderLock	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraphInterface::SubmapData PoseGraph3D::GetSubmapDataUnderLock($/;"	f	class:cartographer::mapping::PoseGraph3D
GetSubmapHandler	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.h	/^class GetSubmapHandler : public async_grpc::RpcHandler<GetSubmapSignature> {$/;"	c	namespace:cartographer::cloud::handlers
GetSubmapIds	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^std::vector<SubmapId> PoseGraph2D::TrimmingHandle::GetSubmapIds($/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
GetSubmapIds	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^std::vector<SubmapId> PoseGraph3D::TrimmingHandle::GetSubmapIds($/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
GetSubmapList	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^cartographer_ros_msgs::SubmapList MapBuilderBridge::GetSubmapList() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const TestCase* GetTestCase(int i) const {$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestCase* UnitTestImpl::GetTestCase(const char* test_case_name,$/;"	f	class:testing::internal::UnitTestImpl
GetTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const TestCase* UnitTest::GetTestCase(int i) const {$/;"	f	class:testing::UnitTest
GetTestCaseName	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual const string& GetTestCaseName() const { return test_case_name_; }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestCasePatternHolder	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder($/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
GetTestCaseTypeId	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual TypeId GetTestCaseTypeId() const { return GetTypeId<TestCase>(); }$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
GetTestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const TestInfo* TestCase::GetTestInfo(int i) const {$/;"	f	class:testing::TestCase
GetTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {$/;"	f	class:testing::TestPartResultArray
GetTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const TestPartResult& TestResult::GetTestPartResult(int i) const {$/;"	f	class:testing::TestResult
GetTestPartResultReporterForCurrentThread	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UnitTestImpl::GetTestPartResultReporterForCurrentThread() {$/;"	f	class:testing::internal::UnitTestImpl
GetTestProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const TestProperty& TestResult::GetTestProperty(int i) const {$/;"	f	class:testing::TestResult
GetTestTypeId	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TypeId GetTestTypeId() {$/;"	f	namespace:testing::internal
GetThreadCount	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^size_t GetThreadCount() {$/;"	f	namespace:testing::internal
GetThreadLocalsMapLocked	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static ThreadIdToThreadLocals* GetThreadLocalsMapLocked() {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	file:
GetTime	cartographer/cartographer/mapping/id.h	/^common::Time GetTime(const T& t) {$/;"	f	namespace:cartographer::mapping::internal
GetTimeInMillis	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TimeInMillis GetTimeInMillis() {$/;"	f	namespace:testing::internal
GetToName	ceres-solver/internal/ceres/gmock/gmock.h	/^  static string GetToName() {$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase
GetTrajectoryBuilder	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^mapping::TrajectoryBuilderInterface* MapBuilderStub::GetTrajectoryBuilder($/;"	f	class:cartographer::cloud::MapBuilderStub
GetTrajectoryData	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::GetTrajectoryData() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
GetTrajectoryData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::GetTrajectoryData() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetTrajectoryData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::GetTrajectoryData() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetTrajectoryNodeList	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^visualization_msgs::MarkerArray MapBuilderBridge::GetTrajectoryNodeList() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetTrajectoryNodePoses	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::GetTrajectoryNodePoses() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
GetTrajectoryNodePoses	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^MapById<NodeId, TrajectoryNodePose> PoseGraph2D::GetTrajectoryNodePoses()$/;"	f	class:cartographer::mapping::PoseGraph2D
GetTrajectoryNodePoses	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^MapById<NodeId, TrajectoryNodePose> PoseGraph3D::GetTrajectoryNodePoses()$/;"	f	class:cartographer::mapping::PoseGraph3D
GetTrajectoryNodePosesHandler	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.h	/^class GetTrajectoryNodePosesHandler$/;"	c	namespace:cartographer::cloud::handlers
GetTrajectoryNodes	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::GetTrajectoryNodes() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
GetTrajectoryNodes	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^MapById<NodeId, TrajectoryNode> PoseGraph2D::GetTrajectoryNodes() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
GetTrajectoryNodes	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::TrimmingHandle::GetTrajectoryNodes() const {$/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
GetTrajectoryNodes	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^MapById<NodeId, TrajectoryNode> PoseGraph3D::GetTrajectoryNodes() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
GetTrajectoryNodes	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::TrimmingHandle::GetTrajectoryNodes() const {$/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
GetTrajectoryStates	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^MapBuilderBridge::GetTrajectoryStates() {$/;"	f	class:cartographer_ros::MapBuilderBridge
GetTypeId	ceres-solver/internal/ceres/gtest/gtest.h	/^TypeId GetTypeId() {$/;"	f	namespace:testing::internal
GetTypeName	ceres-solver/internal/ceres/gtest/gtest.h	/^std::string GetTypeName() {$/;"	f	namespace:testing::internal
GetUnitTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline UnitTestImpl* GetUnitTestImpl() {$/;"	f	namespace:testing::internal
GetValue	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    const ValueType& GetValue() const {$/;"	f	class:cartographer::mapping::FlatGrid::Iterator
GetValue	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  int GetValue(const Eigen::Array2i& xy_index) const {$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
GetValue	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^    void GetValue(const int row, const int column, double* const value) const {$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D::GridArrayAdapter
GetValue	ceres-solver/include/ceres/cubic_interpolation.h	/^  EIGEN_STRONG_INLINE void GetValue(const int n, double* f) const {$/;"	f	struct:ceres::Grid1D
GetValue	ceres-solver/include/ceres/cubic_interpolation.h	/^  EIGEN_STRONG_INLINE void GetValue(const int r, const int c, double* f) const {$/;"	f	struct:ceres::Grid2D
GetValueFromLuaTable	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void GetValueFromLuaTable(lua_State* L, const T& key) {$/;"	f	namespace:cartographer::common::__anon9
GetValueOnCurrentThread	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static ThreadLocalValueHolderBase* GetValueOnCurrentThread($/;"	f	class:testing::internal::ThreadLocalRegistryImpl
GetValueOnCurrentThread	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ThreadLocalValueHolderBase* ThreadLocalRegistry::GetValueOnCurrentThread($/;"	f	class:testing::internal::ThreadLocalRegistry
GetXDeltaIndices	ceres-solver/examples/fields_of_experts.h	/^  const std::vector<int>& GetXDeltaIndices() const {$/;"	f	class:ceres::examples::FieldsOfExperts
GetYDeltaIndices	ceres-solver/examples/fields_of_experts.h	/^  const std::vector<int>& GetYDeltaIndices() const {$/;"	f	class:ceres::examples::FieldsOfExperts
GetYaw	cartographer/cartographer/transform/transform.h	/^T GetYaw(const Eigen::Quaternion<T>& rotation) {$/;"	f	namespace:cartographer::transform
GetYaw	cartographer/cartographer/transform/transform.h	/^T GetYaw(const Rigid3<T>& transform) {$/;"	f	namespace:cartographer::transform
GlobalSize	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  virtual int GlobalSize() const { return kGlobalSize; }$/;"	f	class:ceres::AutoDiffLocalParameterization
GlobalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int GlobalSize() const { return 4; }$/;"	f	class:ceres::EigenQuaternionParameterization
GlobalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int GlobalSize() const { return 4; }$/;"	f	class:ceres::QuaternionParameterization
GlobalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int GlobalSize() const { return global_size_; }$/;"	f	class:ceres::ProductParameterization
GlobalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int GlobalSize() const { return size_; }$/;"	f	class:ceres::HomogeneousVectorParameterization
GlobalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int GlobalSize() const { return size_; }$/;"	f	class:ceres::IdentityParameterization
GlobalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int GlobalSize() const {$/;"	f	class:ceres::SubsetParameterization
GlobalSize	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual int GlobalSize() const { return 2; }$/;"	f	class:ceres::internal::PolynomialParameterization
GlobalSize	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  virtual int GlobalSize() const { return global_J_local.rows(); }$/;"	f	class:ceres::internal::MatrixParameterization
GlobalSize	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual int GlobalSize() const { return 1; }$/;"	f	struct:ceres::internal::TestParameterization
GlobalSize	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual int GlobalSize() const { return 1;}$/;"	f	class:ceres::internal::BadLocalParameterization
GlobalTrajectoryBuilder	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^  GlobalTrajectoryBuilder($/;"	f	class:cartographer::mapping::__anon84::GlobalTrajectoryBuilder
GlobalTrajectoryBuilder	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^class GlobalTrajectoryBuilder : public mapping::TrajectoryBuilderInterface {$/;"	c	namespace:cartographer::mapping::__anon84	file:
GlobalTrajectoryBuilderRegisterMetrics	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^void GlobalTrajectoryBuilderRegisterMetrics(metrics::FamilyFactory* factory) {$/;"	f	namespace:cartographer::mapping
GoodCostFunction	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^class GoodCostFunction: public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
GoodTestTerm	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  GoodTestTerm(int arity, int const* dim) : arity_(arity), return_value_(true) {$/;"	f	class:ceres::internal::GoodTestTerm
GoodTestTerm	ceres-solver/internal/ceres/gradient_checker_test.cc	/^class GoodTestTerm : public CostFunction {$/;"	c	namespace:ceres::internal	file:
GoogleTestFailureException	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GoogleTestFailureException::GoogleTestFailureException($/;"	f	class:testing::internal::GoogleTestFailureException
GoogleTestFailureException	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {$/;"	c	namespace:testing::internal
GoogleTestFailureReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GoogleTestFailureReporter : public FailureReporterInterface {$/;"	c	namespace:testing::internal	file:
GradientChecker	ceres-solver/include/ceres/gradient_checker.h	/^class CERES_EXPORT GradientChecker {$/;"	c	namespace:ceres
GradientChecker	ceres-solver/internal/ceres/gradient_checker.cc	/^GradientChecker::GradientChecker($/;"	f	class:ceres::GradientChecker
GradientCheckingCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  GradientCheckingCostFunction($/;"	f	class:ceres::internal::__anon179::GradientCheckingCostFunction
GradientCheckingCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^class GradientCheckingCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal::__anon179	file:
GradientCheckingIterationCallback	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^GradientCheckingIterationCallback::GradientCheckingIterationCallback()$/;"	f	class:ceres::internal::GradientCheckingIterationCallback
GradientCheckingIterationCallback	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^class GradientCheckingIterationCallback : public IterationCallback {$/;"	c	namespace:ceres::internal
GradientProblem	ceres-solver/include/ceres/gradient_problem.h	/^class CERES_EXPORT GradientProblem {$/;"	c	namespace:ceres
GradientProblem	ceres-solver/internal/ceres/gradient_problem.cc	/^GradientProblem::GradientProblem(FirstOrderFunction* function)$/;"	f	class:ceres::GradientProblem
GradientProblem	ceres-solver/internal/ceres/gradient_problem.cc	/^GradientProblem::GradientProblem(FirstOrderFunction* function,$/;"	f	class:ceres::GradientProblem
GradientProblemEvaluator	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  explicit GradientProblemEvaluator(const GradientProblem& problem)$/;"	f	class:ceres::internal::GradientProblemEvaluator
GradientProblemEvaluator	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^class GradientProblemEvaluator : public Evaluator {$/;"	c	namespace:ceres::internal
GradientProblemSolver	ceres-solver/include/ceres/gradient_problem_solver.h	/^class CERES_EXPORT GradientProblemSolver {$/;"	c	namespace:ceres
GradientProblemSolverOptionsToSolverOptions	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^Solver::Options GradientProblemSolverOptionsToSolverOptions($/;"	f	namespace:ceres::__anon187
GradientToleranceReached	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::GradientToleranceReached() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
Graph	ceres-solver/internal/ceres/graph.h	/^  Graph() {}$/;"	f	class:ceres::internal::Graph
Graph	ceres-solver/internal/ceres/graph.h	/^class Graph {$/;"	c	namespace:ceres::internal
Grid1D	ceres-solver/include/ceres/cubic_interpolation.h	/^  Grid1D(const T* data, const int begin, const int end)$/;"	f	struct:ceres::Grid1D
Grid1D	ceres-solver/include/ceres/cubic_interpolation.h	/^struct Grid1D {$/;"	s	namespace:ceres
Grid2D	cartographer/cartographer/mapping/2d/grid_2d.cc	/^Grid2D::Grid2D(const MapLimits& limits, float min_correspondence_cost,$/;"	f	class:cartographer::mapping::Grid2D
Grid2D	cartographer/cartographer/mapping/2d/grid_2d.cc	/^Grid2D::Grid2D(const proto::Grid2D& proto)$/;"	f	class:cartographer::mapping::Grid2D
Grid2D	cartographer/cartographer/mapping/2d/grid_2d.h	/^class Grid2D : public GridInterface {$/;"	c	namespace:cartographer::mapping
Grid2D	ceres-solver/include/ceres/cubic_interpolation.h	/^  Grid2D(const T* data,$/;"	f	struct:ceres::Grid2D
Grid2D	ceres-solver/include/ceres/cubic_interpolation.h	/^struct Grid2D {$/;"	s	namespace:ceres
GridArrayAdapter	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^    explicit GridArrayAdapter(const Grid2D& grid) : grid_(grid) {}$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D::GridArrayAdapter
GridArrayAdapter	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  class GridArrayAdapter {$/;"	c	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
GridInterface	cartographer/cartographer/mapping/grid_interface.h	/^class GridInterface {$/;"	c	namespace:cartographer::mapping
GroupId	ceres-solver/include/ceres/ordered_groups.h	/^  int GroupId(const T element) const {$/;"	f	class:ceres::OrderedGroups
GroupSegmentsByAltitude	cartographer/cartographer/mapping/detect_floors.cc	/^void GroupSegmentsByAltitude(const proto::Trajectory& trajectory,$/;"	f	namespace:cartographer::mapping::__anon62
GroupSize	ceres-solver/include/ceres/ordered_groups.h	/^  int GroupSize(const int group) const {$/;"	f	class:ceres::OrderedGroups
GrowAsNeeded	cartographer/cartographer/mapping/internal/2d/ray_casting.cc	/^void GrowAsNeeded(const sensor::RangeData& range_data,$/;"	f	namespace:cartographer::mapping::__anon74
GrowLimits	cartographer/cartographer/mapping/2d/grid_2d.cc	/^void Grid2D::GrowLimits(const Eigen::Vector2f& point) {$/;"	f	class:cartographer::mapping::Grid2D
Gt	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::Gt2Matcher Gt() { return internal::Gt2Matcher(); }$/;"	f	namespace:testing
Gt	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::GtMatcher<Rhs> Gt(Rhs x) {$/;"	f	namespace:testing
Gt2Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Gt2Matcher : public PairMatchBase<Gt2Matcher, AnyGt> {$/;"	c	namespace:testing::internal
GtMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit GtMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::GtMatcher
GtMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class GtMatcher : public ComparisonBase<GtMatcher<Rhs>, Rhs, AnyGt> {$/;"	c	namespace:testing::internal
HAS_PIXMAN_GLYPHS	cartographer/bazel/third_party/cairo/config.h	70;"	d
HAVE_ALARM	cartographer/bazel/third_party/cairo/config.h	73;"	d
HAVE_ALARM	cartographer/bazel/third_party/pixman/config.h	21;"	d
HAVE_BUILTIN_CLZ	cartographer/bazel/third_party/pixman/config.h	24;"	d
HAVE_BUILTIN_RETURN_ADDRESS	cartographer/bazel/third_party/cairo/config.h	80;"	d
HAVE_BYTESWAP_H	cartographer/bazel/third_party/cairo/config.h	83;"	d
HAVE_CLOCK_GETTIME	cartographer/bazel/third_party/cairo/config.h	86;"	d
HAVE_CTIME_R	cartographer/bazel/third_party/cairo/config.h	89;"	d
HAVE_CXX11_ATOMIC_PRIMITIVES	cartographer/bazel/third_party/cairo/config.h	92;"	d
HAVE_DIRENT_H	cartographer/bazel/third_party/fontconfig/config.h	52;"	d
HAVE_DLFCN_H	cartographer/bazel/third_party/cairo/config.h	95;"	d
HAVE_DLFCN_H	cartographer/bazel/third_party/fontconfig/config.h	55;"	d
HAVE_DLFCN_H	cartographer/bazel/third_party/pixman/config.h	27;"	d
HAVE_DRAND48	cartographer/bazel/third_party/cairo/config.h	98;"	d
HAVE_FCNTL_H	cartographer/bazel/third_party/cairo/config.h	107;"	d
HAVE_FCNTL_H	cartographer/bazel/third_party/fontconfig/config.h	61;"	d
HAVE_FECLEAREXCEPT	cartographer/bazel/third_party/cairo/config.h	110;"	d
HAVE_FEDISABLEEXCEPT	cartographer/bazel/third_party/cairo/config.h	113;"	d
HAVE_FEENABLEEXCEPT	cartographer/bazel/third_party/cairo/config.h	116;"	d
HAVE_FEENABLEEXCEPT	cartographer/bazel/third_party/pixman/config.h	30;"	d
HAVE_FENV_H	cartographer/bazel/third_party/cairo/config.h	119;"	d
HAVE_FENV_H	cartographer/bazel/third_party/pixman/config.h	33;"	d
HAVE_FLOAT128	cartographer/bazel/third_party/pixman/config.h	36;"	d
HAVE_FLOCKFILE	cartographer/bazel/third_party/cairo/config.h	122;"	d
HAVE_FORK	cartographer/bazel/third_party/cairo/config.h	125;"	d
HAVE_FSTATFS	cartographer/bazel/third_party/fontconfig/config.h	64;"	d
HAVE_FSTATVFS	cartographer/bazel/third_party/fontconfig/config.h	67;"	d
HAVE_FT_BITMAP_SIZE_Y_PPEM	cartographer/bazel/third_party/fontconfig/config.h	70;"	d
HAVE_FT_GET_BDF_PROPERTY	cartographer/bazel/third_party/fontconfig/config.h	73;"	d
HAVE_FT_GET_NEXT_CHAR	cartographer/bazel/third_party/fontconfig/config.h	76;"	d
HAVE_FT_GET_PS_FONT_INFO	cartographer/bazel/third_party/fontconfig/config.h	79;"	d
HAVE_FT_GET_X11_FONT_FORMAT	cartographer/bazel/third_party/cairo/config.h	128;"	d
HAVE_FT_GET_X11_FONT_FORMAT	cartographer/bazel/third_party/fontconfig/config.h	82;"	d
HAVE_FT_GLYPHSLOT_EMBOLDEN	cartographer/bazel/third_party/cairo/config.h	131;"	d
HAVE_FT_GLYPHSLOT_OBLIQUE	cartographer/bazel/third_party/cairo/config.h	134;"	d
HAVE_FT_HAS_PS_GLYPH_NAMES	cartographer/bazel/third_party/fontconfig/config.h	85;"	d
HAVE_FT_LIBRARY_SETLCDFILTER	cartographer/bazel/third_party/cairo/config.h	137;"	d
HAVE_FT_LOAD_SFNT_TABLE	cartographer/bazel/third_party/cairo/config.h	140;"	d
HAVE_FT_SELECT_SIZE	cartographer/bazel/third_party/fontconfig/config.h	88;"	d
HAVE_FUNLOCKFILE	cartographer/bazel/third_party/cairo/config.h	143;"	d
HAVE_GETLINE	cartographer/bazel/third_party/cairo/config.h	149;"	d
HAVE_GETOPT	cartographer/bazel/third_party/fontconfig/config.h	94;"	d
HAVE_GETOPT_LONG	cartographer/bazel/third_party/fontconfig/config.h	97;"	d
HAVE_GETPAGESIZE	cartographer/bazel/third_party/fontconfig/config.h	100;"	d
HAVE_GETPAGESIZE	cartographer/bazel/third_party/pixman/config.h	42;"	d
HAVE_GETTIMEOFDAY	cartographer/bazel/third_party/pixman/config.h	45;"	d
HAVE_INTEL_ATOMIC_PRIMITIVES	cartographer/bazel/third_party/fontconfig/config.h	106;"	d
HAVE_INTTYPES_H	cartographer/bazel/third_party/cairo/config.h	155;"	d
HAVE_INTTYPES_H	cartographer/bazel/third_party/fontconfig/config.h	109;"	d
HAVE_INTTYPES_H	cartographer/bazel/third_party/pixman/config.h	48;"	d
HAVE_LIBGEN_H	cartographer/bazel/third_party/cairo/config.h	161;"	d
HAVE_LIBPNG	cartographer/bazel/third_party/pixman/config.h	54;"	d
HAVE_LIBRT	cartographer/bazel/third_party/cairo/config.h	164;"	d
HAVE_LINK	cartographer/bazel/third_party/cairo/config.h	170;"	d
HAVE_LINK	cartographer/bazel/third_party/fontconfig/config.h	112;"	d
HAVE_LRAND48	cartographer/bazel/third_party/fontconfig/config.h	115;"	d
HAVE_LSTAT	cartographer/bazel/third_party/fontconfig/config.h	118;"	d
HAVE_MEMORY_H	cartographer/bazel/third_party/cairo/config.h	182;"	d
HAVE_MEMORY_H	cartographer/bazel/third_party/fontconfig/config.h	121;"	d
HAVE_MEMORY_H	cartographer/bazel/third_party/pixman/config.h	57;"	d
HAVE_MKDIR	cartographer/bazel/third_party/cairo/config.h	186;"	d
HAVE_MKDTEMP	cartographer/bazel/third_party/fontconfig/config.h	124;"	d
HAVE_MKOSTEMP	cartographer/bazel/third_party/fontconfig/config.h	127;"	d
HAVE_MKSTEMP	cartographer/bazel/third_party/fontconfig/config.h	130;"	d
HAVE_MMAP	cartographer/bazel/third_party/cairo/config.h	189;"	d
HAVE_MMAP	cartographer/bazel/third_party/fontconfig/config.h	133;"	d
HAVE_MMAP	cartographer/bazel/third_party/pixman/config.h	60;"	d
HAVE_MPROTECT	cartographer/bazel/third_party/pixman/config.h	63;"	d
HAVE_POSIX_FADVISE	cartographer/bazel/third_party/fontconfig/config.h	139;"	d
HAVE_POSIX_MEMALIGN	cartographer/bazel/third_party/pixman/config.h	66;"	d
HAVE_PTHREAD	cartographer/bazel/third_party/fontconfig/config.h	142;"	d
HAVE_PTHREADS	cartographer/bazel/third_party/pixman/config.h	69;"	d
HAVE_PTHREAD_PRIO_INHERIT	cartographer/bazel/third_party/fontconfig/config.h	145;"	d
HAVE_RAISE	cartographer/bazel/third_party/cairo/config.h	198;"	d
HAVE_RAND	cartographer/bazel/third_party/fontconfig/config.h	148;"	d
HAVE_RANDOM	cartographer/bazel/third_party/fontconfig/config.h	151;"	d
HAVE_RANDOM_R	cartographer/bazel/third_party/fontconfig/config.h	154;"	d
HAVE_RAND_R	cartographer/bazel/third_party/fontconfig/config.h	157;"	d
HAVE_READLINK	cartographer/bazel/third_party/fontconfig/config.h	160;"	d
HAVE_SCHED_GETAFFINITY	cartographer/bazel/third_party/cairo/config.h	204;"	d
HAVE_SCHED_H	cartographer/bazel/third_party/cairo/config.h	207;"	d
HAVE_SETJMP_H	cartographer/bazel/third_party/cairo/config.h	210;"	d
HAVE_SIGACTION	cartographer/bazel/third_party/pixman/config.h	72;"	d
HAVE_SIGNAL_H	cartographer/bazel/third_party/cairo/config.h	213;"	d
HAVE_STDINT_H	cartographer/bazel/third_party/cairo/config.h	216;"	d
HAVE_STDINT_H	cartographer/bazel/third_party/fontconfig/config.h	172;"	d
HAVE_STDINT_H	cartographer/bazel/third_party/pixman/config.h	75;"	d
HAVE_STDLIB_H	cartographer/bazel/third_party/cairo/config.h	219;"	d
HAVE_STDLIB_H	cartographer/bazel/third_party/fontconfig/config.h	175;"	d
HAVE_STDLIB_H	cartographer/bazel/third_party/pixman/config.h	78;"	d
HAVE_STRINGS_H	cartographer/bazel/third_party/cairo/config.h	222;"	d
HAVE_STRINGS_H	cartographer/bazel/third_party/fontconfig/config.h	178;"	d
HAVE_STRINGS_H	cartographer/bazel/third_party/pixman/config.h	81;"	d
HAVE_STRING_H	cartographer/bazel/third_party/cairo/config.h	225;"	d
HAVE_STRING_H	cartographer/bazel/third_party/fontconfig/config.h	181;"	d
HAVE_STRING_H	cartographer/bazel/third_party/pixman/config.h	84;"	d
HAVE_STRNDUP	cartographer/bazel/third_party/cairo/config.h	228;"	d
HAVE_STRUCT_DIRENT_D_TYPE	cartographer/bazel/third_party/fontconfig/config.h	184;"	d
HAVE_STRUCT_STATFS_F_FLAGS	cartographer/bazel/third_party/fontconfig/config.h	187;"	d
HAVE_SYS_IOCTL_H	cartographer/bazel/third_party/cairo/config.h	234;"	d
HAVE_SYS_MMAN_H	cartographer/bazel/third_party/cairo/config.h	237;"	d
HAVE_SYS_MMAN_H	cartographer/bazel/third_party/pixman/config.h	87;"	d
HAVE_SYS_MOUNT_H	cartographer/bazel/third_party/fontconfig/config.h	203;"	d
HAVE_SYS_PARAM_H	cartographer/bazel/third_party/fontconfig/config.h	210;"	d
HAVE_SYS_POLL_H	cartographer/bazel/third_party/cairo/config.h	240;"	d
HAVE_SYS_SOCKET_H	cartographer/bazel/third_party/cairo/config.h	243;"	d
HAVE_SYS_STATFS_H	cartographer/bazel/third_party/fontconfig/config.h	213;"	d
HAVE_SYS_STATVFS_H	cartographer/bazel/third_party/fontconfig/config.h	216;"	d
HAVE_SYS_STAT_H	cartographer/bazel/third_party/cairo/config.h	246;"	d
HAVE_SYS_STAT_H	cartographer/bazel/third_party/fontconfig/config.h	219;"	d
HAVE_SYS_STAT_H	cartographer/bazel/third_party/pixman/config.h	90;"	d
HAVE_SYS_TYPES_H	cartographer/bazel/third_party/cairo/config.h	249;"	d
HAVE_SYS_TYPES_H	cartographer/bazel/third_party/fontconfig/config.h	222;"	d
HAVE_SYS_TYPES_H	cartographer/bazel/third_party/pixman/config.h	93;"	d
HAVE_SYS_UN_H	cartographer/bazel/third_party/cairo/config.h	252;"	d
HAVE_SYS_VFS_H	cartographer/bazel/third_party/fontconfig/config.h	225;"	d
HAVE_SYS_WAIT_H	cartographer/bazel/third_party/cairo/config.h	255;"	d
HAVE_TIME_H	cartographer/bazel/third_party/cairo/config.h	258;"	d
HAVE_TT_OS2_USLOWEROPTICALPOINTSIZE	cartographer/bazel/third_party/fontconfig/config.h	228;"	d
HAVE_TT_OS2_USUPPEROPTICALPOINTSIZE	cartographer/bazel/third_party/fontconfig/config.h	231;"	d
HAVE_UINT64_T	cartographer/bazel/third_party/cairo/config.h	264;"	d
HAVE_UNISTD_H	cartographer/bazel/third_party/cairo/config.h	267;"	d
HAVE_UNISTD_H	cartographer/bazel/third_party/fontconfig/config.h	234;"	d
HAVE_UNISTD_H	cartographer/bazel/third_party/pixman/config.h	96;"	d
HAVE_VPRINTF	cartographer/bazel/third_party/fontconfig/config.h	237;"	d
HAVE_WAITPID	cartographer/bazel/third_party/cairo/config.h	273;"	d
HAVE_WARNING_CPP_DIRECTIVE	cartographer/bazel/third_party/fontconfig/config.h	240;"	d
HAVE_XML_SETDOCTYPEDECLHANDLER	cartographer/bazel/third_party/fontconfig/config.h	246;"	d
HAVE_ZLIB	cartographer/bazel/third_party/cairo/config.h	297;"	d
HAVE___UINT128_T	cartographer/bazel/third_party/cairo/config.h	300;"	d
HESTENES_STIEFEL	ceres-solver/include/ceres/types.h	/^  HESTENES_STIEFEL,$/;"	e	enum:ceres::NonlinearConjugateGradientType
HONOR_SHARDING_PROTOCOL	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    HONOR_SHARDING_PROTOCOL,$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding	file:
HRESULTFailureHelper	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult HRESULTFailureHelper(const char* expr,$/;"	f	namespace:testing::internal::__anon169
H_	ceres-solver/examples/libmv_homography.cc	/^  Mat3 *H_;$/;"	m	class:__anon158::TerminationCheckingCallback	file:
Handle	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef void* Handle;$/;"	t	class:std::tr1::AutoHandle
HandleCollatedSensorData	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^void CollatedTrajectoryBuilder::HandleCollatedSensorData($/;"	f	class:cartographer::mapping::CollatedTrajectoryBuilder
HandleExceptionsInMethodIfSupported	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Result HandleExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HandleFinishTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::HandleFinishTrajectory($/;"	f	class:cartographer_ros::Node
HandleImuMessage	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandleImuMessage(const int trajectory_id,$/;"	f	class:cartographer_ros::Node
HandleImuMessage	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleImuMessage(const std::string& sensor_id,$/;"	f	class:cartographer_ros::SensorBridge
HandleInvalidStep	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::HandleInvalidStep() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
HandleLandmarkMessage	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandleLandmarkMessage($/;"	f	class:cartographer_ros::Node
HandleLandmarkMessage	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleLandmarkMessage($/;"	f	class:cartographer_ros::SensorBridge
HandleLaserScan	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleLaserScan($/;"	f	class:cartographer_ros::SensorBridge
HandleLaserScanMessage	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandleLaserScanMessage(const int trajectory_id,$/;"	f	class:cartographer_ros::Node
HandleLaserScanMessage	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleLaserScanMessage($/;"	f	class:cartographer_ros::SensorBridge
HandleMessage	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^std::unique_ptr<carto::io::PointsBatch> HandleMessage($/;"	f	namespace:cartographer_ros::__anon133
HandleMultiEchoLaserScanMessage	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandleMultiEchoLaserScanMessage($/;"	f	class:cartographer_ros::Node
HandleMultiEchoLaserScanMessage	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleMultiEchoLaserScanMessage($/;"	f	class:cartographer_ros::SensorBridge
HandleNavSatFixMessage	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandleNavSatFixMessage(const int trajectory_id,$/;"	f	class:cartographer_ros::Node
HandleNavSatFixMessage	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleNavSatFixMessage($/;"	f	class:cartographer_ros::SensorBridge
HandleOdometryMessage	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandleOdometryMessage(const int trajectory_id,$/;"	f	class:cartographer_ros::Node
HandleOdometryMessage	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleOdometryMessage($/;"	f	class:cartographer_ros::SensorBridge
HandlePointCloud2Message	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::HandlePointCloud2Message($/;"	f	class:cartographer_ros::Node
HandlePointCloud2Message	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandlePointCloud2Message($/;"	f	class:cartographer_ros::SensorBridge
HandleRangefinder	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^void SensorBridge::HandleRangefinder($/;"	f	class:cartographer_ros::SensorBridge
HandleSehExceptionsInMethodIfSupported	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Result HandleSehExceptionsInMethodIfSupported($/;"	f	namespace:testing::internal
HandleStartTrajectory	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::HandleStartTrajectory($/;"	f	class:cartographer_ros::Node
HandleSubmapList	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^void Node::HandleSubmapList($/;"	f	class:cartographer_ros::__anon135::Node
HandleSubmapQuery	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^void MapBuilderBridge::HandleSubmapQuery($/;"	f	class:cartographer_ros::MapBuilderBridge
HandleSubmapQuery	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::HandleSubmapQuery($/;"	f	class:cartographer_ros::Node
HandleSuccessfulStep	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::HandleSuccessfulStep() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
HandleUnsuccessfulStep	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^void TrustRegionMinimizer::HandleUnsuccessfulStep() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
HandleWorkQueue	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::HandleWorkQueue($/;"	f	class:cartographer::mapping::PoseGraph2D
HandleWorkQueue	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::HandleWorkQueue($/;"	f	class:cartographer::mapping::PoseGraph3D
HandleWriteState	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::HandleWriteState($/;"	f	class:cartographer_ros::Node
HandlerTest	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^class HandlerTest : public Test {$/;"	c	namespace:cartographer::cloud::testing
Has	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^bool TransformInterpolationBuffer::Has(const common::Time time) const {$/;"	f	class:cartographer::transform::TransformInterpolationBuffer
HasEcho	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^bool HasEcho(const sensor_msgs::LaserEcho& echo) {$/;"	f	namespace:cartographer_ros::__anon132
HasEcho	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^bool HasEcho(float) { return true; }$/;"	f	namespace:cartographer_ros::__anon132
HasEdge	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool HasEdge(size_t ilhs, size_t irhs) const {$/;"	f	class:testing::internal::MatchMatrix
HasFailure	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }$/;"	f	class:testing::Test
HasFatalFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool Test::HasFatalFailure() {$/;"	f	class:testing::Test
HasFatalFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool TestResult::HasFatalFailure() const {$/;"	f	class:testing::TestResult
HasFloatingPoint	ceres-solver/include/ceres/jet.h	/^    HasFloatingPoint = 1,$/;"	e	enum:Eigen::NumTraits::__anon150
HasGoogleTestFlagPrefix	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool HasGoogleTestFlagPrefix(const char* str) {$/;"	f	namespace:testing::internal
HasKey	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^bool LuaParameterDictionary::HasKey(const std::string& key) const {$/;"	f	class:cartographer::common::LuaParameterDictionary
HasKeyOfType	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^bool HasKeyOfType(lua_State* L, const T& key) {$/;"	f	namespace:cartographer::common::__anon9
HasMaxAbsError	ceres-solver/internal/ceres/gmock/gmock.h	/^    bool HasMaxAbsError() const {$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
HasNewFatalFailureHelper	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^HasNewFatalFailureHelper::HasNewFatalFailureHelper()$/;"	f	class:testing::internal::HasNewFatalFailureHelper
HasNewFatalFailureHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ HasNewFatalFailureHelper$/;"	c	namespace:testing::internal
HasNonfatalFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool Test::HasNonfatalFailure() {$/;"	f	class:testing::Test
HasNonfatalFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool TestResult::HasNonfatalFailure() const {$/;"	f	class:testing::TestResult
HasOneFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult HasOneFailure(const char* \/* results_expr *\/,$/;"	f	namespace:testing::internal
HasParameterBlock	ceres-solver/internal/ceres/problem.cc	/^bool Problem::HasParameterBlock(const double* values) const {$/;"	f	class:ceres::Problem
HasParameterBlock	ceres-solver/internal/ceres/problem_impl.cc	/^bool ProblemImpl::HasParameterBlock(const double* parameter_block) const {$/;"	f	class:ceres::internal::ProblemImpl
HasResidualBlock	ceres-solver/internal/ceres/problem_test.cc	/^  bool HasResidualBlock(ResidualBlock* residual_block) {$/;"	f	struct:ceres::internal::DynamicProblem
HasSameFixtureClass	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool Test::HasSameFixtureClass() {$/;"	f	class:testing::Test
HasSubstr	ceres-solver/internal/ceres/gmock/gmock.h	/^    HasSubstr(const internal::string& substring) {$/;"	f	namespace:testing
HasSubstr	ceres-solver/internal/ceres/gmock/gmock.h	/^    HasSubstr(const internal::wstring& substring) {$/;"	f	namespace:testing
HasSubstrMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit HasSubstrMatcher(const StringType& substring)$/;"	f	class:testing::internal::HasSubstrMatcher
HasSubstrMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class HasSubstrMatcher {$/;"	c	namespace:testing::internal
HasTrajectory	cartographer/cartographer/sensor/map_by_time.h	/^  bool HasTrajectory(const int trajectory_id) const {$/;"	f	class:cartographer::sensor::MapByTime
HashMap	ceres-solver/internal/ceres/collections_port.h	/^struct HashMap : map<K, V> {};$/;"	s	namespace:ceres::internal
HashSet	ceres-solver/internal/ceres/collections_port.h	/^struct HashSet : set<K> {};$/;"	s	namespace:ceres::internal
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types1
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types10
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types11
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types12
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types13
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types14
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types15
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types16
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types17
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types18
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types19
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types2
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types20
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types21
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types22
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types23
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types24
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types25
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types26
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types27
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types28
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types29
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types3
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types30
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types31
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types32
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types33
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types34
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types35
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types36
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types37
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types38
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types39
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types4
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types40
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types41
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types42
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types43
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types44
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types45
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types46
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types47
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types48
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types49
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types5
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types50
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types6
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types7
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types8
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 Head;$/;"	t	struct:testing::internal::Types9
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates1
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates10
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates11
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates12
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates13
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates14
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates15
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates16
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates17
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates18
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates19
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates2
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates20
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates21
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates22
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates23
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates24
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates25
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates26
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates27
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates28
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates29
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates3
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates30
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates31
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates32
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates33
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates34
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates35
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates36
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates37
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates38
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates39
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates4
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates40
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates41
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates42
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates43
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates44
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates45
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates46
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates47
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates48
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates49
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates5
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates50
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates6
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates7
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates8
Head	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TemplateSel<T1> Head;$/;"	t	struct:testing::internal::Templates9
HessianGraph	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^typedef Graph<ParameterBlock*> HessianGraph;$/;"	t	namespace:ceres::internal	file:
Histogram	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  explicit Histogram(::prometheus::Histogram* prometheus)$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon34::Histogram
Histogram	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^class Histogram : public ::cartographer::metrics::Histogram {$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon34	file:
Histogram	cartographer/cartographer/common/histogram.h	/^class Histogram {$/;"	c	namespace:cartographer::common
Histogram	cartographer/cartographer/metrics/histogram.h	/^class Histogram {$/;"	c	namespace:cartographer::metrics
HistogramFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  HistogramFamily(::prometheus::Family<::prometheus::Histogram>* prometheus,$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon34::HistogramFamily
HistogramFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^class HistogramFamily : public ::cartographer::metrics::Family<$/;"	c	namespace:cartographer::cloud::metrics::prometheus::__anon34	file:
HistogramsAtAnglesFromNodes	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^std::vector<std::pair<Eigen::VectorXf, float>> HistogramsAtAnglesFromNodes($/;"	f	namespace:cartographer::mapping::scan_matching::__anon95
HomogeneousVectorParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT HomogeneousVectorParameterization :$/;"	c	namespace:ceres
HomogeneousVectorParameterization	ceres-solver/internal/ceres/local_parameterization.cc	/^HomogeneousVectorParameterization::HomogeneousVectorParameterization(int size)$/;"	f	class:ceres::HomogeneousVectorParameterization
HomogeneousVectorParameterizationHelper	ceres-solver/internal/ceres/local_parameterization_test.cc	/^void HomogeneousVectorParameterizationHelper(const double* x,$/;"	f	namespace:ceres::internal
HomogeneousVectorParameterizationPlus	ceres-solver/internal/ceres/local_parameterization_test.cc	/^struct HomogeneousVectorParameterizationPlus {$/;"	s	namespace:ceres::internal	file:
Homography2DFromCorrespondencesLinearEuc	ceres-solver/examples/libmv_homography.cc	/^bool Homography2DFromCorrespondencesLinearEuc($/;"	f	namespace:__anon158
Homography2DNormalizedParameterization	ceres-solver/examples/libmv_homography.cc	/^class Homography2DNormalizedParameterization {$/;"	c	namespace:__anon158	file:
HomographySymmetricGeometricCostFunctor	ceres-solver/examples/libmv_homography.cc	/^  HomographySymmetricGeometricCostFunctor(const Vec2 &x,$/;"	f	class:__anon158::HomographySymmetricGeometricCostFunctor
HomographySymmetricGeometricCostFunctor	ceres-solver/examples/libmv_homography.cc	/^class HomographySymmetricGeometricCostFunctor {$/;"	c	namespace:__anon158	file:
HouseholderTestHelper	ceres-solver/internal/ceres/householder_vector_test.cc	/^void HouseholderTestHelper(const Vector& x) {$/;"	f	namespace:ceres::internal
HsvToRgb	cartographer/cartographer/io/color.cc	/^FloatColor HsvToRgb(const float h, const float s, const float v) {$/;"	f	namespace:cartographer::io::__anon12
HuberLoss	ceres-solver/include/ceres/loss_function.h	/^  explicit HuberLoss(double a) : a_(a), b_(a * a) { }$/;"	f	class:ceres::HuberLoss
HuberLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT HuberLoss : public LossFunction {$/;"	c	namespace:ceres
Hunk	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  Hunk(size_t left_start, size_t right_start)$/;"	f	class:testing::internal::edit_distance::__anon166::Hunk
Hunk	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class Hunk {$/;"	c	namespace:testing::internal::edit_distance::__anon166	file:
HybridGridPointsProcessor	cartographer/cartographer/io/hybrid_grid_points_processor.cc	/^HybridGridPointsProcessor::HybridGridPointsProcessor($/;"	f	class:cartographer::io::HybridGridPointsProcessor
HybridGridPointsProcessor	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^class HybridGridPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
IDENTITY	ceres-solver/include/ceres/types.h	/^  IDENTITY,$/;"	e	enum:ceres::PreconditionerType
IGNORE_SHARDING_PROTOCOL	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    IGNORE_SHARDING_PROTOCOL$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding	file:
IMU	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^      IMU,$/;"	m	class:cartographer::mapping::TrajectoryBuilderInterface::SensorId::SensorType
INFO	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int INFO    =  0;$/;"	v
INFO	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int INFO    = ::INFO;$/;"	m	namespace:google
INSTANTIATE_TEST_CASE_P	ceres-solver/internal/ceres/gtest/gtest.h	18156;"	d
INSTANTIATE_TYPED_TEST_CASE_P	ceres-solver/internal/ceres/gtest/gtest.h	18663;"	d
INTERCEPT_ALL_THREADS	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    INTERCEPT_ALL_THREADS           \/\/ Intercepts all failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode	file:
INTERCEPT_ONLY_CURRENT_THREAD	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    INTERCEPT_ONLY_CURRENT_THREAD,  \/\/ Intercepts only thread local failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode	file:
INTER_SUBMAP	cartographer/cartographer/mapping/pose_graph_interface.h	/^    enum Tag { INTRA_SUBMAP, INTER_SUBMAP } tag;$/;"	e	enum:cartographer::mapping::PoseGraphInterface::Constraint::Tag
INTRA_SUBMAP	cartographer/cartographer/mapping/pose_graph_interface.h	/^    enum Tag { INTRA_SUBMAP, INTER_SUBMAP } tag;$/;"	e	enum:cartographer::mapping::PoseGraphInterface::Constraint::Tag
IN_PROGRESS	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
ITERATIVE_SCHUR	ceres-solver/include/ceres/types.h	/^  ITERATIVE_SCHUR,$/;"	e	enum:ceres::LinearSolverType
IdDataReference	cartographer/cartographer/mapping/id.h	/^  struct IdDataReference {$/;"	s	class:cartographer::mapping::MapById
IdMap	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  typedef std::map<std::string, size_t> IdMap;$/;"	t	class:testing::internal::edit_distance::__anon165::InternalStrings	file:
Identity	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid2<FloatType> Identity() { return Rigid2<FloatType>(); }$/;"	f	class:cartographer::transform::Rigid2
Identity	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid3<FloatType> Identity() { return Rigid3<FloatType>(); }$/;"	f	class:cartographer::transform::Rigid3
IdentityParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT IdentityParameterization : public LocalParameterization {$/;"	c	namespace:ceres
IdentityParameterization	ceres-solver/internal/ceres/local_parameterization.cc	/^IdentityParameterization::IdentityParameterization(const int size)$/;"	f	class:ceres::IdentityParameterization
IdentityPlus	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^struct IdentityPlus {$/;"	s	namespace:ceres::internal	file:
IfKidnapped	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        bool IfKidnapped = false;$/;"	m	class:cartographer::mapping::KidnapDetection
IgnoreResult	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::IgnoreResultAction<A> IgnoreResult(const A& an_action) {$/;"	f	namespace:testing
IgnoreResultAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit IgnoreResultAction(const A& action) : action_(action) {}$/;"	f	class:testing::internal::IgnoreResultAction
IgnoreResultAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class IgnoreResultAction {$/;"	c	namespace:testing::internal
IgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  IgnoredValue(const T& \/* ignored *\/) {}  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:testing::internal::IgnoredValue
IgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^class IgnoredValue {$/;"	c	namespace:testing::internal
Image	cartographer/cartographer/io/image.cc	/^Image::Image(UniqueCairoSurfacePtr surface)$/;"	f	class:cartographer::io::Image
Image	cartographer/cartographer/io/image.cc	/^Image::Image(int width, int height)$/;"	f	class:cartographer::io::Image
Image	cartographer/cartographer/io/image.h	/^class Image {$/;"	c	namespace:cartographer::io
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl(CallableStorageType callable, const Matcher<ResultType>& matcher)$/;"	f	class:testing::internal::ResultOfMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl(const Action<VoidResult>& action1, const Action<F>& action2)$/;"	f	class:testing::internal::DoBothAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl(const Comparator& comparator, const ContainerMatcher& matcher)$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl(const Tuple2Matcher& tm, const Second& second)$/;"	f	class:testing::internal::BoundSecondMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl(const TupleMatcher& tuple_matcher, const RhsStlContainer& rhs)$/;"	f	class:testing::internal::PointwiseMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(Super& x) : object_(x) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RefMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(T& ref) : ref_(ref) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const A& action) : action_(action) {}$/;"	f	class:testing::internal::IgnoreResultAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const DistanceMatcher& distance_matcher)$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const InnerAction& action) : action_(action) {}$/;"	f	class:testing::internal::WithArgsAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const InnerMatcher& matcher)$/;"	f	class:testing::internal::PointeeMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const Matcher<U>& source_matcher)$/;"	f	class:testing::internal::MatcherCastImpl::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const Rhs& rhs) : rhs_(rhs) {}$/;"	f	class:testing::internal::ComparisonBase::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const SizeMatcher& size_matcher)$/;"	f	class:testing::internal::SizeIsMatcher::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const T& value) : value_(value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefOfCopyAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const linked_ptr<R>& value)$/;"	f	class:testing::internal::ReturnAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit Impl(const linked_ptr<R>& wrapper)$/;"	f	class:testing::internal::ReturnAction::Impl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::DoBothAction
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::IgnoreResultAction
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnAction
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnRefAction
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnRefOfCopyAction
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public ActionInterface<F> {$/;"	c	class:testing::internal::WithArgsAction
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<Container> {$/;"	c	class:testing::internal::BeginEndDistanceIsMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<Container> {$/;"	c	class:testing::internal::SizeIsMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<Lhs> {$/;"	c	class:testing::internal::ComparisonBase
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<LhsContainer> {$/;"	c	class:testing::internal::PointwiseMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<LhsContainer> {$/;"	c	class:testing::internal::WhenSortedByMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<Pointer> {$/;"	c	class:testing::internal::PointeeMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<Super&> {$/;"	c	class:testing::internal::RefMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::BoundSecondMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::FloatingEqMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::MatcherCastImpl
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<T> {$/;"	c	class:testing::internal::ResultOfMatcher
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl : public MatcherInterface<Tuple> {$/;"	c	class:testing::internal::PairMatchBase
Impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Impl<ByMoveWrapper<R_>, F> : public ActionInterface<F> {$/;"	c	class:testing::internal::ReturnAction
ImplicitCast_	ceres-solver/internal/ceres/gtest/gtest.h	/^inline To ImplicitCast_(To x) { return x; }$/;"	f	namespace:std::tr1
ImplicitSchurComplement	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^ImplicitSchurComplement::ImplicitSchurComplement($/;"	f	class:ceres::internal::ImplicitSchurComplement
ImplicitSchurComplement	ceres-solver/internal/ceres/implicit_schur_complement.h	/^class ImplicitSchurComplement : public LinearOperator {$/;"	c	namespace:ceres::internal
ImplicitSchurComplementTest	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^class ImplicitSchurComplementTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
ImplicitlyConvertible	ceres-solver/internal/ceres/gtest/gtest.h	/^class ImplicitlyConvertible {$/;"	c	namespace:testing::internal
ImuData	cartographer/cartographer/sensor/imu_data.h	/^struct ImuData {$/;"	s	namespace:cartographer::sensor
ImuTracker	cartographer/cartographer/mapping/imu_tracker.cc	/^ImuTracker::ImuTracker(const double imu_gravity_time_constant,$/;"	f	class:cartographer::mapping::ImuTracker
ImuTracker	cartographer/cartographer/mapping/imu_tracker.h	/^class ImuTracker {$/;"	c	namespace:cartographer::mapping
ImuTrackerTest	cartographer/cartographer/mapping/imu_tracker_test.cc	/^class ImuTrackerTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon54	file:
InDeathTestChild	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool InDeathTestChild() {$/;"	f	namespace:testing::internal
InMemoryProtoStreamReader	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  explicit InMemoryProtoStreamReader($/;"	f	class:cartographer::io::InMemoryProtoStreamReader
InMemoryProtoStreamReader	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^class InMemoryProtoStreamReader$/;"	c	namespace:cartographer::io
InMemoryProtoStreamTest	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^class InMemoryProtoStreamTest : public ::testing::Test {$/;"	c	namespace:cartographer::io::__anon27	file:
InSequence	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& InSequence(const Sequence& s) {$/;"	f	class:testing::internal::TypedExpectation
InSequence	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2) {$/;"	f	class:testing::internal::TypedExpectation
InSequence	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,$/;"	f	class:testing::internal::TypedExpectation
InSequence	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ InSequence {$/;"	c	namespace:testing
InSequence	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^InSequence::InSequence() {$/;"	f	class:testing::InSequence
IncrementCall	ceres-solver/internal/ceres/execution_summary.h	/^  void IncrementCall(const std::string& name) {$/;"	f	class:ceres::internal::ExecutionSummary
IncrementTimeBy	ceres-solver/internal/ceres/execution_summary.h	/^  void IncrementTimeBy(const std::string& name, const double value) {$/;"	f	class:ceres::internal::ExecutionSummary
IndependentSetOrdering	ceres-solver/internal/ceres/graph_algorithms.h	/^int IndependentSetOrdering(const Graph<Vertex>& graph,$/;"	f	namespace:ceres::internal
IndexToKey	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^VoxelFilter::KeyType VoxelFilter::IndexToKey(const Eigen::Array3i& index) {$/;"	f	class:cartographer::sensor::VoxelFilter
Infinity	ceres-solver/internal/ceres/gtest/gtest.h	/^  static RawType Infinity() {$/;"	f	class:testing::internal::FloatingPoint
Init	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Init() {$/;"	f	class:ceres::internal::ManualConstructor
Init	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Init(const T1& p1) {$/;"	f	class:ceres::internal::ManualConstructor
Init	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2) {$/;"	f	class:ceres::internal::ManualConstructor
Init	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2, const T3& p3) {$/;"	f	class:ceres::internal::ManualConstructor
Init	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2, const T3& p3, const T4& p4) {$/;"	f	class:ceres::internal::ManualConstructor
Init	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2, const T3& p3, const T4& p4,$/;"	f	class:ceres::internal::ManualConstructor
Init	ceres-solver/internal/ceres/block_evaluate_preparer.cc	/^void BlockEvaluatePreparer::Init(int const* const* jacobian_layout,$/;"	f	class:ceres::internal::BlockEvaluatePreparer
Init	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^bool CoordinateDescentMinimizer::Init($/;"	f	class:ceres::internal::CoordinateDescentMinimizer
Init	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void RE::Init(const char* regex) {$/;"	f	class:testing::internal::RE
Init	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
Init	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^void ImplicitSchurComplement::Init(const BlockSparseMatrix& A,$/;"	f	class:ceres::internal::ImplicitSchurComplement
Init	ceres-solver/internal/ceres/inner_product_computer.cc	/^void InnerProductComputer::Init($/;"	f	class:ceres::internal::InnerProductComputer
Init	ceres-solver/internal/ceres/line_search.cc	/^void LineSearchFunction::Init(const Vector& position,$/;"	f	class:ceres::internal::LineSearchFunction
Init	ceres-solver/internal/ceres/local_parameterization.cc	/^void ProductParameterization::Init() {$/;"	f	class:ceres::ProductParameterization
Init	ceres-solver/internal/ceres/minimizer.h	/^    void Init(const Solver::Options& options) {$/;"	f	struct:ceres::internal::Minimizer::Options
Init	ceres-solver/internal/ceres/parameter_block.h	/^  void Init(double* user_state,$/;"	f	class:ceres::internal::ParameterBlock
Init	ceres-solver/internal/ceres/program_evaluator.h	/^    void Init(int max_parameters_per_residual_block,$/;"	f	struct:ceres::internal::ProgramEvaluator::EvaluateScratch
Init	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^void SchurEliminator<kRowBlockSize, kEBlockSize, kFBlockSize>::Init($/;"	f	class:ceres::internal::SchurEliminator
Init	ceres-solver/internal/ceres/scratch_evaluate_preparer.cc	/^void ScratchEvaluatePreparer::Init(int max_derivatives_per_residual_block) {$/;"	f	class:ceres::internal::ScratchEvaluatePreparer
Init	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^void TrustRegionMinimizer::Init(const Minimizer::Options& options,$/;"	f	class:ceres::internal::TrustRegionMinimizer
InitCopy	ceres-solver/internal/ceres/gtest/gtest.h	/^  void InitCopy(const Element* array, size_t a_size) {$/;"	f	class:testing::internal::NativeArray
InitDeathTestSubprocessControlInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void InitDeathTestSubprocessControlInfo() {$/;"	f	class:testing::internal::UnitTestImpl
InitEliminator	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^void SchurJacobiPreconditioner::InitEliminator($/;"	f	class:ceres::internal::SchurJacobiPreconditioner
InitEliminator	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::InitEliminator($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
InitGoogleLogging	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^inline void InitGoogleLogging(char *argv) {$/;"	f	namespace:google
InitGoogleMock	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ void InitGoogleMock(int* argc, char** argv) {$/;"	f	namespace:testing
InitGoogleMock	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ void InitGoogleMock(int* argc, wchar_t** argv) {$/;"	f	namespace:testing
InitGoogleMockImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void InitGoogleMockImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
InitGoogleTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void InitGoogleTest(int* argc, char** argv) {$/;"	f	namespace:testing
InitGoogleTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void InitGoogleTest(int* argc, wchar_t** argv) {$/;"	f	namespace:testing
InitGoogleTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void InitGoogleTestImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
InitRef	ceres-solver/internal/ceres/gtest/gtest.h	/^  void InitRef(const Element* array, size_t a_size) {$/;"	f	class:testing::internal::NativeArray
InitStorage	ceres-solver/internal/ceres/schur_complement_solver.cc	/^void DenseSchurComplementSolver::InitStorage($/;"	f	class:ceres::internal::DenseSchurComplementSolver
InitStorage	ceres-solver/internal/ceres/schur_complement_solver.cc	/^void SparseSchurComplementSolver::InitStorage($/;"	f	class:ceres::internal::SparseSchurComplementSolver
InitStorage	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::InitStorage($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
InitialTrajectoryPose	cartographer/cartographer/mapping/pose_graph.h	/^  struct InitialTrajectoryPose {$/;"	s	class:cartographer::mapping::PoseGraph
InitialiseDenseReference	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void InitialiseDenseReference() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
InitialiseSparseMatrixReferences	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void InitialiseSparseMatrixReferences() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
InitializeExtrapolator	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^void LocalTrajectoryBuilder2D::InitializeExtrapolator(const common::Time time) {$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
InitializeGlobalSubmapPoses	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^std::vector<SubmapId> PoseGraph2D::InitializeGlobalSubmapPoses($/;"	f	class:cartographer::mapping::PoseGraph2D
InitializeGlobalSubmapPoses	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^std::vector<SubmapId> PoseGraph3D::InitializeGlobalSubmapPoses($/;"	f	class:cartographer::mapping::PoseGraph3D
InitializeKidnapDetector	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^void LocalTrajectoryBuilder2D::InitializeKidnapDetector() {$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
InitializeProtoReader	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^  void InitializeProtoReader($/;"	f	class:cartographer::io::__anon22::ProtoStreamDeserializerTest
InitializeRealServer	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void InitializeRealServer() {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
InitializeRealUploadingServer	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void InitializeRealUploadingServer() {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
InitializeServerWithMockMapBuilder	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void InitializeServerWithMockMapBuilder() {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
InitializeStub	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void InitializeStub() {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
InitializeStubForUploadingServer	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void InitializeStubForUploadingServer() {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
InitializeWithImu	cartographer/cartographer/mapping/pose_extrapolator.cc	/^std::unique_ptr<PoseExtrapolator> PoseExtrapolator::InitializeWithImu($/;"	f	class:cartographer::mapping::PoseExtrapolator
InnerContainer	ceres-solver/include/ceres/internal/fixed_array.h	/^  struct InnerContainer {$/;"	s	class:ceres::internal::FixedArray
InnerFunctionType	ceres-solver/internal/ceres/gmock/gmock.h	/^        k1, k2, k3, k4, k5, k6, k7, k8, k9, k10>::type InnerFunctionType;$/;"	t	class:testing::internal::WithArgsAction::Impl
InnerMatcherArg	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef ::testing::tuple<const LhsValue&, const RhsValue&> InnerMatcherArg;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
InnerProductComputer	ceres-solver/internal/ceres/inner_product_computer.cc	/^InnerProductComputer::InnerProductComputer(const BlockSparseMatrix& m,$/;"	f	class:ceres::internal::InnerProductComputer
InnerProductComputer	ceres-solver/internal/ceres/inner_product_computer.h	/^class InnerProductComputer {$/;"	c	namespace:ceres::internal
Insert	cartographer/cartographer/io/xray_points_processor.cc	/^void XRayPointsProcessor::Insert(const PointsBatch& batch,$/;"	f	class:cartographer::io::XRayPointsProcessor
Insert	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.cc	/^void ProbabilityGridRangeDataInserter2D::Insert($/;"	f	class:cartographer::mapping::ProbabilityGridRangeDataInserter2D
Insert	cartographer/cartographer/mapping/3d/range_data_inserter_3d.cc	/^void RangeDataInserter3D::Insert(const sensor::RangeData& range_data,$/;"	f	class:cartographer::mapping::RangeDataInserter3D
Insert	cartographer/cartographer/mapping/id.h	/^  void Insert(const IdType& id, const DataType& data) {$/;"	f	class:cartographer::mapping::MapById
InsertEntry	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc	/^void DynamicCompressedRowSparseMatrix::InsertEntry(int row,$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrix
InsertIfNotPresent	ceres-solver/internal/ceres/map_util.h	/^bool InsertIfNotPresent($/;"	f	namespace:ceres
InsertIntoSubmap	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^LocalTrajectoryBuilder2D::InsertIntoSubmap($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
InsertIntoSubmap	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^LocalTrajectoryBuilder3D::InsertIntoSubmap($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
InsertMissesIntoGrid	cartographer/cartographer/mapping/3d/range_data_inserter_3d.cc	/^void InsertMissesIntoGrid(const std::vector<uint16>& miss_table,$/;"	f	namespace:cartographer::mapping::__anon108
InsertNonZeroEntriesFromDenseReference	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  void InsertNonZeroEntriesFromDenseReference() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
InsertOrDie	ceres-solver/internal/ceres/map_util.h	/^void InsertOrDie(Collection* const collection,$/;"	f	namespace:ceres
InsertPointCloud	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^  void InsertPointCloud() {$/;"	f	class:cartographer::mapping::__anon61::RangeDataInserterTest2D
InsertPointCloud	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  void InsertPointCloud() {$/;"	f	class:cartographer::mapping::__anon109::RangeDataInserter3DTest
InsertRangeData	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void ActiveSubmaps2D::InsertRangeData(const sensor::RangeData& range_data) {$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
InsertRangeData	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void Submap2D::InsertRangeData($/;"	f	class:cartographer::mapping::Submap2D
InsertRangeData	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void ActiveSubmaps3D::InsertRangeData($/;"	f	class:cartographer::mapping::ActiveSubmaps3D
InsertRangeData	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void Submap3D::InsertRangeData(const sensor::RangeData& range_data,$/;"	f	class:cartographer::mapping::Submap3D
InsertSorted	cartographer/cartographer/mapping/detect_floors.cc	/^void InsertSorted(const double val, std::vector<double>* vals) {$/;"	f	namespace:cartographer::mapping::__anon62
InsertSubmap	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::InsertSubmap($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
InsertSubmap	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::InsertSubmap($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
InsertTrajectoryNode	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::InsertTrajectoryNode(const NodeId& node_id,$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
InsertTrajectoryNode	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::InsertTrajectoryNode(const NodeId& node_id,$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
InsertionResult	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  struct InsertionResult {$/;"	s	class:cartographer::mapping::LocalTrajectoryBuilder2D
InsertionResult	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  struct InsertionResult {$/;"	s	class:cartographer::mapping::LocalTrajectoryBuilder3D
InsertionResult	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^  struct InsertionResult {$/;"	s	class:cartographer::mapping::TrajectoryBuilderInterface
InstanceValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal::InstanceValueHolderFactory
InstanceValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  class InstanceValueHolderFactory : public ValueHolderFactory {$/;"	c	class:std::tr1::ThreadLocal
InstantiationContainer	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::std::vector<InstantiationInfo> InstantiationContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
InstantiationInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^      InstantiationInfo(const std::string &name_in,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
InstantiationInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct InstantiationInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
Int	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef __int64 Int;$/;"	t	class:std::tr1::TypeWithSize
Int	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef int Int;$/;"	t	class:std::tr1::TypeWithSize
Int32	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef TypeWithSize<4>::Int Int32;$/;"	t	namespace:std::tr1
Int32FromEnvOrDie	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Int32 Int32FromEnvOrDie(const char* var, Int32 default_val) {$/;"	f	namespace:testing::internal
Int32FromGTestEnv	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Int32 Int32FromGTestEnv(const char* flag, Int32 default_value) {$/;"	f	namespace:testing::internal
Int64	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef TypeWithSize<8>::Int Int64;$/;"	t	namespace:std::tr1
IntMap	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^typedef HashMap<int, int> IntMap;$/;"	t	namespace:ceres::internal	file:
IntPairToLong	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  int64 IntPairToLong(int row, int col) const {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
IntSet	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^typedef HashSet<int> IntSet;$/;"	t	namespace:ceres::internal	file:
IntToPtr	ceres-solver/internal/ceres/problem_test.cc	/^static double *IntToPtr(int i) {$/;"	f	namespace:ceres::internal
Integer	ceres-solver/internal/ceres/integral_types.h	/^struct Integer {$/;"	s	namespace:ceres::internal
IntegrateImu	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^IntegrateImuResult<T> IntegrateImu($/;"	f	namespace:cartographer::mapping
IntegrateImu	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^IntegrateImuResult<double> IntegrateImu(const RangeType& imu_data,$/;"	f	namespace:cartographer::mapping
IntegrateImuResult	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^struct IntegrateImuResult {$/;"	s	namespace:cartographer::mapping
IntensityToColorPointsProcessor	cartographer/cartographer/io/intensity_to_color_points_processor.cc	/^IntensityToColorPointsProcessor::IntensityToColorPointsProcessor($/;"	f	class:cartographer::io::IntensityToColorPointsProcessor
IntensityToColorPointsProcessor	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^class IntensityToColorPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
InterceptMode	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  enum InterceptMode {$/;"	g	class:testing::ScopedFakeTestPartResultReporter	file:
InternalAddParameterBlock	ceres-solver/internal/ceres/problem_impl.cc	/^ParameterBlock* ProblemImpl::InternalAddParameterBlock(double* values,$/;"	f	class:ceres::internal::ProblemImpl
InternalDefaultActionSetAt	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::OnCallSpec<F>& InternalDefaultActionSetAt($/;"	f	class:testing::internal::MockSpec
InternalExpectedAt	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::TypedExpectation<F>& InternalExpectedAt($/;"	f	class:testing::internal::MockSpec
InternalRemoveResidualBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::InternalRemoveResidualBlock(ResidualBlock* residual_block) {$/;"	f	class:ceres::internal::ProblemImpl
InternalRunDeathTestFlag	ceres-solver/internal/ceres/gtest/gtest.h	/^  InternalRunDeathTestFlag(const std::string& a_file,$/;"	f	class:testing::internal::InternalRunDeathTestFlag
InternalRunDeathTestFlag	ceres-solver/internal/ceres/gtest/gtest.h	/^class InternalRunDeathTestFlag {$/;"	c	namespace:testing::internal
InternalStrings	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class InternalStrings {$/;"	c	namespace:testing::internal::edit_distance::__anon165	file:
InternalSubmapData	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  struct InternalSubmapData {$/;"	s	class:cartographer::mapping::PoseGraph2D
InternalSubmapData	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  struct InternalSubmapData {$/;"	s	class:cartographer::mapping::PoseGraph3D
Interpolate	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^std::unique_ptr<transform::Rigid3d> Interpolate($/;"	f	namespace:cartographer::mapping::optimization::__anon88
Interpolate	cartographer/cartographer/transform/timestamped_transform.cc	/^TimestampedTransform Interpolate(const TimestampedTransform& start,$/;"	f	namespace:cartographer::transform
InterpolateNodes2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^InterpolateNodes2D(const T* const prev_node_pose,$/;"	f	namespace:cartographer::mapping::optimization
InterpolateNodes3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^InterpolateNodes3D(const T* const prev_node_rotation,$/;"	f	namespace:cartographer::mapping::optimization
InterpolateOdometry	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^std::unique_ptr<transform::Rigid3d> OptimizationProblem2D::InterpolateOdometry($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
InterpolatedCostFunctor	ceres-solver/examples/sampled_function/sampled_function.cc	/^  explicit InterpolatedCostFunctor($/;"	f	struct:InterpolatedCostFunctor
InterpolatedCostFunctor	ceres-solver/examples/sampled_function/sampled_function.cc	/^struct InterpolatedCostFunctor {$/;"	s	file:
InterpolatedGrid	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^  explicit InterpolatedGrid(const HybridGrid& hybrid_grid)$/;"	f	class:cartographer::mapping::scan_matching::InterpolatedGrid
InterpolatedGrid	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^class InterpolatedGrid {$/;"	c	namespace:cartographer::mapping::scan_matching
InterpolatedGridTest	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^  InterpolatedGridTest()$/;"	f	class:cartographer::mapping::scan_matching::__anon99::InterpolatedGridTest
InterpolatedGridTest	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^class InterpolatedGridTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon99	file:
InterpolatingPolynomialMinimizingStepSize	ceres-solver/internal/ceres/line_search.cc	/^double LineSearch::InterpolatingPolynomialMinimizingStepSize($/;"	f	class:ceres::internal::LineSearch
IntoImage	cartographer/cartographer/io/xray_points_processor.cc	/^Image IntoImage(const PixelDataMatrix& mat) {$/;"	f	namespace:cartographer::io::__anon25
Invalid	ceres-solver/internal/ceres/gmock/gmock.h	/^inline T Invalid() {$/;"	f	namespace:testing::internal
InvalidWeight	ceres-solver/internal/ceres/graph.h	/^  static double InvalidWeight() {$/;"	f	class:ceres::internal::WeightedGraph
InvalidateArray	ceres-solver/internal/ceres/array_utils.cc	/^void InvalidateArray(const int size, double* x) {$/;"	f	namespace:ceres::internal
InvalidateEvaluation	ceres-solver/internal/ceres/residual_block_utils.cc	/^void InvalidateEvaluation(const ResidualBlock& block,$/;"	f	namespace:ceres::internal
Invert	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^void BlockRandomAccessDiagonalMatrix::Invert() {$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
InvertPSDMatrix	ceres-solver/internal/ceres/invert_psd_matrix.h	/^typename EigenTypes<kSize, kSize>::Matrix InvertPSDMatrix($/;"	f	namespace:ceres::internal
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke() {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9) {$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  R Invoke(A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6, A7 a7, A8 a8, A9 a9,$/;"	f	class:testing::internal::FunctionMocker
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<>&) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3, A4, A5,$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3, A4,$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3,$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2, A3>& args) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<A1, A2>& args) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R Invoke(Function function, const ::testing::tuple<A1>& args) {$/;"	f	class:testing::internal::InvokeHelper
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ResType Invoke(ResType(*f)(ArgType), T arg) {$/;"	f	struct:testing::internal::CallableTraits
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ResultType Invoke(Functor f, T arg) { return f(arg); }$/;"	f	struct:testing::internal::CallableTraits
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^PolymorphicAction<internal::InvokeAction<FunctionImpl> > Invoke($/;"	f	namespace:testing
Invoke	ceres-solver/internal/ceres/gmock/gmock.h	/^PolymorphicAction<internal::InvokeMethodAction<Class, MethodPtr> > Invoke($/;"	f	namespace:testing
InvokeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit InvokeAction(FunctionImpl function_impl)$/;"	f	class:testing::internal::InvokeAction
InvokeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeAction {$/;"	c	namespace:testing::internal
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6) {$/;"	f	namespace:testing::internal::invoke_argument
InvokeArgumentAdl	ceres-solver/internal/ceres/gmock/gmock.h	/^R InvokeArgumentAdl(AdlTag, F f, A1 a1, A2 a2, A3 a3, A4 a4, A5 a5, A6 a6,$/;"	f	namespace:testing::internal::invoke_argument
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9,$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6, A7> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5, A6> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4, A5> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3, A4> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2, A3> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1, A2> > {$/;"	c	namespace:testing::internal
InvokeHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeHelper<R, ::testing::tuple<A1> > {$/;"	c	namespace:testing::internal
InvokeMethod	ceres-solver/internal/ceres/gmock/gmock.h	/^  static R InvokeMethod(Class* obj_ptr,$/;"	f	class:testing::internal::InvokeHelper
InvokeMethodAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  InvokeMethodAction(Class* obj_ptr, MethodPtr method_ptr)$/;"	f	class:testing::internal::InvokeMethodAction
InvokeMethodAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeMethodAction {$/;"	c	namespace:testing::internal
InvokeMethodWithoutArgsAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  InvokeMethodWithoutArgsAction(Class* obj_ptr, MethodPtr method_ptr)$/;"	f	class:testing::internal::InvokeMethodWithoutArgsAction
InvokeMethodWithoutArgsAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeMethodWithoutArgsAction {$/;"	c	namespace:testing::internal
InvokeWithoutArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^InvokeWithoutArgs(Class* obj_ptr, MethodPtr method_ptr) {$/;"	f	namespace:testing
InvokeWithoutArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^InvokeWithoutArgs(FunctionImpl function_impl) {$/;"	f	namespace:testing
InvokeWithoutArgsAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit InvokeWithoutArgsAction(FunctionImpl function_impl)$/;"	f	class:testing::internal::InvokeWithoutArgsAction
InvokeWithoutArgsAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class InvokeWithoutArgsAction {$/;"	c	namespace:testing::internal
IsAProtocolMessage	ceres-solver/internal/ceres/gtest/gtest.h	/^struct IsAProtocolMessage$/;"	s	namespace:testing::internal
IsATTY	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int IsATTY(int \/* fd *\/) { return 0; }$/;"	f	namespace:std::tr1::posix
IsATTY	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int IsATTY(int fd) { return _isatty(fd); }$/;"	f	namespace:std::tr1::posix
IsATTY	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int IsATTY(int fd) { return isatty(fd); }$/;"	f	namespace:std::tr1::posix
IsAbsolutePath	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::IsAbsolutePath() const {$/;"	f	class:testing::internal::FilePath
IsAlNum	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsAlNum(char ch) {$/;"	f	namespace:std::tr1
IsAlpha	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsAlpha(char ch) {$/;"	f	namespace:std::tr1
IsArrayValid	ceres-solver/internal/ceres/array_utils.cc	/^bool IsArrayValid(const int size, const double* x) {$/;"	f	namespace:ceres::internal
IsAsciiDigit	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }$/;"	f	namespace:testing::internal
IsAsciiPunct	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsAsciiPunct(char ch) {$/;"	f	namespace:testing::internal
IsAsciiWhiteSpace	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \\f\\n\\r\\t\\v"); }$/;"	f	namespace:testing::internal
IsAsciiWordChar	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsAsciiWordChar(char ch) {$/;"	f	namespace:testing::internal
IsBlockPairInPreconditioner	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^bool VisibilityBasedPreconditioner::IsBlockPairInPreconditioner($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
IsBlockPairOffDiagonal	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^bool VisibilityBasedPreconditioner::IsBlockPairOffDiagonal($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
IsBoundsConstrained	ceres-solver/internal/ceres/program.cc	/^bool Program::IsBoundsConstrained() const {$/;"	f	class:ceres::internal::Program
IsClose	ceres-solver/internal/ceres/is_close.cc	/^bool IsClose(double x, double y, double relative_precision,$/;"	f	namespace:ceres::internal
IsClose	ceres-solver/internal/ceres/rotation_test.cc	/^bool IsClose(const Jet<double, N> &x, const Jet<double, N> &y) {$/;"	f	namespace:ceres::internal
IsClose	ceres-solver/internal/ceres/rotation_test.cc	/^bool IsClose(double x, double y) {$/;"	f	namespace:ceres::internal
IsCloseable	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool AutoHandle::IsCloseable() const {$/;"	f	class:testing::internal::AutoHandle
IsComplex	ceres-solver/include/ceres/jet.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::NumTraits::__anon150
IsConstant	ceres-solver/internal/ceres/parameter_block.h	/^  bool IsConstant() const { return is_constant_; }$/;"	f	class:ceres::internal::ParameterBlock
IsConstrainedApproximateMinimumDegreeOrderingAvailable	ceres-solver/internal/ceres/suitesparse.h	/^  static bool IsConstrainedApproximateMinimumDegreeOrderingAvailable() {$/;"	f	class:ceres::internal::SuiteSparse
IsContainer	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef int IsContainer;$/;"	t	namespace:testing::internal
IsContainerTest	ceres-solver/internal/ceres/gtest/gtest.h	/^IsContainer IsContainerTest(int \/* dummy *\/,$/;"	f	namespace:testing::internal
IsContainerTest	ceres-solver/internal/ceres/gtest/gtest.h	/^IsNotContainer IsContainerTest(long \/* dummy *\/) { return '\\0'; }$/;"	f	namespace:testing::internal
IsDefaultValue	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^bool IsDefaultValue(const TValueType& v) {$/;"	f	namespace:cartographer::mapping
IsDefaultValue	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^bool IsDefaultValue(const std::vector<TElementType>& v) {$/;"	f	namespace:cartographer::mapping
IsDenseLinearAlgebraLibraryTypeAvailable	ceres-solver/internal/ceres/types.cc	/^bool IsDenseLinearAlgebraLibraryTypeAvailable($/;"	f	namespace:ceres
IsDigit	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsDigit(char ch) {$/;"	f	namespace:std::tr1
IsDir	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsDir(const StatStruct& st) {$/;"	f	namespace:std::tr1::posix
IsDirectory	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::IsDirectory() const {$/;"	f	class:testing::internal::FilePath
IsDoDefault	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool IsDoDefault() const { return impl_.get() == NULL; }$/;"	f	class:testing::Action
IsEmpty	cartographer/cartographer/common/task_test.cc	/^  bool IsEmpty() { return task_queue_.empty(); }$/;"	f	class:cartographer::common::__anon10::FakeThreadPool
IsEmpty	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool IsEmpty() const { return pathname_.empty(); }$/;"	f	class:testing::internal::FilePath
IsEvaluationValid	ceres-solver/internal/ceres/residual_block_utils.cc	/^bool IsEvaluationValid(const ResidualBlock& block,$/;"	f	namespace:ceres::internal
IsFeasible	ceres-solver/internal/ceres/program.cc	/^bool Program::IsFeasible(string* message) const {$/;"	f	class:ceres::internal::Program
IsFinished	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^bool PoseGraph2D::TrimmingHandle::IsFinished(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
IsFinished	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^bool PoseGraph3D::TrimmingHandle::IsFinished(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
IsFinished	cartographer/cartographer/mapping/pose_graph_trimmer.cc	/^bool PureLocalizationTrimmer::IsFinished() { return finished_; }$/;"	f	class:cartographer::mapping::PureLocalizationTrimmer
IsFinite	ceres-solver/include/ceres/fpclassify.h	/^inline bool IsFinite  (double x) { return _finite(x) != 0;                   }$/;"	f	namespace:ceres
IsFinite	ceres-solver/include/ceres/jet.h	/^bool IsFinite(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsHRESULTFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult IsHRESULTFailure(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsHRESULTSuccess	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal
IsInSet	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsInSet(char ch, const char* str) {$/;"	f	namespace:testing::internal
IsInfinite	ceres-solver/include/ceres/fpclassify.h	/^inline bool IsInfinite(double x) { return _finite(x) == 0 && _isnan(x) == 0; }$/;"	f	namespace:ceres
IsInfinite	ceres-solver/include/ceres/jet.h	/^bool IsInfinite(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsInteger	ceres-solver/include/ceres/jet.h	/^    IsInteger = 0,$/;"	e	enum:Eigen::NumTraits::__anon150
IsInterested	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool IsInterested() const { return stream_ != NULL; }$/;"	f	class:testing::MatchResultListener
IsKnown	cartographer/cartographer/mapping/2d/grid_2d.cc	/^bool Grid2D::IsKnown(const Eigen::Array2i& cell_index) const {$/;"	f	class:cartographer::mapping::Grid2D
IsKnown	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  float IsKnown(float x, float y, float z) const {$/;"	f	class:cartographer::mapping::__anon109::RangeDataInserter3DTest
IsLower	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsLower(char ch) {$/;"	f	namespace:std::tr1
IsMember	ceres-solver/include/ceres/ordered_groups.h	/^  bool IsMember(const T element) const {$/;"	f	class:ceres::OrderedGroups
IsMessageAvailable	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^bool PlayableBag::IsMessageAvailable() const {$/;"	f	class:cartographer_ros::PlayableBag
IsMessageAvailable	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^bool PlayableBagMultiplexer::IsMessageAvailable() const {$/;"	f	class:cartographer_ros::PlayableBagMultiplexer
IsNaN	ceres-solver/include/ceres/fpclassify.h	/^inline bool IsNaN     (double x) { return _isnan(x) != 0;                    }$/;"	f	namespace:ceres
IsNaN	ceres-solver/include/ceres/jet.h	/^bool IsNaN(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsNormal	ceres-solver/include/ceres/fpclassify.h	/^inline bool IsNormal  (double x) {  \/\/ NOLINT$/;"	f	namespace:ceres
IsNormal	ceres-solver/include/ceres/jet.h	/^bool IsNormal(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsNormalizableWhitespace	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static bool IsNormalizableWhitespace(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsNotContainer	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef char IsNotContainer;$/;"	t	namespace:testing::internal
IsNotSubstring	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult IsNotSubstring($/;"	f	namespace:testing
IsNull	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicMatcher<internal::IsNullMatcher > IsNull() {$/;"	f	namespace:testing
IsNullMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class IsNullMatcher {$/;"	c	namespace:testing::internal
IsOrderingValid	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^bool CoordinateDescentMinimizer::IsOrderingValid($/;"	f	class:ceres::internal::CoordinateDescentMinimizer
IsOverSaturatedByCallCount	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool IsOverSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality
IsParameterBlockConstant	ceres-solver/internal/ceres/problem.cc	/^bool Problem::IsParameterBlockConstant(double* values) const {$/;"	f	class:ceres::Problem
IsParameterBlockConstant	ceres-solver/internal/ceres/problem_impl.cc	/^bool ProblemImpl::IsParameterBlockConstant(double* values) const {$/;"	f	class:ceres::internal::ProblemImpl
IsParameterBlockSetIndependent	ceres-solver/internal/ceres/program.cc	/^bool Program::IsParameterBlockSetIndependent($/;"	f	class:ceres::internal::Program
IsPathSeparator	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool IsPathSeparator(char c) {$/;"	f	namespace:testing::internal
IsPointDataType	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^bool IsPointDataType(const std::string& data_type) {$/;"	f	namespace:cartographer_ros::__anon128
IsPrintableAscii	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline bool IsPrintableAscii(wchar_t c) {$/;"	f	namespace:testing::internal
IsProgramValid	ceres-solver/internal/ceres/line_search_preprocessor.cc	/^bool IsProgramValid(const Program& program, std::string* error) {$/;"	f	namespace:ceres::internal::__anon161
IsProgramValid	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^bool IsProgramValid(const Program& program, std::string* error) {$/;"	f	namespace:ceres::internal::__anon192
IsReadableTypeName	ceres-solver/internal/ceres/gmock/gmock.h	/^inline bool IsReadableTypeName(const string& type_name) {$/;"	f	namespace:testing::internal
IsRepeat	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }$/;"	f	namespace:testing::internal
IsRootDirectory	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool FilePath::IsRootDirectory() const {$/;"	f	class:testing::internal::FilePath
IsSatisfiedByCallCount	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality
IsSatisfiedByCallCount	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual bool IsSatisfiedByCallCount(int call_count) const {$/;"	f	class:testing::__anon175::BetweenCardinalityImpl
IsSaturatedByCallCount	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool IsSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::Cardinality
IsSaturatedByCallCount	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual bool IsSaturatedByCallCount(int call_count) const {$/;"	f	class:testing::__anon175::BetweenCardinalityImpl
IsSchurType	ceres-solver/internal/ceres/types.cc	/^bool IsSchurType(LinearSolverType type) {$/;"	f	namespace:ceres
IsSet	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool IsSet() { return address_ != NULL; }$/;"	f	class:testing::DefaultValue
IsSet	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool IsSet() { return producer_ != NULL; }$/;"	f	class:testing::DefaultValue
IsShort	cartographer/cartographer/mapping/detect_floors.cc	/^bool IsShort(const proto::Trajectory& trajectory, const Span& span) {$/;"	f	namespace:cartographer::mapping::__anon62
IsSigned	ceres-solver/include/ceres/jet.h	/^    IsSigned,$/;"	e	enum:Eigen::NumTraits::__anon150
IsSimilar	cartographer/cartographer/mapping/internal/motion_filter.cc	/^bool MotionFilter::IsSimilar(const common::Time time,$/;"	f	class:cartographer::mapping::MotionFilter
IsSolutionUsable	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^bool GradientProblemSolver::Summary::IsSolutionUsable() const {$/;"	f	class:ceres::GradientProblemSolver::Summary
IsSolutionUsable	ceres-solver/internal/ceres/solver.cc	/^bool Solver::Summary::IsSolutionUsable() const {$/;"	f	class:ceres::Solver::Summary
IsSolutionUsable	ceres-solver/internal/ceres/solver_utils.h	/^bool IsSolutionUsable(const SummaryType& summary) {$/;"	f	namespace:ceres::internal
IsSpace	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsSpace(char ch) {$/;"	f	namespace:std::tr1
IsSparseLinearAlgebraLibraryTypeAvailable	ceres-solver/internal/ceres/types.cc	/^bool IsSparseLinearAlgebraLibraryTypeAvailable($/;"	f	namespace:ceres
IsStepSuccessful	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::IsStepSuccessful() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
IsSubstring	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult IsSubstring($/;"	f	namespace:testing
IsSubstringImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult IsSubstringImpl($/;"	f	namespace:testing::__anon168
IsSubstringPred	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsSubstringPred(const StringType& needle,$/;"	f	namespace:testing::__anon168
IsSubstringPred	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsSubstringPred(const char* needle, const char* haystack) {$/;"	f	namespace:testing::__anon168
IsSubstringPred	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {$/;"	f	namespace:testing::__anon168
IsTrajectoryFinished	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^bool PoseGraphStub::IsTrajectoryFinished(int trajectory_id) const {$/;"	f	class:cartographer::cloud::PoseGraphStub
IsTrajectoryFinished	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^bool PoseGraph2D::IsTrajectoryFinished(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph2D
IsTrajectoryFinished	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^bool PoseGraph3D::IsTrajectoryFinished(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph3D
IsTrajectoryFinishedHandler	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.h	/^class IsTrajectoryFinishedHandler$/;"	c	namespace:cartographer::cloud::handlers
IsTrajectoryFrozen	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^bool PoseGraphStub::IsTrajectoryFrozen(int trajectory_id) const {$/;"	f	class:cartographer::cloud::PoseGraphStub
IsTrajectoryFrozen	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^bool PoseGraph2D::IsTrajectoryFrozen(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph2D
IsTrajectoryFrozen	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^bool PoseGraph3D::IsTrajectoryFrozen(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph3D
IsTrajectoryFrozenHandler	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.h	/^class IsTrajectoryFrozenHandler$/;"	c	namespace:cartographer::cloud::handlers
IsTrue	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsTrue(bool condition) { return condition; }$/;"	f	namespace:testing::internal
IsTrustRegionSolveSuccessful	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^void IsTrustRegionSolveSuccessful(TrustRegionStrategyType strategy_type) {$/;"	f	namespace:ceres::internal
IsUpper	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsUpper(char ch) {$/;"	f	namespace:std::tr1
IsUtf16SurrogatePair	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {$/;"	f	namespace:testing::internal
IsValid	cartographer/cartographer/transform/rigid_transform.h	/^  bool IsValid() const {$/;"	f	class:cartographer::transform::Rigid3
IsValid	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^bool GradientProblemSolver::Options::IsValid(std::string* error) const {$/;"	f	class:ceres::GradientProblemSolver::Options
IsValid	ceres-solver/internal/ceres/program.cc	/^bool Program::IsValid() const {$/;"	f	class:ceres::internal::Program
IsValid	ceres-solver/internal/ceres/solver.cc	/^bool Solver::Options::IsValid(string* error) const {$/;"	f	class:ceres::Solver::Options
IsValid	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  bool IsValid() const { return AllTripletsWithinBounds(); }$/;"	f	class:ceres::internal::TripletSparseMatrix
IsValidEscape	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool IsValidEscape(char c) {$/;"	f	namespace:testing::internal
IsValidParamName	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool IsValidParamName(const std::string& name) {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
IsValidPose	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^bool IsValidPose(const geometry_msgs::Pose& pose) {$/;"	f	namespace:cartographer_ros::__anon128
IsValidXmlCharacter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static bool IsValidXmlCharacter(char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	file:
IsVersionSupported	cartographer/cartographer/io/proto_stream_deserializer.cc	/^bool IsVersionSupported(const mapping::proto::SerializationHeader& header) {$/;"	f	namespace:cartographer::io::__anon20
IsXDigit	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsXDigit(char ch) {$/;"	f	namespace:std::tr1
IsXDigit	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool IsXDigit(wchar_t ch) {$/;"	f	namespace:std::tr1
IsZeroOrInfinity	ceres-solver/internal/ceres/conjugate_gradients_solver.cc	/^bool IsZeroOrInfinity(double x) {$/;"	f	namespace:ceres::internal::__anon186
IterateOverTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  struct IterateOverTuple {$/;"	s	class:testing::internal::TransformTupleValuesHelper
IterateOverTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  struct IterateOverTuple<Tup, 0> {$/;"	s	class:testing::internal::TransformTupleValuesHelper
IterationCallback	ceres-solver/include/ceres/iteration_callback.h	/^class CERES_EXPORT IterationCallback {$/;"	c	namespace:ceres
IterationSummary	ceres-solver/include/ceres/iteration_callback.h	/^  IterationSummary()$/;"	f	struct:ceres::IterationSummary
IterationSummary	ceres-solver/include/ceres/iteration_callback.h	/^struct CERES_EXPORT IterationSummary {$/;"	s	namespace:ceres
IterationZero	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::IterationZero() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
IterativeSchurComplementSolver	ceres-solver/internal/ceres/iterative_schur_complement_solver.cc	/^IterativeSchurComplementSolver::IterativeSchurComplementSolver($/;"	f	class:ceres::internal::IterativeSchurComplementSolver
IterativeSchurComplementSolver	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^class IterativeSchurComplementSolver : public BlockSparseMatrixSolver {$/;"	c	namespace:ceres::internal
IterativeSchurComplementSolverTest	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^class IterativeSchurComplementSolverTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Iterator	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    Iterator() : current_(nullptr), end_(nullptr) {}$/;"	f	class:cartographer::mapping::FlatGrid::Iterator
Iterator	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    explicit Iterator(const FlatGrid& flat_grid)$/;"	f	class:cartographer::mapping::FlatGrid::Iterator
Iterator	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^  class Iterator {$/;"	c	class:cartographer::mapping::FlatGrid
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    Iterator(const ParamGeneratorInterface<T>* base,$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator10
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator2
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator3
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator4
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator5
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator6
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator7
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator8
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<ParamType> {$/;"	c	class:testing::internal::CartesianProductGenerator9
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::RangeGenerator
Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::ValuesInIteratorRangeGenerator
IteratorTraits	ceres-solver/internal/ceres/gtest/gtest.h	/^struct IteratorTraits {$/;"	s	namespace:std::tr1
IteratorTraits	ceres-solver/internal/ceres/gtest/gtest.h	/^struct IteratorTraits<T*> {$/;"	s	namespace:std::tr1
IteratorTraits	ceres-solver/internal/ceres/gtest/gtest.h	/^struct IteratorTraits<const T*> {$/;"	s	namespace:std::tr1
J	ceres-solver/internal/ceres/jet_test.cc	/^typedef Jet<double, 2> J;$/;"	t	namespace:ceres::internal	file:
J3	ceres-solver/internal/ceres/rotation_test.cc	/^typedef Jet<double, 3> J3;$/;"	t	namespace:ceres::internal	file:
J4	ceres-solver/internal/ceres/rotation_test.cc	/^typedef Jet<double, 4> J4;$/;"	t	namespace:ceres::internal	file:
JACOBI	ceres-solver/include/ceres/types.h	/^  JACOBI,$/;"	e	enum:ceres::PreconditionerType
Jet	ceres-solver/include/ceres/jet.h	/^  EIGEN_STRONG_INLINE Jet(const T& a, const Eigen::DenseBase<Derived> &v)$/;"	f	struct:ceres::Jet
Jet	ceres-solver/include/ceres/jet.h	/^  Jet() : a() {$/;"	f	struct:ceres::Jet
Jet	ceres-solver/include/ceres/jet.h	/^  Jet(const T& value, int k) {$/;"	f	struct:ceres::Jet
Jet	ceres-solver/include/ceres/jet.h	/^  explicit Jet(const T& value) {$/;"	f	struct:ceres::Jet
Jet	ceres-solver/include/ceres/jet.h	/^struct Jet {$/;"	s	namespace:ceres
Job	cartographer_ros/jenkins/worker.py	/^class Job(object):$/;"	c
Join	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ThreadWithParamBase::Join() {$/;"	f	class:testing::internal::ThreadWithParamBase
Join	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Join() {$/;"	f	class:std::tr1::ThreadWithParam
JoinAsTuple	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ string JoinAsTuple(const Strings& fields) {$/;"	f	namespace:testing::internal
JoinPath	ceres-solver/examples/nist.cc	/^string JoinPath(const string& dirname, const string& basename) {$/;"	f	namespace:ceres::examples
JoinPath	ceres-solver/internal/ceres/file.cc	/^string JoinPath(const string& dirname, const string& basename) {$/;"	f	namespace:ceres::internal
Key	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::KeyMatcher<M> Key(M inner_matcher) {$/;"	f	namespace:testing
KeyMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit KeyMatcher(M m) : matcher_for_key_(m) {}$/;"	f	class:testing::internal::KeyMatcher
KeyMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class KeyMatcher {$/;"	c	namespace:testing::internal
KeyMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit KeyMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::KeyMatcherImpl
KeyMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class KeyMatcherImpl : public MatcherInterface<PairType> {$/;"	c	namespace:testing::internal
KeyType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename RawPairType::first_type KeyType;$/;"	t	class:testing::internal::KeyMatcherImpl
KidnapDetection	cartographer/cartographer/mapping/internal/kidnap_detection.cc	/^KidnapDetection::KidnapDetection(){}$/;"	f	class:cartographer::mapping::KidnapDetection
KidnapDetection	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^class KidnapDetection{$/;"	c	namespace:cartographer::mapping
KidnapDetectionReset	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        void KidnapDetectionReset(){$/;"	f	class:cartographer::mapping::KidnapDetection
KilledBySignal	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^KilledBySignal::KilledBySignal(int signum) : signum_(signum) {$/;"	f	class:testing::KilledBySignal
KilledBySignal	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ KilledBySignal {$/;"	c	namespace:testing
KindOf	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct KindOf {$/;"	s	namespace:testing::internal
LANDMARK	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^      LANDMARK,$/;"	m	class:cartographer::mapping::TrajectoryBuilderInterface::SensorId::SensorType
LAPACK	ceres-solver/include/ceres/types.h	/^  LAPACK$/;"	e	enum:ceres::DenseLinearAlgebraLibraryType
LAPACK	ceres-solver/internal/ceres/lapack.h	/^class LAPACK {$/;"	c	namespace:ceres::internal
LBFGS	ceres-solver/include/ceres/types.h	/^  LBFGS,$/;"	e	enum:ceres::LineSearchDirectionType
LBFGS	ceres-solver/internal/ceres/line_search_direction.cc	/^  LBFGS(const int num_parameters,$/;"	f	class:ceres::internal::LBFGS
LBFGS	ceres-solver/internal/ceres/line_search_direction.cc	/^class LBFGS : public LineSearchDirection {$/;"	c	namespace:ceres::internal	file:
LEVENBERG_MARQUARDT	ceres-solver/include/ceres/types.h	/^  LEVENBERG_MARQUARDT,$/;"	e	enum:ceres::TrustRegionStrategyType
LG	ceres-solver/internal/ceres/miniglog/glog/logging.h	307;"	d
LG	ceres-solver/internal/ceres/miniglog/glog/logging.h	312;"	d
LINEAR_SOLVER_FAILURE	ceres-solver/internal/ceres/linear_solver.h	/^  LINEAR_SOLVER_FAILURE,$/;"	e	enum:ceres::internal::LinearSolverTerminationType
LINEAR_SOLVER_FATAL_ERROR	ceres-solver/internal/ceres/linear_solver.h	/^  LINEAR_SOLVER_FATAL_ERROR$/;"	e	enum:ceres::internal::LinearSolverTerminationType
LINEAR_SOLVER_NO_CONVERGENCE	ceres-solver/internal/ceres/linear_solver.h	/^  LINEAR_SOLVER_NO_CONVERGENCE,$/;"	e	enum:ceres::internal::LinearSolverTerminationType
LINEAR_SOLVER_SUCCESS	ceres-solver/internal/ceres/linear_solver.h	/^  LINEAR_SOLVER_SUCCESS,$/;"	e	enum:ceres::internal::LinearSolverTerminationType
LINE_SEARCH	ceres-solver/include/ceres/types.h	/^  LINE_SEARCH,$/;"	e	enum:ceres::MinimizerType
LIVED	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
LOCAL_CFLAGS	ceres-solver/jni/Android.mk	/^LOCAL_CFLAGS := $(CERES_EXTRA_DEFINES) \\$/;"	m
LOCAL_CPP_EXTENSION	ceres-solver/jni/Android.mk	/^LOCAL_CPP_EXTENSION := .cc$/;"	m
LOCAL_C_INCLUDES	ceres-solver/jni/Android.mk	/^LOCAL_C_INCLUDES := $(CERES_INCLUDE_PATHS)$/;"	m
LOCAL_MODULE	ceres-solver/jni/Android.mk	/^LOCAL_MODULE := ceres$/;"	m
LOCAL_PATH	ceres-solver/jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	ceres-solver/jni/Android.mk	/^LOCAL_SRC_FILES := $(CERES_SRC_PATH)\/array_utils.cc \\$/;"	m
LOG	ceres-solver/internal/ceres/miniglog/glog/logging.h	305;"	d
LOG	ceres-solver/internal/ceres/miniglog/glog/logging.h	310;"	d
LOG_IF	ceres-solver/internal/ceres/miniglog/glog/logging.h	294;"	d
LOG_IF_FALSE	ceres-solver/internal/ceres/miniglog/glog/logging.h	299;"	d
LOWER_TRIANGULAR	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    LOWER_TRIANGULAR,$/;"	e	enum:ceres::internal::CompressedRowSparseMatrix::StorageType
LT_OBJDIR	cartographer/bazel/third_party/cairo/config.h	307;"	d
LT_OBJDIR	cartographer/bazel/third_party/fontconfig/config.h	253;"	d
LT_OBJDIR	cartographer/bazel/third_party/pixman/config.h	100;"	d
L_	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  lua_State* L_;  \/\/ The name is by convention in the Lua World.$/;"	m	class:cartographer::common::LuaParameterDictionary
LandmarkCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  LandmarkCostFunction2D(const LandmarkObservation& observation,$/;"	f	class:cartographer::mapping::optimization::LandmarkCostFunction2D
LandmarkCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^class LandmarkCostFunction2D {$/;"	c	namespace:cartographer::mapping::optimization
LandmarkCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  LandmarkCostFunction3D(const LandmarkObservation& observation,$/;"	f	class:cartographer::mapping::optimization::LandmarkCostFunction3D
LandmarkCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^class LandmarkCostFunction3D {$/;"	c	namespace:cartographer::mapping::optimization
LandmarkData	cartographer/cartographer/sensor/landmark_data.h	/^struct LandmarkData {$/;"	s	namespace:cartographer::sensor
LandmarkDataTest	cartographer/cartographer/sensor/landmark_data_test.cc	/^  LandmarkDataTest()$/;"	f	class:cartographer::sensor::__anon116::LandmarkDataTest
LandmarkDataTest	cartographer/cartographer/sensor/landmark_data_test.cc	/^class LandmarkDataTest : public ::testing::Test {$/;"	c	namespace:cartographer::sensor::__anon116	file:
LandmarkNode	cartographer/cartographer/mapping/pose_graph_interface.h	/^  struct LandmarkNode {$/;"	s	class:cartographer::mapping::PoseGraphInterface
LandmarkObservation	cartographer/cartographer/mapping/pose_graph_interface.h	/^    struct LandmarkObservation {$/;"	s	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode
LandmarkObservation	cartographer/cartographer/sensor/landmark_data.h	/^struct LandmarkObservation {$/;"	s	namespace:cartographer::sensor
LargeScaleCovarianceTest	ceres-solver/internal/ceres/covariance_test.cc	/^class LargeScaleCovarianceTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
LaserScanToPointCloudWithIntensities	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^LaserScanToPointCloudWithIntensities(const LaserMessageType& msg) {$/;"	f	namespace:cartographer_ros::__anon132
LastConnectionTime	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^common::Time TrajectoryConnectivityState::LastConnectionTime($/;"	f	class:cartographer::mapping::TrajectoryConnectivityState
LastMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* DeathTest::LastMessage() {$/;"	f	class:testing::internal::DeathTest
LatLongAltToEcef	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^Eigen::Vector3d LatLongAltToEcef(const double latitude, const double longitude,$/;"	f	namespace:cartographer_ros
LaunchSubscribers	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::LaunchSubscribers(const TrajectoryOptions& options,$/;"	f	class:cartographer_ros::Node
LayoutType	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  typedef HashMap<long int, CellInfo* > LayoutType;$/;"	t	class:ceres::internal::BlockRandomAccessSparseMatrix
Le	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::Le2Matcher Le() { return internal::Le2Matcher(); }$/;"	f	namespace:testing
Le	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::LeMatcher<Rhs> Le(Rhs x) {$/;"	f	namespace:testing
Le2Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Le2Matcher : public PairMatchBase<Le2Matcher, AnyLe> {$/;"	c	namespace:testing::internal
LeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit LeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::LeMatcher
LeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class LeMatcher : public ComparisonBase<LeMatcher<Rhs>, Rhs, AnyLe> {$/;"	c	namespace:testing::internal
LeftMultiply	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::BlockSparseMatrix
LeftMultiply	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  virtual void LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::CgnrLinearOperator
LeftMultiply	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
LeftMultiply	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::DenseSparseMatrix
LeftMultiply	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  virtual void LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::ImplicitSchurComplement
LeftMultiply	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  virtual void LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::LowRankInverseHessian
LeftMultiply	ceres-solver/internal/ceres/preconditioner.h	/^  virtual void LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::Preconditioner
LeftMultiply	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual void LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter
LeftMultiply	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual void LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter
LeftMultiply	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::LeftMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::TripletSparseMatrix
LeftMultiplyE	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^LeftMultiplyE(const double* x, double* y) const {$/;"	f	class:ceres::internal::PartitionedMatrixView
LeftMultiplyF	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^LeftMultiplyF(const double* x, double* y) const {$/;"	f	class:ceres::internal::PartitionedMatrixView
Less	ceres-solver/internal/ceres/gmock/gmock.h	/^  class Less {$/;"	c	class:testing::Expectation
LessComparator	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LessComparator {$/;"	s	namespace:testing::internal
LevelFind	cartographer/cartographer/mapping/detect_floors.cc	/^int LevelFind(const int i, const Levels& levels) {$/;"	f	namespace:cartographer::mapping::__anon62
LevelUnion	cartographer/cartographer/mapping/detect_floors.cc	/^void LevelUnion(int i, int j, Levels* levels) {$/;"	f	namespace:cartographer::mapping::__anon62
LevenbergMarquardtStrategy	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^LevenbergMarquardtStrategy::LevenbergMarquardtStrategy($/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
LevenbergMarquardtStrategy	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^class LevenbergMarquardtStrategy : public TrustRegionStrategy {$/;"	c	namespace:ceres::internal
LexicographicallyOrderResidualBlocks	ceres-solver/internal/ceres/reorder_program.cc	/^bool LexicographicallyOrderResidualBlocks($/;"	f	namespace:ceres::internal
LhsSize	ceres-solver/internal/ceres/gmock/gmock.h	/^  size_t LhsSize() const { return num_elements_; }$/;"	f	class:testing::internal::MatchMatrix
LhsStlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsStlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename LhsView::type LhsStlContainer;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsStlContainerReference	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename LhsView::const_reference LhsStlContainerReference;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsStlContainerReference	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename LhsView::const_reference LhsStlContainerReference;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsValue	ceres-solver/internal/ceres/gmock/gmock.h	/^        typename LhsStlContainer::value_type>::type LhsValue;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LhsValue	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename LhsStlContainer::value_type LhsValue;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsView	ceres-solver/internal/ceres/gmock/gmock.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;$/;"	t	class:testing::internal::PointwiseMatcher::Impl
LhsView	ceres-solver/internal/ceres/gmock/gmock.h	/^         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;$/;"	t	class:testing::internal::WhenSortedByMatcher::Impl
LineSearch	ceres-solver/internal/ceres/line_search.cc	/^LineSearch::LineSearch(const LineSearch::Options& options)$/;"	f	class:ceres::internal::LineSearch
LineSearch	ceres-solver/internal/ceres/line_search.h	/^class LineSearch {$/;"	c	namespace:ceres::internal
LineSearchDirection	ceres-solver/internal/ceres/line_search_direction.h	/^class LineSearchDirection {$/;"	c	namespace:ceres::internal
LineSearchDirectionType	ceres-solver/include/ceres/types.h	/^enum LineSearchDirectionType {$/;"	g	namespace:ceres
LineSearchDirectionTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* LineSearchDirectionTypeToString(LineSearchDirectionType type) {$/;"	f	namespace:ceres
LineSearchFunction	ceres-solver/internal/ceres/line_search.cc	/^LineSearchFunction::LineSearchFunction(Evaluator* evaluator)$/;"	f	class:ceres::internal::LineSearchFunction
LineSearchFunction	ceres-solver/internal/ceres/line_search.h	/^class LineSearchFunction {$/;"	c	namespace:ceres::internal
LineSearchInterpolationType	ceres-solver/include/ceres/types.h	/^enum LineSearchInterpolationType {$/;"	g	namespace:ceres
LineSearchInterpolationTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* LineSearchInterpolationTypeToString($/;"	f	namespace:ceres
LineSearchMinimizer	ceres-solver/internal/ceres/line_search_minimizer.h	/^class LineSearchMinimizer : public Minimizer {$/;"	c	namespace:ceres::internal
LineSearchOptionsAreValid	ceres-solver/internal/ceres/solver.cc	/^bool LineSearchOptionsAreValid(const Solver::Options& options, string* error) {$/;"	f	namespace:ceres::__anon190
LineSearchPreprocessor	ceres-solver/internal/ceres/line_search_preprocessor.h	/^class LineSearchPreprocessor : public Preprocessor {$/;"	c	namespace:ceres::internal
LineSearchType	ceres-solver/include/ceres/types.h	/^enum LineSearchType {$/;"	g	namespace:ceres
LineSearchTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* LineSearchTypeToString(LineSearchType type) {$/;"	f	namespace:ceres
LinearBounds	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  struct LinearBounds {$/;"	s	struct:cartographer::mapping::scan_matching::SearchParameters
LinearCostFunction	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^  LinearCostFunction(double a, double b) : a_(a), b_(b) {$/;"	f	class:ceres::internal::LinearCostFunction
LinearCostFunction	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^class LinearCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
LinearCostFunction	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  explicit LinearCostFunction(const Vector& residuals_offset)$/;"	f	class:ceres::internal::LinearCostFunction
LinearCostFunction	ceres-solver/internal/ceres/gradient_checker_test.cc	/^class LinearCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
LinearIndex	ceres-solver/examples/pgm_image.h	/^int PGMImage<Real>::LinearIndex(int x, int y) const {$/;"	f	class:ceres::examples::PGMImage
LinearLeastSquaresProblem	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  LinearLeastSquaresProblem()$/;"	f	struct:ceres::internal::LinearLeastSquaresProblem
LinearLeastSquaresProblem	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^struct LinearLeastSquaresProblem {$/;"	s	namespace:ceres::internal
LinearLeastSquaresProblem0	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^LinearLeastSquaresProblem* LinearLeastSquaresProblem0() {$/;"	f	namespace:ceres::internal
LinearLeastSquaresProblem1	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^LinearLeastSquaresProblem* LinearLeastSquaresProblem1() {$/;"	f	namespace:ceres::internal
LinearLeastSquaresProblem2	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^LinearLeastSquaresProblem* LinearLeastSquaresProblem2() {$/;"	f	namespace:ceres::internal
LinearLeastSquaresProblem3	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^LinearLeastSquaresProblem* LinearLeastSquaresProblem3() {$/;"	f	namespace:ceres::internal
LinearLeastSquaresProblem4	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^LinearLeastSquaresProblem* LinearLeastSquaresProblem4() {$/;"	f	namespace:ceres::internal
LinearOperator	ceres-solver/internal/ceres/linear_operator.h	/^class LinearOperator {$/;"	c	namespace:ceres::internal
LinearSolver	ceres-solver/internal/ceres/linear_solver.h	/^class LinearSolver {$/;"	c	namespace:ceres::internal
LinearSolverAndEvaluatorCreationTest	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^class LinearSolverAndEvaluatorCreationTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
LinearSolverForZeroEBlocks	ceres-solver/internal/ceres/linear_solver.cc	/^LinearSolverType LinearSolver::LinearSolverForZeroEBlocks($/;"	f	class:ceres::internal::LinearSolver
LinearSolverTerminationType	ceres-solver/internal/ceres/linear_solver.h	/^enum LinearSolverTerminationType {$/;"	g	namespace:ceres::internal
LinearSolverType	ceres-solver/include/ceres/types.h	/^enum LinearSolverType {$/;"	g	namespace:ceres
LinearSolverTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* LinearSolverTypeToString(LinearSolverType type) {$/;"	f	namespace:ceres
LinkedPtrLessThan	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LinkedPtrLessThan {$/;"	s	namespace:testing::internal
ListTestsMatchingFilter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::ListTestsMatchingFilter() {$/;"	f	class:testing::internal::UnitTestImpl
ListType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::std::pair<Head, typename MatcherListTail::ListType> ListType;$/;"	t	struct:testing::internal::MatcherList
ListType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::std::pair<Matcher1, Matcher2> ListType;$/;"	t	struct:testing::internal::MatcherList
Literal	ceres-solver/include/ceres/jet.h	/^  typedef ceres::Jet<T, N> Literal;$/;"	t	struct:Eigen::NumTraits
LoadFile	ceres-solver/examples/simple_bundle_adjuster.cc	/^  bool LoadFile(const char* filename) {$/;"	f	class:BALProblem
LoadFlagsFromFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void LoadFlagsFromFile(const std::string& path) {$/;"	f	namespace:testing::internal
LoadFromFile	ceres-solver/examples/fields_of_experts.cc	/^bool FieldsOfExperts::LoadFromFile(const std::string& filename) {$/;"	f	class:ceres::examples::FieldsOfExperts
LoadLuaDictionary	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^std::unique_ptr<carto::common::LuaParameterDictionary> LoadLuaDictionary($/;"	f	namespace:cartographer_ros::__anon133
LoadMapBuilderServerOptions	cartographer/cartographer/cloud/map_builder_server_options.cc	/^proto::MapBuilderServerOptions LoadMapBuilderServerOptions($/;"	f	namespace:cartographer::cloud
LoadOptions	cartographer_ros/cartographer_ros/cartographer_ros/node_options.cc	/^std::tuple<NodeOptions, TrajectoryOptions> LoadOptions($/;"	f	namespace:cartographer_ros
LoadOptions	cartographer_ros/cartographer_ros/cartographer_ros/start_trajectory_main.cc	/^TrajectoryOptions LoadOptions() {$/;"	f	namespace:cartographer_ros::__anon131
LoadState	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^void MapBuilderStub::LoadState(io::ProtoStreamReaderInterface* reader,$/;"	f	class:cartographer::cloud::MapBuilderStub
LoadState	cartographer/cartographer/mapping/map_builder.cc	/^void MapBuilder::LoadState(io::ProtoStreamReaderInterface* const reader,$/;"	f	class:cartographer::mapping::MapBuilder
LoadState	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^void MapBuilderBridge::LoadState(const std::string& state_filename,$/;"	f	class:cartographer_ros::MapBuilderBridge
LoadState	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::LoadState(const std::string& state_filename,$/;"	f	class:cartographer_ros::Node
LoadStateHandler	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^class LoadStateHandler : public async_grpc::RpcHandler<LoadStateSignature> {$/;"	c	namespace:cartographer::cloud::handlers
LocalParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT LocalParameterization {$/;"	c	namespace:ceres
LocalParameterizationJacobian	ceres-solver/internal/ceres/parameter_block.h	/^  const double* LocalParameterizationJacobian() const {$/;"	f	class:ceres::internal::ParameterBlock
LocalSize	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  virtual int LocalSize() const { return kLocalSize; }$/;"	f	class:ceres::AutoDiffLocalParameterization
LocalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int LocalSize() const { return 3; }$/;"	f	class:ceres::EigenQuaternionParameterization
LocalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int LocalSize() const { return 3; }$/;"	f	class:ceres::QuaternionParameterization
LocalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int LocalSize() const { return local_size_; }$/;"	f	class:ceres::ProductParameterization
LocalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int LocalSize() const { return local_size_; }$/;"	f	class:ceres::SubsetParameterization
LocalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int LocalSize() const { return size_ - 1; }$/;"	f	class:ceres::HomogeneousVectorParameterization
LocalSize	ceres-solver/include/ceres/local_parameterization.h	/^  virtual int LocalSize() const { return size_; }$/;"	f	class:ceres::IdentityParameterization
LocalSize	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual int LocalSize() const { return 1; }$/;"	f	class:ceres::internal::PolynomialParameterization
LocalSize	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  virtual int LocalSize() const { return global_J_local.cols(); }$/;"	f	class:ceres::internal::MatrixParameterization
LocalSize	ceres-solver/internal/ceres/parameter_block.h	/^  int LocalSize() const {$/;"	f	class:ceres::internal::ParameterBlock
LocalSize	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual int LocalSize()  const { return 1;}$/;"	f	class:ceres::internal::BadLocalParameterization
LocalSize	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual int LocalSize() const { return 1; }$/;"	f	struct:ceres::internal::TestParameterization
LocalSlamData	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^    struct LocalSlamData {$/;"	s	struct:cartographer_ros::MapBuilderBridge::TrajectoryState
LocalSlamResult	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^  struct LocalSlamResult {$/;"	s	class:cartographer::cloud::MapBuilderContextInterface
LocalSlamResult2D	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^  LocalSlamResult2D($/;"	f	class:cartographer::mapping::LocalSlamResult2D
LocalSlamResult2D	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^class LocalSlamResult2D : public LocalSlamResultData {$/;"	c	namespace:cartographer::mapping
LocalSlamResult3D	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^  LocalSlamResult3D($/;"	f	class:cartographer::mapping::LocalSlamResult3D
LocalSlamResult3D	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^class LocalSlamResult3D : public LocalSlamResultData {$/;"	c	namespace:cartographer::mapping
LocalSlamResultData	cartographer/cartographer/mapping/local_slam_result_data.h	/^  LocalSlamResultData(const std::string& sensor_id, common::Time time)$/;"	f	class:cartographer::mapping::LocalSlamResultData
LocalSlamResultData	cartographer/cartographer/mapping/local_slam_result_data.h	/^class LocalSlamResultData : public sensor::Data {$/;"	c	namespace:cartographer::mapping
LocalSlamSubscriptionId	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^  struct LocalSlamSubscriptionId {$/;"	s	class:cartographer::cloud::MapBuilderContextInterface
LocalTrajectoryBuilder2D	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^LocalTrajectoryBuilder2D::LocalTrajectoryBuilder2D($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
LocalTrajectoryBuilder2D	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^class LocalTrajectoryBuilder2D {$/;"	c	namespace:cartographer::mapping
LocalTrajectoryBuilder3D	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^LocalTrajectoryBuilder3D::LocalTrajectoryBuilder3D($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
LocalTrajectoryBuilder3D	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^class LocalTrajectoryBuilder3D {$/;"	c	namespace:cartographer::mapping
LocalTrajectoryBuilderTest	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^class LocalTrajectoryBuilderTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon104	file:
LocalTrajectoryUploader	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^LocalTrajectoryUploader::LocalTrajectoryUploader($/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
LocalTrajectoryUploader	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^class LocalTrajectoryUploader : public LocalTrajectoryUploaderInterface {$/;"	c	namespace:cartographer::cloud::__anon37	file:
LocalTrajectoryUploaderInterface	cartographer/cartographer/cloud/internal/local_trajectory_uploader.h	/^class LocalTrajectoryUploaderInterface {$/;"	c	namespace:cartographer::cloud
LocallyParameterizedCostFunction	ceres-solver/internal/ceres/residual_block_test.cc	/^class LocallyParameterizedCostFunction: public SizedCostFunction<3, 2, 3, 4> {$/;"	c	namespace:ceres::internal	file:
Lock	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Mutex::Lock() {$/;"	f	class:testing::internal::Mutex
Lock	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Lock() {$/;"	f	class:std::tr1::MutexBase
Lock	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Lock() {}$/;"	f	class:std::tr1::Mutex
Lock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Lock()         { CERES_SAFE_PTHREAD(pthread_mutex_lock); }$/;"	f	class:ceres::internal::Mutex
Lock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Lock()         { CERES_SAFE_PTHREAD(pthread_rwlock_wrlock); }$/;"	f	class:ceres::internal::Mutex
Lock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Lock()         { assert(--mutex_ == -1); }$/;"	f	class:ceres::internal::Mutex
Lock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Lock()         { if (is_safe_) EnterCriticalSection(&mutex_); }$/;"	f	class:ceres::internal::Mutex
LocklessQueue	cartographer/cartographer/common/lockless_queue.h	/^  LocklessQueue() {$/;"	f	class:cartographer::common::LocklessQueue
LocklessQueue	cartographer/cartographer/common/lockless_queue.h	/^class LocklessQueue {$/;"	c	namespace:cartographer::common
Log	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ void Log(LogSeverity severity,$/;"	f	namespace:testing::internal
LogElementMatcherPairVec	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void LogElementMatcherPairVec(const ElementMatcherPairs& pairs,$/;"	f	namespace:testing::internal
LogIsVisible	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ bool LogIsVisible(LogSeverity severity) {$/;"	f	namespace:testing::internal
LogMessageFatal	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^void LogMessageFatal(const char *file, int line, const T &message) {$/;"	f
LogResidualHistograms	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::LogResidualHistograms() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
LogSeverity	ceres-solver/internal/ceres/gmock/gmock.h	/^enum LogSeverity {$/;"	g	namespace:testing::internal
LogSeverity	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^typedef int LogSeverity;$/;"	t	namespace:google
LogSink	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^class CERES_EXPORT LogSink {$/;"	c	namespace:google
LogToSinks	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  void LogToSinks(int severity) {$/;"	f	class:MessageLogger
LogToStderr	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void LogToStderr() {}$/;"	f	namespace:std::tr1
LogWithLocation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ void LogWithLocation(testing::internal::LogSeverity severity,$/;"	f	namespace:testing::internal
LoggerVoidify	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  LoggerVoidify() { }$/;"	f	class:LoggerVoidify
LoggerVoidify	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^class CERES_EXPORT LoggerVoidify {$/;"	c
LoggingCallback	ceres-solver/internal/ceres/callbacks.cc	/^LoggingCallback::LoggingCallback(const MinimizerType minimizer_type,$/;"	f	class:ceres::internal::LoggingCallback
LoggingCallback	ceres-solver/internal/ceres/callbacks.h	/^class LoggingCallback : public IterationCallback {$/;"	c	namespace:ceres::internal
LoggingType	ceres-solver/include/ceres/types.h	/^enum LoggingType {$/;"	g	namespace:ceres
Logit	cartographer/cartographer/mapping/submaps.h	/^inline float Logit(float probability) {$/;"	f	namespace:cartographer::mapping
LongToIntPair	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  void LongToIntPair(int64 index, int* row, int* col) const {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
Lookup	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^transform::Rigid3d TransformInterpolationBuffer::Lookup($/;"	f	class:cartographer::transform::TransformInterpolationBuffer
LookupToTracking	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.cc	/^std::unique_ptr<::cartographer::transform::Rigid3d> TfBridge::LookupToTracking($/;"	f	class:cartographer_ros::TfBridge
LookupTransform	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^transform::Rigid3d LookupTransform($/;"	f	namespace:cartographer::ground_truth::__anon49
LossFunction	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT LossFunction {$/;"	c	namespace:ceres
LossFunctionWrapper	ceres-solver/include/ceres/loss_function.h	/^  LossFunctionWrapper(LossFunction* rho, Ownership ownership)$/;"	f	class:ceres::LossFunctionWrapper
LossFunctionWrapper	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT LossFunctionWrapper : public LossFunction {$/;"	c	namespace:ceres
LosslessArithmeticConvertibleImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl : public false_type {};$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kFloatingPoint, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kBool, bool, kInteger, To>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kBool, bool>$/;"	s	namespace:testing::internal
LosslessArithmeticConvertibleImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^struct LosslessArithmeticConvertibleImpl<kInteger, From, kInteger, To>$/;"	s	namespace:testing::internal
LowRankInverseHessian	ceres-solver/internal/ceres/low_rank_inverse_hessian.cc	/^LowRankInverseHessian::LowRankInverseHessian($/;"	f	class:ceres::internal::LowRankInverseHessian
LowRankInverseHessian	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^class LowRankInverseHessian : public LinearOperator {$/;"	c	namespace:ceres::internal
LowerBoundForParameter	ceres-solver/internal/ceres/parameter_block.h	/^  double LowerBoundForParameter(int index) const {$/;"	f	class:ceres::internal::ParameterBlock
Lt	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::Lt2Matcher Lt() { return internal::Lt2Matcher(); }$/;"	f	namespace:testing
Lt	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::LtMatcher<Rhs> Lt(Rhs x) {$/;"	f	namespace:testing
Lt2Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Lt2Matcher : public PairMatchBase<Lt2Matcher, AnyLt> {$/;"	c	namespace:testing::internal
LtMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit LtMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::LtMatcher
LtMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class LtMatcher : public ComparisonBase<LtMatcher<Rhs>, Rhs, AnyLt> {$/;"	c	namespace:testing::internal
LuaChoose	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^int LuaChoose(lua_State* L) {$/;"	f	namespace:cartographer::common::__anon9
LuaInclude	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^int LuaParameterDictionary::LuaInclude(lua_State* L) {$/;"	f	class:cartographer::common::LuaParameterDictionary
LuaParameterDictionary	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^LuaParameterDictionary::LuaParameterDictionary($/;"	f	class:cartographer::common::LuaParameterDictionary
LuaParameterDictionary	cartographer/cartographer/common/lua_parameter_dictionary.h	/^class LuaParameterDictionary {$/;"	c	namespace:cartographer::common
LuaParameterDictionaryTest	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^class LuaParameterDictionaryTest : public ::testing::Test {$/;"	c	namespace:cartographer::common::__anon3	file:
LuaRead	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^int LuaParameterDictionary::LuaRead(lua_State* L) {$/;"	f	class:cartographer::common::LuaParameterDictionary
MATCHER	ceres-solver/internal/ceres/gmock/gmock.h	/^MATCHER(IsEmpty, negation ? "isn't empty" : "is empty") {$/;"	f	namespace:testing
MATCHER	ceres-solver/internal/ceres/gmock/gmock.h	13851;"	d
MATCHER	ceres-solver/internal/ceres/rotation_test.cc	/^MATCHER(IsNormalizedQuaternion, "") {$/;"	f	namespace:ceres::internal
MATCHER	ceres-solver/internal/ceres/rotation_test.cc	/^MATCHER(IsOrthonormal, "") {$/;"	f	namespace:ceres::internal
MATCHER_P	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^MATCHER_P(AllCwiseEqual, index, "") { return (arg == index).all(); }$/;"	f	namespace:cartographer::mapping::__anon110
MATCHER_P	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^MATCHER_P(ApproximatelyEquals, expected,$/;"	f	namespace:cartographer::sensor::__anon121
MATCHER_P	cartographer/cartographer/sensor/internal/test_helpers.h	/^MATCHER_P(Near, point, std::string(negation ? "Doesn't" : "Does") + " match.") {$/;"	f	namespace:cartographer::sensor
MATCHER_P	ceres-solver/internal/ceres/gmock/gmock.h	13898;"	d
MATCHER_P	ceres-solver/internal/ceres/rotation_test.cc	/^MATCHER_P(IsNear3x3Matrix, expected, "") {$/;"	f	namespace:ceres::internal
MATCHER_P	ceres-solver/internal/ceres/rotation_test.cc	/^MATCHER_P(IsNearAngleAxis, expected, "") {$/;"	f	namespace:ceres::internal
MATCHER_P	ceres-solver/internal/ceres/rotation_test.cc	/^MATCHER_P(IsNearQuaternion, expected, "") {$/;"	f	namespace:ceres::internal
MATCHER_P10	ceres-solver/internal/ceres/gmock/gmock.h	14550;"	d
MATCHER_P2	cartographer/cartographer/transform/rigid_transform_test_helpers.h	/^MATCHER_P2(IsNearly, rigid, epsilon,$/;"	f	namespace:cartographer::transform
MATCHER_P2	ceres-solver/internal/ceres/gmock/gmock.h	13950;"	d
MATCHER_P3	ceres-solver/internal/ceres/gmock/gmock.h	14007;"	d
MATCHER_P4	ceres-solver/internal/ceres/gmock/gmock.h	14067;"	d
MATCHER_P5	ceres-solver/internal/ceres/gmock/gmock.h	14136;"	d
MATCHER_P6	ceres-solver/internal/ceres/gmock/gmock.h	14209;"	d
MATCHER_P7	ceres-solver/internal/ceres/gmock/gmock.h	14284;"	d
MATCHER_P8	ceres-solver/internal/ceres/gmock/gmock.h	14368;"	d
MATCHER_P9	ceres-solver/internal/ceres/gmock/gmock.h	14457;"	d
MAX_RES_SET_SIZE_PATTERN	cartographer_ros/jenkins/worker.py	/^MAX_RES_SET_SIZE_PATTERN = Pattern($/;"	v
MAYBE_SET_CONSTANT	ceres-solver/examples/libmv_bundle_adjuster.cc	736;"	d	file:
MAYBE_SET_CONSTANT	ceres-solver/examples/libmv_bundle_adjuster.cc	747;"	d	file:
MOCK_CONST_METHOD0	ceres-solver/internal/ceres/gmock/gmock.h	11668;"	d
MOCK_CONST_METHOD0_T	ceres-solver/internal/ceres/gmock/gmock.h	11692;"	d
MOCK_CONST_METHOD0_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11784;"	d
MOCK_CONST_METHOD0_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11738;"	d
MOCK_CONST_METHOD1	ceres-solver/internal/ceres/gmock/gmock.h	11669;"	d
MOCK_CONST_METHOD10	ceres-solver/internal/ceres/gmock/gmock.h	11678;"	d
MOCK_CONST_METHOD10_T	ceres-solver/internal/ceres/gmock/gmock.h	11712;"	d
MOCK_CONST_METHOD10_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11804;"	d
MOCK_CONST_METHOD10_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11758;"	d
MOCK_CONST_METHOD1_T	ceres-solver/internal/ceres/gmock/gmock.h	11694;"	d
MOCK_CONST_METHOD1_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11786;"	d
MOCK_CONST_METHOD1_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11740;"	d
MOCK_CONST_METHOD2	ceres-solver/internal/ceres/gmock/gmock.h	11670;"	d
MOCK_CONST_METHOD2_T	ceres-solver/internal/ceres/gmock/gmock.h	11696;"	d
MOCK_CONST_METHOD2_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11788;"	d
MOCK_CONST_METHOD2_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11742;"	d
MOCK_CONST_METHOD3	ceres-solver/internal/ceres/gmock/gmock.h	11671;"	d
MOCK_CONST_METHOD3_T	ceres-solver/internal/ceres/gmock/gmock.h	11698;"	d
MOCK_CONST_METHOD3_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11790;"	d
MOCK_CONST_METHOD3_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11744;"	d
MOCK_CONST_METHOD4	ceres-solver/internal/ceres/gmock/gmock.h	11672;"	d
MOCK_CONST_METHOD4_T	ceres-solver/internal/ceres/gmock/gmock.h	11700;"	d
MOCK_CONST_METHOD4_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11792;"	d
MOCK_CONST_METHOD4_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11746;"	d
MOCK_CONST_METHOD5	ceres-solver/internal/ceres/gmock/gmock.h	11673;"	d
MOCK_CONST_METHOD5_T	ceres-solver/internal/ceres/gmock/gmock.h	11702;"	d
MOCK_CONST_METHOD5_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11794;"	d
MOCK_CONST_METHOD5_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11748;"	d
MOCK_CONST_METHOD6	ceres-solver/internal/ceres/gmock/gmock.h	11674;"	d
MOCK_CONST_METHOD6_T	ceres-solver/internal/ceres/gmock/gmock.h	11704;"	d
MOCK_CONST_METHOD6_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11796;"	d
MOCK_CONST_METHOD6_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11750;"	d
MOCK_CONST_METHOD7	ceres-solver/internal/ceres/gmock/gmock.h	11675;"	d
MOCK_CONST_METHOD7_T	ceres-solver/internal/ceres/gmock/gmock.h	11706;"	d
MOCK_CONST_METHOD7_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11798;"	d
MOCK_CONST_METHOD7_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11752;"	d
MOCK_CONST_METHOD8	ceres-solver/internal/ceres/gmock/gmock.h	11676;"	d
MOCK_CONST_METHOD8_T	ceres-solver/internal/ceres/gmock/gmock.h	11708;"	d
MOCK_CONST_METHOD8_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11800;"	d
MOCK_CONST_METHOD8_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11754;"	d
MOCK_CONST_METHOD9	ceres-solver/internal/ceres/gmock/gmock.h	11677;"	d
MOCK_CONST_METHOD9_T	ceres-solver/internal/ceres/gmock/gmock.h	11710;"	d
MOCK_CONST_METHOD9_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11802;"	d
MOCK_CONST_METHOD9_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11756;"	d
MOCK_METHOD0	ceres-solver/internal/ceres/gmock/gmock.h	11656;"	d
MOCK_METHOD0_T	ceres-solver/internal/ceres/gmock/gmock.h	11680;"	d
MOCK_METHOD0_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11761;"	d
MOCK_METHOD0_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11715;"	d
MOCK_METHOD1	ceres-solver/internal/ceres/gmock/gmock.h	11657;"	d
MOCK_METHOD10	ceres-solver/internal/ceres/gmock/gmock.h	11666;"	d
MOCK_METHOD10_T	ceres-solver/internal/ceres/gmock/gmock.h	11690;"	d
MOCK_METHOD10_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11781;"	d
MOCK_METHOD10_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11735;"	d
MOCK_METHOD1_T	ceres-solver/internal/ceres/gmock/gmock.h	11681;"	d
MOCK_METHOD1_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11763;"	d
MOCK_METHOD1_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11717;"	d
MOCK_METHOD2	ceres-solver/internal/ceres/gmock/gmock.h	11658;"	d
MOCK_METHOD2_T	ceres-solver/internal/ceres/gmock/gmock.h	11682;"	d
MOCK_METHOD2_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11765;"	d
MOCK_METHOD2_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11719;"	d
MOCK_METHOD3	ceres-solver/internal/ceres/gmock/gmock.h	11659;"	d
MOCK_METHOD3_T	ceres-solver/internal/ceres/gmock/gmock.h	11683;"	d
MOCK_METHOD3_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11767;"	d
MOCK_METHOD3_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11721;"	d
MOCK_METHOD4	ceres-solver/internal/ceres/gmock/gmock.h	11660;"	d
MOCK_METHOD4_T	ceres-solver/internal/ceres/gmock/gmock.h	11684;"	d
MOCK_METHOD4_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11769;"	d
MOCK_METHOD4_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11723;"	d
MOCK_METHOD5	ceres-solver/internal/ceres/gmock/gmock.h	11661;"	d
MOCK_METHOD5_T	ceres-solver/internal/ceres/gmock/gmock.h	11685;"	d
MOCK_METHOD5_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11771;"	d
MOCK_METHOD5_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11725;"	d
MOCK_METHOD6	ceres-solver/internal/ceres/gmock/gmock.h	11662;"	d
MOCK_METHOD6_T	ceres-solver/internal/ceres/gmock/gmock.h	11686;"	d
MOCK_METHOD6_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11773;"	d
MOCK_METHOD6_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11727;"	d
MOCK_METHOD7	ceres-solver/internal/ceres/gmock/gmock.h	11663;"	d
MOCK_METHOD7_T	ceres-solver/internal/ceres/gmock/gmock.h	11687;"	d
MOCK_METHOD7_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11775;"	d
MOCK_METHOD7_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11729;"	d
MOCK_METHOD8	ceres-solver/internal/ceres/gmock/gmock.h	11664;"	d
MOCK_METHOD8_T	ceres-solver/internal/ceres/gmock/gmock.h	11688;"	d
MOCK_METHOD8_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11777;"	d
MOCK_METHOD8_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11731;"	d
MOCK_METHOD9	ceres-solver/internal/ceres/gmock/gmock.h	11665;"	d
MOCK_METHOD9_T	ceres-solver/internal/ceres/gmock/gmock.h	11689;"	d
MOCK_METHOD9_T_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11779;"	d
MOCK_METHOD9_WITH_CALLTYPE	ceres-solver/internal/ceres/gmock/gmock.h	11733;"	d
Main	cartographer_ros/cartographer_ros/scripts/remove_leading_slashes.py	/^def Main():$/;"	f
Make1stOrderPerturbation	ceres-solver/include/ceres/internal/autodiff.h	/^inline void Make1stOrderPerturbation(int offset, const T* src, JetT* dst) {$/;"	f	namespace:ceres::internal
MakeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^Action<F> MakeAction(ActionInterface<F>* impl) {$/;"	f	namespace:testing
MakeAndRegisterTestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestInfo* MakeAndRegisterTestInfo($/;"	f	namespace:testing::internal
MakeCardinality	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Cardinality MakeCardinality(const CardinalityInterface* c) {$/;"	f	namespace:testing
MakeConnection	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void StreamingListener::SocketWriter::MakeConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
MakeDictionary	cartographer/cartographer/common/lua_parameter_dictionary_test_helpers.h	/^std::unique_ptr<LuaParameterDictionary> MakeDictionary($/;"	f	namespace:cartographer::common
MakeDispatchable	cartographer/cartographer/sensor/internal/dispatchable.h	/^std::unique_ptr<Dispatchable<DataType>> MakeDispatchable($/;"	f	namespace:cartographer::sensor
MakeFileName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::MakeFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath
MakeImu	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^  std::unique_ptr<Data> MakeImu(const int ordinal) {$/;"	f	class:cartographer::sensor::__anon123::OrderedMultiQueueTest
MakeJ3	ceres-solver/internal/ceres/rotation_test.cc	/^J3 MakeJ3(double a, double v0, double v1, double v2) {$/;"	f	namespace:ceres::internal
MakeJ4	ceres-solver/internal/ceres/rotation_test.cc	/^J4 MakeJ4(double a, double v0, double v1, double v2, double v3) {$/;"	f	namespace:ceres::internal
MakeJet	ceres-solver/internal/ceres/jet_test.cc	/^J MakeJet(double a, double v0, double v1) {$/;"	f	namespace:ceres::internal
MakeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Matcher<T> MakeMatcher(const MatcherInterface<T>* impl) {$/;"	f	namespace:testing
MakeNewHolder	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ValueHolder* MakeNewHolder() const { return new ValueHolder(); }$/;"	f	class:std::tr1::ThreadLocal::DefaultValueHolderFactory
MakeNewHolder	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ValueHolder* MakeNewHolder() const {$/;"	f	class:std::tr1::ThreadLocal::InstanceValueHolderFactory
MakeNonReferenceCounted	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^std::unique_ptr<LuaParameterDictionary> MakeNonReferenceCounted($/;"	f	namespace:cartographer::common::__anon3
MakePolymorphicAction	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicAction<Impl> MakePolymorphicAction(const Impl& impl) {$/;"	f	namespace:testing
MakePolymorphicMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicMatcher<Impl> MakePolymorphicMatcher(const Impl& impl) {$/;"	f	namespace:testing
MakePolynomialForBoundaryConstrainedProblem	ceres-solver/internal/ceres/dogleg_strategy.cc	/^Vector DoglegStrategy::MakePolynomialForBoundaryConstrainedProblem() const {$/;"	f	class:ceres::internal::DoglegStrategy
MakePredicateFormatterFromMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^MakePredicateFormatterFromMatcher(M matcher) {$/;"	f	namespace:testing::internal
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue();$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	struct:testing::internal::Function
MakeResultIgnoredValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef IgnoredValue MakeResultIgnoredValue(A1, A2, A3, A4, A5, A6, A7, A8,$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid();$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8, A9);$/;"	t	struct:testing::internal::Function
MakeResultVoid	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef void MakeResultVoid(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10);$/;"	t	struct:testing::internal::Function
MakeUniqueCairoPtr	cartographer/cartographer/io/image.cc	/^UniqueCairoPtr MakeUniqueCairoPtr(cairo_t* surface) {$/;"	f	namespace:cartographer::io
MakeUniqueCairoSurfacePtr	cartographer/cartographer/io/image.cc	/^UniqueCairoSurfacePtr MakeUniqueCairoSurfacePtr(cairo_surface_t* surface) {$/;"	f	namespace:cartographer::io
ManualConstructor	ceres-solver/include/ceres/internal/manual_constructor.h	/^class ManualConstructor {$/;"	c	namespace:ceres::internal
MapBuilder	cartographer/cartographer/mapping/map_builder.cc	/^MapBuilder::MapBuilder(const proto::MapBuilderOptions& options)$/;"	f	class:cartographer::mapping::MapBuilder
MapBuilder	cartographer/cartographer/mapping/map_builder.h	/^class MapBuilder : public MapBuilderInterface {$/;"	c	namespace:cartographer::mapping
MapBuilderBridge	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^MapBuilderBridge::MapBuilderBridge($/;"	f	class:cartographer_ros::MapBuilderBridge
MapBuilderBridge	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^class MapBuilderBridge {$/;"	c	namespace:cartographer_ros
MapBuilderContext	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^MapBuilderContext<SubmapType>::MapBuilderContext($/;"	f	class:cartographer::cloud::MapBuilderContext
MapBuilderContext	cartographer/cartographer/cloud/internal/map_builder_server.h	/^class MapBuilderContext : public MapBuilderContextInterface {$/;"	c	namespace:cartographer::cloud
MapBuilderContextInterface	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^class MapBuilderContextInterface : public async_grpc::ExecutionContext {$/;"	c	namespace:cartographer::cloud
MapBuilderInterface	cartographer/cartographer/mapping/map_builder_interface.h	/^  MapBuilderInterface() {}$/;"	f	class:cartographer::mapping::MapBuilderInterface
MapBuilderInterface	cartographer/cartographer/mapping/map_builder_interface.h	/^class MapBuilderInterface {$/;"	c	namespace:cartographer::mapping
MapBuilderServer	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^MapBuilderServer::MapBuilderServer($/;"	f	class:cartographer::cloud::MapBuilderServer
MapBuilderServer	cartographer/cartographer/cloud/internal/map_builder_server.h	/^class MapBuilderServer : public MapBuilderServerInterface {$/;"	c	namespace:cartographer::cloud
MapBuilderServerInterface	cartographer/cartographer/cloud/map_builder_server_interface.h	/^class MapBuilderServerInterface {$/;"	c	namespace:cartographer::cloud
MapBuilderStub	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^MapBuilderStub::MapBuilderStub(const std::string& server_address)$/;"	f	class:cartographer::cloud::MapBuilderStub
MapBuilderStub	cartographer/cartographer/cloud/client/map_builder_stub.h	/^class MapBuilderStub : public mapping::MapBuilderInterface {$/;"	c	namespace:cartographer::cloud
MapBuilderTest	cartographer/cartographer/mapping/map_builder_test.cc	/^class MapBuilderTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon55	file:
MapById	cartographer/cartographer/mapping/id.h	/^class MapById {$/;"	c	namespace:cartographer::mapping
MapByIndex	cartographer/cartographer/mapping/id.h	/^  struct MapByIndex {$/;"	s	class:cartographer::mapping::MapById
MapByTime	cartographer/cartographer/sensor/map_by_time.h	/^class MapByTime {$/;"	c	namespace:cartographer::sensor
MapLimits	cartographer/cartographer/mapping/2d/map_limits.h	/^  MapLimits(const double resolution, const Eigen::Vector2d& max,$/;"	f	class:cartographer::mapping::MapLimits
MapLimits	cartographer/cartographer/mapping/2d/map_limits.h	/^  explicit MapLimits(const proto::MapLimits& map_limits)$/;"	f	class:cartographer::mapping::MapLimits
MapLimits	cartographer/cartographer/mapping/2d/map_limits.h	/^class MapLimits {$/;"	c	namespace:cartographer::mapping
MapOfPoses	ceres-solver/examples/slam/pose_graph_3d/types.h	/^    MapOfPoses;$/;"	t	namespace:ceres::examples
MapValuesToContiguousRange	ceres-solver/internal/ceres/array_utils.cc	/^void MapValuesToContiguousRange(const int size, int* array) {$/;"	f	namespace:ceres::internal
MarkQueueAsFinished	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^void OrderedMultiQueue::MarkQueueAsFinished(const QueueKey& queue_key) {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
MarkSubmapAsTrimmed	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::TrimmingHandle::MarkSubmapAsTrimmed($/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
MarkSubmapAsTrimmed	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::TrimmingHandle::MarkSubmapAsTrimmed($/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
Marker	ceres-solver/examples/libmv_bundle_adjuster.cc	/^struct Marker {$/;"	s	namespace:__anon155	file:
Mat	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::MatrixXd Mat;$/;"	t	file:
Mat3	ceres-solver/examples/libmv_bundle_adjuster.cc	/^typedef Eigen::Matrix<double, 3, 3> Mat3;$/;"	t	file:
Mat3	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::Matrix<double, 3, 3> Mat3;$/;"	t	file:
MatX8	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::Matrix<double, Eigen::Dynamic,  8> MatX8;$/;"	t	file:
Match	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^void CeresScanMatcher2D::Match(const Eigen::Vector2d& target_translation,$/;"	f	class:cartographer::mapping::scan_matching::CeresScanMatcher2D
Match	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^bool FastCorrelativeScanMatcher2D::Match($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
Match	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^double RealTimeCorrelativeScanMatcher2D::Match($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher2D
Match	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.cc	/^void CeresScanMatcher3D::Match($/;"	f	class:cartographer::mapping::scan_matching::CeresScanMatcher3D
Match	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::Match($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
Match	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^float RealTimeCorrelativeScanMatcher3D::Match($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher3D
Match	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^std::vector<float> RotationalScanMatcher::Match($/;"	f	class:cartographer::mapping::scan_matching::RotationalScanMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::ComparisonBase::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::PairMatchBase::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain($/;"	f	class:testing::internal::RefMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::SizeIsMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(LhsContainer lhs,$/;"	f	class:testing::internal::PointwiseMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(LhsContainer lhs,$/;"	f	class:testing::internal::WhenSortedByMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(Pointer pointer,$/;"	f	class:testing::internal::PointeeMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(T obj, MatchResultListener* listener) const {$/;"	f	class:testing::internal::ResultOfMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(T value,$/;"	f	class:testing::internal::FloatingEqMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::BoundSecondMatcher::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherCastImpl::Impl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::EndsWithMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::HasSubstrMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::StartsWithMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::StrEqualityMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(From from, MatchResultListener* listener) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(From& from, MatchResultListener* listener) const {$/;"	f	class:testing::internal::WhenDynamicCastToMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherBase
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(T& x,  \/\/ NOLINT$/;"	f	class:testing::internal::TrulyMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const LhsContainer& lhs,$/;"	f	class:testing::internal::ContainerEqMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::EndsWithMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::HasSubstrMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::StartsWithMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::StrEqualityMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const Pointer& p,$/;"	f	class:testing::internal::IsNullMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const Pointer& p,$/;"	f	class:testing::internal::NotNullMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const T& value, MatchResultListener* listener) const {$/;"	f	class:testing::internal::FieldMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplain(const T&value, MatchResultListener* listener) const {$/;"	f	class:testing::internal::PropertyMatcher
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain($/;"	f	class:testing::internal::AnyMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(ArgsTuple args,$/;"	f	class:testing::internal::ArgsMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::ContainsMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::EachMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::ElementsAreMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(Container container,$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(PairType a_pair,$/;"	f	class:testing::internal::PairMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(PairType key_value,$/;"	f	class:testing::internal::KeyMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::BothOfMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::EitherOfMatcherImpl
MatchAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual bool MatchAndExplain(T x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::NotMatcherImpl
MatchAndExplainImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplainImpl(bool all_elements_should_match,$/;"	f	class:testing::internal::QuantifierMatcherImpl
MatchAndExplainImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplainImpl(false_type \/* is_not_pointer *\/, const Class& obj,$/;"	f	class:testing::internal::FieldMatcher
MatchAndExplainImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplainImpl(false_type \/* is_not_pointer *\/, const Class& obj,$/;"	f	class:testing::internal::PropertyMatcher
MatchAndExplainImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplainImpl(true_type \/* is_pointer *\/, const Class* p,$/;"	f	class:testing::internal::FieldMatcher
MatchAndExplainImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool MatchAndExplainImpl(true_type \/* is_pointer *\/, const Class* p,$/;"	f	class:testing::internal::PropertyMatcher
MatchFullSubmap	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^bool FastCorrelativeScanMatcher2D::MatchFullSubmap($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
MatchFullSubmap	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::MatchFullSubmap($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
MatchHistograms	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^float MatchHistograms(const Eigen::VectorXf& submap_histogram,$/;"	f	namespace:cartographer::mapping::scan_matching::__anon98
MatchMatrix	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatchMatrix(size_t num_elements, size_t num_matchers)$/;"	f	class:testing::internal::MatchMatrix
MatchMatrix	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ MatchMatrix {$/;"	c	namespace:testing::internal
MatchPrintAndExplain	ceres-solver/internal/ceres/gmock/gmock.h	/^bool MatchPrintAndExplain(Value& value, const Matcher<T>& matcher,$/;"	f	namespace:testing::internal
MatchRegexAnywhere	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool MatchRegexAnywhere(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRegexAtHead	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool MatchRegexAtHead(const char* regex, const char* str) {$/;"	f	namespace:testing::internal
MatchRepetitionAndRegexAtHead	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool MatchRepetitionAndRegexAtHead($/;"	f	namespace:testing::internal
MatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit MatchResultListener(::std::ostream* os) : stream_(os) {}$/;"	f	class:testing::MatchResultListener
MatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatchResultListener {$/;"	c	namespace:testing
MatchWithSearchParameters	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^bool FastCorrelativeScanMatcher2D::MatchWithSearchParameters($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
MatchWithSearchParameters	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::MatchWithSearchParameters($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher() {}$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Matcher() {}  \/\/ NOLINT$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<StringPiece>* impl)$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<T>* impl)$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<const StringPiece&>* impl)$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<const internal::string&>* impl)$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit Matcher(const MatcherInterface<internal::string>* impl)$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^Matcher<T>::Matcher(T value) { *this = Eq(value); }$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Matcher<StringPiece>$/;"	c	namespace:testing
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Matcher<const StringPiece&>$/;"	c	namespace:testing
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Matcher<const internal::string&>$/;"	c	namespace:testing
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Matcher<internal::string>$/;"	c	namespace:testing
Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Matcher : public internal::MatcherBase<T> {$/;"	c	namespace:testing
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<StringPiece>::Matcher(StringPiece s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<StringPiece>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<StringPiece>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<const StringPiece&>::Matcher(StringPiece s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<const StringPiece&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<const StringPiece&>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<const internal::string&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<const internal::string&>::Matcher(const internal::string& s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<internal::string>::Matcher(const char* s) {$/;"	f	class:testing::Matcher
Matcher	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Matcher<internal::string>::Matcher(const internal::string& s) { *this = Eq(s); }$/;"	f	class:testing::Matcher
MatcherAsPredicate	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit MatcherAsPredicate(M matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::MatcherAsPredicate
MatcherAsPredicate	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherAsPredicate {$/;"	c	namespace:testing::internal
MatcherBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatcherBase() {}$/;"	f	class:testing::internal::MatcherBase
MatcherBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit MatcherBase(const MatcherInterface<T>* impl)$/;"	f	class:testing::internal::MatcherBase
MatcherBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherBase {$/;"	c	namespace:testing::internal
MatcherBindSecond	ceres-solver/internal/ceres/gmock/gmock.h	/^BoundSecondMatcher<Tuple2Matcher, Second> MatcherBindSecond($/;"	f	namespace:testing::internal
MatcherCast	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Matcher<T> MatcherCast(const M& matcher) {$/;"	f	namespace:testing
MatcherCastImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherCastImpl {$/;"	c	namespace:testing::internal
MatcherCastImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherCastImpl<T, Matcher<T> > {$/;"	c	namespace:testing::internal
MatcherCastImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherCastImpl<T, Matcher<U> > {$/;"	c	namespace:testing::internal
MatcherDescriberInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherDescriberVec	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::std::vector<const MatcherDescriberInterface*> MatcherDescriberVec;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImplBase
MatcherInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatcherInterface : public MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherList	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherList {$/;"	s	namespace:testing::internal
MatcherList	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherList<2, Matcher1, Matcher2> {$/;"	s	namespace:testing::internal
MatcherListTail	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef MatcherList<kSize - 1, Tail...> MatcherListTail;$/;"	t	struct:testing::internal::MatcherList
MatcherListType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef MatcherList<sizeof...(Args), Args...> MatcherListType;$/;"	t	class:testing::internal::VariadicMatcher
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9,$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8, A9> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7, A8> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6, A7> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5, A6> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4, A5> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3, A4> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2, A3> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1, A2> > {$/;"	s	namespace:testing::internal
MatcherTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^struct MatcherTuple< ::testing::tuple<A1> > {$/;"	s	namespace:testing::internal
MatcherVec	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::std::vector<Matcher<const Element&> > MatcherVec;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
Matches	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool Matches(T x) const {$/;"	f	class:testing::internal::MatcherBase
Matches	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool Matches(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::OnCallSpec
Matches	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Matches(const MatcherTuple& \/* matcher_tuple *\/,$/;"	f	class:testing::internal::TuplePrefix
Matches	ceres-solver/internal/ceres/gmock/gmock.h	/^  static bool Matches(const MatcherTuple& matcher_tuple,$/;"	f	class:testing::internal::TuplePrefix
Matches	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::MatcherAsPredicate<M> Matches(M matcher) {$/;"	f	namespace:testing
MatchesFilter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool UnitTestOptions::MatchesFilter($/;"	f	class:testing::internal::UnitTestOptions
MatchesRegex	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex($/;"	f	namespace:testing
MatchesRegexMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatchesRegexMatcher(const RE* regex, bool full_match)$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchesRegexMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class MatchesRegexMatcher {$/;"	c	namespace:testing::internal
MatchingResult	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  struct MatchingResult {$/;"	s	class:cartographer::mapping::LocalTrajectoryBuilder2D
MatchingResult	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  struct MatchingResult {$/;"	s	class:cartographer::mapping::LocalTrajectoryBuilder3D
Matrix	ceres-solver/examples/nist.cc	/^typedef Eigen::Matrix<double, Dynamic, Dynamic, RowMajor> Matrix;$/;"	t	namespace:ceres::examples	file:
Matrix	ceres-solver/include/ceres/internal/eigen.h	/^                      Eigen::RowMajor> Matrix;$/;"	t	namespace:ceres
Matrix	ceres-solver/include/ceres/internal/eigen.h	/^  Matrix;$/;"	t	struct:ceres::EigenTypes
Matrix2d	ceres-solver/internal/ceres/dogleg_strategy.h	/^  typedef Eigen::Matrix<double, 2, 2, Eigen::DontAlign> Matrix2d;$/;"	t	class:ceres::internal::DoglegStrategy
MatrixAdapter	ceres-solver/include/ceres/rotation.h	/^  explicit MatrixAdapter(T* pointer)$/;"	f	struct:ceres::MatrixAdapter
MatrixAdapter	ceres-solver/include/ceres/rotation.h	/^struct MatrixAdapter {$/;"	s	namespace:ceres
MatrixMatrixMultiply	ceres-solver/internal/ceres/cxsparse.cc	/^cs_di* CXSparse::MatrixMatrixMultiply(cs_di* A, cs_di* B) {$/;"	f	class:ceres::internal::CXSparse
MatrixParameterization	ceres-solver/internal/ceres/gradient_checker_test.cc	/^class MatrixParameterization : public LocalParameterization {$/;"	c	namespace:ceres::internal	file:
MatrixRef	ceres-solver/include/ceres/internal/eigen.h	/^  MatrixRef;$/;"	t	struct:ceres::EigenTypes
MatrixRef	ceres-solver/include/ceres/internal/eigen.h	/^typedef Eigen::Map<Matrix> MatrixRef;$/;"	t	namespace:ceres
MatrixTransposeMatrixMultiply	ceres-solver/internal/ceres/inner_product_computer.cc	/^EIGEN_STRONG_INLINE void MatrixTransposeMatrixMultiply(const int ab_rows,$/;"	f	namespace:ceres::internal::__anon180
MatrixTransposeVectorMultiply	ceres-solver/internal/ceres/small_blas.h	/^inline void MatrixTransposeVectorMultiply(const double* A,$/;"	f	namespace:ceres::internal
MatrixVectorMultiply	ceres-solver/internal/ceres/small_blas.h	/^inline void MatrixVectorMultiply(const double* A,$/;"	f	namespace:ceres::internal
Max	ceres-solver/internal/ceres/gtest/gtest.h	/^inline double FloatingPoint<double>::Max() { return DBL_MAX; }$/;"	f	class:testing::internal::FloatingPoint
Max	ceres-solver/internal/ceres/gtest/gtest.h	/^inline float FloatingPoint<float>::Max() { return FLT_MAX; }$/;"	f	class:testing::internal::FloatingPoint
MaxBipartiteMatchState	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit MaxBipartiteMatchState(const MatchMatrix& graph)$/;"	f	class:testing::internal::MaxBipartiteMatchState
MaxBipartiteMatchState	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class MaxBipartiteMatchState {$/;"	c	namespace:testing::internal	file:
MaxDerivativesPerResidualBlock	ceres-solver/internal/ceres/program.cc	/^int Program::MaxDerivativesPerResidualBlock() const {$/;"	f	class:ceres::internal::Program
MaxImage	ceres-solver/examples/libmv_bundle_adjuster.cc	/^int MaxImage(const vector<Marker> &all_markers) {$/;"	f	namespace:__anon155
MaxParametersPerResidualBlock	ceres-solver/internal/ceres/program.cc	/^int Program::MaxParametersPerResidualBlock() const {$/;"	f	class:ceres::internal::Program
MaxResidualsPerResidualBlock	ceres-solver/internal/ceres/program.cc	/^int Program::MaxResidualsPerResidualBlock() const {$/;"	f	class:ceres::internal::Program
MaxScratchDoublesNeededForEvaluate	ceres-solver/internal/ceres/program.cc	/^int Program::MaxScratchDoublesNeededForEvaluate() const {$/;"	f	class:ceres::internal::Program
MaxSolverIterationsReached	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::MaxSolverIterationsReached() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
MaxSolverTimeReached	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::MaxSolverTimeReached() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
MaybeAddConstraint	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::MaybeAddConstraint($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
MaybeAddConstraint	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::MaybeAddConstraint($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
MaybeAddGlobalConstraint	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::MaybeAddGlobalConstraint($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
MaybeAddGlobalConstraint	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::MaybeAddGlobalConstraint($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
MaybeDescribeExtraMatcherTo	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void MaybeDescribeExtraMatcherTo(::std::ostream* os) {$/;"	f	class:testing::internal::TypedExpectation
MaybeFetchTexture	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^bool DrawableSubmap::MaybeFetchTexture(ros::ServiceClient* const client) {$/;"	f	class:cartographer_rviz::DrawableSubmap
MaybeReorderSchurComplementColumnsUsingEigen	ceres-solver/internal/ceres/reorder_program.cc	/^void MaybeReorderSchurComplementColumnsUsingEigen($/;"	f	namespace:ceres::internal
MaybeReorderSchurComplementColumnsUsingSuiteSparse	ceres-solver/internal/ceres/reorder_program.cc	/^void MaybeReorderSchurComplementColumnsUsingSuiteSparse($/;"	f	namespace:ceres::internal
MeanAndStdDevString	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^std::string MeanAndStdDevString(const std::vector<double>& values) {$/;"	f	namespace:cartographer::ground_truth::__anon49
Median	cartographer/cartographer/mapping/detect_floors.cc	/^double Median(const std::vector<double>& sorted) {$/;"	f	namespace:cartographer::mapping::__anon62
Median	ceres-solver/examples/bal_problem.cc	/^double Median(std::vector<double>* data) {$/;"	f	namespace:ceres::examples::__anon154
Message	cartographer/scripts/update_configuration_doc.py	/^class Message(object):$/;"	c
Message	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Message::Message() : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	ceres-solver/internal/ceres/gtest/gtest.h	/^  Message(const Message& msg) : ss_(new ::std::stringstream) {  \/\/ NOLINT$/;"	f	class:testing::Message
Message	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit Message(const char* str) : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ Message {$/;"	c	namespace:testing
MessageInfo	ceres-solver/internal/ceres/gmock/mock-log.h	/^  struct MessageInfo {$/;"	s	class:testing::ScopedMockLog
MessageLogger	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  MessageLogger(const char *file, int line, const char *tag, int severity)$/;"	f	class:MessageLogger
MessageLogger	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^class CERES_EXPORT MessageLogger {$/;"	c
Metric	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Metric {$/;"	s	namespace:ceres::internal	file:
MigrateStreamFormatToVersion1	cartographer/cartographer/io/serialization_format_migration.cc	/^void MigrateStreamFormatToVersion1($/;"	f	namespace:cartographer::io
MigrationTest	cartographer/cartographer/io/serialization_format_migration_test.cc	/^class MigrationTest : public ::testing::Test {$/;"	c	namespace:cartographer::io::__anon18	file:
MinMaxRangeFiteringPointsProcessor	cartographer/cartographer/io/min_max_range_filtering_points_processor.cc	/^MinMaxRangeFiteringPointsProcessor::MinMaxRangeFiteringPointsProcessor($/;"	f	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
MinMaxRangeFiteringPointsProcessor	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^class MinMaxRangeFiteringPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
MinNonZeroGroup	ceres-solver/include/ceres/ordered_groups.h	/^  int MinNonZeroGroup() const {$/;"	f	class:ceres::OrderedGroups
MinParameterBlock	ceres-solver/internal/ceres/reorder_program.cc	/^static int MinParameterBlock(const ResidualBlock* residual_block,$/;"	f	namespace:ceres::internal::__anon185
MinTrustRegionRadiusReached	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::MinTrustRegionRadiusReached() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
Minimize	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^void CoordinateDescentMinimizer::Minimize($/;"	f	class:ceres::internal::CoordinateDescentMinimizer
Minimize	ceres-solver/internal/ceres/line_search_minimizer.cc	/^void LineSearchMinimizer::Minimize(const Minimizer::Options& options,$/;"	f	class:ceres::internal::LineSearchMinimizer
Minimize	ceres-solver/internal/ceres/solver.cc	/^void Minimize(internal::PreprocessedProblem* pp,$/;"	f	namespace:ceres::__anon190
Minimize	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^void TrustRegionMinimizer::Minimize(const Minimizer::Options& options,$/;"	f	class:ceres::internal::TrustRegionMinimizer
MinimizeInterpolatingPolynomial	ceres-solver/internal/ceres/polynomial.cc	/^void MinimizeInterpolatingPolynomial(const vector<FunctionSample>& samples,$/;"	f	namespace:ceres::internal
MinimizePolynomial	ceres-solver/internal/ceres/polynomial.cc	/^void MinimizePolynomial(const Vector& polynomial,$/;"	f	namespace:ceres::internal
Minimizer	ceres-solver/internal/ceres/minimizer.h	/^class Minimizer {$/;"	c	namespace:ceres::internal
MinimizerType	ceres-solver/include/ceres/types.h	/^enum MinimizerType {$/;"	g	namespace:ceres
MinimizerTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* MinimizerTypeToString(MinimizerType type) {$/;"	f	namespace:ceres
Mix	cartographer/cartographer/io/xray_points_processor.cc	/^float Mix(const float a, const float b, const float t) {$/;"	f	namespace:cartographer::io::__anon25
Mock	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Mock {$/;"	c	namespace:testing
MockCallback	cartographer/cartographer/common/task_test.cc	/^class MockCallback {$/;"	c	namespace:cartographer::common::__anon10	file:
MockCallback	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^class MockCallback {$/;"	c	namespace:cartographer::mapping::constraints::__anon71	file:
MockCallback	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^class MockCallback {$/;"	c	namespace:cartographer::mapping::constraints::__anon72	file:
MockCostFunctionBase	ceres-solver/internal/ceres/program_test.cc	/^class MockCostFunctionBase : public$/;"	c	namespace:ceres::internal	file:
MockCostFunctionBase	ceres-solver/internal/ceres/reorder_program_test.cc	/^class MockCostFunctionBase : public$/;"	c	namespace:ceres::internal	file:
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockFunction() {}$/;"	f	class:testing::MockFunction
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R()> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7, A8)> {$/;"	c	namespace:testing
MockFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockFunction<R(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)> {$/;"	c	namespace:testing
MockLocalTrajectoryUploader	cartographer/cartographer/cloud/internal/testing/mock_local_trajectory_uploader.h	/^class MockLocalTrajectoryUploader : public LocalTrajectoryUploaderInterface {$/;"	c	namespace:cartographer::cloud::testing
MockMapBuilder	cartographer/cartographer/mapping/internal/testing/mock_map_builder.h	/^class MockMapBuilder : public mapping::MapBuilderInterface {$/;"	c	namespace:cartographer::mapping::testing
MockMapBuilderContext	cartographer/cartographer/cloud/internal/testing/mock_map_builder_context.h	/^class MockMapBuilderContext : public MapBuilderContextInterface {$/;"	c	namespace:cartographer::cloud::testing
MockObjectRegistry	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class MockObjectRegistry {$/;"	c	namespace:testing::__anon176	file:
MockObjectState	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  MockObjectState()$/;"	f	struct:testing::__anon176::MockObjectState
MockObjectState	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^struct MockObjectState {$/;"	s	namespace:testing::__anon176	file:
MockOptimizationProblem3D	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  MockOptimizationProblem3D()$/;"	f	class:cartographer::mapping::__anon105::MockOptimizationProblem3D
MockOptimizationProblem3D	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^class MockOptimizationProblem3D : public OptimizationProblem3D {$/;"	c	namespace:cartographer::mapping::__anon105	file:
MockPoseGraph	cartographer/cartographer/mapping/internal/testing/mock_pose_graph.h	/^class MockPoseGraph : public mapping::PoseGraphInterface {$/;"	c	namespace:cartographer::mapping::testing
MockSpec	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit MockSpec(internal::FunctionMockerBase<F>* function_mocker)$/;"	f	class:testing::internal::MockSpec
MockSpec	ceres-solver/internal/ceres/gmock/gmock.h	/^class MockSpec {$/;"	c	namespace:testing::internal
MockTrajectoryBuilder	cartographer/cartographer/mapping/internal/testing/mock_trajectory_builder.h	/^class MockTrajectoryBuilder : public mapping::TrajectoryBuilderInterface {$/;"	c	namespace:cartographer::mapping::testing
ModuloNumSegments	ceres-solver/examples/ellipse_approximation.cc	/^  inline double ModuloNumSegments(const double t) const {$/;"	f	class:PointToLineSegmentContourCostFunction	file:
ModuloNumSegments	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  inline double ModuloNumSegments(const double t) const {$/;"	f	class:ceres::internal::PointToLineSegmentContourCostFunction	file:
MonomorphicImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicAction::MonomorphicImpl
MonomorphicImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
MonomorphicImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class MonomorphicImpl : public ActionInterface<F> {$/;"	c	class:testing::PolymorphicAction
MonomorphicImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  class MonomorphicImpl : public MatcherInterface<T> {$/;"	c	class:testing::PolymorphicMatcher
MonomorphicInnerMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Matcher<const SelectedArgs&> MonomorphicInnerMatcher;$/;"	t	class:testing::internal::ArgsMatcherImpl
MotionFilter	cartographer/cartographer/mapping/internal/motion_filter.cc	/^MotionFilter::MotionFilter(const proto::MotionFilterOptions& options)$/;"	f	class:cartographer::mapping::MotionFilter
MotionFilter	cartographer/cartographer/mapping/internal/motion_filter.h	/^class MotionFilter {$/;"	c	namespace:cartographer::mapping
MotionFilterTest	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^  MotionFilterTest() {$/;"	f	class:cartographer::mapping::__anon73::MotionFilterTest
MotionFilterTest	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^class MotionFilterTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon73	file:
MoveRelative	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  void MoveRelative(const transform::Rigid2d& movement) {$/;"	f	class:cartographer::mapping::__anon75::PoseGraph2DTest
MoveRelativeWithNoise	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  void MoveRelativeWithNoise(const transform::Rigid2d& movement,$/;"	f	class:cartographer::mapping::__anon75::PoseGraph2DTest
MoveToCollator	cartographer/cartographer/sensor/internal/test_helpers.h	/^  void MoveToCollator(CollatorInterface* collator) {$/;"	f	struct:cartographer::sensor::test::CollatorInput
MulCost	ceres-solver/include/ceres/jet.h	/^    MulCost = 3,$/;"	e	enum:Eigen::NumTraits::__anon150
MultiplyByJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool IdentityParameterization::MultiplyByJacobian(const double* x,$/;"	f	class:ceres::IdentityParameterization
MultiplyByJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool LocalParameterization::MultiplyByJacobian(const double* x,$/;"	f	class:ceres::LocalParameterization
MultiplyByJacobian	ceres-solver/internal/ceres/local_parameterization.cc	/^bool SubsetParameterization::MultiplyByJacobian(const double* x,$/;"	f	class:ceres::SubsetParameterization
MutablePixel	ceres-solver/examples/pgm_image.h	/^Real* PGMImage<Real>::MutablePixel(int x, int y) {$/;"	f	class:ceres::examples::PGMImage
MutablePixelFromLinearIndex	ceres-solver/examples/pgm_image.h	/^Real* PGMImage<Real>::MutablePixelFromLinearIndex(int index) {$/;"	f	class:ceres::examples::PGMImage
Mutex	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Mutex::Mutex()$/;"	f	class:testing::internal::Mutex
Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^  Mutex() {$/;"	f	class:std::tr1::Mutex
Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^  Mutex() {}$/;"	f	class:std::tr1::Mutex
Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit Mutex(StaticConstructorSelector \/*dummy*\/) {}$/;"	f	class:std::tr1::Mutex
Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ Mutex {$/;"	c	namespace:std::tr1
Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^class Mutex : public MutexBase {$/;"	c	namespace:std::tr1
Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^class Mutex {$/;"	c	namespace:std::tr1
Mutex	ceres-solver/internal/ceres/mutex.h	/^  Mutex(Mutex* \/*ignored*\/) {}$/;"	f	class:ceres::internal::Mutex
Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::Mutex()             { InitializeCriticalSection(&mutex_); SetIsSafe(); }$/;"	f	class:ceres::internal::Mutex
Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::Mutex()             {$/;"	f	class:ceres::internal::Mutex
Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::Mutex() : mutex_(0) { }$/;"	f	class:ceres::internal::Mutex
Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::Mutex() {$/;"	f	class:ceres::internal::Mutex
Mutex	ceres-solver/internal/ceres/mutex.h	/^class Mutex {$/;"	c	namespace:ceres::internal
MutexBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class MutexBase {$/;"	c	namespace:std::tr1
MutexLock	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef GTestMutexLock MutexLock;$/;"	t	namespace:std::tr1
MutexType	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	g	class:std::tr1::Mutex
MutexType	ceres-solver/internal/ceres/mutex.h	/^  typedef CRITICAL_SECTION MutexType;$/;"	t
MutexType	ceres-solver/internal/ceres/mutex.h	/^  typedef int MutexType;      \/\/ to keep a lock-count$/;"	t
MutexType	ceres-solver/internal/ceres/mutex.h	/^  typedef pthread_mutex_t MutexType;$/;"	t
MutexType	ceres-solver/internal/ceres/mutex.h	/^  typedef pthread_rwlock_t MutexType;$/;"	t
MyCostFunctor	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^class MyCostFunctor {$/;"	c	namespace:ceres::internal	file:
MyCostFunctor	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^class MyCostFunctor {$/;"	c	namespace:ceres::internal	file:
MySixParameterCostFunctor	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^class MySixParameterCostFunctor {$/;"	c	namespace:ceres::internal	file:
MyThreeParameterCostFunctor	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^class MyThreeParameterCostFunctor {$/;"	c	namespace:ceres::internal	file:
MyThreeParameterCostFunctor	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^class MyThreeParameterCostFunctor {$/;"	c	namespace:ceres::internal	file:
N	ceres-solver/scripts/make_docs.py	/^N = len(sys.argv)$/;"	v
NATURAL	ceres-solver/internal/ceres/linear_solver.h	/^  NATURAL, \/\/ Do not re-order the matrix. This is useful when the$/;"	e	enum:ceres::internal::OrderingType
NEW	cartographer/cartographer/common/task.h	/^  enum State { NEW, DISPATCHED, DEPENDENCIES_COMPLETED, RUNNING, COMPLETED };$/;"	e	enum:cartographer::common::Task::State
NISTProblem	ceres-solver/examples/nist.cc	/^  explicit NISTProblem(const string& filename) {$/;"	f	class:ceres::examples::NISTProblem
NISTProblem	ceres-solver/examples/nist.cc	/^class NISTProblem {$/;"	c	namespace:ceres::examples	file:
NIST_BEGIN	ceres-solver/examples/nist.cc	268;"	d	file:
NIST_END	ceres-solver/examples/nist.cc	281;"	d	file:
NODOC	cartographer/scripts/update_configuration_doc.py	/^NODOC = 'Not yet documented.'$/;"	v
NOGDI	ceres-solver/internal/ceres/mutex.h	115;"	d
NOMINMAX	ceres-solver/internal/ceres/mutex.h	118;"	d
NONLINEAR_CONJUGATE_GRADIENT	ceres-solver/include/ceres/types.h	/^  NONLINEAR_CONJUGATE_GRADIENT,$/;"	e	enum:ceres::LineSearchDirectionType
NO_CONVERGENCE	ceres-solver/include/ceres/types.h	/^  NO_CONVERGENCE,$/;"	e	enum:ceres::TerminationType
NO_SPARSE	ceres-solver/include/ceres/types.h	/^  NO_SPARSE$/;"	e	enum:ceres::SparseLinearAlgebraLibraryType
NO_THREAD_SAFETY_ANALYSIS	cartographer/cartographer/common/mutex.h	55;"	d
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NaggyMock() {$/;"	f	class:testing::NaggyMock
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::NaggyMock
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::NaggyMock
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::NaggyMock
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NaggyMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::NaggyMock
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit NaggyMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::NaggyMock
NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^class NaggyMock : public MockClass {$/;"	c	namespace:testing
NanSensitiveDoubleEq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> NanSensitiveDoubleEq(double rhs) {$/;"	f	namespace:testing
NanSensitiveDoubleNear	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<double> NanSensitiveDoubleNear($/;"	f	namespace:testing
NanSensitiveFloatEq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> NanSensitiveFloatEq(float rhs) {$/;"	f	namespace:testing
NanSensitiveFloatNear	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::FloatingEqMatcher<float> NanSensitiveFloatNear($/;"	f	namespace:testing
NativeArray	ceres-solver/internal/ceres/gtest/gtest.h	/^  NativeArray(const Element* array, size_t count, RelationToSourceCopy) {$/;"	f	class:testing::internal::NativeArray
NativeArray	ceres-solver/internal/ceres/gtest/gtest.h	/^  NativeArray(const Element* array, size_t count, RelationToSourceReference) {$/;"	f	class:testing::internal::NativeArray
NativeArray	ceres-solver/internal/ceres/gtest/gtest.h	/^  NativeArray(const NativeArray& rhs) {$/;"	f	class:testing::internal::NativeArray
NativeArray	ceres-solver/internal/ceres/gtest/gtest.h	/^class NativeArray {$/;"	c	namespace:testing::internal
Ne	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::Ne2Matcher Ne() { return internal::Ne2Matcher(); }$/;"	f	namespace:testing
Ne	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::NeMatcher<Rhs> Ne(Rhs x) {$/;"	f	namespace:testing
Ne2Matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class Ne2Matcher : public PairMatchBase<Ne2Matcher, AnyNe> {$/;"	c	namespace:testing::internal
NeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit NeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::NeMatcher
NeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class NeMatcher : public ComparisonBase<NeMatcher<Rhs>, Rhs, AnyNe> {$/;"	c	namespace:testing::internal
Near	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^::testing::Matcher<double> Near(double expected, double precision = 1e-05) {$/;"	f	namespace:cartographer::mapping::optimization::__anon91
NegatedDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* NegatedDesc() { return "is equal to"; }$/;"	f	class:testing::internal::NeMatcher
NegatedDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* NegatedDesc() { return "isn't <"; }$/;"	f	class:testing::internal::LtMatcher
NegatedDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* NegatedDesc() { return "isn't <="; }$/;"	f	class:testing::internal::LeMatcher
NegatedDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* NegatedDesc() { return "isn't >"; }$/;"	f	class:testing::internal::GtMatcher
NegatedDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* NegatedDesc() { return "isn't >="; }$/;"	f	class:testing::internal::GeMatcher
NegatedDesc	ceres-solver/internal/ceres/gmock/gmock.h	/^  static const char* NegatedDesc() { return "isn't equal to"; }$/;"	f	class:testing::internal::EqMatcher
Neighbors	ceres-solver/internal/ceres/graph.h	/^  const HashSet<Vertex>& Neighbors(const Vertex& vertex) const {$/;"	f	class:ceres::internal::Graph
Neighbors	ceres-solver/internal/ceres/graph.h	/^  const HashSet<Vertex>& Neighbors(const Vertex& vertex) const {$/;"	f	class:ceres::internal::WeightedGraph
Nelson	ceres-solver/examples/nist.cc	/^  Nelson(const double* const x, const double* const y)$/;"	f	struct:ceres::examples::Nelson
Nelson	ceres-solver/examples/nist.cc	/^struct Nelson {$/;"	s	namespace:ceres::examples	file:
Nested	ceres-solver/include/ceres/jet.h	/^  typedef ceres::Jet<T, N> Nested;$/;"	t	struct:Eigen::NumTraits
NewCostFunction	ceres-solver/examples/fields_of_experts.cc	/^ceres::CostFunction* FieldsOfExperts::NewCostFunction(int alpha_index) const {$/;"	f	class:ceres::examples::FieldsOfExperts
NewCounterFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^FamilyFactory::NewCounterFamily(const std::string& name,$/;"	f	class:cartographer::cloud::metrics::prometheus::FamilyFactory
NewGaugeFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^FamilyFactory::NewGaugeFamily(const std::string& name,$/;"	f	class:cartographer::cloud::metrics::prometheus::FamilyFactory
NewHistogramFamily	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^FamilyFactory::NewHistogramFamily(const std::string& name,$/;"	f	class:cartographer::cloud::metrics::prometheus::FamilyFactory
NewLossFunction	ceres-solver/examples/fields_of_experts.cc	/^ceres::LossFunction* FieldsOfExperts::NewLossFunction(int alpha_index) const {$/;"	f	class:ceres::examples::FieldsOfExperts
NewValueForCurrentThread	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ThreadLocalValueHolderBase* NewValueForCurrentThread() const {$/;"	f	class:std::tr1::ThreadLocal
Next	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    void Next() {$/;"	f	class:cartographer::mapping::FlatGrid::Iterator
NextDirection	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool NextDirection(const LineSearchMinimizer::State& previous,$/;"	f	class:ceres::internal::BFGS
NextDirection	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool NextDirection(const LineSearchMinimizer::State& previous,$/;"	f	class:ceres::internal::LBFGS
NextDirection	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool NextDirection(const LineSearchMinimizer::State& previous,$/;"	f	class:ceres::internal::NonlinearConjugateGradient
NextDirection	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool NextDirection(const LineSearchMinimizer::State& previous,$/;"	f	class:ceres::internal::SteepestDescent
NextGraph	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool MatchMatrix::NextGraph() {$/;"	f	class:testing::internal::MatchMatrix
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NiceMock() {$/;"	f	class:testing::NiceMock
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::NiceMock
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::NiceMock
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::NiceMock
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  NiceMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::NiceMock
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit NiceMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::NiceMock
NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^class NiceMock : public MockClass {$/;"	c	namespace:testing
NineParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct NineParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
NoEBlockRowOuterProduct	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^NoEBlockRowOuterProduct(const BlockSparseMatrix* A,$/;"	f	class:ceres::internal::SchurEliminator
NoEBlockRowsUpdate	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^NoEBlockRowsUpdate(const BlockSparseMatrix* A,$/;"	f	class:ceres::internal::SchurEliminator
NoExecDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  NoExecDeathTest(const char* a_statement, const RE* a_regex) :$/;"	f	class:testing::internal::NoExecDeathTest
NoExecDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class NoExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
NoJacobianUpdateCostFunction	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^class NoJacobianUpdateCostFunction: public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
NoResidualUpdateCostFunction	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^class NoResidualUpdateCostFunction: public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
Node	cartographer/cartographer/common/lockless_queue.h	/^    Node(const Node& node) : next() {}$/;"	f	struct:cartographer::common::LocklessQueue::Node
Node	cartographer/cartographer/common/lockless_queue.h	/^  struct Node {$/;"	s	class:cartographer::common::LocklessQueue
Node	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^Node::Node($/;"	f	class:cartographer_ros::Node
Node	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^class Node {$/;"	c	namespace:cartographer_ros
Node	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^Node::Node(const double resolution, const double publish_period_sec)$/;"	f	class:cartographer_ros::__anon135::Node
Node	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^class Node {$/;"	c	namespace:cartographer_ros::__anon135	file:
NodeData	cartographer/cartographer/sensor/map_by_time_test.cc	/^struct NodeData {$/;"	s	namespace:cartographer::sensor::__anon118	file:
NodeId	cartographer/cartographer/mapping/id.h	/^struct NodeId {$/;"	s	namespace:cartographer::mapping
NodeOptions	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^struct NodeOptions {$/;"	s	namespace:cartographer_ros
NodeSpec2D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^struct NodeSpec2D {$/;"	s	namespace:cartographer::mapping::optimization
NodeSpec3D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^struct NodeSpec3D {$/;"	s	namespace:cartographer::mapping::optimization
NonInteger	ceres-solver/include/ceres/jet.h	/^  typedef ceres::Jet<T, N> NonInteger;$/;"	t	struct:Eigen::NumTraits
NonReferenceCounted	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^LuaParameterDictionary::NonReferenceCounted($/;"	f	class:cartographer::common::LuaParameterDictionary
None	ceres-solver/internal/ceres/gtest/gtest.h	/^struct None {};$/;"	s	namespace:testing::internal
NoneT	ceres-solver/internal/ceres/gtest/gtest.h	/^struct NoneT {};$/;"	s	namespace:testing::internal
NonlinearConjugateGradient	ceres-solver/internal/ceres/line_search_direction.cc	/^  NonlinearConjugateGradient(const NonlinearConjugateGradientType type,$/;"	f	class:ceres::internal::NonlinearConjugateGradient
NonlinearConjugateGradient	ceres-solver/internal/ceres/line_search_direction.cc	/^class NonlinearConjugateGradient : public LineSearchDirection {$/;"	c	namespace:ceres::internal	file:
NonlinearConjugateGradientType	ceres-solver/include/ceres/types.h	/^enum NonlinearConjugateGradientType {$/;"	g	namespace:ceres
NonlinearConjugateGradientTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* NonlinearConjugateGradientTypeToString($/;"	f	namespace:ceres
NormalPrior	ceres-solver/include/ceres/normal_prior.h	/^class CERES_EXPORT NormalPrior: public CostFunction {$/;"	c	namespace:ceres
NormalPrior	ceres-solver/internal/ceres/normal_prior.cc	/^NormalPrior::NormalPrior(const Matrix& A, const Vector& b)$/;"	f	class:ceres::NormalPrior
Normalize	ceres-solver/examples/bal_problem.cc	/^void BALProblem::Normalize() {$/;"	f	class:ceres::examples::BALProblem
Normalize	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void FilePath::Normalize() {$/;"	f	class:testing::internal::FilePath
Normalize	ceres-solver/internal/ceres/local_parameterization_test.cc	/^void Normalize(double* x) {$/;"	f	namespace:ceres::internal
NormalizeAngle	ceres-solver/examples/slam/pose_graph_2d/normalize_angle.h	/^inline T NormalizeAngle(const T& angle_radians) {$/;"	f	namespace:ceres::examples
NormalizeAngleDifference	cartographer/cartographer/common/math.h	/^T NormalizeAngleDifference(T difference) {$/;"	f	namespace:cartographer::common
Not	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::NotMatcher<InnerMatcher> Not(InnerMatcher m) {$/;"	f	namespace:testing
NotMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit NotMatcher(InnerMatcher matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::NotMatcher
NotMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class NotMatcher {$/;"	c	namespace:testing::internal
NotMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit NotMatcherImpl(const Matcher<T>& matcher)$/;"	f	class:testing::internal::NotMatcherImpl
NotMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class NotMatcherImpl : public MatcherInterface<T> {$/;"	c	namespace:testing::internal
NotNull	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicMatcher<internal::NotNullMatcher > NotNull() {$/;"	f	namespace:testing
NotNullMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class NotNullMatcher {$/;"	c	namespace:testing::internal
Notification	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Notification::Notification()$/;"	f	class:testing::internal::Notification
Notification	ceres-solver/internal/ceres/gtest/gtest.h	/^  Notification() : notified_(false) {$/;"	f	class:std::tr1::Notification
Notification	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ Notification {$/;"	c	namespace:std::tr1
Notification	ceres-solver/internal/ceres/gtest/gtest.h	/^class Notification {$/;"	c	namespace:std::tr1
Notify	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Notification::Notify() {$/;"	f	class:testing::internal::Notification
Notify	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Notify() {$/;"	f	class:std::tr1::Notification
NotifyDependenciesCompleted	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^void ThreadPoolForTesting::NotifyDependenciesCompleted(Task* task) {$/;"	f	class:cartographer::common::testing::ThreadPoolForTesting
NotifyDependenciesCompleted	cartographer/cartographer/common/thread_pool.cc	/^void ThreadPool::NotifyDependenciesCompleted(Task* task) {$/;"	f	class:cartographer::common::ThreadPool
NotifyEndOfNode	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::NotifyEndOfNode() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
NotifyEndOfNode	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::NotifyEndOfNode() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
NotifyFinishTrajectory	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^void MapBuilderContext<SubmapType>::NotifyFinishTrajectory(int trajectory_id) {$/;"	f	class:cartographer::cloud::MapBuilderContext
NotifyFinishTrajectory	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::NotifyFinishTrajectory(int trajectory_id) {$/;"	f	class:cartographer::cloud::MapBuilderServer
Null	cartographer/cartographer/metrics/counter.cc	/^Counter* Counter::Null() {$/;"	f	class:cartographer::metrics::Counter
Null	cartographer/cartographer/metrics/gauge.cc	/^Gauge* Gauge::Null() {$/;"	f	class:cartographer::metrics::Gauge
Null	cartographer/cartographer/metrics/histogram.cc	/^Histogram* Histogram::Null() {$/;"	f	class:cartographer::metrics::Histogram
NullCounter	cartographer/cartographer/metrics/counter.cc	/^class NullCounter : public Counter {$/;"	c	namespace:cartographer::metrics::__anon31	file:
NullGauge	cartographer/cartographer/metrics/gauge.cc	/^class NullGauge : public Gauge {$/;"	c	namespace:cartographer::metrics::__anon30	file:
NullHistogram	cartographer/cartographer/metrics/histogram.cc	/^class NullHistogram : public Histogram {$/;"	c	namespace:cartographer::metrics::__anon32	file:
NullJacobianFinalizer	ceres-solver/internal/ceres/program_evaluator.h	/^struct NullJacobianFinalizer {$/;"	s	namespace:ceres::internal
NullPointsProcessor	cartographer/cartographer/io/null_points_processor.h	/^  NullPointsProcessor() {}$/;"	f	class:cartographer::io::NullPointsProcessor
NullPointsProcessor	cartographer/cartographer/io/null_points_processor.h	/^class NullPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
NumCols	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^    int NumCols() const {$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D::GridArrayAdapter
NumEffectiveParameters	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual int NumEffectiveParameters()  const {$/;"	f	class:ceres::internal::GradientProblemEvaluator
NumEffectiveParameters	ceres-solver/internal/ceres/program.cc	/^int Program::NumEffectiveParameters() const {$/;"	f	class:ceres::internal::Program
NumEffectiveParameters	ceres-solver/internal/ceres/program_evaluator.h	/^  int NumEffectiveParameters() const {$/;"	f	class:ceres::internal::ProgramEvaluator
NumEffectiveParameters	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual int NumEffectiveParameters() const { return num_active_cols_; }$/;"	f	class:ceres::internal::PowellEvaluator2
NumElements	ceres-solver/include/ceres/ordered_groups.h	/^  int NumElements() const {$/;"	f	class:ceres::OrderedGroups
NumFilters	ceres-solver/examples/fields_of_experts.h	/^  int NumFilters() const {$/;"	f	class:ceres::examples::FieldsOfExperts
NumGroups	ceres-solver/include/ceres/ordered_groups.h	/^  int NumGroups() const {$/;"	f	class:ceres::OrderedGroups
NumLocalParameters	ceres-solver/internal/ceres/gradient_problem.cc	/^int GradientProblem::NumLocalParameters() const {$/;"	f	class:ceres::GradientProblem
NumParameterBlocks	ceres-solver/internal/ceres/problem.cc	/^int Problem::NumParameterBlocks() const {$/;"	f	class:ceres::Problem
NumParameterBlocks	ceres-solver/internal/ceres/problem_impl.cc	/^int ProblemImpl::NumParameterBlocks() const {$/;"	f	class:ceres::internal::ProblemImpl
NumParameterBlocks	ceres-solver/internal/ceres/program.cc	/^int Program::NumParameterBlocks() const {$/;"	f	class:ceres::internal::Program
NumParameterBlocks	ceres-solver/internal/ceres/residual_block.h	/^  int NumParameterBlocks() const {$/;"	f	class:ceres::internal::ResidualBlock
NumParameterBlocksCostFunction	ceres-solver/internal/ceres/program_test.cc	/^  NumParameterBlocksCostFunction() {$/;"	f	class:ceres::internal::NumParameterBlocksCostFunction
NumParameterBlocksCostFunction	ceres-solver/internal/ceres/program_test.cc	/^class NumParameterBlocksCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
NumParameters	ceres-solver/examples/rosenbrock.cc	/^  virtual int NumParameters() const { return 2; }$/;"	f	class:Rosenbrock
NumParameters	ceres-solver/internal/ceres/gradient_problem.cc	/^int GradientProblem::NumParameters() const {$/;"	f	class:ceres::GradientProblem
NumParameters	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual int NumParameters() const {$/;"	f	class:ceres::internal::GradientProblemEvaluator
NumParameters	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^  virtual int NumParameters() const { return 2; }$/;"	f	class:ceres::internal::Rosenbrock
NumParameters	ceres-solver/internal/ceres/gradient_problem_test.cc	/^  virtual int NumParameters() const { return 1; }$/;"	f	class:ceres::internal::QuadraticTestFunction
NumParameters	ceres-solver/internal/ceres/line_search_minimizer_test.cc	/^  virtual int NumParameters() const { return 1; }$/;"	f	class:ceres::internal::QuadraticFirstOrderFunction
NumParameters	ceres-solver/internal/ceres/problem.cc	/^int Problem::NumParameters() const {$/;"	f	class:ceres::Problem
NumParameters	ceres-solver/internal/ceres/problem_impl.cc	/^int ProblemImpl::NumParameters() const {$/;"	f	class:ceres::internal::ProblemImpl
NumParameters	ceres-solver/internal/ceres/program.cc	/^int Program::NumParameters() const {$/;"	f	class:ceres::internal::Program
NumParameters	ceres-solver/internal/ceres/program_evaluator.h	/^  int NumParameters() const {$/;"	f	class:ceres::internal::ProgramEvaluator
NumParameters	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual int NumParameters()          const { return 4; }$/;"	f	class:ceres::internal::PowellEvaluator2
NumPixels	ceres-solver/examples/pgm_image.h	/^int PGMImage<Real>::NumPixels() const {$/;"	f	class:ceres::examples::PGMImage
NumResidualBlocks	ceres-solver/internal/ceres/problem.cc	/^int Problem::NumResidualBlocks() const {$/;"	f	class:ceres::Problem
NumResidualBlocks	ceres-solver/internal/ceres/problem_impl.cc	/^int ProblemImpl::NumResidualBlocks() const {$/;"	f	class:ceres::internal::ProblemImpl
NumResidualBlocks	ceres-solver/internal/ceres/problem_test.cc	/^  int NumResidualBlocks() {$/;"	f	struct:ceres::internal::DynamicProblem
NumResidualBlocks	ceres-solver/internal/ceres/program.cc	/^int Program::NumResidualBlocks() const {$/;"	f	class:ceres::internal::Program
NumResiduals	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual int NumResiduals() const { return 1; }$/;"	f	class:ceres::internal::GradientProblemEvaluator
NumResiduals	ceres-solver/internal/ceres/problem.cc	/^int Problem::NumResiduals() const {$/;"	f	class:ceres::Problem
NumResiduals	ceres-solver/internal/ceres/problem_impl.cc	/^int ProblemImpl::NumResiduals() const {$/;"	f	class:ceres::internal::ProblemImpl
NumResiduals	ceres-solver/internal/ceres/program.cc	/^int Program::NumResiduals() const {$/;"	f	class:ceres::internal::Program
NumResiduals	ceres-solver/internal/ceres/program_evaluator.h	/^  int NumResiduals() const {$/;"	f	class:ceres::internal::ProgramEvaluator
NumResiduals	ceres-solver/internal/ceres/residual_block.h	/^  int NumResiduals() const { return cost_function_->num_residuals(); }$/;"	f	class:ceres::internal::ResidualBlock
NumResiduals	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual int NumResiduals()           const { return 4; }$/;"	f	class:ceres::internal::PowellEvaluator2
NumRows	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^    int NumRows() const {$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D::GridArrayAdapter
NumScratchDoublesForEvaluate	ceres-solver/internal/ceres/residual_block.cc	/^int ResidualBlock::NumScratchDoublesForEvaluate() const {$/;"	f	class:ceres::internal::ResidualBlock
NumTraits	ceres-solver/include/ceres/jet.h	/^struct NumTraits<ceres::Jet<T, N> > {$/;"	s	namespace:Eigen
NumVariables	ceres-solver/examples/fields_of_experts.h	/^  int NumVariables() const {$/;"	f	class:ceres::examples::FieldsOfExperts
NumericDiff	ceres-solver/include/ceres/internal/numeric_diff.h	/^struct NumericDiff {$/;"	s	namespace:ceres::internal
NumericDiff	ceres-solver/include/ceres/internal/numeric_diff.h	/^struct NumericDiff<CostFunctor, kMethod, kNumResiduals,$/;"	s	namespace:ceres::internal
NumericDiffCostFunction	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^  NumericDiffCostFunction($/;"	f	class:ceres::NumericDiffCostFunction
NumericDiffCostFunction	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^class NumericDiffCostFunction$/;"	c	namespace:ceres
NumericDiffMethodType	ceres-solver/include/ceres/types.h	/^enum NumericDiffMethodType {$/;"	g	namespace:ceres
NumericDiffMethodTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* NumericDiffMethodTypeToString($/;"	f	namespace:ceres
NumericDiffOptions	ceres-solver/include/ceres/numeric_diff_options.h	/^  NumericDiffOptions() {$/;"	f	struct:ceres::NumericDiffOptions
NumericDiffOptions	ceres-solver/include/ceres/numeric_diff_options.h	/^struct CERES_EXPORT NumericDiffOptions {$/;"	s	namespace:ceres
ODOMETRY	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^      ODOMETRY,$/;"	m	class:cartographer::mapping::TrajectoryBuilderInterface::SensorId::SensorType
OFFSET_FOCAL_LENGTH	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_FOCAL_LENGTH,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_K1	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_K1,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_K2	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_K2,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_K3	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_K3,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_P1	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_P1,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_P2	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_P2,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_PRINCIPAL_POINT_X	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_PRINCIPAL_POINT_X,$/;"	e	enum:__anon155::__anon156	file:
OFFSET_PRINCIPAL_POINT_Y	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OFFSET_PRINCIPAL_POINT_Y,$/;"	e	enum:__anon155::__anon156	file:
ON_CALL	ceres-solver/internal/ceres/gmock/gmock.h	11019;"	d
OPTION_GE	ceres-solver/internal/ceres/solver.cc	308;"	d	file:
OPTION_GE	ceres-solver/internal/ceres/solver.cc	82;"	d	file:
OPTION_GT	ceres-solver/internal/ceres/solver.cc	307;"	d	file:
OPTION_GT	ceres-solver/internal/ceres/solver.cc	83;"	d	file:
OPTION_LE	ceres-solver/internal/ceres/solver.cc	309;"	d	file:
OPTION_LE	ceres-solver/internal/ceres/solver.cc	84;"	d	file:
OPTION_LE_OPTION	ceres-solver/internal/ceres/solver.cc	311;"	d	file:
OPTION_LE_OPTION	ceres-solver/internal/ceres/solver.cc	86;"	d	file:
OPTION_LT	ceres-solver/internal/ceres/solver.cc	310;"	d	file:
OPTION_LT	ceres-solver/internal/ceres/solver.cc	85;"	d	file:
OPTION_LT_OPTION	ceres-solver/internal/ceres/solver.cc	312;"	d	file:
OPTION_LT_OPTION	ceres-solver/internal/ceres/solver.cc	87;"	d	file:
OPTION_OP	ceres-solver/internal/ceres/solver.cc	305;"	d	file:
OPTION_OP	ceres-solver/internal/ceres/solver.cc	58;"	d	file:
OPTION_OP_OPTION	ceres-solver/internal/ceres/solver.cc	306;"	d	file:
OPTION_OP_OPTION	ceres-solver/internal/ceres/solver.cc	69;"	d	file:
OVERSEE_TEST	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
O_BINARY	ceres-solver/examples/libmv_bundle_adjuster.cc	107;"	d	file:
OccupiedSpaceCostFunction2D	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  OccupiedSpaceCostFunction2D(const double scaling_factor,$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
OccupiedSpaceCostFunction2D	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^class OccupiedSpaceCostFunction2D {$/;"	c	namespace:cartographer::mapping::scan_matching
OccupiedSpaceCostFunction3D	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  OccupiedSpaceCostFunction3D(const double scaling_factor,$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
OccupiedSpaceCostFunction3D	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^class OccupiedSpaceCostFunction3D {$/;"	c	namespace:cartographer::mapping::scan_matching
Odds	cartographer/cartographer/mapping/probability_values.h	/^inline float Odds(float probability) {$/;"	f	namespace:cartographer::mapping
OdometryConstraint	ceres-solver/examples/robot_pose_mle.cc	/^  OdometryConstraint(double odometry_mean, double odometry_stddev) :$/;"	f	struct:OdometryConstraint
OdometryConstraint	ceres-solver/examples/robot_pose_mle.cc	/^struct OdometryConstraint {$/;"	s	file:
OdometryCostFunction	ceres-solver/examples/robot_pose_mle.cc	/^  typedef AutoDiffCostFunction<OdometryConstraint, 1, 1> OdometryCostFunction;$/;"	t	struct:OdometryConstraint	file:
OdometryData	cartographer/cartographer/sensor/odometry_data.h	/^struct OdometryData {$/;"	s	namespace:cartographer::sensor
OgreSlice	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^OgreSlice::OgreSlice(const ::cartographer::mapping::SubmapId& id, int slice_id,$/;"	f	class:cartographer_rviz::OgreSlice
OgreSlice	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^class OgreSlice {$/;"	c	namespace:cartographer_rviz
OnCallSpec	ceres-solver/internal/ceres/gmock/gmock.h	/^  OnCallSpec(const char* a_file, int a_line,$/;"	f	class:testing::internal::OnCallSpec
OnCallSpec	ceres-solver/internal/ceres/gmock/gmock.h	/^class OnCallSpec : public UntypedOnCallSpecBase {$/;"	c	namespace:testing::internal
OnDependenyCompleted	cartographer/cartographer/common/task.cc	/^void Task::OnDependenyCompleted() {$/;"	f	class:cartographer::common::Task
OnEnvironmentsSetUpEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsSetUpStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsSetUpStart	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnEnvironmentsTearDownStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnEnvironmentsTearDownStart	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnFinish	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.cc	/^void ReceiveGlobalSlamOptimizationsHandler::OnFinish() {$/;"	f	class:cartographer::cloud::handlers::ReceiveGlobalSlamOptimizationsHandler
OnFinish	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.cc	/^void ReceiveLocalSlamResultsHandler::OnFinish() {$/;"	f	class:cartographer::cloud::handlers::ReceiveLocalSlamResultsHandler
OnGlobalSlamOptimizations	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::OnGlobalSlamOptimizations($/;"	f	class:cartographer::cloud::MapBuilderServer
OnLocalSlamResult	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::OnLocalSlamResult($/;"	f	class:cartographer::cloud::MapBuilderServer
OnLocalSlamResult	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^void MapBuilderBridge::OnLocalSlamResult($/;"	f	class:cartographer_ros::MapBuilderBridge
OnReadsDone	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.cc	/^void AddFixedFramePoseDataHandler::OnReadsDone() {$/;"	f	class:cartographer::cloud::handlers::AddFixedFramePoseDataHandler
OnReadsDone	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.cc	/^void AddImuDataHandler::OnReadsDone() {$/;"	f	class:cartographer::cloud::handlers::AddImuDataHandler
OnReadsDone	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.cc	/^void AddLandmarkDataHandler::OnReadsDone() {$/;"	f	class:cartographer::cloud::handlers::AddLandmarkDataHandler
OnReadsDone	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.cc	/^void AddOdometryDataHandler::OnReadsDone() {$/;"	f	class:cartographer::cloud::handlers::AddOdometryDataHandler
OnReadsDone	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.cc	/^void AddRangefinderDataHandler::OnReadsDone() {$/;"	f	class:cartographer::cloud::handlers::AddRangefinderDataHandler
OnReadsDone	cartographer/cartographer/cloud/internal/handlers/load_state_handler.cc	/^void LoadStateHandler::OnReadsDone() {$/;"	f	class:cartographer::cloud::handlers::LoadStateHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.cc	/^void AddFixedFramePoseDataHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::AddFixedFramePoseDataHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.cc	/^void AddImuDataHandler::OnRequest(const proto::AddImuDataRequest &request) {$/;"	f	class:cartographer::cloud::handlers::AddImuDataHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.cc	/^void AddLandmarkDataHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::AddLandmarkDataHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.cc	/^void AddOdometryDataHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::AddOdometryDataHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.cc	/^void AddRangefinderDataHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::AddRangefinderDataHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.cc	/^void AddSensorDataBatchHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::AddSensorDataBatchHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.cc	/^void AddTrajectoryHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::AddTrajectoryHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.cc	/^void FinishTrajectoryHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::FinishTrajectoryHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.cc	/^void GetAllSubmapPosesHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::GetAllSubmapPosesHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.cc	/^void GetConstraintsHandler::OnRequest(const google::protobuf::Empty& request) {$/;"	f	class:cartographer::cloud::handlers::GetConstraintsHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.cc	/^void GetLandmarkPosesHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::GetLandmarkPosesHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.cc	/^void GetLocalToGlobalTransformHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::GetLocalToGlobalTransformHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.cc	/^void GetSubmapHandler::OnRequest(const proto::GetSubmapRequest &request) {$/;"	f	class:cartographer::cloud::handlers::GetSubmapHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.cc	/^void GetTrajectoryNodePosesHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::GetTrajectoryNodePosesHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.cc	/^void IsTrajectoryFinishedHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::IsTrajectoryFinishedHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.cc	/^void IsTrajectoryFrozenHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::IsTrajectoryFrozenHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/load_state_handler.cc	/^void LoadStateHandler::OnRequest(const proto::LoadStateRequest& request) {$/;"	f	class:cartographer::cloud::handlers::LoadStateHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.cc	/^void ReceiveGlobalSlamOptimizationsHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::ReceiveGlobalSlamOptimizationsHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.cc	/^void ReceiveLocalSlamResultsHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::ReceiveLocalSlamResultsHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.cc	/^void RunFinalOptimizationHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::RunFinalOptimizationHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.cc	/^void SetLandmarkPoseHandler::OnRequest($/;"	f	class:cartographer::cloud::handlers::SetLandmarkPoseHandler
OnRequest	cartographer/cartographer/cloud/internal/handlers/write_state_handler.cc	/^void WriteStateHandler::OnRequest(const google::protobuf::Empty& request) {$/;"	f	class:cartographer::cloud::handlers::WriteStateHandler
OnTestCaseEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestCaseStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::StreamingListener
OnTestCaseStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestCaseStart	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestEnd(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestIterationEnd(const UnitTest& unit_test, int \/* iteration *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OnTestIterationEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestIterationStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestIterationStart(const UnitTest& \/* unit_test *\/, int iteration) {$/;"	f	class:testing::internal::StreamingListener
OnTestIterationStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestIterationStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventRepeater::OnTestIterationStart(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater
OnTestIterationStart	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener
OnTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::internal::StreamingListener
OnTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestPartResult	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramEnd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestProgramEnd(const UnitTest& unit_test) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramEnd	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestProgramStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestProgramStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestProgramStart(const UnitTest& \/* unit_test *\/) {$/;"	f	class:testing::internal::StreamingListener
OnTestProgramStart	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestProgramStart(const UnitTest& \/*unit_test*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnTestStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::StreamingListener
OnTestStart	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
OnTestStart	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void OnTestStart(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::EmptyTestEventListener
OnThreadExit	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static void OnThreadExit(DWORD thread_id) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl
OnThreadLocalDestroyed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static void OnThreadLocalDestroyed($/;"	f	class:testing::internal::ThreadLocalRegistryImpl
OnThreadLocalDestroyed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ThreadLocalRegistry::OnThreadLocalDestroyed($/;"	f	class:testing::internal::ThreadLocalRegistry
OneParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct OneParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
OnlyFillsOneOutputFunctor	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^struct OnlyFillsOneOutputFunctor {$/;"	s	namespace:ceres::internal	file:
OnlyFillsOneOutputFunctor	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^struct OnlyFillsOneOutputFunctor {$/;"	s	namespace:ceres::internal	file:
OpenCVReprojectionError	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  OpenCVReprojectionError(const double observed_x, const double observed_y)$/;"	f	struct:__anon155::OpenCVReprojectionError
OpenCVReprojectionError	ceres-solver/examples/libmv_bundle_adjuster.cc	/^struct OpenCVReprojectionError {$/;"	s	namespace:__anon155	file:
OpenFile	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  bool OpenFile(const std::string &file_name) {$/;"	f	class:__anon155::EndianAwareFileReader
OptimizationProblem2D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^OptimizationProblem2D::OptimizationProblem2D($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
OptimizationProblem2D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^class OptimizationProblem2D$/;"	c	namespace:cartographer::mapping::optimization
OptimizationProblem3D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^OptimizationProblem3D::OptimizationProblem3D($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
OptimizationProblem3D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^class OptimizationProblem3D$/;"	c	namespace:cartographer::mapping::optimization
OptimizationProblem3DTest	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^  OptimizationProblem3DTest()$/;"	f	class:cartographer::mapping::optimization::__anon87::OptimizationProblem3DTest
OptimizationProblem3DTest	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^class OptimizationProblem3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::optimization::__anon87	file:
OptimizationProblemInterface	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	/^  OptimizationProblemInterface() {}$/;"	f	class:cartographer::mapping::optimization::OptimizationProblemInterface
OptimizationProblemInterface	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	/^class OptimizationProblemInterface {$/;"	c	namespace:cartographer::mapping::optimization
Options	ceres-solver/include/ceres/covariance.h	/^    Options() {$/;"	f	struct:ceres::Covariance::Options
Options	ceres-solver/include/ceres/covariance.h	/^  struct CERES_EXPORT Options {$/;"	s	class:ceres::Covariance
Options	ceres-solver/include/ceres/gradient_problem_solver.h	/^    Options() {$/;"	f	struct:ceres::GradientProblemSolver::Options
Options	ceres-solver/include/ceres/gradient_problem_solver.h	/^  struct CERES_EXPORT Options {$/;"	s	class:ceres::GradientProblemSolver
Options	ceres-solver/include/ceres/problem.h	/^    Options()$/;"	f	struct:ceres::Problem::Options
Options	ceres-solver/include/ceres/problem.h	/^  struct CERES_EXPORT Options {$/;"	s	class:ceres::Problem
Options	ceres-solver/include/ceres/solver.h	/^    Options() {$/;"	f	struct:ceres::Solver::Options
Options	ceres-solver/include/ceres/solver.h	/^  struct CERES_EXPORT Options {$/;"	s	class:ceres::Solver
Options	ceres-solver/internal/ceres/evaluator.h	/^    Options()$/;"	f	struct:ceres::internal::Evaluator::Options
Options	ceres-solver/internal/ceres/evaluator.h	/^  struct Options {$/;"	s	class:ceres::internal::Evaluator
Options	ceres-solver/internal/ceres/line_search.h	/^    Options()$/;"	f	struct:ceres::internal::LineSearch::Options
Options	ceres-solver/internal/ceres/line_search.h	/^  struct Options {$/;"	s	class:ceres::internal::LineSearch
Options	ceres-solver/internal/ceres/line_search_direction.h	/^    Options()$/;"	f	struct:ceres::internal::LineSearchDirection::Options
Options	ceres-solver/internal/ceres/line_search_direction.h	/^  struct Options {$/;"	s	class:ceres::internal::LineSearchDirection
Options	ceres-solver/internal/ceres/linear_solver.h	/^    Options()$/;"	f	struct:ceres::internal::LinearSolver::Options
Options	ceres-solver/internal/ceres/linear_solver.h	/^  struct Options {$/;"	s	class:ceres::internal::LinearSolver
Options	ceres-solver/internal/ceres/minimizer.h	/^    Options() {$/;"	f	struct:ceres::internal::Minimizer::Options
Options	ceres-solver/internal/ceres/minimizer.h	/^    explicit Options(const Solver::Options& options) {$/;"	f	struct:ceres::internal::Minimizer::Options
Options	ceres-solver/internal/ceres/minimizer.h	/^  struct Options {$/;"	s	class:ceres::internal::Minimizer
Options	ceres-solver/internal/ceres/preconditioner.h	/^    Options()$/;"	f	struct:ceres::internal::Preconditioner::Options
Options	ceres-solver/internal/ceres/preconditioner.h	/^  struct Options {$/;"	s	class:ceres::internal::Preconditioner
Options	ceres-solver/internal/ceres/trust_region_strategy.h	/^    Options()$/;"	f	struct:ceres::internal::TrustRegionStrategy::Options
Options	ceres-solver/internal/ceres/trust_region_strategy.h	/^  struct Options {$/;"	s	class:ceres::internal::TrustRegionStrategy
OrderedGroups	ceres-solver/include/ceres/ordered_groups.h	/^class OrderedGroups {$/;"	c	namespace:ceres
OrderedMultiQueue	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^OrderedMultiQueue::OrderedMultiQueue() {}$/;"	f	class:cartographer::sensor::OrderedMultiQueue
OrderedMultiQueue	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^class OrderedMultiQueue {$/;"	c	namespace:cartographer::sensor
OrderedMultiQueueTest	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^class OrderedMultiQueueTest : public ::testing::Test {$/;"	c	namespace:cartographer::sensor::__anon123	file:
OrderingForSparseNormalCholeskyUsingCXSparse	ceres-solver/internal/ceres/reorder_program.cc	/^void OrderingForSparseNormalCholeskyUsingCXSparse($/;"	f	namespace:ceres::internal::__anon185
OrderingForSparseNormalCholeskyUsingEigenSparse	ceres-solver/internal/ceres/reorder_program.cc	/^void OrderingForSparseNormalCholeskyUsingEigenSparse($/;"	f	namespace:ceres::internal::__anon185
OrderingForSparseNormalCholeskyUsingSuiteSparse	ceres-solver/internal/ceres/reorder_program.cc	/^void OrderingForSparseNormalCholeskyUsingSuiteSparse($/;"	f	namespace:ceres::internal::__anon185
OrderingToGroupSizes	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^void OrderingToGroupSizes(const ParameterBlockOrdering* ordering,$/;"	f	namespace:ceres::internal
OrderingType	ceres-solver/internal/ceres/linear_solver.h	/^enum OrderingType {$/;"	g	namespace:ceres::internal
OriginalFunction	ceres-solver/internal/ceres/gmock/gmock.h	/^        OriginalFunction;$/;"	t	class:testing::internal::IgnoreResultAction::Impl
OsStackTraceGetter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  OsStackTraceGetter() {}$/;"	f	class:testing::internal::OsStackTraceGetter
OsStackTraceGetter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class OsStackTraceGetter : public OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal	file:
OsStackTraceGetterInterface	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
OsStackTraceGetterInterface	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal	file:
OutlierRemovingPointsProcessor	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^OutlierRemovingPointsProcessor::OutlierRemovingPointsProcessor($/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
OutlierRemovingPointsProcessor	cartographer/cartographer/io/outlier_removing_points_processor.h	/^class OutlierRemovingPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
OutputPoses	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d.cc	/^bool OutputPoses(const std::string& filename,$/;"	f	namespace:ceres::examples
OutputPoses	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d.cc	/^bool OutputPoses(const std::string& filename, const MapOfPoses& poses) {$/;"	f	namespace:ceres::examples
OutputXmlAttribute	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void XmlUnitTestResultPrinter::OutputXmlAttribute($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlCDataSection	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OutputXmlTestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
OverlappingSubmapsTrimmer2D	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  OverlappingSubmapsTrimmer2D(uint16 fresh_submaps_count,$/;"	f	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
OverlappingSubmapsTrimmer2D	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^class OverlappingSubmapsTrimmer2D : public PoseGraphTrimmer {$/;"	c	namespace:cartographer::mapping
OverlappingSubmapsTrimmer2DTest	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^class OverlappingSubmapsTrimmer2DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon83	file:
Ownership	ceres-solver/include/ceres/types.h	/^enum Ownership {$/;"	g	namespace:ceres
PACKAGE	cartographer/bazel/third_party/fontconfig/config.h	256;"	d
PACKAGE	cartographer/bazel/third_party/pixman/config.h	103;"	d
PACKAGE_BUGREPORT	cartographer/bazel/third_party/cairo/config.h	313;"	d
PACKAGE_BUGREPORT	cartographer/bazel/third_party/fontconfig/config.h	259;"	d
PACKAGE_BUGREPORT	cartographer/bazel/third_party/pixman/config.h	106;"	d
PACKAGE_NAME	cartographer/bazel/third_party/cairo/config.h	317;"	d
PACKAGE_NAME	cartographer/bazel/third_party/fontconfig/config.h	263;"	d
PACKAGE_NAME	cartographer/bazel/third_party/pixman/config.h	109;"	d
PACKAGE_STRING	cartographer/bazel/third_party/cairo/config.h	320;"	d
PACKAGE_STRING	cartographer/bazel/third_party/fontconfig/config.h	266;"	d
PACKAGE_STRING	cartographer/bazel/third_party/pixman/config.h	112;"	d
PACKAGE_TARNAME	cartographer/bazel/third_party/cairo/config.h	323;"	d
PACKAGE_TARNAME	cartographer/bazel/third_party/fontconfig/config.h	269;"	d
PACKAGE_TARNAME	cartographer/bazel/third_party/pixman/config.h	115;"	d
PACKAGE_URL	cartographer/bazel/third_party/cairo/config.h	326;"	d
PACKAGE_URL	cartographer/bazel/third_party/fontconfig/config.h	272;"	d
PACKAGE_URL	cartographer/bazel/third_party/pixman/config.h	118;"	d
PACKAGE_VERSION	cartographer/bazel/third_party/cairo/config.h	329;"	d
PACKAGE_VERSION	cartographer/bazel/third_party/fontconfig/config.h	275;"	d
PACKAGE_VERSION	cartographer/bazel/third_party/pixman/config.h	121;"	d
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	276;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	278;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	280;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	282;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	284;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	286;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	288;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	290;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	292;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	294;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	296;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	298;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	300;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	302;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	304;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	306;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	308;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	310;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	312;"	d	file:
PARAMETER_BLOCK_SIZES	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	314;"	d	file:
PER_MINIMIZER_ITERATION	ceres-solver/include/ceres/types.h	/^  PER_MINIMIZER_ITERATION$/;"	e	enum:ceres::LoggingType
PGMImage	ceres-solver/examples/pgm_image.h	/^PGMImage<Real>::PGMImage(int width, int height)$/;"	f	class:ceres::examples::PGMImage
PGMImage	ceres-solver/examples/pgm_image.h	/^PGMImage<Real>::PGMImage(std::string filename) {$/;"	f	class:ceres::examples::PGMImage
PGMImage	ceres-solver/examples/pgm_image.h	/^class PGMImage {$/;"	c	namespace:ceres::examples
POLAK_RIBIERE	ceres-solver/include/ceres/types.h	/^  POLAK_RIBIERE,$/;"	e	enum:ceres::NonlinearConjugateGradientType
PT_GUARDED_BY	cartographer/cartographer/common/mutex.h	42;"	d
PackCamerasRotationAndTranslation	ceres-solver/examples/libmv_bundle_adjuster.cc	/^vector<Vec6> PackCamerasRotationAndTranslation($/;"	f	namespace:__anon155
PaintSubmapSlices	cartographer/cartographer/io/submap_painter.cc	/^PaintSubmapSlicesResult PaintSubmapSlices($/;"	f	namespace:cartographer::io
PaintSubmapSlicesResult	cartographer/cartographer/io/submap_painter.h	/^  PaintSubmapSlicesResult(::cartographer::io::UniqueCairoSurfacePtr surface,$/;"	f	struct:cartographer::io::PaintSubmapSlicesResult
PaintSubmapSlicesResult	cartographer/cartographer/io/submap_painter.h	/^struct PaintSubmapSlicesResult {$/;"	s	namespace:cartographer::io
Pair	ceres-solver/internal/ceres/gmock/gmock.h	/^Pair(FirstMatcher first_matcher, SecondMatcher second_matcher) {$/;"	f	namespace:testing
PairMatchBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class PairMatchBase {$/;"	c	namespace:testing::internal
PairMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  PairMatcher(FirstMatcher first_matcher, SecondMatcher second_matcher)$/;"	f	class:testing::internal::PairMatcher
PairMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class PairMatcher {$/;"	c	namespace:testing::internal
PairMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  PairMatcherImpl(FirstMatcher first_matcher, SecondMatcher second_matcher)$/;"	f	class:testing::internal::PairMatcherImpl
PairMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class PairMatcherImpl : public MatcherInterface<PairType> {$/;"	c	namespace:testing::internal
Param	ceres-solver/internal/ceres/dense_linear_solver_test.cc	/^        Param;$/;"	t	namespace:ceres::internal	file:
Param	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^    Param;$/;"	t	namespace:ceres::internal	file:
ParamGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParamGenerator {$/;"	c	namespace:testing::internal
ParamGeneratorInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParamGeneratorInterface {$/;"	c	namespace:testing::internal
ParamInfoToString	ceres-solver/internal/ceres/dense_linear_solver_test.cc	/^std::string ParamInfoToString(testing::TestParamInfo<Param> info) {$/;"	f	namespace:ceres::internal
ParamInfoToString	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^std::string ParamInfoToString(testing::TestParamInfo<Param> info) {$/;"	f	namespace:ceres::internal
ParamIterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParamIterator {$/;"	c	namespace:testing::internal
ParamIteratorInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParamIteratorInterface {$/;"	c	namespace:testing::internal
ParamNameGenFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^struct ParamNameGenFunc {$/;"	s	namespace:testing::internal
ParamNameGeneratorFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename ParamNameGenFunc<ParamType>::Type ParamNameGeneratorFunc;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator10
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator9
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator8
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator7
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5, T6> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator6
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4, T5> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator5
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3, T4> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator4
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2, T3> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator3
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::testing::tuple<T1, T2> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator2
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::WithParamInterface
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::internal::ParamGeneratorInterface
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename TestCase::ParamType ParamType;$/;"	t	class:testing::internal::TestMetaFactory
ParamType	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename TestClass::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestFactory
ParameterBlock	ceres-solver/internal/ceres/parameter_block.h	/^  ParameterBlock(double* user_state, int size, int index) {$/;"	f	class:ceres::internal::ParameterBlock
ParameterBlock	ceres-solver/internal/ceres/parameter_block.h	/^  ParameterBlock(double* user_state,$/;"	f	class:ceres::internal::ParameterBlock
ParameterBlock	ceres-solver/internal/ceres/parameter_block.h	/^class ParameterBlock {$/;"	c	namespace:ceres::internal
ParameterBlockLocalSize	ceres-solver/internal/ceres/problem.cc	/^int Problem::ParameterBlockLocalSize(const double* parameter_block) const {$/;"	f	class:ceres::Problem
ParameterBlockLocalSize	ceres-solver/internal/ceres/problem_impl.cc	/^int ProblemImpl::ParameterBlockLocalSize(const double* values) const {$/;"	f	class:ceres::internal::ProblemImpl
ParameterBlockOrdering	ceres-solver/include/ceres/ordered_groups.h	/^typedef OrderedGroups<double*> ParameterBlockOrdering;$/;"	t	namespace:ceres
ParameterBlockSize	ceres-solver/internal/ceres/problem.cc	/^int Problem::ParameterBlockSize(const double* parameter_block) const {$/;"	f	class:ceres::Problem
ParameterBlockSize	ceres-solver/internal/ceres/problem_impl.cc	/^int ProblemImpl::ParameterBlockSize(const double* values) const {$/;"	f	class:ceres::internal::ProblemImpl
ParameterBlocksAreEquivalent	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^void ParameterBlocksAreEquivalent(const ParameterBlock*  left,$/;"	f	namespace:ceres::internal
ParameterBlocksAreFinite	ceres-solver/internal/ceres/program.cc	/^bool Program::ParameterBlocksAreFinite(string* message) const {$/;"	f	class:ceres::internal::Program
ParameterBlocksToStateVector	ceres-solver/internal/ceres/program.cc	/^void Program::ParameterBlocksToStateVector(double *state) const {$/;"	f	class:ceres::internal::Program
ParameterIgnoringCostFunction	ceres-solver/internal/ceres/evaluator_test.cc	/^class ParameterIgnoringCostFunction$/;"	c	namespace:ceres::internal	file:
ParameterMap	ceres-solver/internal/ceres/problem_impl.cc	/^typedef std::map<double*, internal::ParameterBlock*> ParameterMap;$/;"	t	namespace:ceres::internal	file:
ParameterMap	ceres-solver/internal/ceres/problem_impl.h	/^  typedef std::map<double*, ParameterBlock*> ParameterMap;$/;"	t	class:ceres::internal::ProblemImpl
ParameterSensitiveCostFunction	ceres-solver/internal/ceres/evaluator_test.cc	/^class ParameterSensitiveCostFunction : public SizedCostFunction<2, 2> {$/;"	c	namespace:ceres::internal	file:
ParameterToleranceReached	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^bool TrustRegionMinimizer::ParameterToleranceReached() {$/;"	f	class:ceres::internal::TrustRegionMinimizer
Parameterized	ceres-solver/examples/libmv_homography.cc	/^  typedef Eigen::Matrix<T, 3, 3> Parameterized;  \/\/ H$/;"	t	class:__anon158::Homography2DNormalizedParameterization	file:
ParameterizedTestCaseInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ParameterizedTestCaseInfo($/;"	f	class:testing::internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParameterizedTestCaseInfo : public ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseInfoBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfoBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParameterizedTestCaseInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestCaseRegistry	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParameterizedTestCaseRegistry() {}$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
ParameterizedTestCaseRegistry	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParameterizedTestCaseRegistry {$/;"	c	namespace:testing::internal
ParameterizedTestFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ParameterizedTestFactory(ParamType parameter) :$/;"	f	class:testing::internal::ParameterizedTestFactory
ParameterizedTestFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^class ParameterizedTestFactory : public TestFactoryBase {$/;"	c	namespace:testing::internal
Parameters	ceres-solver/examples/libmv_homography.cc	/^  typedef Eigen::Matrix<T, 8, 1> Parameters;     \/\/ a, b, ... g, h$/;"	t	class:__anon158::Homography2DNormalizedParameterization	file:
ParseArgs	cartographer_ros/cartographer_ros/scripts/remove_leading_slashes.py	/^def ParseArgs():$/;"	f
ParseBoolFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ParseBoolFlag(const char* str, const char* flag, bool* value) {$/;"	f	namespace:testing::internal
ParseFlagValue	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* ParseFlagValue(const char* str,$/;"	f	namespace:testing::internal
ParseGoogleMockBoolFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool ParseGoogleMockBoolFlag(const char* str, const char* flag,$/;"	f	namespace:testing::internal
ParseGoogleMockFlagValue	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char* ParseGoogleMockFlagValue(const char* str,$/;"	f	namespace:testing::internal
ParseGoogleMockStringFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool ParseGoogleMockStringFlag(const char* str, const char* flag,$/;"	f	namespace:testing::internal
ParseGoogleTestFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ParseGoogleTestFlag(const char* const arg) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ParseGoogleTestFlagsOnly(int* argc, char** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnly	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {$/;"	f	namespace:testing::internal
ParseGoogleTestFlagsOnlyImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal
ParseInt32	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ParseInt32(const Message& src_text, const char* str, Int32* value) {$/;"	f	namespace:testing::internal
ParseInt32Flag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ParseInt32Flag(const char* str, const char* flag, Int32* value) {$/;"	f	namespace:testing::internal
ParseInternalRunDeathTestFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {$/;"	f	namespace:testing::internal
ParseLegacyData	cartographer/cartographer/io/serialization_format_migration.cc	/^ProtoMap ParseLegacyData($/;"	f	namespace:cartographer::io::__anon19
ParseNaturalNumber	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ParseNaturalNumber(const ::std::string& str, Integer* number) {$/;"	f	namespace:testing::internal
ParseProtoFile	cartographer/scripts/update_configuration_doc.py	/^def ParseProtoFile(proto_file):$/;"	f
ParseProtoFilesRecursively	cartographer/scripts/update_configuration_doc.py	/^def ParseProtoFilesRecursively(root):$/;"	f
ParseSensorIds	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^  std::set<mapping::TrajectoryBuilderInterface::SensorId> ParseSensorIds($/;"	f	class:cartographer::cloud::handlers::__anon47::AddTrajectoryHandlerTest
ParseStringFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ParseStringFlag(const char* str, const char* flag, std::string* value) {$/;"	f	namespace:testing::internal
PartialMatch	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool RE::PartialMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE
PartialMatch	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool PartialMatch(const ::std::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
PartialMatch	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool PartialMatch(const ::string& str, const RE& re) {$/;"	f	class:std::tr1::RE
PartitionedMatrixView	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^class PartitionedMatrixView : public PartitionedMatrixViewBase {$/;"	c	namespace:ceres::internal
PartitionedMatrixView	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^PartitionedMatrixView($/;"	f	class:ceres::internal::PartitionedMatrixView
PartitionedMatrixViewBase	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^class PartitionedMatrixViewBase {$/;"	c	namespace:ceres::internal
PartitionedMatrixViewTest	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^class PartitionedMatrixViewTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Passed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::internal::UnitTestImpl
Passed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool DeathTestImpl::Passed(bool status_ok) {$/;"	f	class:testing::internal::DeathTestImpl
Passed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool UnitTest::Passed() const { return impl()->Passed(); }$/;"	f	class:testing::UnitTest
Passed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestCase
Passed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestResult
Pattern	cartographer_ros/jenkins/worker.py	/^class Pattern(object):$/;"	c
PatternMatchesString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool UnitTestOptions::PatternMatchesString(const char *pattern,$/;"	f	class:testing::internal::UnitTestOptions
PcdWritingPointsProcessor	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^PcdWritingPointsProcessor::PcdWritingPointsProcessor($/;"	f	class:cartographer::io::PcdWritingPointsProcessor
PcdWritingPointsProcessor	cartographer/cartographer/io/pcd_writing_points_processor.h	/^class PcdWritingPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
Peek	cartographer/cartographer/common/blocking_queue.h	/^  const R* Peek() {$/;"	f	class:cartographer::common::BlockingQueue
Peek	ceres-solver/internal/ceres/gmock/gmock.h	/^  const T& Peek() const { return *value_ptr_; }$/;"	f	class:testing::internal::ReferenceOrValueWrapper
Peek	ceres-solver/internal/ceres/gmock/gmock.h	/^  const T& Peek() const {$/;"	f	class:testing::internal::ReferenceOrValueWrapper
PeekMessageTime	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^ros::Time PlayableBag::PeekMessageTime() const {$/;"	f	class:cartographer_ros::PlayableBag
PeekMessageTime	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^ros::Time PlayableBagMultiplexer::PeekMessageTime() const {$/;"	f	class:cartographer_ros::PlayableBagMultiplexer
PerSolveOptions	ceres-solver/internal/ceres/linear_solver.h	/^    PerSolveOptions()$/;"	f	struct:ceres::internal::LinearSolver::PerSolveOptions
PerSolveOptions	ceres-solver/internal/ceres/linear_solver.h	/^  struct PerSolveOptions {$/;"	s	class:ceres::internal::LinearSolver
PerSolveOptions	ceres-solver/internal/ceres/trust_region_strategy.h	/^    PerSolveOptions()$/;"	f	struct:ceres::internal::TrustRegionStrategy::PerSolveOptions
PerSolveOptions	ceres-solver/internal/ceres/trust_region_strategy.h	/^  struct PerSolveOptions {$/;"	s	class:ceres::internal::TrustRegionStrategy
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::PolymorphicAction::MonomorphicImpl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::DoBothAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::WithArgsAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) { return value_; }$/;"	f	class:testing::internal::ReturnAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnRefAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnRefOfCopyAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual void Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::IgnoreResultAction::Impl
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& \/* args *\/) const {$/;"	f	class:testing::internal::SetErrnoAndReturnAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::Action
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::InvokeMethodAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::InvokeAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result Perform(const ArgumentTuple&) const {$/;"	f	class:testing::internal::InvokeMethodWithoutArgsAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result Perform(const ArgumentTuple&) { return function_impl_(); }$/;"	f	class:testing::internal::InvokeWithoutArgsAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2, A3, A4,$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2, A3,$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2,$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1, A2>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0, A1>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(Impl* impl, const ::testing::tuple<A0>& args) {$/;"	f	class:testing::internal::ActionHelper
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static Result Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnNullAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void Perform(const ArgumentTuple&) {$/;"	f	class:testing::internal::ReturnVoidAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual Result Perform(const ArgumentTuple& args) {$/;"	f	class:testing::internal::ActionAdaptor
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  void Perform(const ArgumentTuple& \/* args *\/) const {$/;"	f	class:testing::internal::AssignAction
Perform	ceres-solver/internal/ceres/gmock/gmock.h	/^  void Perform(const ArgumentTuple& args) const {$/;"	f	class:testing::internal::SetArgumentPointeeAction
PerformAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  PerformAction(const Action<F>& action,$/;"	f	class:testing::internal::ActionResultHolder
PerformAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ActionResultHolder* PerformAction($/;"	f	class:testing::internal::ActionResultHolder
PerformDefaultAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  Result PerformDefaultAction(const ArgumentTuple& args,$/;"	f	class:testing::internal::FunctionMockerBase
PerformDefaultAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ActionResultHolder* PerformDefaultAction($/;"	f	class:testing::internal::ActionResultHolder
Perturb	ceres-solver/examples/bal_problem.cc	/^void BALProblem::Perturb(const double rotation_sigma,$/;"	f	class:ceres::examples::BALProblem
PerturbPoint3	ceres-solver/examples/bal_problem.cc	/^void PerturbPoint3(const double sigma, double* point) {$/;"	f	namespace:ceres::examples::__anon154
Pixel	ceres-solver/examples/pgm_image.h	/^Real PGMImage<Real>::Pixel(int x, int y) const {$/;"	f	class:ceres::examples::PGMImage
PixelData	cartographer/cartographer/io/xray_points_processor.cc	/^struct PixelData {$/;"	s	namespace:cartographer::io::__anon25	file:
PixelData	cartographer/cartographer/mapping/3d/submap_3d.cc	/^struct PixelData {$/;"	s	namespace:cartographer::mapping::__anon106	file:
PixelFromLinearIndex	ceres-solver/examples/pgm_image.h	/^Real  PGMImage<Real>::PixelFromLinearIndex(int index) const {$/;"	f	class:ceres::examples::PGMImage
Pixels	cartographer/cartographer/io/submap_painter.h	/^  struct Pixels {$/;"	s	struct:cartographer::io::SubmapTexture
PlayableBag	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^PlayableBag::PlayableBag($/;"	f	class:cartographer_ros::PlayableBag
PlayableBag	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^class PlayableBag {$/;"	c	namespace:cartographer_ros
PlayableBagMultiplexer	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^class PlayableBagMultiplexer {$/;"	c	namespace:cartographer_ros
Plus	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  virtual bool Plus(const double* x,$/;"	f	class:ceres::AutoDiffLocalParameterization
Plus	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual bool Plus(const double* x,$/;"	f	class:ceres::internal::PolynomialParameterization
Plus	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  virtual bool Plus(const double* x,$/;"	f	class:ceres::internal::MatrixParameterization
Plus	ceres-solver/internal/ceres/gradient_problem.cc	/^bool GradientProblem::Plus(const double* x,$/;"	f	class:ceres::GradientProblem
Plus	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual bool Plus(const double* state,$/;"	f	class:ceres::internal::GradientProblemEvaluator
Plus	ceres-solver/internal/ceres/local_parameterization.cc	/^bool EigenQuaternionParameterization::Plus(const double* x_ptr,$/;"	f	class:ceres::EigenQuaternionParameterization
Plus	ceres-solver/internal/ceres/local_parameterization.cc	/^bool HomogeneousVectorParameterization::Plus(const double* x_ptr,$/;"	f	class:ceres::HomogeneousVectorParameterization
Plus	ceres-solver/internal/ceres/local_parameterization.cc	/^bool IdentityParameterization::Plus(const double* x,$/;"	f	class:ceres::IdentityParameterization
Plus	ceres-solver/internal/ceres/local_parameterization.cc	/^bool ProductParameterization::Plus(const double* x,$/;"	f	class:ceres::ProductParameterization
Plus	ceres-solver/internal/ceres/local_parameterization.cc	/^bool QuaternionParameterization::Plus(const double* x,$/;"	f	class:ceres::QuaternionParameterization
Plus	ceres-solver/internal/ceres/local_parameterization.cc	/^bool SubsetParameterization::Plus(const double* x,$/;"	f	class:ceres::SubsetParameterization
Plus	ceres-solver/internal/ceres/parameter_block.h	/^  bool Plus(const double *x, const double* delta, double* x_plus_delta) {$/;"	f	class:ceres::internal::ParameterBlock
Plus	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual bool Plus(const double* x,$/;"	f	class:ceres::internal::BadLocalParameterization
Plus	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual bool Plus(const double* x,$/;"	f	struct:ceres::internal::TestParameterization
Plus	ceres-solver/internal/ceres/program.cc	/^bool Program::Plus(const double* state,$/;"	f	class:ceres::internal::Program
Plus	ceres-solver/internal/ceres/program_evaluator.h	/^  bool Plus(const double* state,$/;"	f	class:ceres::internal::ProgramEvaluator
Plus	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual bool Plus(const double* state,$/;"	f	class:ceres::internal::PowellEvaluator2
PlyWritingPointsProcessor	cartographer/cartographer/io/ply_writing_points_processor.cc	/^PlyWritingPointsProcessor::PlyWritingPointsProcessor($/;"	f	class:cartographer::io::PlyWritingPointsProcessor
PlyWritingPointsProcessor	cartographer/cartographer/io/ply_writing_points_processor.h	/^class PlyWritingPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
PointCloud	cartographer/cartographer/sensor/point_cloud.h	/^typedef std::vector<Eigen::Vector3f> PointCloud;$/;"	t	namespace:cartographer::sensor
PointCloud2HasField	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^bool PointCloud2HasField(const sensor_msgs::PointCloud2& pc2,$/;"	f	namespace:cartographer_ros::__anon132
PointCloudWithIntensities	cartographer/cartographer/sensor/point_cloud.h	/^struct PointCloudWithIntensities {$/;"	s	namespace:cartographer::sensor
PointForTrack	ceres-solver/examples/libmv_bundle_adjuster.cc	/^EuclideanPoint *PointForTrack(vector<EuclideanPoint> *all_points,$/;"	f	namespace:__anon155
PointToLineSegmentContourCostFunction	ceres-solver/examples/ellipse_approximation.cc	/^  PointToLineSegmentContourCostFunction(const int num_segments,$/;"	f	class:PointToLineSegmentContourCostFunction
PointToLineSegmentContourCostFunction	ceres-solver/examples/ellipse_approximation.cc	/^class PointToLineSegmentContourCostFunction : public ceres::CostFunction {$/;"	c	file:
PointToLineSegmentContourCostFunction	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  PointToLineSegmentContourCostFunction(const int num_segments,$/;"	f	class:ceres::internal::PointToLineSegmentContourCostFunction
PointToLineSegmentContourCostFunction	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^class PointToLineSegmentContourCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
Pointee	ceres-solver/internal/ceres/gmock/gmock.h	/^        GTEST_REMOVE_REFERENCE_(Pointer))>::type Pointee;$/;"	t	class:testing::internal::PointeeMatcher::Impl
Pointee	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::PointeeMatcher<InnerMatcher> Pointee($/;"	f	namespace:testing
PointeeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit PointeeMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}$/;"	f	class:testing::internal::PointeeMatcher
PointeeMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class PointeeMatcher {$/;"	c	namespace:testing::internal
PointeeOf	ceres-solver/internal/ceres/gmock/gmock.h	/^struct PointeeOf {$/;"	s	namespace:testing::internal
PointeeOf	ceres-solver/internal/ceres/gmock/gmock.h	/^struct PointeeOf<T*> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
PointsBatch	cartographer/cartographer/io/points_batch.h	/^  PointsBatch() {$/;"	f	struct:cartographer::io::PointsBatch
PointsBatch	cartographer/cartographer/io/points_batch.h	/^struct PointsBatch {$/;"	s	namespace:cartographer::io
PointsProcessor	cartographer/cartographer/io/points_processor.h	/^  PointsProcessor() {}$/;"	f	class:cartographer::io::PointsProcessor
PointsProcessor	cartographer/cartographer/io/points_processor.h	/^class PointsProcessor {$/;"	c	namespace:cartographer::io
PointsProcessorPipelineBuilder	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^PointsProcessorPipelineBuilder::PointsProcessorPipelineBuilder() {}$/;"	f	class:cartographer::io::PointsProcessorPipelineBuilder
PointsProcessorPipelineBuilder	cartographer/cartographer/io/points_processor_pipeline_builder.h	/^class PointsProcessorPipelineBuilder {$/;"	c	namespace:cartographer::io
Pointwise	ceres-solver/internal/ceres/gmock/gmock.h	/^Pointwise(const TupleMatcher& tuple_matcher, const Container& rhs) {$/;"	f	namespace:testing
Pointwise	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::PointwiseMatcher<TupleMatcher, std::vector<T> > Pointwise($/;"	f	namespace:testing
PointwiseMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  PointwiseMatcher(const TupleMatcher& tuple_matcher, const RhsContainer& rhs)$/;"	f	class:testing::internal::PointwiseMatcher
PointwiseMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class PointwiseMatcher {$/;"	c	namespace:testing::internal
PolymorphicAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit PolymorphicAction(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicAction
PolymorphicAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class PolymorphicAction {$/;"	c	namespace:testing
PolymorphicMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit PolymorphicMatcher(const Impl& an_impl) : impl_(an_impl) {}$/;"	f	class:testing::PolymorphicMatcher
PolymorphicMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class PolymorphicMatcher {$/;"	c	namespace:testing
PolynomialParameterization	ceres-solver/internal/ceres/covariance_test.cc	/^class PolynomialParameterization : public LocalParameterization {$/;"	c	namespace:ceres::internal	file:
Pop	cartographer/cartographer/common/blocking_queue.h	/^  T Pop() {$/;"	f	class:cartographer::common::BlockingQueue
Pop	cartographer/cartographer/common/lockless_queue.h	/^  std::unique_ptr<T> Pop() {$/;"	f	class:cartographer::common::LocklessQueue
PopBool	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^bool LuaParameterDictionary::PopBool() const {$/;"	f	class:cartographer::common::LuaParameterDictionary
PopDictionary	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::unique_ptr<LuaParameterDictionary> LuaParameterDictionary::PopDictionary($/;"	f	class:cartographer::common::LuaParameterDictionary
PopDouble	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^double LuaParameterDictionary::PopDouble() const {$/;"	f	class:cartographer::common::LuaParameterDictionary
PopInt	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^int LuaParameterDictionary::PopInt() const {$/;"	f	class:cartographer::common::LuaParameterDictionary
PopNodeFromFreeList	cartographer/cartographer/common/lockless_queue.h	/^  Node* PopNodeFromFreeList() {$/;"	f	class:cartographer::common::LocklessQueue
PopString	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::string LuaParameterDictionary::PopString(Quoted quoted) const {$/;"	f	class:cartographer::common::LuaParameterDictionary
PopWithTimeout	cartographer/cartographer/common/blocking_queue.h	/^  T PopWithTimeout(const common::Duration timeout) {$/;"	f	class:cartographer::common::BlockingQueue
PopulateJacobianRowAndColumnBlockVectors	ceres-solver/internal/ceres/compressed_row_jacobian_writer.cc	/^void CompressedRowJacobianWriter::PopulateJacobianRowAndColumnBlockVectors($/;"	f	class:ceres::internal::CompressedRowJacobianWriter
PopulateOverlappingSubmapsTrimmerOptions2D	cartographer/cartographer/mapping/trajectory_builder_interface.cc	/^void PopulateOverlappingSubmapsTrimmerOptions2D($/;"	f	namespace:cartographer::mapping::__anon53
PortableLocaltime	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool PortableLocaltime(time_t seconds, struct tm* out) {$/;"	f	namespace:testing::internal
Pose	cartographer/cartographer/mapping/pose_graph_interface.h	/^    struct Pose {$/;"	s	struct:cartographer::mapping::PoseGraphInterface::Constraint
Pose2d	ceres-solver/examples/slam/pose_graph_2d/types.h	/^struct Pose2d {$/;"	s	namespace:ceres::examples
Pose3d	ceres-solver/examples/slam/pose_graph_3d/types.h	/^struct Pose3d {$/;"	s	namespace:ceres::examples
PoseExtrapolator	cartographer/cartographer/mapping/pose_extrapolator.cc	/^PoseExtrapolator::PoseExtrapolator(const common::Duration pose_queue_duration,$/;"	f	class:cartographer::mapping::PoseExtrapolator
PoseExtrapolator	cartographer/cartographer/mapping/pose_extrapolator.h	/^class PoseExtrapolator {$/;"	c	namespace:cartographer::mapping
PoseGraph	cartographer/cartographer/mapping/pose_graph.h	/^  PoseGraph() {}$/;"	f	class:cartographer::mapping::PoseGraph
PoseGraph	cartographer/cartographer/mapping/pose_graph.h	/^class PoseGraph : public PoseGraphInterface {$/;"	c	namespace:cartographer::mapping
PoseGraph2D	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::PoseGraph2D($/;"	f	class:cartographer::mapping::PoseGraph2D
PoseGraph2D	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^class PoseGraph2D : public PoseGraph {$/;"	c	namespace:cartographer::mapping
PoseGraph2DTest	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  PoseGraph2DTest() : thread_pool_(1) {$/;"	f	class:cartographer::mapping::__anon75::PoseGraph2DTest
PoseGraph2DTest	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^class PoseGraph2DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon75	file:
PoseGraph2dErrorTerm	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^  PoseGraph2dErrorTerm(double x_ab, double y_ab, double yaw_ab_radians,$/;"	f	class:ceres::examples::PoseGraph2dErrorTerm
PoseGraph2dErrorTerm	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^class PoseGraph2dErrorTerm {$/;"	c	namespace:ceres::examples
PoseGraph3D	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::PoseGraph3D($/;"	f	class:cartographer::mapping::PoseGraph3D
PoseGraph3D	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^class PoseGraph3D : public PoseGraph {$/;"	c	namespace:cartographer::mapping
PoseGraph3DForTesting	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  PoseGraph3DForTesting($/;"	f	class:cartographer::mapping::__anon105::PoseGraph3DForTesting
PoseGraph3DForTesting	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^class PoseGraph3DForTesting : public PoseGraph3D {$/;"	c	namespace:cartographer::mapping::__anon105	file:
PoseGraph3DTest	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  PoseGraph3DTest()$/;"	f	class:cartographer::mapping::__anon105::PoseGraph3DTest
PoseGraph3DTest	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^class PoseGraph3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon105	file:
PoseGraph3dErrorTerm	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^  PoseGraph3dErrorTerm(const Pose3d& t_ab_measured,$/;"	f	class:ceres::examples::PoseGraph3dErrorTerm
PoseGraph3dErrorTerm	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^class PoseGraph3dErrorTerm {$/;"	c	namespace:ceres::examples
PoseGraphInterface	cartographer/cartographer/mapping/pose_graph_interface.h	/^  PoseGraphInterface() {}$/;"	f	class:cartographer::mapping::PoseGraphInterface
PoseGraphInterface	cartographer/cartographer/mapping/pose_graph_interface.h	/^class PoseGraphInterface {$/;"	c	namespace:cartographer::mapping
PoseGraphStub	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::PoseGraphStub(std::shared_ptr<::grpc::Channel> client_channel)$/;"	f	class:cartographer::cloud::PoseGraphStub
PoseGraphStub	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^class PoseGraphStub : public ::cartographer::mapping::PoseGraphInterface {$/;"	c	namespace:cartographer::cloud
PoseGraphTrimmer	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^class PoseGraphTrimmer {$/;"	c	namespace:cartographer::mapping
PostFlagParsingInit	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::PostFlagParsingInit() {$/;"	f	class:testing::internal::UnitTestImpl
PostSolveSummarize	ceres-solver/internal/ceres/solver.cc	/^void PostSolveSummarize(const internal::PreprocessedProblem& pp,$/;"	f	namespace:ceres::__anon190
Pow2	cartographer/cartographer/common/math.h	/^constexpr T Pow2(T a) {$/;"	f	namespace:cartographer::common
PowellEvaluator2	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  PowellEvaluator2()$/;"	f	class:ceres::internal::PowellEvaluator2
PowellEvaluator2	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^class PowellEvaluator2 : public Evaluator {$/;"	c	namespace:ceres::internal	file:
PowellTest	ceres-solver/internal/ceres/system_test.cc	/^typedef SystemTest<PowellsFunction> PowellTest;$/;"	t	namespace:ceres::internal	file:
PowellsFunction	ceres-solver/internal/ceres/system_test.cc	/^  PowellsFunction() {$/;"	f	class:ceres::internal::PowellsFunction
PowellsFunction	ceres-solver/internal/ceres/system_test.cc	/^class PowellsFunction {$/;"	c	namespace:ceres::internal	file:
Power	cartographer/cartographer/common/math.h	/^constexpr T Power(T base, int exponent) {$/;"	f	namespace:cartographer::common
PreSolveSummarize	ceres-solver/internal/ceres/solver.cc	/^void PreSolveSummarize(const Solver::Options& options,$/;"	f	namespace:ceres::__anon190
PrecomputationGrid2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^PrecomputationGrid2D::PrecomputationGrid2D($/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
PrecomputationGrid2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^class PrecomputationGrid2D {$/;"	c	namespace:cartographer::mapping::scan_matching
PrecomputationGrid3D	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	/^  explicit PrecomputationGrid3D(const float resolution)$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGrid3D
PrecomputationGrid3D	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	/^class PrecomputationGrid3D : public HybridGridBase<uint8> {$/;"	c	namespace:cartographer::mapping::scan_matching
PrecomputationGridStack2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^PrecomputationGridStack2D::PrecomputationGridStack2D($/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGridStack2D
PrecomputationGridStack2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^class PrecomputationGridStack2D {$/;"	c	namespace:cartographer::mapping::scan_matching
PrecomputationGridStack3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^PrecomputationGridStack3D::PrecomputationGridStack3D($/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGridStack3D
PrecomputationGridStack3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^class PrecomputationGridStack3D {$/;"	c	namespace:cartographer::mapping::scan_matching
PrecomputeGrid	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^PrecomputationGrid3D PrecomputeGrid(const PrecomputationGrid3D& grid,$/;"	f	namespace:cartographer::mapping::scan_matching
PrecomputeValueToBoundedFloat	cartographer/cartographer/mapping/probability_values.cc	/^std::unique_ptr<std::vector<float>> PrecomputeValueToBoundedFloat($/;"	f	namespace:cartographer::mapping::__anon66
PrecomputeValueToCorrespondenceCost	cartographer/cartographer/mapping/probability_values.cc	/^std::unique_ptr<std::vector<float>> PrecomputeValueToCorrespondenceCost() {$/;"	f	namespace:cartographer::mapping::__anon66
PrecomputeValueToProbability	cartographer/cartographer/mapping/probability_values.cc	/^std::unique_ptr<std::vector<float>> PrecomputeValueToProbability() {$/;"	f	namespace:cartographer::mapping::__anon66
Preconditioner	ceres-solver/internal/ceres/preconditioner.h	/^class Preconditioner : public LinearOperator {$/;"	c	namespace:ceres::internal
PreconditionerForZeroEBlocks	ceres-solver/internal/ceres/preconditioner.cc	/^PreconditionerType Preconditioner::PreconditionerForZeroEBlocks($/;"	f	class:ceres::internal::Preconditioner
PreconditionerType	ceres-solver/include/ceres/types.h	/^enum PreconditionerType {$/;"	g	namespace:ceres
PreconditionerTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* PreconditionerTypeToString(PreconditionerType type) {$/;"	f	namespace:ceres
PredicateFormatterFromMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit PredicateFormatterFromMatcher(M m) : matcher_(internal::move(m)) {}$/;"	f	class:testing::internal::PredicateFormatterFromMatcher
PredicateFormatterFromMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class PredicateFormatterFromMatcher {$/;"	c	namespace:testing::internal
Prepare	ceres-solver/internal/ceres/block_evaluate_preparer.cc	/^void BlockEvaluatePreparer::Prepare(const ResidualBlock* residual_block,$/;"	f	class:ceres::internal::BlockEvaluatePreparer
Prepare	ceres-solver/internal/ceres/scratch_evaluate_preparer.cc	/^void ScratchEvaluatePreparer::Prepare(const ResidualBlock* residual_block,$/;"	f	class:ceres::internal::ScratchEvaluatePreparer
PreparePointCloud2Message	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^sensor_msgs::PointCloud2 PreparePointCloud2Message(const int64_t timestamp,$/;"	f	namespace:cartographer_ros::__anon132
Preprocess	ceres-solver/internal/ceres/line_search_preprocessor.cc	/^bool LineSearchPreprocessor::Preprocess(const Solver::Options& options,$/;"	f	class:ceres::internal::LineSearchPreprocessor
Preprocess	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^bool TrustRegionPreprocessor::Preprocess(const Solver::Options& options,$/;"	f	class:ceres::internal::TrustRegionPreprocessor
PreprocessForGivenLinearSolverAndVerify	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  void PreprocessForGivenLinearSolverAndVerify($/;"	f	class:ceres::internal::LinearSolverAndEvaluatorCreationTest
PreprocessedProblem	ceres-solver/internal/ceres/preprocessor.h	/^  PreprocessedProblem()$/;"	f	struct:ceres::internal::PreprocessedProblem
PreprocessedProblem	ceres-solver/internal/ceres/preprocessor.h	/^struct PreprocessedProblem {$/;"	s	namespace:ceres::internal
Preprocessor	ceres-solver/internal/ceres/preprocessor.h	/^class Preprocessor {$/;"	c	namespace:ceres::internal
PrettyUnitTestResultPrinter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  PrettyUnitTestResultPrinter() {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrettyUnitTestResultPrinter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class PrettyUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
Print	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter
Print	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(const char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(const wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter
Print	ceres-solver/internal/ceres/suitesparse.h	/^  void Print(cholmod_dense* m, const std::string& name) {$/;"	f	class:ceres::internal::SuiteSparse
Print	ceres-solver/internal/ceres/suitesparse.h	/^  void Print(cholmod_sparse* m, const std::string& name) {$/;"	f	class:ceres::internal::SuiteSparse
Print	ceres-solver/internal/ceres/suitesparse.h	/^  void Print(cholmod_triplet* m, const std::string& name) {$/;"	f	class:ceres::internal::SuiteSparse
PrintAsActionResult	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void PrintAsActionResult(::std::ostream* \/* os *\/) const {}$/;"	f	class:testing::internal::ActionResultHolder
PrintAsActionResult	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void PrintAsActionResult(::std::ostream* os) const {$/;"	f	class:testing::internal::ActionResultHolder
PrintAsCharLiteralTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintAsStringLiteralTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {$/;"	f	namespace:testing::internal
PrintByteSegmentInObjectTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,$/;"	f	namespace:testing::__anon174
PrintBytesInObjectTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::internal2
PrintBytesInObjectToImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::__anon174
PrintCameraIntrinsics	ceres-solver/examples/libmv_bundle_adjuster.cc	/^void PrintCameraIntrinsics(const char *text, const double *camera_intrinsics) {$/;"	f	namespace:__anon155
PrintCharAndCodeTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintCharAndCodeTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal
PrintCharsAsStringTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void PrintCharsAsStringTo($/;"	f	namespace:testing::internal
PrintColorEncoded	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void PrintColorEncoded(const char* str) {$/;"	f	namespace:testing::internal
PrintFailedTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintFullTestCommentIfPresent	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintFullTestCommentIfPresent(const TestInfo& test_info) {$/;"	f	namespace:testing::internal
PrintHeader	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void PrintHeader(std::ostream* ss) const {$/;"	f	class:testing::internal::edit_distance::__anon166::Hunk	file:
PrintIfNotEmpty	ceres-solver/internal/ceres/gmock/gmock.h	/^inline void PrintIfNotEmpty(const internal::string& explanation,$/;"	f	namespace:testing::internal
PrintIndices	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void PrintIndices(::std::ostream* os) {$/;"	f	class:testing::internal::ArgsMatcherImpl
PrintOnOneLine	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void PrintOnOneLine(const char* str, int max_length) {$/;"	f	namespace:testing::internal
PrintPrefixTo	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void PrintPrefixTo(const Tuple& t, ::std::ostream* os) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintPrefixTo	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void PrintPrefixTo(const Tuple&, ::std::ostream*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
PrintRawArrayTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintReport	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  void PrintReport() {$/;"	f	class:cartographer_ros::__anon128::RangeDataChecker
PrintState	ceres-solver/examples/robot_pose_mle.cc	/^void PrintState(const vector<double>& odometry_readings,$/;"	f
PrintStringTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintStringTo(const ::std::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintStringTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintStringTo(const ::string& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTestName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static void PrintTestName(const char * test_case, const char * test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter
PrintTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void PrintTestPartResult(const TestPartResult& test_part_result) {$/;"	f	namespace:testing::internal
PrintTestPartResultToString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::string PrintTestPartResultToString($/;"	f	namespace:testing::internal
PrintTo	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^void PrintTo(const Vector3f& x, std::ostream* os) {$/;"	f	namespace:Eigen
PrintTo	ceres-solver/internal/ceres/gmock/gmock.h	/^void PrintTo(const ReferenceWrapper<T>& ref, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void PrintTo(std::ostream* os) {$/;"	f	class:testing::internal::edit_distance::__anon166::Hunk
PrintTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintTo(const char* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintTo(const wchar_t* s, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintTo(signed char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintTo(unsigned char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintTo(wchar_t wc, ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(bool x, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const ::std::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const ::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const ::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(const unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void PrintTo(wchar_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo($/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const ::std::tuple<Types...>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintToString	ceres-solver/internal/ceres/gtest/gtest.h	/^::std::string PrintToString(const T& value) {$/;"	f	namespace:testing
PrintToStringParamName	ceres-solver/internal/ceres/gtest/gtest.h	/^struct PrintToStringParamName {$/;"	s	namespace:testing
PrintTupleTo	ceres-solver/internal/ceres/gtest/gtest.h	/^void PrintTupleTo(const Tuple& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal
PrintValue	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal2::TypeWithoutFormatter
PrintWideStringTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintWideStringTo(const ::std::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintWideStringTo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void PrintWideStringTo(const ::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal
PrintXmlTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
PrintXmlUnitTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
ProbabilityFromOdds	cartographer/cartographer/mapping/probability_values.h	/^inline float ProbabilityFromOdds(const float odds) {$/;"	f	namespace:cartographer::mapping
ProbabilityGrid	cartographer/cartographer/mapping/2d/probability_grid.cc	/^ProbabilityGrid::ProbabilityGrid(const MapLimits& limits)$/;"	f	class:cartographer::mapping::ProbabilityGrid
ProbabilityGrid	cartographer/cartographer/mapping/2d/probability_grid.cc	/^ProbabilityGrid::ProbabilityGrid(const proto::Grid2D& proto) : Grid2D(proto) {$/;"	f	class:cartographer::mapping::ProbabilityGrid
ProbabilityGrid	cartographer/cartographer/mapping/2d/probability_grid.h	/^class ProbabilityGrid : public Grid2D {$/;"	c	namespace:cartographer::mapping
ProbabilityGridPointsProcessor	cartographer/cartographer/io/probability_grid_points_processor.cc	/^ProbabilityGridPointsProcessor::ProbabilityGridPointsProcessor($/;"	f	class:cartographer::io::ProbabilityGridPointsProcessor
ProbabilityGridPointsProcessor	cartographer/cartographer/io/probability_grid_points_processor.h	/^class ProbabilityGridPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
ProbabilityGridRangeDataInserter2D	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.cc	/^ProbabilityGridRangeDataInserter2D::ProbabilityGridRangeDataInserter2D($/;"	f	class:cartographer::mapping::ProbabilityGridRangeDataInserter2D
ProbabilityGridRangeDataInserter2D	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^class ProbabilityGridRangeDataInserter2D : public RangeDataInserterInterface {$/;"	c	namespace:cartographer::mapping
ProbabilityToColor	cartographer/cartographer/io/probability_grid_points_processor.cc	/^uint8 ProbabilityToColor(float probability_from_grid) {$/;"	f	namespace:cartographer::io::__anon24
ProbabilityToCorrespondenceCost	cartographer/cartographer/mapping/probability_values.h	/^inline float ProbabilityToCorrespondenceCost(const float probability) {$/;"	f	namespace:cartographer::mapping
ProbabilityToLogOddsInteger	cartographer/cartographer/mapping/submaps.h	/^inline uint8 ProbabilityToLogOddsInteger(const float probability) {$/;"	f	namespace:cartographer::mapping
ProbabilityToValue	cartographer/cartographer/mapping/probability_values.h	/^inline uint16 ProbabilityToValue(const float probability) {$/;"	f	namespace:cartographer::mapping
ProbabilityValueToCorrespondenceCostValue	cartographer/cartographer/mapping/probability_values.h	/^inline uint16 ProbabilityValueToCorrespondenceCostValue($/;"	f	namespace:cartographer::mapping
Probe	ceres-solver/internal/ceres/gradient_checker.cc	/^bool GradientChecker::Probe(double const* const * parameters,$/;"	f	class:ceres::GradientChecker
ProbeResults	ceres-solver/include/ceres/gradient_checker.h	/^  struct CERES_EXPORT ProbeResults {$/;"	s	class:ceres::GradientChecker
Problem	ceres-solver/include/ceres/problem.h	/^class CERES_EXPORT Problem {$/;"	c	namespace:ceres
Problem	ceres-solver/internal/ceres/problem.cc	/^Problem::Problem() : problem_impl_(new internal::ProblemImpl) {}$/;"	f	class:ceres::Problem
Problem	ceres-solver/internal/ceres/problem.cc	/^Problem::Problem(const Problem::Options& options)$/;"	f	class:ceres::Problem
ProblemEvaluateTest	ceres-solver/internal/ceres/problem_test.cc	/^class ProblemEvaluateTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
ProblemImpl	ceres-solver/internal/ceres/problem_impl.cc	/^ProblemImpl::ProblemImpl() : program_(new internal::Program) {}$/;"	f	class:ceres::internal::ProblemImpl
ProblemImpl	ceres-solver/internal/ceres/problem_impl.cc	/^ProblemImpl::ProblemImpl(const Problem::Options& options)$/;"	f	class:ceres::internal::ProblemImpl
ProblemImpl	ceres-solver/internal/ceres/problem_impl.h	/^class ProblemImpl {$/;"	c	namespace:ceres::internal
Process	cartographer/cartographer/io/coloring_points_processor.cc	/^void ColoringPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::ColoringPointsProcessor
Process	cartographer/cartographer/io/counting_points_processor.cc	/^void CountingPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::CountingPointsProcessor
Process	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.cc	/^void FixedRatioSamplingPointsProcessor::Process($/;"	f	class:cartographer::io::FixedRatioSamplingPointsProcessor
Process	cartographer/cartographer/io/frame_id_filtering_points_processor.cc	/^void FrameIdFilteringPointsProcessor::Process($/;"	f	class:cartographer::io::FrameIdFilteringPointsProcessor
Process	cartographer/cartographer/io/hybrid_grid_points_processor.cc	/^void HybridGridPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::HybridGridPointsProcessor
Process	cartographer/cartographer/io/intensity_to_color_points_processor.cc	/^void IntensityToColorPointsProcessor::Process($/;"	f	class:cartographer::io::IntensityToColorPointsProcessor
Process	cartographer/cartographer/io/min_max_range_filtering_points_processor.cc	/^void MinMaxRangeFiteringPointsProcessor::Process($/;"	f	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
Process	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^void OutlierRemovingPointsProcessor::Process($/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
Process	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^void PcdWritingPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::PcdWritingPointsProcessor
Process	cartographer/cartographer/io/ply_writing_points_processor.cc	/^void PlyWritingPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::PlyWritingPointsProcessor
Process	cartographer/cartographer/io/probability_grid_points_processor.cc	/^void ProbabilityGridPointsProcessor::Process($/;"	f	class:cartographer::io::ProbabilityGridPointsProcessor
Process	cartographer/cartographer/io/xray_points_processor.cc	/^void XRayPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::XRayPointsProcessor
Process	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^void XyzWriterPointsProcessor::Process(std::unique_ptr<PointsBatch> batch) {$/;"	f	class:cartographer::io::XyzWriterPointsProcessor
Process	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.cc	/^void RosMapWritingPointsProcessor::Process($/;"	f	class:cartographer_ros::RosMapWritingPointsProcessor
ProcessInPhaseOne	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^void OutlierRemovingPointsProcessor::ProcessInPhaseOne($/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
ProcessInPhaseThree	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^void OutlierRemovingPointsProcessor::ProcessInPhaseThree($/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
ProcessInPhaseTwo	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^void OutlierRemovingPointsProcessor::ProcessInPhaseTwo($/;"	f	class:cartographer::io::OutlierRemovingPointsProcessor
ProcessSendQueue	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::ProcessSendQueue() {$/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
ProcessSensorDataQueue	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::ProcessSensorDataQueue() {$/;"	f	class:cartographer::cloud::MapBuilderServer
Produce	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual T Produce() { return factory_(); }$/;"	f	class:testing::DefaultValue::FactoryValueProducer
Produce	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual T Produce() { return value_; }$/;"	f	class:testing::DefaultValue::FixedValueProducer
ProductParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT ProductParameterization : public LocalParameterization {$/;"	c	namespace:ceres
ProductParameterization	ceres-solver/internal/ceres/local_parameterization.cc	/^ProductParameterization::ProductParameterization($/;"	f	class:ceres::ProductParameterization
ProductParameterizationTest	ceres-solver/internal/ceres/local_parameterization_test.cc	/^class ProductParameterizationTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
ProductTerm	ceres-solver/internal/ceres/inner_product_computer.h	/^    ProductTerm(const int row, const int col, const int index)$/;"	f	struct:ceres::internal::InnerProductComputer::ProductTerm
ProductTerm	ceres-solver/internal/ceres/inner_product_computer.h	/^  struct ProductTerm {$/;"	s	class:ceres::internal::InnerProductComputer
Program	ceres-solver/internal/ceres/program.cc	/^Program::Program() {}$/;"	f	class:ceres::internal::Program
Program	ceres-solver/internal/ceres/program.cc	/^Program::Program(const Program& program)$/;"	f	class:ceres::internal::Program
Program	ceres-solver/internal/ceres/program.h	/^class Program {$/;"	c	namespace:ceres::internal
ProgramEvaluator	ceres-solver/internal/ceres/program_evaluator.h	/^  ProgramEvaluator(const Evaluator::Options &options, Program* program)$/;"	f	class:ceres::internal::ProgramEvaluator
ProgramEvaluator	ceres-solver/internal/ceres/program_evaluator.h	/^class ProgramEvaluator : public Evaluator {$/;"	c	namespace:ceres::internal
Project2D	cartographer/cartographer/transform/transform.h	/^Rigid2<T> Project2D(const Rigid3<T>& transform) {$/;"	f	namespace:cartographer::transform
Projective	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Projective {$/;"	s	namespace:ceres::internal	file:
PropertyMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class PropertyMatcher {$/;"	c	namespace:testing::internal
ProtoFromStringOrDie	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^T ProtoFromStringOrDie(const std::string& proto_string) {$/;"	f	namespace:cartographer::io::__anon22
ProtoStreamDeserializer	cartographer/cartographer/io/proto_stream_deserializer.cc	/^ProtoStreamDeserializer::ProtoStreamDeserializer($/;"	f	class:cartographer::io::ProtoStreamDeserializer
ProtoStreamDeserializer	cartographer/cartographer/io/proto_stream_deserializer.h	/^class ProtoStreamDeserializer {$/;"	c	namespace:cartographer::io
ProtoStreamDeserializerTest	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^class ProtoStreamDeserializerTest : public ::testing::Test {$/;"	c	namespace:cartographer::io::__anon22	file:
ProtoStreamReader	cartographer/cartographer/io/proto_stream.cc	/^ProtoStreamReader::ProtoStreamReader(const std::string& filename)$/;"	f	class:cartographer::io::ProtoStreamReader
ProtoStreamReader	cartographer/cartographer/io/proto_stream.h	/^class ProtoStreamReader : public ProtoStreamReaderInterface {$/;"	c	namespace:cartographer::io
ProtoStreamReaderInterface	cartographer/cartographer/io/proto_stream_interface.h	/^class ProtoStreamReaderInterface {$/;"	c	namespace:cartographer::io
ProtoStreamTest	cartographer/cartographer/io/proto_stream_test.cc	/^class ProtoStreamTest : public ::testing::Test {$/;"	c	namespace:cartographer::io::__anon16	file:
ProtoStreamWriter	cartographer/cartographer/io/proto_stream.cc	/^ProtoStreamWriter::ProtoStreamWriter(const std::string& filename)$/;"	f	class:cartographer::io::ProtoStreamWriter
ProtoStreamWriter	cartographer/cartographer/io/proto_stream.h	/^class ProtoStreamWriter : public ProtoStreamWriterInterface {$/;"	c	namespace:cartographer::io
ProtoStreamWriterInterface	cartographer/cartographer/io/proto_stream_interface.h	/^class ProtoStreamWriterInterface {$/;"	c	namespace:cartographer::io
PublishConstraintList	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::PublishConstraintList($/;"	f	class:cartographer_ros::Node
PublishKidnappedSubmapList	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::PublishKidnappedSubmapList(const ::ros::WallTimerEvent& unused_timer_event) {$/;"	f	class:cartographer_ros::Node
PublishLandmarkPosesList	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::PublishLandmarkPosesList($/;"	f	class:cartographer_ros::Node
PublishSubmapList	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::PublishSubmapList(const ::ros::WallTimerEvent& unused_timer_event) {$/;"	f	class:cartographer_ros::Node
PublishTrajectoryNodeList	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::PublishTrajectoryNodeList($/;"	f	class:cartographer_ros::Node
PublishTrajectoryStates	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::PublishTrajectoryStates(const ::ros::WallTimerEvent& timer_event) {$/;"	f	class:cartographer_ros::Node
PublishWithModifiedTimestamp	cartographer_ros/cartographer_ros/cartographer_ros/dev/rosbag_publisher_main.cc	/^void PublishWithModifiedTimestamp(MessagePtrType message,$/;"	f
PublishWithModifiedTimestamp	cartographer_ros/cartographer_ros/cartographer_ros/dev/rosbag_publisher_main.cc	/^void PublishWithModifiedTimestamp<tf2_msgs::TFMessage::Ptr>($/;"	f
Pulse	cartographer/cartographer/common/fixed_ratio_sampler.cc	/^bool FixedRatioSampler::Pulse() {$/;"	f	class:cartographer::common::FixedRatioSampler
Pulse	cartographer/cartographer/common/rate_timer.h	/^  void Pulse(common::Time time) {$/;"	f	class:cartographer::common::RateTimer
PureLocalizationTrimmer	cartographer/cartographer/mapping/pose_graph_trimmer.cc	/^PureLocalizationTrimmer::PureLocalizationTrimmer(const int trajectory_id,$/;"	f	class:cartographer::mapping::PureLocalizationTrimmer
PureLocalizationTrimmer	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^class PureLocalizationTrimmer : public PoseGraphTrimmer {$/;"	c	namespace:cartographer::mapping
Push	cartographer/cartographer/common/blocking_queue.h	/^  void Push(T t) {$/;"	f	class:cartographer::common::BlockingQueue
Push	cartographer/cartographer/common/lockless_queue.h	/^  void Push(std::unique_ptr<T> t) {$/;"	f	class:cartographer::common::LocklessQueue
Push	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^void TransformInterpolationBuffer::Push(const common::Time time,$/;"	f	class:cartographer::transform::TransformInterpolationBuffer
PushAndResetLineMarker	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^void PushAndResetLineMarker(visualization_msgs::Marker* marker,$/;"	f	namespace:cartographer_ros::__anon140
PushLine	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void PushLine(char edit, const char* line) {$/;"	f	class:testing::internal::edit_distance::__anon166::Hunk
PushNodeToList	cartographer/cartographer/common/lockless_queue.h	/^  void PushNodeToList(std::atomic<Node*>* list_head, Node* node) {$/;"	f	class:cartographer::common::LocklessQueue
PushValue	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void PushValue(lua_State* L, const int key) { lua_pushinteger(L, key); }$/;"	f	namespace:cartographer::common::__anon9
PushValue	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void PushValue(lua_State* L, const std::string& key) {$/;"	f	namespace:cartographer::common::__anon9
PushWithTimeout	cartographer/cartographer/common/blocking_queue.h	/^  bool PushWithTimeout(T t, const common::Duration timeout) {$/;"	f	class:cartographer::common::BlockingQueue
QUADRATIC	ceres-solver/include/ceres/types.h	/^  QUADRATIC,$/;"	e	enum:ceres::LineSearchInterpolationType
Q_SLOTS	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^ private Q_SLOTS:$/;"	m	struct:cartographer_rviz::Trajectory
Quadratic4DCostFunction	ceres-solver/internal/ceres/solver_test.cc	/^struct Quadratic4DCostFunction {$/;"	s	namespace:ceres::internal	file:
QuadraticCostFunction	ceres-solver/examples/denoising.cc	/^  QuadraticCostFunction(double a, double b)$/;"	f	class:ceres::examples::QuadraticCostFunction
QuadraticCostFunction	ceres-solver/examples/denoising.cc	/^class QuadraticCostFunction : public ceres::SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::examples	file:
QuadraticCostFunction	ceres-solver/examples/helloworld_analytic_diff.cc	/^class QuadraticCostFunction$/;"	c	file:
QuadraticCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  QuadraticCostFunction() {$/;"	f	class:ceres::internal::QuadraticCostFunction
QuadraticCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^class QuadraticCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
QuadraticCostFunctor	ceres-solver/internal/ceres/solver_test.cc	/^struct QuadraticCostFunctor {$/;"	s	namespace:ceres::internal	file:
QuadraticFirstOrderFunction	ceres-solver/internal/ceres/line_search_minimizer_test.cc	/^class QuadraticFirstOrderFunction : public ceres::FirstOrderFunction {$/;"	c	namespace:ceres::internal	file:
QuadraticTestFunction	ceres-solver/internal/ceres/gradient_problem_test.cc	/^  explicit QuadraticTestFunction(bool* flag_to_set_on_destruction = NULL)$/;"	f	class:ceres::internal::QuadraticTestFunction
QuadraticTestFunction	ceres-solver/internal/ceres/gradient_problem_test.cc	/^class QuadraticTestFunction : public ceres::FirstOrderFunction {$/;"	c	namespace:ceres::internal	file:
QuantifierMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit QuantifierMatcherImpl(InnerMatcher inner_matcher)$/;"	f	class:testing::internal::QuantifierMatcherImpl
QuantifierMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class QuantifierMatcherImpl : public MatcherInterface<Container> {$/;"	c	namespace:testing::internal
QuantilesToString	cartographer_ros/cartographer_ros/cartographer_ros/dev/trajectory_comparison_main.cc	/^std::string QuantilesToString(std::vector<double>* v) {$/;"	f	namespace:cartographer_ros::__anon134
QuaternionParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT QuaternionParameterization : public LocalParameterization {$/;"	c	namespace:ceres
QuaternionParameterizationTestHelper	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^void QuaternionParameterizationTestHelper(const double* x,$/;"	f	namespace:ceres::internal
QuaternionParameterizationTestHelper	ceres-solver/internal/ceres/local_parameterization_test.cc	/^void QuaternionParameterizationTestHelper($/;"	f	namespace:ceres::internal
QuaternionPlus	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^struct QuaternionPlus {$/;"	s	namespace:ceres::internal	file:
QuaternionPlus	ceres-solver/internal/ceres/local_parameterization_test.cc	/^struct QuaternionPlus {$/;"	s	namespace:ceres::internal	file:
QuaternionProduct	cartographer/cartographer/common/math.h	/^inline void QuaternionProduct(const double* const z, const T* const w,$/;"	f	namespace:cartographer::common
QuaternionProduct	ceres-solver/include/ceres/rotation.h	/^void QuaternionProduct(const T z[4], const T w[4], T zw[4]) {$/;"	f	namespace:ceres
QuaternionRotatePoint	ceres-solver/include/ceres/rotation.h	/^void QuaternionRotatePoint(const T q[4], const T pt[3], T result[3]) {$/;"	f	namespace:ceres
QuaternionToAngleAxis	ceres-solver/include/ceres/rotation.h	/^inline void QuaternionToAngleAxis(const T* quaternion, T* angle_axis) {$/;"	f	namespace:ceres
QuaternionToRotation	ceres-solver/include/ceres/rotation.h	/^void QuaternionToRotation(const T q[4], T R[3 * 3]) {$/;"	f	namespace:ceres
QuaternionToRotation	ceres-solver/include/ceres/rotation.h	/^void QuaternionToRotation(const T q[4],$/;"	f	namespace:ceres
QuaternionToScaledRotation	ceres-solver/include/ceres/rotation.h	/^void QuaternionToScaledRotation($/;"	f	namespace:ceres
QuaternionToScaledRotation	ceres-solver/include/ceres/rotation.h	/^void QuaternionToScaledRotation(const T q[4], T R[3 * 3]) {$/;"	f	namespace:ceres
QuaternionToScaledRotation	ceres-solver/internal/ceres/autodiff_test.cc	/^void QuaternionToScaledRotation(A const q[4], A R[3 * 3]) {$/;"	f	namespace:ceres::internal
QueryInProgress	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^bool DrawableSubmap::QueryInProgress() {$/;"	f	class:cartographer_rviz::DrawableSubmap
Queue	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  struct Queue {$/;"	s	class:cartographer::sensor::OrderedMultiQueue
QueueKey	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^struct QueueKey {$/;"	s	namespace:cartographer::sensor
QuoteStringOnStack	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void QuoteStringOnStack(lua_State* L) {$/;"	f	namespace:cartographer::common::__anon9
Quoted	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  enum class Quoted { YES, NO };$/;"	c	class:cartographer::common::LuaParameterDictionary
R	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  Mat3 R;$/;"	m	struct:__anon155::EuclideanCamera	file:
R	ceres-solver/internal/ceres/autodiff_test.cc	119;"	d	file:
R	ceres-solver/internal/ceres/autodiff_test.cc	123;"	d	file:
RANGE	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^      RANGE = 0,$/;"	m	class:cartographer::mapping::TrajectoryBuilderInterface::SensorId::SensorType
RE	ceres-solver/internal/ceres/gtest/gtest.h	/^  RE(const ::std::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	ceres-solver/internal/ceres/gtest/gtest.h	/^  RE(const ::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	ceres-solver/internal/ceres/gtest/gtest.h	/^  RE(const RE& other) { Init(other.pattern()); }$/;"	f	class:std::tr1::RE
RE	ceres-solver/internal/ceres/gtest/gtest.h	/^  RE(const char* regex) { Init(regex); }  \/\/ NOLINT$/;"	f	class:std::tr1::RE
RE	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ RE {$/;"	c	namespace:std::tr1
REGISTER_TYPED_TEST_CASE_P	ceres-solver/internal/ceres/gtest/gtest.h	18652;"	d
RELEASE	cartographer/cartographer/common/mutex.h	50;"	d
REQUIRES	cartographer/cartographer/common/blocking_queue.h	/^  bool QueueEmptyCondition() REQUIRES(mutex_) { return deque_.empty(); }$/;"	f	class:cartographer::common::BlockingQueue
REQUIRES	cartographer/cartographer/common/blocking_queue.h	/^  bool QueueNotFullCondition() REQUIRES(mutex_) {$/;"	f	class:cartographer::common::BlockingQueue
REQUIRES	cartographer/cartographer/common/mutex.h	44;"	d
RETURNED	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
RETURN_IF_ERROR_AND_LOG	ceres-solver/internal/ceres/trust_region_minimizer.cc	53;"	d	file:
RIDDERS	ceres-solver/include/ceres/types.h	/^  RIDDERS$/;"	e	enum:ceres::NumericDiffMethodType
ROOT	cartographer/scripts/update_configuration_doc.py	/^ROOT = 'cartographer'$/;"	v
RUNNING	cartographer/cartographer/common/task.h	/^  enum State { NEW, DISPATCHED, DEPENDENCIES_COMPLETED, RUNNING, COMPLETED };$/;"	e	enum:cartographer::common::Task::State
RUN_ALL_TESTS	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int RUN_ALL_TESTS() {$/;"	f
RadToDeg	cartographer/cartographer/common/math.h	/^constexpr double RadToDeg(double rad) { return 180. * rad \/ M_PI; }$/;"	f	namespace:cartographer::common
Radius	ceres-solver/internal/ceres/dogleg_strategy.cc	/^double DoglegStrategy::Radius() const {$/;"	f	class:ceres::internal::DoglegStrategy
Radius	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^double LevenbergMarquardtStrategy::Radius() const {$/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
RandDouble	ceres-solver/examples/random.h	/^inline double RandDouble() {$/;"	f	namespace:ceres::examples
RandDouble	ceres-solver/internal/ceres/random.h	/^inline double RandDouble() {$/;"	f	namespace:ceres
RandDouble	ceres-solver/internal/ceres/rotation_test.cc	/^double RandDouble() {$/;"	f	namespace:ceres::internal
RandNormal	ceres-solver/examples/random.h	/^inline double RandNormal() {$/;"	f	namespace:ceres::examples
RandNormal	ceres-solver/internal/ceres/random.h	/^inline double RandNormal() {$/;"	f	namespace:ceres
Random	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit Random(UInt32 seed) : state_(seed) {}$/;"	f	class:testing::internal::Random
Random	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ Random {$/;"	c	namespace:testing::internal
RandomHybridGridTest	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^  RandomHybridGridTest() : hybrid_grid_(2.f), values_() {$/;"	f	class:cartographer::mapping::__anon110::RandomHybridGridTest
RandomHybridGridTest	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^class RandomHybridGridTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon110	file:
RandomMatrix	ceres-solver/internal/ceres/normal_prior_test.cc	/^void RandomMatrix(Matrix* m) {$/;"	f	namespace:ceres::internal
RandomMatrixOptions	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    RandomMatrixOptions()$/;"	f	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
RandomMatrixOptions	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  struct RandomMatrixOptions {$/;"	s	class:ceres::internal::BlockSparseMatrix
RandomMatrixOptions	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    RandomMatrixOptions()$/;"	f	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
RandomMatrixOptions	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  struct RandomMatrixOptions {$/;"	s	class:ceres::internal::CompressedRowSparseMatrix
RandomMatrixOptions	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  struct RandomMatrixOptions {$/;"	s	class:ceres::internal::TripletSparseMatrix
RandomPSDMatrixWithEigenValues	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^typename EigenTypes<kSize, kSize>::Matrix RandomPSDMatrixWithEigenValues($/;"	f	namespace:ceres::internal
RandomTransform	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^  transform::Rigid3d RandomTransform(double translation_size,$/;"	f	class:cartographer::mapping::optimization::__anon87::OptimizationProblem3DTest
RandomVector	ceres-solver/internal/ceres/normal_prior_test.cc	/^void RandomVector(Vector* v) {$/;"	f	namespace:ceres::internal
RandomYawOnlyTransform	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^  transform::Rigid3d RandomYawOnlyTransform(double translation_size,$/;"	f	class:cartographer::mapping::optimization::__anon87::OptimizationProblem3DTest
Randomize	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void MatchMatrix::Randomize() {$/;"	f	class:testing::internal::MatchMatrix
RandomizedCostFunction	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  RandomizedCostFunction(double noise_factor, unsigned int random_seed)$/;"	f	class:ceres::internal::RandomizedCostFunction
RandomizedCostFunction	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class RandomizedCostFunction : public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal
RandomizedFunctor	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  RandomizedFunctor(double noise_factor, unsigned int random_seed)$/;"	f	class:ceres::internal::RandomizedFunctor
RandomizedFunctor	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class RandomizedFunctor {$/;"	c	namespace:ceres::internal
Range	cartographer/cartographer/mapping/id.h	/^  Range(const IteratorType& begin, const IteratorType& end)$/;"	f	class:cartographer::mapping::Range
Range	cartographer/cartographer/mapping/id.h	/^class Range {$/;"	c	namespace:cartographer::mapping
Range	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ParamGenerator<T> Range(T start, T end) {$/;"	f	namespace:testing
Range	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {$/;"	f	namespace:testing
RangeChecksum	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^      RangeChecksum;$/;"	t	class:cartographer_ros::__anon128::RangeDataChecker	file:
RangeConstraint	ceres-solver/examples/robot_pose_mle.cc	/^  RangeConstraint($/;"	f	struct:RangeConstraint
RangeConstraint	ceres-solver/examples/robot_pose_mle.cc	/^struct RangeConstraint {$/;"	s	file:
RangeCostFunction	ceres-solver/examples/robot_pose_mle.cc	/^      RangeCostFunction;$/;"	t	struct:RangeConstraint	file:
RangeData	cartographer/cartographer/sensor/range_data.h	/^struct RangeData {$/;"	s	namespace:cartographer::sensor
RangeDataChecker	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^class RangeDataChecker {$/;"	c	namespace:cartographer_ros::__anon128	file:
RangeDataCollator	cartographer/cartographer/mapping/internal/range_data_collator.h	/^  explicit RangeDataCollator($/;"	f	class:cartographer::mapping::RangeDataCollator
RangeDataCollator	cartographer/cartographer/mapping/internal/range_data_collator.h	/^class RangeDataCollator {$/;"	c	namespace:cartographer::mapping
RangeDataInserter3D	cartographer/cartographer/mapping/3d/range_data_inserter_3d.cc	/^RangeDataInserter3D::RangeDataInserter3D($/;"	f	class:cartographer::mapping::RangeDataInserter3D
RangeDataInserter3D	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	/^class RangeDataInserter3D {$/;"	c	namespace:cartographer::mapping
RangeDataInserter3DTest	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  RangeDataInserter3DTest() : hybrid_grid_(1.f) {$/;"	f	class:cartographer::mapping::__anon109::RangeDataInserter3DTest
RangeDataInserter3DTest	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^class RangeDataInserter3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon109	file:
RangeDataInserterInterface	cartographer/cartographer/mapping/range_data_inserter_interface.h	/^class RangeDataInserterInterface {$/;"	c	namespace:cartographer::mapping
RangeDataInserterTest2D	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^  RangeDataInserterTest2D()$/;"	f	class:cartographer::mapping::__anon61::RangeDataInserterTest2D
RangeDataInserterTest2D	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^class RangeDataInserterTest2D : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::__anon61	file:
RangeDataTest	cartographer/cartographer/sensor/range_data_test.cc	/^  RangeDataTest() : origin_(Eigen::Vector3f(1, 1, 1)) {$/;"	f	class:cartographer::sensor::__anon120::RangeDataTest
RangeDataTest	cartographer/cartographer/sensor/range_data_test.cc	/^class RangeDataTest : public ::testing::Test {$/;"	c	namespace:cartographer::sensor::__anon120	file:
RangeGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^  RangeGenerator(T begin, T end, IncrementT step)$/;"	f	class:testing::internal::RangeGenerator
RangeGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^class RangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
RangeMeasurement	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  struct RangeMeasurement {$/;"	s	struct:cartographer::sensor::TimedPointCloudOriginData
RankDeficientCovarianceTest	ceres-solver/internal/ceres/covariance_test.cc	/^class RankDeficientCovarianceTest : public CovarianceTest {$/;"	c	namespace:ceres::internal	file:
RateTimer	cartographer/cartographer/common/rate_timer.h	/^  explicit RateTimer(const common::Duration window_duration)$/;"	f	class:cartographer::common::RateTimer
RateTimer	cartographer/cartographer/common/rate_timer.h	/^class RateTimer {$/;"	c	namespace:cartographer::common
RawArgsTuple	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(ArgsTuple) RawArgsTuple;$/;"	t	class:testing::internal::ArgsMatcherImpl
RawContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
RawContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::QuantifierMatcherImpl
RawContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
RawElement	ceres-solver/internal/ceres/gmock/gmock.h	/^      typename internal::PointeeOf<ElementPointer>::type) RawElement;$/;"	t	class:testing::internal::StlContainerView
RawElement	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_CONST_(Element) RawElement;$/;"	t	class:testing::internal::StlContainerView
RawPairType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;$/;"	t	class:testing::internal::KeyMatcherImpl
RawPairType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;$/;"	t	class:testing::internal::PairMatcherImpl
ReactionToSharding	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  enum ReactionToSharding {$/;"	g	class:testing::internal::UnitTestImpl	file:
Read	cartographer/cartographer/io/proto_stream.cc	/^bool ProtoStreamReader::Read(std::string* decompressed_data) {$/;"	f	class:cartographer::io::ProtoStreamReader
Read	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  T Read(void) const {$/;"	f	class:__anon155::EndianAwareFileReader
Read	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int Read(int fd, void* buf, unsigned int count) {$/;"	f	namespace:std::tr1::posix
ReadAndInterpretStatusByte	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void DeathTestImpl::ReadAndInterpretStatusByte() {$/;"	f	class:testing::internal::DeathTestImpl
ReadBuilderOptions	cartographer/cartographer/io/serialization_format_migration.cc	/^bool ReadBuilderOptions($/;"	f	namespace:cartographer::io::__anon19
ReadConstraint	ceres-solver/examples/slam/common/read_g2o.h	/^void ReadConstraint(std::ifstream* infile,$/;"	f	namespace:ceres::examples
ReadCost	ceres-solver/include/ceres/jet.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::NumTraits::__anon150
ReadData	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  void ReadData(const string& filename) {$/;"	f	class:ceres::internal::BundleAdjustmentProblem	file:
ReadEntireFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string ReadEntireFile(FILE* file) {$/;"	f	namespace:testing::internal
ReadFileToStringOrDie	ceres-solver/internal/ceres/file.cc	/^void ReadFileToStringOrDie(const string &filename, string *data) {$/;"	f	namespace:ceres::internal
ReadFromFile	ceres-solver/examples/pgm_image.h	/^bool PGMImage<Real>::ReadFromFile(std::string filename) {$/;"	f	class:ceres::examples::PGMImage
ReadG2oFile	ceres-solver/examples/slam/common/read_g2o.h	/^bool ReadG2oFile(const std::string& filename,$/;"	f	namespace:ceres::examples
ReadHeaderOrDie	cartographer/cartographer/io/proto_stream_deserializer.cc	/^mapping::proto::SerializationHeader ReadHeaderOrDie($/;"	f	namespace:cartographer::io::__anon20
ReadMatrix3x3	ceres-solver/examples/libmv_bundle_adjuster.cc	/^void ReadMatrix3x3(const EndianAwareFileReader &file_reader,$/;"	f	namespace:__anon155
ReadNextPoint	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^void CompressedPointCloud::ConstIterator::ReadNextPoint() {$/;"	f	class:cartographer::sensor::CompressedPointCloud::ConstIterator
ReadNextSerializedData	cartographer/cartographer/io/proto_stream_deserializer.cc	/^bool ProtoStreamDeserializer::ReadNextSerializedData($/;"	f	class:cartographer::io::ProtoStreamDeserializer
ReadPoseGraph	cartographer/cartographer/io/serialization_format_migration.cc	/^bool ReadPoseGraph(cartographer::io::ProtoStreamReaderInterface* const input,$/;"	f	namespace:cartographer::io::__anon19
ReadProblemFromFile	ceres-solver/examples/libmv_bundle_adjuster.cc	/^bool ReadProblemFromFile(const std::string &file_name,$/;"	f	namespace:__anon155
ReadProcFileField	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^T ReadProcFileField(const string& filename, int field) {$/;"	f	namespace:testing::internal::__anon172
ReadProto	cartographer/cartographer/io/internal/in_memory_proto_stream.cc	/^bool InMemoryProtoStreamReader::ReadProto(google::protobuf::Message* proto) {$/;"	f	class:cartographer::io::InMemoryProtoStreamReader
ReadProto	cartographer/cartographer/io/proto_stream.cc	/^bool ProtoStreamReader::ReadProto(google::protobuf::Message* proto) {$/;"	f	class:cartographer::io::ProtoStreamReader
ReadRangeMessage	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  static void ReadRangeMessage(const MessageType& message,$/;"	f	class:cartographer_ros::__anon128::RangeDataChecker	file:
ReadRelationsTextFile	cartographer/cartographer/ground_truth/relations_text_file.cc	/^proto::GroundTruth ReadRelationsTextFile($/;"	f	namespace:cartographer::ground_truth
ReadSizeAsLittleEndian	cartographer/cartographer/io/proto_stream.cc	/^bool ReadSizeAsLittleEndian(std::istream* in, uint64* size) {$/;"	f	namespace:cartographer::io::__anon17
ReadStaticTransformsFromUrdf	cartographer_ros/cartographer_ros/cartographer_ros/urdf_reader.cc	/^std::vector<geometry_msgs::TransformStamped> ReadStaticTransformsFromUrdf($/;"	f	namespace:cartographer_ros
ReadVector3	ceres-solver/examples/libmv_bundle_adjuster.cc	/^void ReadVector3(const EndianAwareFileReader &file_reader,$/;"	f	namespace:__anon155
ReadVertex	ceres-solver/examples/slam/common/read_g2o.h	/^bool ReadVertex(std::ifstream* infile,$/;"	f	namespace:ceres::examples
ReaderLock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderLock()   { CERES_SAFE_PTHREAD(pthread_rwlock_rdlock); }$/;"	f	class:ceres::internal::Mutex
ReaderLock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderLock()   { Lock(); }      \/\/ we don't have read-write locks$/;"	f	class:ceres::internal::Mutex
ReaderLock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderLock()   { Lock(); }$/;"	f	class:ceres::internal::Mutex
ReaderLock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderLock()   { assert(++mutex_ > 0); }$/;"	f	class:ceres::internal::Mutex
ReaderUnlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderUnlock() { CERES_SAFE_PTHREAD(pthread_rwlock_unlock); }$/;"	f	class:ceres::internal::Mutex
ReaderUnlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderUnlock() { Unlock(); }$/;"	f	class:ceres::internal::Mutex
ReaderUnlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::ReaderUnlock() { assert(mutex_-- > 0); }$/;"	f	class:ceres::internal::Mutex
Real	ceres-solver/include/ceres/jet.h	/^  typedef ceres::Jet<T, N> Real;$/;"	t	struct:Eigen::NumTraits
RealTimeCorrelativeScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^RealTimeCorrelativeScanMatcher2D::RealTimeCorrelativeScanMatcher2D($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher2D
RealTimeCorrelativeScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.h	/^class RealTimeCorrelativeScanMatcher2D {$/;"	c	namespace:cartographer::mapping::scan_matching
RealTimeCorrelativeScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^RealTimeCorrelativeScanMatcher3D::RealTimeCorrelativeScanMatcher3D($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher3D
RealTimeCorrelativeScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.h	/^class RealTimeCorrelativeScanMatcher3D {$/;"	c	namespace:cartographer::mapping::scan_matching
RealTimeCorrelativeScanMatcher3DTest	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^  RealTimeCorrelativeScanMatcher3DTest()$/;"	f	class:cartographer::mapping::scan_matching::__anon103::RealTimeCorrelativeScanMatcher3DTest
RealTimeCorrelativeScanMatcher3DTest	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^class RealTimeCorrelativeScanMatcher3DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon103	file:
RealTimeCorrelativeScanMatcherTest	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^  RealTimeCorrelativeScanMatcherTest()$/;"	f	class:cartographer::mapping::scan_matching::__anon76::RealTimeCorrelativeScanMatcherTest
RealTimeCorrelativeScanMatcherTest	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^class RealTimeCorrelativeScanMatcherTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon76	file:
Receive	cartographer/cartographer/common/thread_pool_test.cc	/^  void Receive(int number) {$/;"	f	class:cartographer::common::__anon5::Receiver
ReceiveGlobalSlamOptimizationsHandler	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^class ReceiveGlobalSlamOptimizationsHandler$/;"	c	namespace:cartographer::cloud::handlers
ReceiveLocalSlamResultsHandler	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^class ReceiveLocalSlamResultsHandler$/;"	c	namespace:cartographer::cloud::handlers
Receiver	cartographer/cartographer/common/thread_pool_test.cc	/^class Receiver {$/;"	c	namespace:cartographer::common::__anon5	file:
RecordProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static void RecordProperty(TestResult* test_result,$/;"	f	class:testing::internal::TestResultAccessor
RecordProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Test::RecordProperty(const std::string& key, const std::string& value) {$/;"	f	class:testing::Test
RecordProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Test::RecordProperty(const std::string& key, int value) {$/;"	f	class:testing::Test
RecordProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestResult::RecordProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
RecordProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTest::RecordProperty(const std::string& key,$/;"	f	class:testing::UnitTest
RecordProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::RecordProperty(const TestProperty& test_property) {$/;"	f	class:testing::internal::UnitTestImpl
ReducedLinearSystemAndSolution	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  void ReducedLinearSystemAndSolution(double* D,$/;"	f	class:ceres::internal::ImplicitSchurComplementTest
Ref	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::RefMatcher<T&> Ref(T& x) {  \/\/ NOLINT$/;"	f	namespace:testing
RefMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit RefMatcher(T& x) : object_(x) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RefMatcher
RefMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class RefMatcher<T&> {$/;"	c	namespace:testing::internal
RefToConstProperty	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef GTEST_REFERENCE_TO_CONST_(PropertyType) RefToConstProperty;$/;"	t	class:testing::internal::PropertyMatcher
ReferenceAllKeysAsIntegers	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^  void ReferenceAllKeysAsIntegers(LuaParameterDictionary* dict) {$/;"	f	class:cartographer::common::__anon3::LuaParameterDictionaryTest
ReferenceCount	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  enum class ReferenceCount { YES, NO };$/;"	c	class:cartographer::common::LuaParameterDictionary
ReferenceOrValueWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ReferenceOrValueWrapper(T value)$/;"	f	class:testing::internal::ReferenceOrValueWrapper
ReferenceOrValueWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ReferenceOrValueWrapper(reference ref)$/;"	f	class:testing::internal::ReferenceOrValueWrapper
ReferenceOrValueWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReferenceOrValueWrapper {$/;"	c	namespace:testing::internal
ReferenceOrValueWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReferenceOrValueWrapper<T&> {$/;"	c	namespace:testing::internal
ReferenceWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ReferenceWrapper(T& l_value) : pointer_(&l_value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReferenceWrapper
ReferenceWrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReferenceWrapper {$/;"	c	namespace:testing::internal
RegionsAlias	ceres-solver/internal/ceres/problem_impl.cc	/^bool RegionsAlias(const double* a, int size_a,$/;"	f	namespace:ceres::internal::__anon159
Register	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^void PointsProcessorPipelineBuilder::Register(const std::string& name,$/;"	f	class:cartographer::io::PointsProcessorPipelineBuilder
Register	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool Register(const char* \/*prefix*\/, CodeLocation,$/;"	f	class:testing::internal::TypeParameterizedTest
Register	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool Register(const char* \/*prefix*\/, CodeLocation,$/;"	f	class:testing::internal::TypeParameterizedTestCase
Register	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool Register(const char* prefix, CodeLocation code_location,$/;"	f	class:testing::internal::TypeParameterizedTestCase
Register	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool Register(const char* prefix,$/;"	f	class:testing::internal::TypeParameterizedTest
RegisterAllMetrics	cartographer/cartographer/metrics/register.cc	/^void RegisterAllMetrics(FamilyFactory* registry) {$/;"	f	namespace:cartographer::metrics
RegisterBuiltInPointsProcessors	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^void RegisterBuiltInPointsProcessors($/;"	f	namespace:cartographer::io
RegisterFileWritingPointsProcessor	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^void RegisterFileWritingPointsProcessor($/;"	f	namespace:cartographer::io
RegisterFileWritingPointsProcessorWithTrajectories	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^void RegisterFileWritingPointsProcessorWithTrajectories($/;"	f	namespace:cartographer::io
RegisterMapBuilderServerMetrics	cartographer/cartographer/cloud/map_builder_server_interface.cc	/^void RegisterMapBuilderServerMetrics(metrics::FamilyFactory* factory) {$/;"	f	namespace:cartographer::cloud
RegisterMetrics	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::RegisterMetrics(metrics::FamilyFactory* factory) {$/;"	f	class:cartographer::cloud::MapBuilderServer
RegisterMetrics	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^  static void RegisterMetrics(::cartographer::metrics::FamilyFactory* factory) {$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon35::Algorithm
RegisterMetrics	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^void LocalTrajectoryBuilder2D::RegisterMetrics($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
RegisterMetrics	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^void LocalTrajectoryBuilder3D::RegisterMetrics($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
RegisterMetrics	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::RegisterMetrics(metrics::FamilyFactory* factory) {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
RegisterMetrics	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::RegisterMetrics(metrics::FamilyFactory* factory) {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
RegisterParameterizedTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::RegisterParameterizedTests() {$/;"	f	class:testing::internal::UnitTestImpl
RegisterPlainPointsProcessor	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^void RegisterPlainPointsProcessor($/;"	f	namespace:cartographer::io
RegisterPointsProcessor	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^void AssetsWriter::RegisterPointsProcessor($/;"	f	class:cartographer_ros::AssetsWriter
RegisterTests	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseInfo
RegisterTests	ceres-solver/internal/ceres/gtest/gtest.h	/^  void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
RegisteredTestsMap	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::std::map<std::string, CodeLocation> RegisteredTestsMap;$/;"	t	class:testing::internal::TypedTestCasePState
RegressionDriver	ceres-solver/examples/nist.cc	/^int RegressionDriver(const string& filename,$/;"	f	namespace:ceres::examples
RegularizationCheckingLinearSolver	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^  RegularizationCheckingLinearSolver(const int num_cols, const double* diagonal)$/;"	f	class:ceres::internal::RegularizationCheckingLinearSolver
RegularizationCheckingLinearSolver	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^class RegularizationCheckingLinearSolver : public DenseSparseMatrixSolver {$/;"	c	namespace:ceres::internal	file:
ReinterpretBits	ceres-solver/internal/ceres/gtest/gtest.h	/^  static RawType ReinterpretBits(const Bits bits) {$/;"	f	class:testing::internal::FloatingPoint
RelationToSourceCopy	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RelationToSourceCopy {};$/;"	s	namespace:testing::internal
RelationToSourceReference	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RelationToSourceReference {};$/;"	s	namespace:testing::internal
Release	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventListener* TestEventListeners::Release(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
Release	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {$/;"	f	class:testing::internal::TestEventRepeater
RememberingCallback	ceres-solver/internal/ceres/solver_test.cc	/^  explicit RememberingCallback(double *x) : calls(0), x(x) {}$/;"	f	struct:ceres::internal::RememberingCallback
RememberingCallback	ceres-solver/internal/ceres/solver_test.cc	/^struct RememberingCallback : public IterationCallback {$/;"	s	namespace:ceres::internal	file:
Remove	ceres-solver/include/ceres/ordered_groups.h	/^  bool Remove(const T element) {$/;"	f	class:ceres::OrderedGroups
Remove	ceres-solver/include/ceres/ordered_groups.h	/^  int Remove(const std::vector<T>& elements) {$/;"	f	class:ceres::OrderedGroups
RemoveConst	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveConst<T[N]> {$/;"	s	namespace:testing::internal
RemoveConst	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveConst	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveConst<const T[N]> {$/;"	s	namespace:testing::internal
RemoveConstFromKey	ceres-solver/internal/ceres/gmock/gmock.h	/^struct RemoveConstFromKey {$/;"	s	namespace:testing::internal
RemoveConstFromKey	ceres-solver/internal/ceres/gmock/gmock.h	/^struct RemoveConstFromKey<std::pair<const K, V> > {$/;"	s	namespace:testing::internal
RemoveDiagonal	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::RemoveDiagonal() {$/;"	f	class:ceres::internal::DenseSparseMatrix
RemoveDirectoryName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::RemoveDirectoryName() const {$/;"	f	class:testing::internal::FilePath
RemoveExtension	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::RemoveExtension(const char* extension) const {$/;"	f	class:testing::internal::FilePath
RemoveFileName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::RemoveFileName() const {$/;"	f	class:testing::internal::FilePath
RemoveFixedBlocks	ceres-solver/internal/ceres/program.cc	/^bool Program::RemoveFixedBlocks(vector<double*>* removed_parameter_blocks,$/;"	f	class:ceres::internal::Program
RemoveInvalidXmlCharacters	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
RemoveLeadingZeros	ceres-solver/internal/ceres/polynomial.cc	/^Vector RemoveLeadingZeros(const Vector& polynomial_in) {$/;"	f	namespace:ceres::internal::__anon183
RemoveLogSink	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^inline void RemoveLogSink(LogSink *sink) {$/;"	f	namespace:google
RemoveParameterBlock	ceres-solver/internal/ceres/problem.cc	/^void Problem::RemoveParameterBlock(double* values) {$/;"	f	class:ceres::Problem
RemoveParameterBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::RemoveParameterBlock(double* values) {$/;"	f	class:ceres::internal::ProblemImpl
RemovePoints	cartographer/cartographer/io/points_batch.cc	/^void RemovePoints(std::unordered_set<int> to_remove, PointsBatch* batch) {$/;"	f	namespace:cartographer::io
RemoveReference	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveReference	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
RemoveResidualBlock	ceres-solver/internal/ceres/parameter_block.h	/^  void RemoveResidualBlock(ResidualBlock* residual_block) {$/;"	f	class:ceres::internal::ParameterBlock
RemoveResidualBlock	ceres-solver/internal/ceres/problem.cc	/^void Problem::RemoveResidualBlock(ResidualBlockId residual_block) {$/;"	f	class:ceres::Problem
RemoveResidualBlock	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::RemoveResidualBlock(ResidualBlock* residual_block) {$/;"	f	class:ceres::internal::ProblemImpl
RemoveTrailingPathSeparator	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;"	f	class:testing::internal::FilePath
RemoveValue	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^  void RemoveValue(const float value) {$/;"	f	class:cartographer::mapping::scan_matching::__anon78::SlidingWindowMaximum
RemoveVertex	ceres-solver/internal/ceres/graph.h	/^  bool RemoveVertex(const Vertex& vertex) {$/;"	f	class:ceres::internal::Graph
RemoveVertex	ceres-solver/internal/ceres/graph.h	/^  bool RemoveVertex(const Vertex& vertex) {$/;"	f	class:ceres::internal::WeightedGraph
ReorderProgram	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^bool ReorderProgram(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal::__anon192
ReorderProgramForSchurTypeLinearSolver	ceres-solver/internal/ceres/reorder_program.cc	/^bool ReorderProgramForSchurTypeLinearSolver($/;"	f	namespace:ceres::internal
ReorderProgramForSparseNormalCholesky	ceres-solver/internal/ceres/reorder_program.cc	/^bool ReorderProgramForSparseNormalCholesky($/;"	f	namespace:ceres::internal
ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest	ceres-solver/internal/ceres/reorder_program_test.cc	/^class ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest :$/;"	c	namespace:ceres::internal	file:
ReportFailure	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual void ReportFailure(FailureType type, const char* file, int line,$/;"	f	class:testing::internal::GoogleTestFailureReporter
ReportFailureInUnknownLocation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ReportFailureInUnknownLocation(TestPartResult::Type result_type,$/;"	f	namespace:testing::internal
ReportInvalidTestCaseType	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ReportInvalidTestCaseType(const char* test_case_name,$/;"	f	namespace:testing::internal
ReportTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void DefaultGlobalTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
ReportTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void DefaultPerThreadTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
ReportTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void HasNewFatalFailureHelper::ReportTestPartResult($/;"	f	class:testing::internal::HasNewFatalFailureHelper
ReportTestPartResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ScopedFakeTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ReportUninterestingCall	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ReportUninterestingCall(CallReaction reaction, const string& msg) {$/;"	f	namespace:testing::internal
RequireInitialization	ceres-solver/include/ceres/jet.h	/^    RequireInitialization = 1$/;"	e	enum:Eigen::NumTraits::__anon150
Reseed	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Reseed(UInt32 seed) { state_ = seed; }$/;"	f	class:testing::internal::Random
Reserve	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::Reserve(int new_max_num_nonzeros) {$/;"	f	class:ceres::internal::TripletSparseMatrix
Reset	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::Reset() { reset(); }$/;"	f	class:cartographer_rviz::SubmapsDisplay
Reset	ceres-solver/include/ceres/loss_function.h	/^  void Reset(LossFunction* rho, Ownership ownership) {$/;"	f	class:ceres::LossFunctionWrapper
Reset	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void AutoHandle::Reset() {$/;"	f	class:testing::internal::AutoHandle
Reset	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void AutoHandle::Reset(HANDLE handle) {$/;"	f	class:testing::internal::AutoHandle
ResetTimeStatistics	ceres-solver/internal/ceres/line_search.cc	/^void LineSearchFunction::ResetTimeStatistics() {$/;"	f	class:ceres::internal::LineSearchFunction
Residual10Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual10Param {$/;"	s	namespace:ceres::internal	file:
Residual1Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual1Param {$/;"	s	namespace:ceres::internal	file:
Residual2Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual2Param {$/;"	s	namespace:ceres::internal	file:
Residual3Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual3Param {$/;"	s	namespace:ceres::internal	file:
Residual4Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual4Param {$/;"	s	namespace:ceres::internal	file:
Residual5Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual5Param {$/;"	s	namespace:ceres::internal	file:
Residual6Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual6Param {$/;"	s	namespace:ceres::internal	file:
Residual7Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual7Param {$/;"	s	namespace:ceres::internal	file:
Residual8Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual8Param {$/;"	s	namespace:ceres::internal	file:
Residual9Param	ceres-solver/internal/ceres/autodiff_test.cc	/^struct Residual9Param {$/;"	s	namespace:ceres::internal	file:
ResidualBlock	ceres-solver/internal/ceres/residual_block.cc	/^ResidualBlock::ResidualBlock($/;"	f	class:ceres::internal::ResidualBlock
ResidualBlock	ceres-solver/internal/ceres/residual_block.h	/^class ResidualBlock {$/;"	c	namespace:ceres::internal
ResidualBlockId	ceres-solver/include/ceres/problem.h	/^typedef internal::ResidualBlock* ResidualBlockId;$/;"	t	namespace:ceres
ResidualBlockSet	ceres-solver/internal/ceres/parameter_block.h	/^  typedef HashSet<ResidualBlock*> ResidualBlockSet;$/;"	t	class:ceres::internal::ParameterBlock
ResidualBlockSet	ceres-solver/internal/ceres/problem_impl.h	/^  typedef HashSet<ResidualBlock*> ResidualBlockSet;$/;"	t	class:ceres::internal::ProblemImpl
Resize	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::Resize(int new_num_rows, int new_num_cols) {$/;"	f	class:ceres::internal::TripletSparseMatrix
ResolutionError	cartographer/scripts/update_configuration_doc.py	/^class ResolutionError(Exception):$/;"	c
ResolutionToggled	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::ResolutionToggled() {$/;"	f	class:cartographer_rviz::SubmapsDisplay
Resolve	cartographer/scripts/update_configuration_doc.py	/^  def Resolve(self, message_name, package_name):$/;"	m	class:Resolver
ResolveLuaParameters	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^ResolveLuaParameters(const std::string& lua_code) {$/;"	f	namespace:cartographer::mapping::test
Resolver	cartographer/scripts/update_configuration_doc.py	/^class Resolver(object):$/;"	c
Result	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  struct Result {$/;"	s	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::DoBothAction::Impl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnAction::Impl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnRefAction::Impl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::ReturnRefOfCopyAction::Impl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::WithArgsAction::Impl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::PolymorphicAction::MonomorphicImpl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::internal::IgnoreResultAction::Impl
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef R Result;$/;"	t	struct:testing::internal::Function
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::FunctionMockerBase
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<F>::Result Result;$/;"	t	class:testing::internal::TypedExpectation
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F1>::Result Result;$/;"	t	class:testing::internal::ActionAdaptor
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::Action
Result	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename internal::Function<F>::Result Result;$/;"	t	class:testing::ActionInterface
ResultHolder	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ActionResultHolder<Result> ResultHolder;$/;"	t	class:testing::internal::FunctionMockerBase
ResultOf	ceres-solver/internal/ceres/gmock/gmock.h	/^internal::ResultOfMatcher<Callable> ResultOf($/;"	f	namespace:testing
ResultOfMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  ResultOfMatcher(Callable callable, const Matcher<ResultType>& matcher)$/;"	f	class:testing::internal::ResultOfMatcher
ResultOfMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class ResultOfMatcher {$/;"	c	namespace:testing::internal
ResultType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ResType ResultType;$/;"	t	struct:testing::internal::CallableTraits
ResultType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename CallableTraits<Callable>::ResultType ResultType;$/;"	t	class:testing::internal::ResultOfMatcher
ResultType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Functor::result_type ResultType;$/;"	t	struct:testing::internal::CallableTraits
RetiresOnSaturation	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& RetiresOnSaturation() {$/;"	f	class:testing::internal::TypedExpectation
Return	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicAction<internal::ReturnVoidAction> Return() {$/;"	f	namespace:testing
Return	ceres-solver/internal/ceres/gmock/gmock.h	/^internal::ReturnAction<R> Return(R value) {$/;"	f	namespace:testing
ReturnAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ReturnAction(R value) : value_(new R(internal::move(value))) {}$/;"	f	class:testing::internal::ReturnAction
ReturnAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReturnAction {$/;"	c	namespace:testing::internal
ReturnNull	ceres-solver/internal/ceres/gmock/gmock.h	/^inline PolymorphicAction<internal::ReturnNullAction> ReturnNull() {$/;"	f	namespace:testing
ReturnNullAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReturnNullAction {$/;"	c	namespace:testing::internal
ReturnRef	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::ReturnRefAction<R> ReturnRef(R& x) {  \/\/ NOLINT$/;"	f	namespace:testing
ReturnRefAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ReturnRefAction(T& ref) : ref_(ref) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefAction
ReturnRefAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReturnRefAction {$/;"	c	namespace:testing::internal
ReturnRefOfCopy	ceres-solver/internal/ceres/gmock/gmock.h	/^inline internal::ReturnRefOfCopyAction<R> ReturnRefOfCopy(const R& x) {$/;"	f	namespace:testing
ReturnRefOfCopyAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit ReturnRefOfCopyAction(const T& value) : value_(value) {}  \/\/ NOLINT$/;"	f	class:testing::internal::ReturnRefOfCopyAction
ReturnRefOfCopyAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReturnRefOfCopyAction {$/;"	c	namespace:testing::internal
ReturnSentinel	ceres-solver/internal/ceres/gtest/gtest.h	/^    explicit ReturnSentinel(DeathTest* test) : test_(test) { }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
ReturnSentinel	ceres-solver/internal/ceres/gtest/gtest.h	/^  class ReturnSentinel {$/;"	c	class:testing::internal::DeathTest
ReturnType	ceres-solver/include/ceres/jet.h	/^  typedef ceres::Jet<T, N> ReturnType;$/;"	t	struct:Eigen::ScalarBinaryOpTraits
ReturnVoidAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class ReturnVoidAction {$/;"	c	namespace:testing::internal
Reverse	ceres-solver/include/ceres/ordered_groups.h	/^  void Reverse() {$/;"	f	class:ceres::OrderedGroups
RewriteMsg	cartographer_ros/cartographer_ros/scripts/remove_leading_slashes.py	/^def RewriteMsg(msg):$/;"	f
RhsSize	ceres-solver/internal/ceres/gmock/gmock.h	/^  size_t RhsSize() const { return num_matchers_; }$/;"	f	class:testing::internal::MatchMatrix
RhsStlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename RhsView::type RhsStlContainer;$/;"	t	class:testing::internal::PointwiseMatcher
RhsValue	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename RhsStlContainer::value_type RhsValue;$/;"	t	class:testing::internal::PointwiseMatcher
RhsView	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef internal::StlContainerView<RhsContainer> RhsView;$/;"	t	class:testing::internal::PointwiseMatcher
RightMultiply	ceres-solver/internal/ceres/block_jacobi_preconditioner.cc	/^void BlockJacobiPreconditioner::RightMultiply(const double* x,$/;"	f	class:ceres::internal::BlockJacobiPreconditioner
RightMultiply	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^void BlockRandomAccessDiagonalMatrix::RightMultiply(const double* x,$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
RightMultiply	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::RightMultiply(const double* x,  double* y) const {$/;"	f	class:ceres::internal::BlockSparseMatrix
RightMultiply	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  virtual void RightMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::CgnrLinearOperator
RightMultiply	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::RightMultiply(const double* x,$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
RightMultiply	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::RightMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::DenseSparseMatrix
RightMultiply	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^void ImplicitSchurComplement::RightMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::ImplicitSchurComplement
RightMultiply	ceres-solver/internal/ceres/low_rank_inverse_hessian.cc	/^void LowRankInverseHessian::RightMultiply(const double* x_ptr,$/;"	f	class:ceres::internal::LowRankInverseHessian
RightMultiply	ceres-solver/internal/ceres/preconditioner.cc	/^void SparseMatrixPreconditionerWrapper::RightMultiply(const double* x,$/;"	f	class:ceres::internal::SparseMatrixPreconditionerWrapper
RightMultiply	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual void RightMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter
RightMultiply	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual void RightMultiply(const double* x, double* y) const {$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter
RightMultiply	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^void SchurJacobiPreconditioner::RightMultiply(const double* x,$/;"	f	class:ceres::internal::SchurJacobiPreconditioner
RightMultiply	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::RightMultiply(const double* x,  double* y) const {$/;"	f	class:ceres::internal::TripletSparseMatrix
RightMultiply	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::RightMultiply(const double* x,$/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
RightMultiplyE	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^RightMultiplyE(const double* x, double* y) const {$/;"	f	class:ceres::internal::PartitionedMatrixView
RightMultiplyF	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^RightMultiplyF(const double* x, double* y) const {$/;"	f	class:ceres::internal::PartitionedMatrixView
Rigid2	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid2() : translation_(Vector::Zero()), rotation_(Rotation2D::Identity()) {}$/;"	f	class:cartographer::transform::Rigid2
Rigid2	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid2(const Vector& translation, const Rotation2D& rotation)$/;"	f	class:cartographer::transform::Rigid2
Rigid2	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid2(const Vector& translation, const double rotation)$/;"	f	class:cartographer::transform::Rigid2
Rigid2	cartographer/cartographer/transform/rigid_transform.h	/^class Rigid2 {$/;"	c	namespace:cartographer::transform
Rigid3	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid3() : translation_(Vector::Zero()), rotation_(Quaternion::Identity()) {}$/;"	f	class:cartographer::transform::Rigid3
Rigid3	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid3(const Vector& translation, const AngleAxis& rotation)$/;"	f	class:cartographer::transform::Rigid3
Rigid3	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid3(const Vector& translation, const Quaternion& rotation)$/;"	f	class:cartographer::transform::Rigid3
Rigid3	cartographer/cartographer/transform/rigid_transform.h	/^class Rigid3 {$/;"	c	namespace:cartographer::transform
RigidTransformTest	cartographer/cartographer/transform/rigid_transform_test.cc	/^class RigidTransformTest : public ::testing::Test {$/;"	c	namespace:cartographer::transform::__anon112	file:
RmDir	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int RmDir(const char* dir) { return _rmdir(dir); }$/;"	f	namespace:std::tr1::posix
RollPitchYaw	cartographer/cartographer/transform/rigid_transform.cc	/^Eigen::Quaterniond RollPitchYaw(const double roll, const double pitch,$/;"	f	namespace:cartographer::transform
RosMapWritingPointsProcessor	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.cc	/^RosMapWritingPointsProcessor::RosMapWritingPointsProcessor($/;"	f	class:cartographer_ros::RosMapWritingPointsProcessor
RosMapWritingPointsProcessor	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^class RosMapWritingPointsProcessor$/;"	c	namespace:cartographer_ros
Rosenbrock	ceres-solver/examples/rosenbrock.cc	/^class Rosenbrock : public ceres::FirstOrderFunction {$/;"	c	file:
Rosenbrock	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^class Rosenbrock : public ceres::FirstOrderFunction {$/;"	c	namespace:ceres::internal	file:
Rotate90DegreesClockwise	cartographer/cartographer/io/image.cc	/^void Image::Rotate90DegreesClockwise() {$/;"	f	class:cartographer::io::Image
RotateHistogram	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^Eigen::VectorXf RotateHistogram(const Eigen::VectorXf& histogram,$/;"	f	namespace:cartographer::mapping::scan_matching::__anon98
Rotation	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid2 Rotation(const Rotation2D& rotation) {$/;"	f	class:cartographer::transform::Rigid2
Rotation	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid2 Rotation(const double rotation) {$/;"	f	class:cartographer::transform::Rigid2
Rotation	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid3 Rotation(const AngleAxis& angle_axis) {$/;"	f	class:cartographer::transform::Rigid3
Rotation	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid3 Rotation(const Quaternion& rotation) {$/;"	f	class:cartographer::transform::Rigid3
RotationCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^  RotationCostFunction3D(const double scaling_factor,$/;"	f	class:cartographer::mapping::RotationCostFunction3D
RotationCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^class RotationCostFunction3D {$/;"	c	namespace:cartographer::mapping
RotationDeltaCostFunctor2D	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^  explicit RotationDeltaCostFunctor2D(const double scaling_factor,$/;"	f	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor2D
RotationDeltaCostFunctor2D	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^class RotationDeltaCostFunctor2D {$/;"	c	namespace:cartographer::mapping::scan_matching
RotationDeltaCostFunctor3D	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^  explicit RotationDeltaCostFunctor3D(const double scaling_factor,$/;"	f	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor3D
RotationDeltaCostFunctor3D	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^class RotationDeltaCostFunctor3D {$/;"	c	namespace:cartographer::mapping::scan_matching
RotationMatrix2D	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^Eigen::Matrix<T, 2, 2> RotationMatrix2D(T yaw_radians) {$/;"	f	namespace:ceres::examples
RotationMatrixToAngleAxis	ceres-solver/include/ceres/rotation.h	/^inline void RotationMatrixToAngleAxis(const T* R, T* angle_axis) {$/;"	f	namespace:ceres
RotationMatrixToAngleAxis	ceres-solver/include/ceres/rotation.h	/^void RotationMatrixToAngleAxis($/;"	f	namespace:ceres
RotationMatrixToQuaternion	ceres-solver/include/ceres/rotation.h	/^void RotationMatrixToQuaternion($/;"	f	namespace:ceres
RotationMatrixToQuaternion	ceres-solver/include/ceres/rotation.h	/^void RotationMatrixToQuaternion(const T* R, T* angle_axis) {$/;"	f	namespace:ceres
RotationQuaternionToAngleAxisVector	cartographer/cartographer/transform/transform.h	/^Eigen::Matrix<T, 3, 1> RotationQuaternionToAngleAxisVector($/;"	f	namespace:cartographer::transform
RotationalScanMatcher	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^RotationalScanMatcher::RotationalScanMatcher($/;"	f	class:cartographer::mapping::scan_matching::RotationalScanMatcher
RotationalScanMatcher	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.h	/^class RotationalScanMatcher {$/;"	c	namespace:cartographer::mapping::scan_matching
RoundToInt	cartographer/cartographer/common/port.h	/^inline int RoundToInt(const double x) { return std::lround(x); }$/;"	f	namespace:cartographer::common
RoundToInt	cartographer/cartographer/common/port.h	/^inline int RoundToInt(const float x) { return std::lround(x); }$/;"	f	namespace:cartographer::common
RoundToInt64	cartographer/cartographer/common/port.h	/^inline int64 RoundToInt64(const double x) { return std::lround(x); }$/;"	f	namespace:cartographer::common
RoundToInt64	cartographer/cartographer/common/port.h	/^inline int64 RoundToInt64(const float x) { return std::lround(x); }$/;"	f	namespace:cartographer::common
RowColLessThan	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^  RowColLessThan(const int* rows, const int* cols) : rows(rows), cols(cols) {}$/;"	f	struct:ceres::internal::__anon189::RowColLessThan
RowColLessThan	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^struct RowColLessThan {$/;"	s	namespace:ceres::internal::__anon189	file:
RowMajorAccess	ceres-solver/internal/ceres/autodiff_test.cc	/^T &RowMajorAccess(T *base, int rows, int cols, int i, int j) {$/;"	f	namespace:ceres::internal
RowMajorAdapter3x3	ceres-solver/include/ceres/rotation.h	/^MatrixAdapter<T, 3, 1> RowMajorAdapter3x3(T* pointer) {$/;"	f	namespace:ceres
Run	cartographer/cartographer/cloud/map_builder_server_main.cc	/^void Run(const std::string& configuration_directory,$/;"	f	namespace:cartographer::cloud
Run	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^  void Run() {$/;"	f	class:cartographer::cloud::metrics::prometheus::__anon35::Algorithm
Run	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^void Run(const std::string& pose_graph_filename,$/;"	f	namespace:cartographer::ground_truth::__anon51
Run	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^void Run(const std::string& pose_graph_filename,$/;"	f	namespace:cartographer::ground_truth::__anon49
Run	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^void AssetsWriter::Run(const std::string& configuration_directory,$/;"	f	class:cartographer_ros::AssetsWriter
Run	cartographer_ros/cartographer_ros/cartographer_ros/cartographer_grpc/node_grpc_main.cc	/^void Run() {$/;"	f	namespace:cartographer_ros::__anon143
Run	cartographer_ros/cartographer_ros/cartographer_ros/dev/trajectory_comparison_main.cc	/^void Run(const std::string& pbstream_filename,$/;"	f	namespace:cartographer_ros::__anon134
Run	cartographer_ros/cartographer_ros/cartographer_ros/node_main.cc	/^void Run() {$/;"	f	namespace:cartographer_ros::__anon130
Run	cartographer_ros/cartographer_ros/cartographer_ros/pbstream_map_publisher_main.cc	/^void Run(const std::string& pbstream_filename, const std::string& map_topic,$/;"	f	namespace:cartographer_ros::__anon142
Run	cartographer_ros/cartographer_ros/cartographer_ros/pbstream_to_ros_map_main.cc	/^void Run(const std::string& pbstream_filename, const std::string& map_filestem,$/;"	f	namespace:cartographer_ros::__anon138
Run	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^void Run(const std::string& bag_filename, const bool dump_timing) {$/;"	f	namespace:cartographer_ros::__anon128
Run	cartographer_ros/cartographer_ros/cartographer_ros/start_trajectory_main.cc	/^bool Run() {$/;"	f	namespace:cartographer_ros::__anon131
Run	ceres-solver/internal/ceres/gmock/gmock.h	/^  static OutIter Run(Func f, const Tuple& t, OutIter out) {$/;"	f	class:testing::internal::TransformTupleValuesHelper
Run	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::Run() {$/;"	f	class:testing::UnitTest
Run	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Test::Run() {$/;"	f	class:testing::Test
Run	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestCase::Run() {$/;"	f	class:testing::TestCase
Run	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestInfo::Run() {$/;"	f	class:testing::TestInfo
Run	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual void Run() {$/;"	f	class:std::tr1::ThreadWithParam::RunnableImpl
Run	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void Run() {$/;"	f	class:std::tr1::ThreadWithParam
RunAllTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool UnitTestImpl::RunAllTests() {$/;"	f	class:testing::internal::UnitTestImpl
RunCallbacks	ceres-solver/internal/ceres/minimizer.cc	/^bool Minimizer::RunCallbacks(const Minimizer::Options& options,$/;"	f	class:ceres::internal::Minimizer
RunFinalOptimization	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^void PoseGraphStub::RunFinalOptimization() {$/;"	f	class:cartographer::cloud::PoseGraphStub
RunFinalOptimization	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::RunFinalOptimization() {$/;"	f	class:cartographer::mapping::PoseGraph2D
RunFinalOptimization	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::RunFinalOptimization() {$/;"	f	class:cartographer::mapping::PoseGraph3D
RunFinalOptimization	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^void MapBuilderBridge::RunFinalOptimization() {$/;"	f	class:cartographer_ros::MapBuilderBridge
RunFinalOptimization	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::RunFinalOptimization() {$/;"	f	class:cartographer_ros::Node
RunFinalOptimizationHandler	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.h	/^class RunFinalOptimizationHandler$/;"	c	namespace:cartographer::cloud::handlers
RunLocalSlamResultsReader	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^void TrajectoryBuilderStub::RunLocalSlamResultsReader($/;"	f	class:cartographer::cloud::TrajectoryBuilderStub
RunNext	cartographer/cartographer/common/task_test.cc	/^  void RunNext() {$/;"	f	class:cartographer::common::__anon10::FakeThreadPool
RunOfflineNode	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^void RunOfflineNode(const MapBuilderFactory& map_builder_factory) {$/;"	f	namespace:cartographer_ros
RunOptimization	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::RunOptimization() {$/;"	f	class:cartographer::mapping::PoseGraph2D
RunOptimization	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::RunOptimization() {$/;"	f	class:cartographer::mapping::PoseGraph3D
RunPolynomialInterpolationTest	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  void RunPolynomialInterpolationTest(const Eigen::Matrix3d& coeff) {$/;"	f	class:ceres::internal::BiCubicInterpolatorTest
RunPolynomialInterpolationTest	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  void RunPolynomialInterpolationTest(const double a,$/;"	f	class:ceres::internal::CubicInterpolatorTest
RunPolynomialTestRealRoots	ceres-solver/internal/ceres/polynomial_test.cc	/^void RunPolynomialTestRealRoots(const double (&real_roots)[N],$/;"	f	namespace:ceres::internal::__anon163
RunSetUpTestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^  void RunSetUpTestCase() { (*set_up_tc_)(); }$/;"	f	class:testing::TestCase
RunSolverForConfigAndExpectResidualsMatch	ceres-solver/internal/ceres/test_util.h	/^  void RunSolverForConfigAndExpectResidualsMatch(const SolverConfig& config) {$/;"	f	class:ceres::internal::SystemTest
RunTearDownTestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^  void RunTearDownTestCase() { (*tear_down_tc_)(); }$/;"	f	class:testing::TestCase
RunWhenDoneCallback	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::RunWhenDoneCallback() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
RunWhenDoneCallback	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::RunWhenDoneCallback() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
Runnable	ceres-solver/internal/ceres/gtest/gtest.h	/^  class Runnable {$/;"	c	class:std::tr1::ThreadWithParamBase
RunnableImpl	ceres-solver/internal/ceres/gtest/gtest.h	/^    RunnableImpl(UserThreadFunc* func, T param)$/;"	f	class:std::tr1::ThreadWithParam::RunnableImpl
RunnableImpl	ceres-solver/internal/ceres/gtest/gtest.h	/^  class RunnableImpl : public Runnable {$/;"	c	class:std::tr1::ThreadWithParam
S1	ceres-solver/include/ceres/internal/fixed_array.h	/^  static const size_type S1 = ((inline_elements < 0)$/;"	m	class:ceres::internal::FixedArray
S2	ceres-solver/include/ceres/internal/fixed_array.h	/^  static const size_type S2 = (S1 <= 0) ? 1 : S1;$/;"	m	class:ceres::internal::FixedArray
SCHEMA	cartographer_ros/jenkins/worker.py	/^SCHEMA = [$/;"	v
SCHUR_JACOBI	ceres-solver/include/ceres/types.h	/^  SCHUR_JACOBI,$/;"	e	enum:ceres::PreconditionerType
SCOPED_CAPABILITY	cartographer/cartographer/common/mutex.h	38;"	d
SCOPED_TRACE	ceres-solver/internal/ceres/gtest/gtest.h	21081;"	d
SHARED_LIB_EXT	cartographer/bazel/third_party/cairo/config.h	332;"	d
SILENT	ceres-solver/include/ceres/types.h	/^  SILENT,$/;"	e	enum:ceres::LoggingType
SINGLE_LINKAGE	ceres-solver/include/ceres/types.h	/^  SINGLE_LINKAGE$/;"	e	enum:ceres::VisibilityClusteringType
SIZEOF_INT	cartographer/bazel/third_party/cairo/config.h	335;"	d
SIZEOF_LONG	cartographer/bazel/third_party/cairo/config.h	338;"	d
SIZEOF_LONG	cartographer/bazel/third_party/pixman/config.h	127;"	d
SIZEOF_LONG_LONG	cartographer/bazel/third_party/cairo/config.h	341;"	d
SIZEOF_SIZE_T	cartographer/bazel/third_party/cairo/config.h	344;"	d
SIZEOF_VOID_P	cartographer/bazel/third_party/cairo/config.h	347;"	d
SIZEOF_VOID_P	cartographer/bazel/third_party/fontconfig/config.h	297;"	d
SOLVER_ABORT	ceres-solver/include/ceres/types.h	/^  SOLVER_ABORT,$/;"	e	enum:ceres::CallbackReturnType
SOLVER_CONTINUE	ceres-solver/include/ceres/types.h	/^  SOLVER_CONTINUE,$/;"	e	enum:ceres::CallbackReturnType
SOLVER_TERMINATE_SUCCESSFULLY	ceres-solver/include/ceres/types.h	/^  SOLVER_TERMINATE_SUCCESSFULLY$/;"	e	enum:ceres::CallbackReturnType
SPARSE_NORMAL_CHOLESKY	ceres-solver/include/ceres/types.h	/^  SPARSE_NORMAL_CHOLESKY,$/;"	e	enum:ceres::LinearSolverType
SPARSE_QR	ceres-solver/include/ceres/types.h	/^  SPARSE_QR,$/;"	e	enum:ceres::CovarianceAlgorithmType
SPARSE_SCHUR	ceres-solver/include/ceres/types.h	/^  SPARSE_SCHUR,$/;"	e	enum:ceres::LinearSolverType
SPECIALIZATIONS	ceres-solver/internal/ceres/generate_template_specializations.py	/^SPECIALIZATIONS = [(2, 2, 2),$/;"	v
SStringPrintf	ceres-solver/internal/ceres/stringprintf.cc	/^const string& SStringPrintf(string* dst, const char* format, ...) {$/;"	f	namespace:ceres::internal
STDC_HEADERS	cartographer/bazel/third_party/cairo/config.h	350;"	d
STDC_HEADERS	cartographer/bazel/third_party/fontconfig/config.h	300;"	d
STDC_HEADERS	cartographer/bazel/third_party/pixman/config.h	130;"	d
STEEPEST_DESCENT	ceres-solver/include/ceres/types.h	/^  STEEPEST_DESCENT,$/;"	e	enum:ceres::LineSearchDirectionType
STLDeleteContainerPointers	ceres-solver/internal/ceres/stl_util.h	/^void STLDeleteContainerPointers(ForwardIterator begin,$/;"	f	namespace:ceres
STLDeleteElements	ceres-solver/internal/ceres/stl_util.h	/^void STLDeleteElements(T *container) {$/;"	f	namespace:ceres
STLDeleteUniqueContainerPointers	ceres-solver/internal/ceres/stl_util.h	/^void STLDeleteUniqueContainerPointers(ForwardIterator begin,$/;"	f	namespace:ceres
STRENUM	ceres-solver/internal/ceres/types.cc	338;"	d	file:
STRENUM	ceres-solver/internal/ceres/types.cc	42;"	d	file:
SUBSPACE_DOGLEG	ceres-solver/include/ceres/types.h	/^  SUBSPACE_DOGLEG$/;"	e	enum:ceres::DoglegType
SUCCEED	ceres-solver/internal/ceres/gtest/gtest.h	20440;"	d
SUITE_SPARSE	ceres-solver/include/ceres/types.h	/^  SUITE_SPARSE,$/;"	e	enum:ceres::SparseLinearAlgebraLibraryType
SYSTEM_TIME_PATTERN	cartographer_ros/jenkins/worker.py	/^SYSTEM_TIME_PATTERN = Pattern($/;"	v
SafeMatcherCast	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Matcher<T> SafeMatcherCast(const M& polymorphic_matcher) {$/;"	f	namespace:testing
SafeMatcherCastImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class SafeMatcherCastImpl {$/;"	c	namespace:testing
ScalarBinaryOpTraits	ceres-solver/include/ceres/jet.h	/^struct ScalarBinaryOpTraits<T, ceres::Jet<T, N>, BinaryOp> {$/;"	s	namespace:Eigen
ScalarBinaryOpTraits	ceres-solver/include/ceres/jet.h	/^struct ScalarBinaryOpTraits<ceres::Jet<T, N>, T, BinaryOp> {$/;"	s	namespace:Eigen
Scale	ceres-solver/internal/ceres/suitesparse.h	/^  void Scale(cholmod_dense* scale, int mode, cholmod_sparse* A) {$/;"	f	class:ceres::internal::SuiteSparse
ScaleColumns	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::ScaleColumns(const double* scale) {$/;"	f	class:ceres::internal::BlockSparseMatrix
ScaleColumns	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::ScaleColumns(const double* scale) {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
ScaleColumns	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::ScaleColumns(const double* scale) {$/;"	f	class:ceres::internal::DenseSparseMatrix
ScaleColumns	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::ScaleColumns(const double* scale) {$/;"	f	class:ceres::internal::TripletSparseMatrix
ScaleError	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^std::array<T, 3> ScaleError(const std::array<T, 3>& error,$/;"	f	namespace:cartographer::mapping::optimization
ScaleError	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^std::array<T, 6> ScaleError(const std::array<T, 6>& error,$/;"	f	namespace:cartographer::mapping::optimization
ScaleOffDiagonalCells	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^void VisibilityBasedPreconditioner::ScaleOffDiagonalCells() {$/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
ScaledLoss	ceres-solver/include/ceres/loss_function.h	/^  ScaledLoss(const LossFunction* rho, double a, Ownership ownership) :$/;"	f	class:ceres::ScaledLoss
ScaledLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT ScaledLoss : public LossFunction {$/;"	c	namespace:ceres
ScaledPlus	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^  explicit ScaledPlus(const double &scale_factor)$/;"	f	struct:ceres::internal::ScaledPlus
ScaledPlus	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^struct ScaledPlus {$/;"	s	namespace:ceres::internal	file:
ScaledPowersOf	cartographer/cartographer/metrics/histogram.cc	/^Histogram::BucketBoundaries Histogram::ScaledPowersOf(double base,$/;"	f	class:cartographer::metrics::Histogram
ScanMatch	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^std::unique_ptr<transform::Rigid2d> LocalTrajectoryBuilder2D::ScanMatch($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
ScanMatchingCostTest	cartographer/cartographer/mapping/internal/kidnap_detection.cc	/^void KidnapDetection::ScanMatchingCostTest(double finalcost){$/;"	f	class:cartographer::mapping::KidnapDetection
ScanMatchingTestTrigger	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        int ScanMatchingTestTrigger = 3;$/;"	m	class:cartographer::mapping::KidnapDetection
ScanMatchingThreshold	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        double ScanMatchingThreshold = 0.2;$/;"	m	class:cartographer::mapping::KidnapDetection
Schedule	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^std::weak_ptr<Task> ThreadPoolForTesting::Schedule(std::unique_ptr<Task> task) {$/;"	f	class:cartographer::common::testing::ThreadPoolForTesting
Schedule	cartographer/cartographer/common/thread_pool.cc	/^std::weak_ptr<Task> ThreadPool::Schedule(std::unique_ptr<Task> task) {$/;"	f	class:cartographer::common::ThreadPool
SchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^  explicit SchurComplementSolver(const LinearSolver::Options& options)$/;"	f	class:ceres::internal::SchurComplementSolver
SchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^class SchurComplementSolver : public BlockSparseMatrixSolver {$/;"	c	namespace:ceres::internal
SchurComplementSolverTest	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^class SchurComplementSolverTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
SchurEliminator	ceres-solver/internal/ceres/schur_eliminator.h	/^  explicit SchurEliminator(const LinearSolver::Options& options)$/;"	f	class:ceres::internal::SchurEliminator
SchurEliminator	ceres-solver/internal/ceres/schur_eliminator.h	/^class SchurEliminator : public SchurEliminatorBase {$/;"	c	namespace:ceres::internal
SchurEliminatorBase	ceres-solver/internal/ceres/schur_eliminator.h	/^class SchurEliminatorBase {$/;"	c	namespace:ceres::internal
SchurEliminatorTest	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^class SchurEliminatorTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
SchurJacobiPreconditioner	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^SchurJacobiPreconditioner::SchurJacobiPreconditioner($/;"	f	class:ceres::internal::SchurJacobiPreconditioner
SchurJacobiPreconditioner	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	/^class SchurJacobiPreconditioner : public BlockSparseMatrixPreconditioner {$/;"	c	namespace:ceres::internal
SchurOrderingTest	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^class SchurOrderingTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
SchurStructureToString	ceres-solver/internal/ceres/solver.cc	/^std::string SchurStructureToString(const int row_block_size,$/;"	f	namespace:ceres::__anon190
ScopedExecutionTimer	ceres-solver/internal/ceres/execution_summary.h	/^  ScopedExecutionTimer(const std::string& name, ExecutionSummary* summary)$/;"	f	class:ceres::internal::ScopedExecutionTimer
ScopedExecutionTimer	ceres-solver/internal/ceres/execution_summary.h	/^class ScopedExecutionTimer {$/;"	c	namespace:ceres::internal
ScopedFakeTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ScopedFakeTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;"	c	namespace:testing	file:
ScopedMockLog	ceres-solver/internal/ceres/gmock/mock-log.h	/^  ScopedMockLog() { AddLogSink(this); }$/;"	f	class:testing::ScopedMockLog
ScopedMockLog	ceres-solver/internal/ceres/gmock/mock-log.h	/^class ScopedMockLog : public google::LogSink {$/;"	c	namespace:testing
ScopedPrematureExitFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)$/;"	f	class:testing::internal::ScopedPrematureExitFile
ScopedPrematureExitFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class ScopedPrematureExitFile {$/;"	c	namespace:testing::internal	file:
ScopedPtrMallocFree	ceres-solver/include/ceres/internal/scoped_ptr.h	/^class ScopedPtrMallocFree {$/;"	c	namespace:ceres::internal
ScopedRosLogSink	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.cc	/^ScopedRosLogSink::ScopedRosLogSink() : will_die_(false) { AddLogSink(this); }$/;"	f	class:cartographer_ros::ScopedRosLogSink
ScopedRosLogSink	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	/^class ScopedRosLogSink : public ::google::LogSink {$/;"	c	namespace:cartographer_ros
ScopedSetValue	ceres-solver/internal/ceres/c_api_test.cc	/^  ScopedSetValue(T* variable, T new_value)$/;"	f	class:ceres::internal::ScopedSetValue
ScopedSetValue	ceres-solver/internal/ceres/c_api_test.cc	/^class ScopedSetValue {$/;"	c	namespace:ceres::internal	file:
ScopedTrace	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ ScopedTrace {$/;"	c	namespace:testing::internal
ScoreCandidate	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^float RealTimeCorrelativeScanMatcher3D::ScoreCandidate($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher3D
ScoreCandidates	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^void FastCorrelativeScanMatcher2D::ScoreCandidates($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
ScoreCandidates	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^void RealTimeCorrelativeScanMatcher2D::ScoreCandidates($/;"	f	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher2D
ScoreCandidates	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^void FastCorrelativeScanMatcher3D::ScoreCandidates($/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
ScratchEvaluatePreparer	ceres-solver/internal/ceres/scratch_evaluate_preparer.h	/^class ScratchEvaluatePreparer {$/;"	c	namespace:ceres::internal
Search	ceres-solver/internal/ceres/line_search.cc	/^void LineSearch::Search(double step_size_estimate,$/;"	f	class:ceres::internal::LineSearch
SearchParameters	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^SearchParameters::SearchParameters(const double linear_search_window,$/;"	f	class:cartographer::mapping::scan_matching::SearchParameters
SearchParameters	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^SearchParameters::SearchParameters(const int num_linear_perturbations,$/;"	f	class:cartographer::mapping::scan_matching::SearchParameters
SearchParameters	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^struct SearchParameters {$/;"	s	namespace:cartographer::mapping::scan_matching
SearchParameters	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  struct SearchParameters {$/;"	s	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
SecondType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename RawPairType::second_type SecondType;$/;"	t	class:testing::internal::PairMatcherImpl
SecondsSinceEpoch	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^  common::Time SecondsSinceEpoch(int seconds) {$/;"	f	class:cartographer::mapping::__anon73::MotionFilterTest
Select	ceres-solver/internal/ceres/gmock/gmock.h	/^  static SelectedArgs Select(const ArgumentTuple& \/* args *\/) {$/;"	f	class:testing::internal::SelectArgs
Select	ceres-solver/internal/ceres/gmock/gmock.h	/^  static SelectedArgs Select(const ArgumentTuple& args) {$/;"	f	class:testing::internal::SelectArgs
SelectArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^class SelectArgs {$/;"	c	namespace:testing::internal
SelectArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^class SelectArgs<Result, ArgumentTuple,$/;"	c	namespace:testing::internal
SelectRangeSensorIds	cartographer/cartographer/mapping/map_builder.cc	/^std::vector<std::string> SelectRangeSensorIds($/;"	f	namespace:cartographer::mapping::__anon68
SelectedArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^      k6, k7, k8, k9>::type SelectedArgs;$/;"	t	class:testing::internal::ArgsMatcherImpl
SelectedArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Function<type>::ArgumentTuple SelectedArgs;$/;"	t	class:testing::internal::SelectArgs
Send	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    virtual void Send(const string& message) {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SendLn	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    void SendLn(const string& message) {$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
SendLn	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void SendLn(const string& message) { socket_writer_->SendLn(message); }$/;"	f	class:testing::internal::StreamingListener	file:
SensorBridge	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^SensorBridge::SensorBridge($/;"	f	class:cartographer_ros::SensorBridge
SensorBridge	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^class SensorBridge {$/;"	c	namespace:cartographer_ros
SensorId	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^  struct SensorId {$/;"	s	class:cartographer::mapping::TrajectoryBuilderInterface
SensorType	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    enum class SensorType {$/;"	c	struct:cartographer::mapping::TrajectoryBuilderInterface::SensorId
Sequence	ceres-solver/internal/ceres/gmock/gmock.h	/^  Sequence() : last_expectation_(new Expectation) {}$/;"	f	class:testing::Sequence
Sequence	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ Sequence {$/;"	c	namespace:testing
SerializeAllTrajectoryBuilderOptions	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^SerializedData SerializeAllTrajectoryBuilderOptions($/;"	f	namespace:cartographer::io::__anon26
SerializeFixedFramePoseData	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeFixedFramePoseData($/;"	f	namespace:cartographer::io::__anon26
SerializeImuData	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeImuData(const sensor::MapByTime<sensor::ImuData>& all_imu_data,$/;"	f	namespace:cartographer::io::__anon26
SerializeLandmarkNodes	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeLandmarkNodes($/;"	f	namespace:cartographer::io::__anon26
SerializeOdometryData	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeOdometryData($/;"	f	namespace:cartographer::io::__anon26
SerializePoseGraph	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^SerializedData SerializePoseGraph(const mapping::PoseGraph& pose_graph) {$/;"	f	namespace:cartographer::io::__anon26
SerializeState	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^void MapBuilderStub::SerializeState(io::ProtoStreamWriterInterface* writer) {$/;"	f	class:cartographer::cloud::MapBuilderStub
SerializeState	cartographer/cartographer/mapping/map_builder.cc	/^void MapBuilder::SerializeState(io::ProtoStreamWriterInterface* const writer) {$/;"	f	class:cartographer::mapping::MapBuilder
SerializeState	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^bool MapBuilderBridge::SerializeState(const std::string& filename) {$/;"	f	class:cartographer_ros::MapBuilderBridge
SerializeState	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::SerializeState(const std::string& filename) {$/;"	f	class:cartographer_ros::Node
SerializeSubmaps	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeSubmaps($/;"	f	namespace:cartographer::io::__anon26
SerializeToVersion1Format	cartographer/cartographer/io/serialization_format_migration.cc	/^void SerializeToVersion1Format($/;"	f	namespace:cartographer::io::__anon19
SerializeTrajectoryData	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeTrajectoryData($/;"	f	namespace:cartographer::io::__anon26
SerializeTrajectoryNodes	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void SerializeTrajectoryNodes($/;"	f	namespace:cartographer::io::__anon26
Set	ceres-solver/examples/pgm_image.h	/^void PGMImage<Real>::Set(double constant) {$/;"	f	class:ceres::examples::PGMImage
Set	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void Set(T x) {$/;"	f	class:testing::DefaultValue
Set	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void Set(T& x) {  \/\/ NOLINT$/;"	f	class:testing::DefaultValue
Set	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::std::set<Expectation, Less> Set;$/;"	t	class:testing::Expectation
Set	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Set(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
SetAlpha	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^void DrawableSubmap::SetAlpha(const double current_tracking_z,$/;"	f	class:cartographer_rviz::DrawableSubmap
SetAlpha	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^void OgreSlice::SetAlpha(const float alpha) {$/;"	f	class:cartographer_rviz::OgreSlice
SetArgPointee	ceres-solver/internal/ceres/gmock/gmock.h	/^SetArgPointee(const T& x) {$/;"	f	namespace:testing
SetArgPointee	ceres-solver/internal/ceres/gmock/gmock.h	/^SetArgPointee(const char* p) {$/;"	f	namespace:testing
SetArgPointee	ceres-solver/internal/ceres/gmock/gmock.h	/^SetArgPointee(const wchar_t* p) {$/;"	f	namespace:testing
SetArgumentPointee	ceres-solver/internal/ceres/gmock/gmock.h	/^SetArgumentPointee(const T& x) {$/;"	f	namespace:testing
SetArgumentPointeeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit SetArgumentPointeeAction(const A& value) : value_(value) {}$/;"	f	class:testing::internal::SetArgumentPointeeAction
SetArgumentPointeeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit SetArgumentPointeeAction(const Proto& proto) : proto_(new Proto) {$/;"	f	class:testing::internal::SetArgumentPointeeAction
SetArgumentPointeeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class SetArgumentPointeeAction {$/;"	c	namespace:testing::internal
SetArgumentPointeeAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class SetArgumentPointeeAction<N, Proto, true> {$/;"	c	namespace:testing::internal
SetConstant	ceres-solver/internal/ceres/parameter_block.h	/^  void SetConstant() { is_constant_ = true; }$/;"	f	class:ceres::internal::ParameterBlock
SetData	ceres-solver/examples/pgm_image.h	/^bool PGMImage<Real>::SetData(const std::vector<Real>& new_data) {$/;"	f	class:ceres::examples::PGMImage
SetDefaultResultPrinter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDefaultXmlGenerator	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners
SetDictionaryInRegistry	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^void SetDictionaryInRegistry(lua_State* L, LuaParameterDictionary* dictionary) {$/;"	f	namespace:cartographer::common::__anon9
SetEdge	ceres-solver/internal/ceres/gmock/gmock.h	/^  void SetEdge(size_t ilhs, size_t irhs, bool b) {$/;"	f	class:testing::internal::MatchMatrix
SetErrnoAndReturn	ceres-solver/internal/ceres/gmock/gmock.h	/^SetErrnoAndReturn(int errval, T result) {$/;"	f	namespace:testing
SetErrnoAndReturnAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  SetErrnoAndReturnAction(int errno_value, T result)$/;"	f	class:testing::internal::SetErrnoAndReturnAction
SetErrnoAndReturnAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class SetErrnoAndReturnAction {$/;"	c	namespace:testing::internal
SetFactory	ceres-solver/internal/ceres/gmock/gmock.h	/^  static void SetFactory(FactoryFunction factory) {$/;"	f	class:testing::DefaultValue
SetGlobalSlamOptimizationCallback	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^void PoseGraphStub::SetGlobalSlamOptimizationCallback($/;"	f	class:cartographer::cloud::PoseGraphStub
SetGlobalSlamOptimizationCallback	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::SetGlobalSlamOptimizationCallback($/;"	f	class:cartographer::mapping::PoseGraph2D
SetGlobalSlamOptimizationCallback	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::SetGlobalSlamOptimizationCallback($/;"	f	class:cartographer::mapping::PoseGraph3D
SetGlobalTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::SetGlobalTestPartResultReporter($/;"	f	class:testing::internal::UnitTestImpl
SetGradientErrorDetected	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^void GradientCheckingIterationCallback::SetGradientErrorDetected($/;"	f	class:ceres::internal::GradientCheckingIterationCallback
SetInitialTrajectoryPose	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::SetInitialTrajectoryPose(const int from_trajectory_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
SetInitialTrajectoryPose	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::SetInitialTrajectoryPose(const int from_trajectory_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
SetInjectableArgvs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void SetInjectableArgvs(const ::std::vector<testing::internal::string>* argvs) {$/;"	f	namespace:testing::internal
SetIsSafe	ceres-solver/internal/ceres/mutex.h	/^  inline void SetIsSafe() { is_safe_ = true; }$/;"	f	class:ceres::internal::Mutex
SetJacobianOffset	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  void SetJacobianOffset(size_t index, Matrix offset) {$/;"	f	class:ceres::internal::LinearCostFunction
SetLandmarkPose	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^void PoseGraphStub::SetLandmarkPose(const std::string& landmark_id,$/;"	f	class:cartographer::cloud::PoseGraphStub
SetLandmarkPose	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::SetLandmarkPose(const std::string& landmark_id,$/;"	f	class:cartographer::mapping::PoseGraph2D
SetLandmarkPose	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::SetLandmarkPose(const std::string& landmark_id,$/;"	f	class:cartographer::mapping::PoseGraph3D
SetLandmarkPoseHandler	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.h	/^class SetLandmarkPoseHandler$/;"	c	namespace:cartographer::cloud::handlers
SetLinearSolver	ceres-solver/examples/bundle_adjuster.cc	/^void SetLinearSolver(Solver::Options* options) {$/;"	f	namespace:ceres::examples
SetLowerBound	ceres-solver/internal/ceres/parameter_block.h	/^  void SetLowerBound(int index, double lower_bound) {$/;"	f	class:ceres::internal::ParameterBlock
SetMatchers	ceres-solver/internal/ceres/gmock/gmock.h	/^  void SetMatchers(const ArgumentMatcherTuple& matchers) {$/;"	f	class:testing::internal::MockSpec
SetMaxNumIterations	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::SetMaxNumIterations($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
SetMaxNumIterations	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::SetMaxNumIterations($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
SetMaxNumNonZeros	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::SetMaxNumNonZeros(int num_nonzeros) {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
SetMinimizerOptions	ceres-solver/examples/bundle_adjuster.cc	/^void SetMinimizerOptions(Solver::Options* options) {$/;"	f	namespace:ceres::examples
SetMinimizerOptions	ceres-solver/examples/nist.cc	/^void SetMinimizerOptions(ceres::Solver::Options* options) {$/;"	f	namespace:ceres::examples
SetMockLocalTrajectoryUploader	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^  void SetMockLocalTrajectoryUploader() {$/;"	f	class:cartographer::cloud::testing::HandlerTest
SetNoLocalTrajectoryUploader	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^  void SetNoLocalTrajectoryUploader() {$/;"	f	class:cartographer::cloud::testing::HandlerTest
SetNumResiduals	ceres-solver/include/ceres/dynamic_cost_function.h	/^  virtual void SetNumResiduals(int num_residuals) {$/;"	f	class:ceres::DynamicCostFunction
SetNumericDiffOptions	ceres-solver/examples/more_garbow_hillstrom.cc	/^static void SetNumericDiffOptions(ceres::NumericDiffOptions* options) {$/;"	f	namespace:ceres::examples
SetNumericDiffOptions	ceres-solver/examples/nist.cc	/^static void SetNumericDiffOptions(ceres::NumericDiffOptions* options) {$/;"	f	namespace:ceres::examples
SetOptionsEnableGlobalOptimization	cartographer/cartographer/mapping/map_builder_test.cc	/^  void SetOptionsEnableGlobalOptimization() {$/;"	f	class:cartographer::mapping::__anon55::MapBuilderTest
SetOptionsTo3D	cartographer/cartographer/mapping/map_builder_test.cc	/^  void SetOptionsTo3D() {$/;"	f	class:cartographer::mapping::__anon55::MapBuilderTest
SetOrdering	ceres-solver/examples/bundle_adjuster.cc	/^void SetOrdering(BALProblem* bal_problem, Solver::Options* options) {$/;"	f	namespace:ceres::examples
SetParam	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void SetParam(const ParamType* parameter) {$/;"	f	class:testing::WithParamInterface
SetParameterBlockConstant	ceres-solver/internal/ceres/problem.cc	/^void Problem::SetParameterBlockConstant(double* values) {$/;"	f	class:ceres::Problem
SetParameterBlockConstant	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::SetParameterBlockConstant(double* values) {$/;"	f	class:ceres::internal::ProblemImpl
SetParameterBlockStatePtrsToUserStatePtrs	ceres-solver/internal/ceres/program.cc	/^bool Program::SetParameterBlockStatePtrsToUserStatePtrs() {$/;"	f	class:ceres::internal::Program
SetParameterBlockVariable	ceres-solver/internal/ceres/problem.cc	/^void Problem::SetParameterBlockVariable(double* values) {$/;"	f	class:ceres::Problem
SetParameterBlockVariable	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::SetParameterBlockVariable(double* values) {$/;"	f	class:ceres::internal::ProblemImpl
SetParameterLowerBound	ceres-solver/internal/ceres/problem.cc	/^void Problem::SetParameterLowerBound(double* values,$/;"	f	class:ceres::Problem
SetParameterLowerBound	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::SetParameterLowerBound(double* values,$/;"	f	class:ceres::internal::ProblemImpl
SetParameterOffsetsAndIndex	ceres-solver/internal/ceres/program.cc	/^void Program::SetParameterOffsetsAndIndex() {$/;"	f	class:ceres::internal::Program
SetParameterUpperBound	ceres-solver/internal/ceres/problem.cc	/^void Problem::SetParameterUpperBound(double* values,$/;"	f	class:ceres::Problem
SetParameterUpperBound	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::SetParameterUpperBound(double* values,$/;"	f	class:ceres::internal::ProblemImpl
SetParameterization	ceres-solver/internal/ceres/parameter_block.h	/^  void SetParameterization(LocalParameterization* new_parameterization) {$/;"	f	class:ceres::internal::ParameterBlock
SetParameterization	ceres-solver/internal/ceres/problem.cc	/^void Problem::SetParameterization($/;"	f	class:ceres::Problem
SetParameterization	ceres-solver/internal/ceres/problem_impl.cc	/^void ProblemImpl::SetParameterization($/;"	f	class:ceres::internal::ProblemImpl
SetPixel	cartographer/cartographer/io/image.cc	/^void Image::SetPixel(int x, int y, const Uint8Color& color) {$/;"	f	class:cartographer::io::Image
SetProbability	cartographer/cartographer/mapping/2d/probability_grid.cc	/^void ProbabilityGrid::SetProbability(const Eigen::Array2i& cell_index,$/;"	f	class:cartographer::mapping::ProbabilityGrid
SetRandomState	ceres-solver/internal/ceres/random.h	/^inline void SetRandomState(int state) {$/;"	f	namespace:ceres
SetReturnValue	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  void SetReturnValue(bool return_value) { return_value_ = return_value; }$/;"	f	class:ceres::internal::GoodTestTerm
SetSliceVisibility	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^void DrawableSubmap::SetSliceVisibility(size_t slice_index, bool visible) {$/;"	f	class:cartographer_rviz::DrawableSubmap
SetSolverOptionsFromFlags	ceres-solver/examples/bundle_adjuster.cc	/^void SetSolverOptionsFromFlags(BALProblem* bal_problem,$/;"	f	namespace:ceres::examples
SetSparseMatrixConstant	ceres-solver/internal/ceres/evaluator_test.cc	/^void SetSparseMatrixConstant(SparseMatrix* sparse_matrix, double value) {$/;"	f	namespace:ceres::internal
SetState	ceres-solver/internal/ceres/parameter_block.h	/^  bool SetState(const double* x) {$/;"	f	class:ceres::internal::ParameterBlock
SetSummaryFinalCost	ceres-solver/internal/ceres/solver_utils.h	/^void SetSummaryFinalCost(SummaryType* summary) {$/;"	f	namespace:ceres::internal
SetTestPartResultReporterForCurrentThread	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::SetTestPartResultReporterForCurrentThread($/;"	f	class:testing::internal::UnitTestImpl
SetThreadPool	cartographer/cartographer/common/task.cc	/^void Task::SetThreadPool(ThreadPoolInterface* thread_pool) {$/;"	f	class:cartographer::common::Task
SetThreadPool	cartographer/cartographer/common/thread_pool.cc	/^void ThreadPoolInterface::SetThreadPool(Task* task) {$/;"	f	class:cartographer::common::ThreadPoolInterface
SetTrajectoryData	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::SetTrajectoryData($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
SetTrajectoryDataFromProto	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::SetTrajectoryDataFromProto($/;"	f	class:cartographer::mapping::PoseGraph2D
SetTrajectoryDataFromProto	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::SetTrajectoryDataFromProto($/;"	f	class:cartographer::mapping::PoseGraph3D
SetUp	cartographer/cartographer/io/serialization_format_migration_test.cc	/^  void SetUp() {$/;"	f	class:cartographer::io::__anon18::MigrationTest
SetUp	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^  void SetUp() {$/;"	f	class:cartographer::sensor::__anon123::OrderedMultiQueueTest
SetUp	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^  void SetUp() {$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrixTest
SetUp	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrixTest
SetUp	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::BlockSparseMatrixTest
SetUp	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::CanonicalViewsTest
SetUp	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^  void SetUp() {$/;"	f	class:ceres::internal::SolveUpperTriangularTest
SetUp	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::CompressedRowSparseMatrixTest
SetUp	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::CovarianceTest
SetUp	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::LargeScaleCovarianceTest
SetUp	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::RankDeficientCovarianceTest
SetUp	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::DenseSparseMatrixTest
SetUp	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::__anon178::DoglegStrategyFixtureEllipse
SetUp	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::__anon178::DoglegStrategyFixtureValley
SetUp	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::SixParameterCostFunctorTest
SetUp	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::ThreeParameterCostFunctorTest
SetUp	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::DynamicCompressedRowSparseMatrixTest
SetUp	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::ThreeParameterCostFunctorTest
SetUp	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolverTest
SetUp	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Test::SetUp() {$/;"	f	class:testing::Test
SetUp	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Environment
SetUp	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::ImplicitSchurComplementTest
SetUp	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::ProductParameterizationTest
SetUp	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::SchurOrderingTest
SetUp	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::PartitionedMatrixViewTest
SetUp	ceres-solver/internal/ceres/problem_test.cc	/^  void SetUp() {$/;"	f	class:ceres::internal::ProblemEvaluateTest
SetUp	ceres-solver/internal/ceres/reorder_program_test.cc	/^  void SetUp() {$/;"	f	class:ceres::internal::ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest
SetUp	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::SparseNormalCholeskySolverTest
SetUp	ceres-solver/internal/ceres/test_util.h	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::SystemTest
SetUp	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  virtual void SetUp() {$/;"	f	class:ceres::internal::LinearSolverAndEvaluatorCreationTest
SetUpEnvironment	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void SetUpEnvironment(Environment* env) { env->SetUp(); }$/;"	f	namespace:testing::internal
SetUpFromId	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  void SetUpFromId(int id) {$/;"	f	class:ceres::internal::SchurEliminatorTest
SetUpFromProblemId	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^  void SetUpFromProblemId(int problem_id) {$/;"	f	class:ceres::internal::BlockJacobiPreconditionerTest
SetUpFromProblemId	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  void SetUpFromProblemId(int problem_id) {$/;"	f	class:ceres::internal::SchurComplementSolverTest
SetUpProblem	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  void SetUpProblem(int problem_id) {$/;"	f	class:ceres::internal::IterativeSchurComplementSolverTest
SetUpTestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void SetUpTestCase() {}$/;"	f	class:testing::Test
SetUpTestCaseFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::SetUpTestCaseFunc SetUpTestCaseFunc;$/;"	t	class:testing::Test
SetUpTestCaseFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef void (*SetUpTestCaseFunc)();$/;"	t	namespace:testing::internal
SetUpperBound	ceres-solver/internal/ceres/parameter_block.h	/^  void SetUpperBound(int index, double upper_bound) {$/;"	f	class:ceres::internal::ParameterBlock
SetValue	ceres-solver/internal/ceres/gtest/gtest.h	/^  void SetValue(const std::string& new_value) {$/;"	f	class:testing::TestProperty
SetVarying	ceres-solver/internal/ceres/parameter_block.h	/^  void SetVarying() { is_constant_ = false; }$/;"	f	class:ceres::internal::ParameterBlock
SetVisibility	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^void OgreSlice::SetVisibility(bool visibility) { visibility_ = visibility; }$/;"	f	class:cartographer_rviz::OgreSlice
SetWorkItem	cartographer/cartographer/common/task.cc	/^void Task::SetWorkItem(const WorkItem& work_item) {$/;"	f	class:cartographer::common::Task
SetZero	ceres-solver/internal/ceres/block_random_access_dense_matrix.cc	/^void BlockRandomAccessDenseMatrix::SetZero() {$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
SetZero	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^void BlockRandomAccessDiagonalMatrix::SetZero() {$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
SetZero	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^void BlockRandomAccessSparseMatrix::SetZero() {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
SetZero	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::SetZero() {$/;"	f	class:ceres::internal::BlockSparseMatrix
SetZero	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::SetZero() {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
SetZero	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::SetZero() {$/;"	f	class:ceres::internal::DenseSparseMatrix
SetZero	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::SetZero() {$/;"	f	class:ceres::internal::TripletSparseMatrix
Setup	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Environment
Setup	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return NULL; }$/;"	f	class:testing::Test
SetupCommonMinimizerOptions	ceres-solver/internal/ceres/preprocessor.cc	/^void SetupCommonMinimizerOptions(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal
SetupEvaluator	ceres-solver/internal/ceres/line_search_preprocessor.cc	/^bool SetupEvaluator(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal::__anon161
SetupEvaluator	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^bool SetupEvaluator(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal::__anon192
SetupHelper	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  void SetupHelper(LinearLeastSquaresProblem* problem) {$/;"	f	class:ceres::internal::SchurEliminatorTest
SetupInnerIterationMinimizer	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^bool SetupInnerIterationMinimizer(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal::__anon192
SetupLinearSolver	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^bool SetupLinearSolver(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal::__anon192
SetupMinimizerOptions	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^void SetupMinimizerOptions(PreprocessedProblem* pp) {$/;"	f	namespace:ceres::internal::__anon192
Setup_should_be_spelled_SetUp	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Environment
Setup_should_be_spelled_SetUp	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Test
SevenParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct SevenParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
ShouldRunTest	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool ShouldRunTest(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
ShouldRunTestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool ShouldRunTestCase(const TestCase* test_case) {$/;"	f	namespace:testing::internal
ShouldRunTestOnShard	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {$/;"	f	namespace:testing::internal
ShouldShard	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ShouldShard(const char* total_shards_env,$/;"	f	namespace:testing::internal
ShouldUseColor	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ShouldUseColor(bool stdout_is_tty) {$/;"	f	namespace:testing::internal
ShowWideCString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string String::ShowWideCString(const wchar_t * wide_c_str) {$/;"	f	class:testing::internal::String
ShrinkToFit	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^void SearchParameters::ShrinkToFit(const std::vector<DiscreteScan2D>& scans,$/;"	f	class:cartographer::mapping::scan_matching::SearchParameters
Shuffle	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^inline void Shuffle(internal::Random* random, std::vector<E>* v) {$/;"	f	namespace:testing::internal
ShuffleRange	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ShuffleRange(internal::Random* random, int begin, int end,$/;"	f	namespace:testing::internal
ShuffleTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestCase::ShuffleTests(internal::Random* random) {$/;"	f	class:testing::TestCase
ShuffleTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::ShuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
Shutdown	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::Shutdown() {$/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
Shutdown	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::Shutdown() {$/;"	f	class:cartographer::cloud::MapBuilderServer
SignAndMagnitudeToBiased	ceres-solver/internal/ceres/gtest/gtest.h	/^  static Bits SignAndMagnitudeToBiased(const Bits &sam) {$/;"	f	class:testing::internal::FloatingPoint
SimulateRobot	ceres-solver/examples/robot_pose_mle.cc	/^void SimulateRobot(vector<double>* odometry_values,$/;"	f
SimulatedClock	cartographer/cartographer/common/rate_timer_test.cc	/^struct SimulatedClock {$/;"	s	namespace:cartographer::common::__anon8	file:
SingleFailureChecker	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^SingleFailureChecker:: SingleFailureChecker($/;"	f	class:testing::internal::SingleFailureChecker
SingleFailureChecker	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GTEST_API_ SingleFailureChecker {$/;"	c	namespace:testing::internal	file:
SingleLinkageClusteringOptions	ceres-solver/internal/ceres/single_linkage_clustering.h	/^  SingleLinkageClusteringOptions()$/;"	f	struct:ceres::internal::SingleLinkageClusteringOptions
SingleLinkageClusteringOptions	ceres-solver/internal/ceres/single_linkage_clustering.h	/^struct SingleLinkageClusteringOptions {$/;"	s	namespace:ceres::internal
SixParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct SixParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
SixParameterCostFunctorTest	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^class SixParameterCostFunctorTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
Size	cartographer/cartographer/common/blocking_queue.h	/^  size_t Size() {$/;"	f	class:cartographer::common::BlockingQueue
Size	ceres-solver/examples/fields_of_experts.h	/^  int Size() const {$/;"	f	class:ceres::examples::FieldsOfExperts
Size	ceres-solver/internal/ceres/parameter_block.h	/^  int Size() const { return size_; }$/;"	f	class:ceres::internal::ParameterBlock
SizeIs	ceres-solver/internal/ceres/gmock/gmock.h	/^SizeIs(const SizeMatcher& size_matcher) {$/;"	f	namespace:testing
SizeIsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit SizeIsMatcher(const SizeMatcher& size_matcher)$/;"	f	class:testing::internal::SizeIsMatcher
SizeIsMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class SizeIsMatcher {$/;"	c	namespace:testing::internal
SizeOfTrajectoryOrZero	cartographer/cartographer/mapping/id.h	/^  size_t SizeOfTrajectoryOrZero(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::MapById
SizeTestingCostFunction	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^class SizeTestingCostFunction : public SizedCostFunction<num_rows, num_cols> {$/;"	c	namespace:ceres::internal	file:
SizeType	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename ContainerView::type::size_type SizeType;$/;"	t	class:testing::internal::SizeIsMatcher::Impl
SizedCostFunction	ceres-solver/include/ceres/sized_cost_function.h	/^  SizedCostFunction() {$/;"	f	class:ceres::SizedCostFunction
SizedCostFunction	ceres-solver/include/ceres/sized_cost_function.h	/^class SizedCostFunction : public CostFunction {$/;"	c	namespace:ceres
SkipComma	ceres-solver/internal/ceres/gtest/gtest.h	/^inline const char* SkipComma(const char* str) {$/;"	f	namespace:testing::internal
SkipLines	ceres-solver/examples/nist.cc	/^void SkipLines(ifstream& ifs, int num_lines) {$/;"	f	namespace:ceres::examples
SkipPrefix	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool SkipPrefix(const char* prefix, const char** pstr) {$/;"	f	namespace:testing::internal
SkipSpaces	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char* SkipSpaces(const char* str) {$/;"	f	namespace:testing::internal
SleepMilliseconds	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void SleepMilliseconds(int n) {$/;"	f	namespace:testing::internal
SleepMilliseconds	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void SleepMilliseconds(int n) {$/;"	f	namespace:std::tr1
SlerpQuaternions	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^std::array<T, 4> SlerpQuaternions(const T* const start, const T* const end,$/;"	f	namespace:cartographer::mapping::optimization
SliceByAltitudeChange	cartographer/cartographer/mapping/detect_floors.cc	/^std::vector<Span> SliceByAltitudeChange(const proto::Trajectory& trajectory) {$/;"	f	namespace:cartographer::mapping::__anon62
SlidingWindowMaximum	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^class SlidingWindowMaximum {$/;"	c	namespace:cartographer::mapping::scan_matching::__anon78	file:
SlowValueToBoundedFloat	cartographer/cartographer/mapping/probability_values.cc	/^float SlowValueToBoundedFloat(const uint16 value, const uint16 unknown_value,$/;"	f	namespace:cartographer::mapping::__anon66
SnavelyReprojectionError	ceres-solver/examples/simple_bundle_adjuster.cc	/^  SnavelyReprojectionError(double observed_x, double observed_y)$/;"	f	struct:SnavelyReprojectionError
SnavelyReprojectionError	ceres-solver/examples/simple_bundle_adjuster.cc	/^struct SnavelyReprojectionError {$/;"	s	file:
SnavelyReprojectionError	ceres-solver/examples/snavely_reprojection_error.h	/^  SnavelyReprojectionError(double observed_x, double observed_y)$/;"	f	struct:ceres::examples::SnavelyReprojectionError
SnavelyReprojectionError	ceres-solver/examples/snavely_reprojection_error.h	/^struct SnavelyReprojectionError {$/;"	s	namespace:ceres::examples
SnavelyReprojectionErrorWithQuaternions	ceres-solver/examples/snavely_reprojection_error.h	/^  SnavelyReprojectionErrorWithQuaternions(double observed_x, double observed_y)$/;"	f	struct:ceres::examples::SnavelyReprojectionErrorWithQuaternions
SnavelyReprojectionErrorWithQuaternions	ceres-solver/examples/snavely_reprojection_error.h	/^struct SnavelyReprojectionErrorWithQuaternions {$/;"	s	namespace:ceres::examples
SocketWriter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    SocketWriter(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SocketWriter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  class SocketWriter : public AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener	file:
SoftLOneLoss	ceres-solver/include/ceres/loss_function.h	/^  explicit SoftLOneLoss(double a) : b_(a * a), c_(1 \/ b_) { }$/;"	f	class:ceres::SoftLOneLoss
SoftLOneLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT SoftLOneLoss : public LossFunction {$/;"	c	namespace:ceres
Solve	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::Solve($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
Solve	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::Solve($/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
Solve	ceres-solver/examples/more_garbow_hillstrom.cc	/^template<typename TestProblem> bool Solve(bool is_constrained, int trial) {$/;"	f	namespace:ceres::examples
Solve	ceres-solver/internal/ceres/conjugate_gradients_solver.cc	/^LinearSolver::Summary ConjugateGradientsSolver::Solve($/;"	f	class:ceres::internal::ConjugateGradientsSolver
Solve	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^void CoordinateDescentMinimizer::Solve(Program* program,$/;"	f	class:ceres::internal::CoordinateDescentMinimizer
Solve	ceres-solver/internal/ceres/cxsparse.cc	/^LinearSolverTerminationType CXSparseCholesky::Solve(const double* rhs,$/;"	f	class:ceres::internal::CXSparseCholesky
Solve	ceres-solver/internal/ceres/cxsparse.cc	/^void CXSparse::Solve(cs_dis* symbolic_factor, csn* numeric_factor, double* b) {$/;"	f	class:ceres::internal::CXSparse
Solve	ceres-solver/internal/ceres/eigensparse.cc	/^  virtual LinearSolverTerminationType Solve(const double* rhs,$/;"	f	class:ceres::internal::EigenSparseCholeskyTemplate
Solve	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^void GradientProblemSolver::Solve(const GradientProblemSolver::Options& options,$/;"	f	class:ceres::GradientProblemSolver
Solve	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^void Solve(const GradientProblemSolver::Options& options,$/;"	f	namespace:ceres
Solve	ceres-solver/internal/ceres/linear_solver.h	/^  virtual LinearSolver::Summary Solve($/;"	f	class:ceres::internal::TypedLinearSolver
Solve	ceres-solver/internal/ceres/solver.cc	/^void Solve(const Solver::Options& options,$/;"	f	namespace:ceres
Solve	ceres-solver/internal/ceres/solver.cc	/^void Solver::Solve(const Solver::Options& options,$/;"	f	class:ceres::Solver
Solve	ceres-solver/internal/ceres/suitesparse.cc	/^LinearSolverTerminationType SuiteSparseCholesky::Solve(const double* rhs,$/;"	f	class:ceres::internal::SuiteSparseCholesky
Solve	ceres-solver/internal/ceres/suitesparse.cc	/^cholmod_dense* SuiteSparse::Solve(cholmod_factor* L,$/;"	f	class:ceres::internal::SuiteSparse
SolveAndEvaluateFinalResiduals	ceres-solver/internal/ceres/test_util.h	/^  void SolveAndEvaluateFinalResiduals(const Solver::Options& options,$/;"	f	class:ceres::internal::SystemTest
SolveCholesky	ceres-solver/internal/ceres/cxsparse.cc	/^bool CXSparse::SolveCholesky(cs_di* lhs, double* rhs_and_solution) {$/;"	f	class:ceres::internal::CXSparse
SolveImpl	ceres-solver/internal/ceres/cgnr_solver.cc	/^LinearSolver::Summary CgnrSolver::SolveImpl($/;"	f	class:ceres::internal::CgnrSolver
SolveImpl	ceres-solver/internal/ceres/dense_normal_cholesky_solver.cc	/^LinearSolver::Summary DenseNormalCholeskySolver::SolveImpl($/;"	f	class:ceres::internal::DenseNormalCholeskySolver
SolveImpl	ceres-solver/internal/ceres/dense_qr_solver.cc	/^LinearSolver::Summary DenseQRSolver::SolveImpl($/;"	f	class:ceres::internal::DenseQRSolver
SolveImpl	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^LinearSolver::Summary DynamicSparseNormalCholeskySolver::SolveImpl($/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolver
SolveImpl	ceres-solver/internal/ceres/iterative_schur_complement_solver.cc	/^LinearSolver::Summary IterativeSchurComplementSolver::SolveImpl($/;"	f	class:ceres::internal::IterativeSchurComplementSolver
SolveImpl	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^  virtual LinearSolver::Summary SolveImpl($/;"	f	class:ceres::internal::RegularizationCheckingLinearSolver	file:
SolveImpl	ceres-solver/internal/ceres/schur_complement_solver.cc	/^LinearSolver::Summary SchurComplementSolver::SolveImpl($/;"	f	class:ceres::internal::SchurComplementSolver
SolveImpl	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc	/^LinearSolver::Summary SparseNormalCholeskySolver::SolveImpl($/;"	f	class:ceres::internal::SparseNormalCholeskySolver
SolveImplUsingCXSparse	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^LinearSolver::Summary DynamicSparseNormalCholeskySolver::SolveImplUsingCXSparse($/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolver
SolveImplUsingEigen	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^LinearSolver::Summary DynamicSparseNormalCholeskySolver::SolveImplUsingEigen($/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolver
SolveImplUsingSuiteSparse	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^DynamicSparseNormalCholeskySolver::SolveImplUsingSuiteSparse($/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolver
SolveInPlaceUsingCholesky	ceres-solver/internal/ceres/lapack.cc	/^LinearSolverTerminationType LAPACK::SolveInPlaceUsingCholesky($/;"	f	class:ceres::internal::LAPACK
SolveInPlaceUsingQR	ceres-solver/internal/ceres/lapack.cc	/^LinearSolverTerminationType LAPACK::SolveInPlaceUsingQR($/;"	f	class:ceres::internal::LAPACK
SolveNISTProblems	ceres-solver/examples/nist.cc	/^void SolveNISTProblems() {$/;"	f	namespace:ceres::examples
SolveOptimizationProblem	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d.cc	/^bool SolveOptimizationProblem(ceres::Problem* problem) {$/;"	f	namespace:ceres::examples
SolveOptimizationProblem	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d.cc	/^bool SolveOptimizationProblem(ceres::Problem* problem) {$/;"	f	namespace:ceres::examples
SolveProblem	ceres-solver/examples/bundle_adjuster.cc	/^void SolveProblem(const char* filename) {$/;"	f	namespace:ceres::examples
SolveProblem	ceres-solver/examples/denoising.cc	/^void SolveProblem(Problem* problem, PGMImage<double>* solution) {$/;"	f	namespace:ceres::examples
SolveRTRWithSparseRHS	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.h	/^void SolveRTRWithSparseRHS(IntegerType num_cols,$/;"	f	namespace:ceres::internal
SolveReducedLinearSystem	ceres-solver/internal/ceres/schur_complement_solver.cc	/^DenseSchurComplementSolver::SolveReducedLinearSystem($/;"	f	class:ceres::internal::DenseSchurComplementSolver
SolveReducedLinearSystem	ceres-solver/internal/ceres/schur_complement_solver.cc	/^LinearSolver::Summary SparseSchurComplementSolver::SolveReducedLinearSystem($/;"	f	class:ceres::internal::SparseSchurComplementSolver
SolveReducedLinearSystemUsingConjugateGradients	ceres-solver/internal/ceres/schur_complement_solver.cc	/^SparseSchurComplementSolver::SolveReducedLinearSystemUsingConjugateGradients($/;"	f	class:ceres::internal::SparseSchurComplementSolver
SolveUpperTriangularInPlace	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.h	/^void SolveUpperTriangularInPlace(IntegerType num_cols,$/;"	f	namespace:ceres::internal
SolveUpperTriangularTest	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^class SolveUpperTriangularTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
SolveUpperTriangularTransposeInPlace	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.h	/^void SolveUpperTriangularTransposeInPlace(IntegerType num_cols,$/;"	f	namespace:ceres::internal
SolveUsingEigen	ceres-solver/internal/ceres/dense_normal_cholesky_solver.cc	/^LinearSolver::Summary DenseNormalCholeskySolver::SolveUsingEigen($/;"	f	class:ceres::internal::DenseNormalCholeskySolver
SolveUsingEigen	ceres-solver/internal/ceres/dense_qr_solver.cc	/^LinearSolver::Summary DenseQRSolver::SolveUsingEigen($/;"	f	class:ceres::internal::DenseQRSolver
SolveUsingLAPACK	ceres-solver/internal/ceres/dense_normal_cholesky_solver.cc	/^LinearSolver::Summary DenseNormalCholeskySolver::SolveUsingLAPACK($/;"	f	class:ceres::internal::DenseNormalCholeskySolver
SolveUsingLAPACK	ceres-solver/internal/ceres/dense_qr_solver.cc	/^LinearSolver::Summary DenseQRSolver::SolveUsingLAPACK($/;"	f	class:ceres::internal::DenseQRSolver
SolveWithFullReport	ceres-solver/examples/ellipse_approximation.cc	/^bool SolveWithFullReport(ceres::Solver::Options options,$/;"	f
Solver	ceres-solver/include/ceres/solver.h	/^class CERES_EXPORT Solver {$/;"	c	namespace:ceres
SolverConfig	ceres-solver/internal/ceres/test_util.h	/^  SolverConfig($/;"	f	struct:ceres::internal::SolverConfig
SolverConfig	ceres-solver/internal/ceres/test_util.h	/^struct SolverConfig {$/;"	s	namespace:ceres::internal
SortSlice	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^sensor::PointCloud SortSlice(const sensor::PointCloud& slice) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon98
SortVector	ceres-solver/internal/ceres/polynomial_test.cc	/^Vector SortVector(const Vector& in) {$/;"	f	namespace:ceres::internal::__anon163
SpaCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  explicit SpaCostFunction2D($/;"	f	class:cartographer::mapping::optimization::__anon90::SpaCostFunction2D
SpaCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^class SpaCostFunction2D {$/;"	c	namespace:cartographer::mapping::optimization::__anon90	file:
SpaCostFunction2DTest	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  SpaCostFunction2DTest()$/;"	f	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest
SpaCostFunction2DTest	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^class SpaCostFunction2DTest : public ::testing::Test {$/;"	c	namespace:cartographer::mapping::optimization::__anon91	file:
SpaCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^  explicit SpaCostFunction3D(const PoseGraph::Constraint::Pose& pose)$/;"	f	class:cartographer::mapping::optimization::SpaCostFunction3D
SpaCostFunction3D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^class SpaCostFunction3D {$/;"	c	namespace:cartographer::mapping::optimization
SpaceIndex	ceres-solver/internal/ceres/gmock/gmock.h	/^  size_t SpaceIndex(size_t ilhs, size_t irhs) const {$/;"	f	class:testing::internal::MatchMatrix
Span	cartographer/cartographer/mapping/detect_floors.cc	/^struct Span {$/;"	s	namespace:cartographer::mapping::__anon62	file:
SpanLength	cartographer/cartographer/mapping/detect_floors.cc	/^double SpanLength(const proto::Trajectory& trajectory, const Span& span) {$/;"	f	namespace:cartographer::mapping::__anon62
SparseCholesky	ceres-solver/internal/ceres/sparse_cholesky.h	/^class SparseCholesky {$/;"	c	namespace:ceres::internal
SparseCholeskySolverUnitTest	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^void SparseCholeskySolverUnitTest($/;"	f	namespace:ceres::internal
SparseCholeskyTest	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^class SparseCholeskyTest : public ::testing::TestWithParam<Param> {};$/;"	c	namespace:ceres::internal	file:
SparseDenseMultiply	ceres-solver/internal/ceres/suitesparse.h	/^  void SparseDenseMultiply(cholmod_sparse* A, double alpha, double beta,$/;"	f	class:ceres::internal::SuiteSparse
SparseLinearAlgebraLibraryType	ceres-solver/include/ceres/types.h	/^enum SparseLinearAlgebraLibraryType {$/;"	g	namespace:ceres
SparseLinearAlgebraLibraryTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* SparseLinearAlgebraLibraryTypeToString($/;"	f	namespace:ceres
SparseMatrix	ceres-solver/internal/ceres/sparse_matrix.h	/^class SparseMatrix : public LinearOperator {$/;"	c	namespace:ceres::internal
SparseMatrixPreconditioner	ceres-solver/internal/ceres/preconditioner.h	/^typedef TypedPreconditioner<SparseMatrix>              SparseMatrixPreconditioner;               \/\/ NOLINT$/;"	t	namespace:ceres::internal
SparseMatrixPreconditionerWrapper	ceres-solver/internal/ceres/preconditioner.cc	/^SparseMatrixPreconditionerWrapper::SparseMatrixPreconditionerWrapper($/;"	f	class:ceres::internal::SparseMatrixPreconditionerWrapper
SparseMatrixPreconditionerWrapper	ceres-solver/internal/ceres/preconditioner.h	/^class SparseMatrixPreconditionerWrapper : public SparseMatrixPreconditioner {$/;"	c	namespace:ceres::internal
SparseNormalCholeskySolver	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc	/^SparseNormalCholeskySolver::SparseNormalCholeskySolver($/;"	f	class:ceres::internal::SparseNormalCholeskySolver
SparseNormalCholeskySolver	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	/^class SparseNormalCholeskySolver : public BlockSparseMatrixSolver {$/;"	c	namespace:ceres::internal
SparseNormalCholeskySolverTest	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^class SparseNormalCholeskySolverTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
SparseSchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.cc	/^SparseSchurComplementSolver::SparseSchurComplementSolver($/;"	f	class:ceres::internal::SparseSchurComplementSolver
SparseSchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^class SparseSchurComplementSolver : public SchurComplementSolver {$/;"	c	namespace:ceres::internal
SpecializationFilename	ceres-solver/internal/ceres/generate_template_specializations.py	/^def SpecializationFilename(prefix, row_block_size, e_block_size, f_block_size):$/;"	f
Specialize	ceres-solver/internal/ceres/generate_template_specializations.py	/^def Specialize(name, data):$/;"	f
SpecifyCardinality	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ExpectationBase::SpecifyCardinality(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase
SplitEscapedString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::vector<std::string> SplitEscapedString(const std::string& str) {$/;"	f	namespace:testing::internal::__anon167
SplitIntoTestNames	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static std::vector<std::string> SplitIntoTestNames(const char* src) {$/;"	f	namespace:testing::internal
SplitString	cartographer_ros/cartographer_ros/cartographer_ros/split_string.cc	/^std::vector<std::string> SplitString(const std::string& input,$/;"	f	namespace:cartographer_ros
SplitString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void SplitString(const ::std::string& str, char delimiter,$/;"	f	namespace:testing::internal
SplitStringToIteratorUsing	ceres-solver/internal/ceres/split.cc	/^void SplitStringToIteratorUsing(const StringType& full,$/;"	f	namespace:ceres::internal
SplitStringUsing	ceres-solver/internal/ceres/split.cc	/^void SplitStringUsing(const string& full,$/;"	f	namespace:ceres::internal
SplitStringUsingChar	ceres-solver/examples/nist.cc	/^void SplitStringUsingChar(const string& full,$/;"	f	namespace:ceres::examples
SquaredColumnNorm	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::SquaredColumnNorm(double* x) const {$/;"	f	class:ceres::internal::BlockSparseMatrix
SquaredColumnNorm	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::SquaredColumnNorm(double* x) const {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
SquaredColumnNorm	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::SquaredColumnNorm(double* x) const {$/;"	f	class:ceres::internal::DenseSparseMatrix
SquaredColumnNorm	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::SquaredColumnNorm(double* x) const {$/;"	f	class:ceres::internal::TripletSparseMatrix
StableIndependentSetOrdering	ceres-solver/internal/ceres/graph_algorithms.h	/^int StableIndependentSetOrdering(const Graph<Vertex>& graph,$/;"	f	namespace:ceres::internal
StackGrowsDown	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool StackGrowsDown() {$/;"	f	namespace:testing::internal
StackLowerThanAddress	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void StackLowerThanAddress(const void* ptr, bool* result) {$/;"	f	namespace:testing::internal
Start	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::Start() {$/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
Start	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::Start() {$/;"	f	class:cartographer::cloud::MapBuilderServer
Start	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }$/;"	f	class:testing::internal::StreamingListener	file:
StartSlamThread	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::StartSlamThread() {$/;"	f	class:cartographer::cloud::MapBuilderServer
StartTrajectoryWithDefaultTopics	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^void Node::StartTrajectoryWithDefaultTopics(const TrajectoryOptions& options) {$/;"	f	class:cartographer_ros::Node
StartWatcherThreadFor	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static void StartWatcherThreadFor(DWORD thread_id) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	file:
StartsWith	ceres-solver/internal/ceres/gmock/gmock.h	/^    StartsWith(const internal::string& prefix) {$/;"	f	namespace:testing
StartsWith	ceres-solver/internal/ceres/gmock/gmock.h	/^    StartsWith(const internal::wstring& prefix) {$/;"	f	namespace:testing
StartsWithMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit StartsWithMatcher(const StringType& prefix) : prefix_(prefix) {$/;"	f	class:testing::internal::StartsWithMatcher
StartsWithMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class StartsWithMatcher {$/;"	c	namespace:testing::internal
Stat	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }$/;"	f	namespace:std::tr1::posix
StatStruct	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef struct _stat StatStruct;$/;"	t	namespace:std::tr1::posix	typeref:struct:std::tr1::posix::_stat
State	cartographer/cartographer/common/task.h	/^  enum State { NEW, DISPATCHED, DEPENDENCIES_COMPLETED, RUNNING, COMPLETED };$/;"	g	class:cartographer::common::Task
State	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  enum class State {$/;"	c	class:cartographer::io::OutlierRemovingPointsProcessor
State	ceres-solver/internal/ceres/line_search_minimizer.h	/^    State(int num_parameters,$/;"	f	struct:ceres::internal::LineSearchMinimizer::State
State	ceres-solver/internal/ceres/line_search_minimizer.h	/^  struct State {$/;"	s	class:ceres::internal::LineSearchMinimizer
StateMap	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  typedef std::map<const void*, MockObjectState> StateMap;$/;"	t	class:testing::__anon176::MockObjectRegistry	file:
StateUpdatingCallback	ceres-solver/internal/ceres/callbacks.cc	/^StateUpdatingCallback::StateUpdatingCallback(Program* program,$/;"	f	class:ceres::internal::StateUpdatingCallback
StateUpdatingCallback	ceres-solver/internal/ceres/callbacks.h	/^class StateUpdatingCallback : public IterationCallback {$/;"	c	namespace:ceres::internal
StateVectorToParameterBlocks	ceres-solver/internal/ceres/program.cc	/^bool Program::StateVectorToParameterBlocks(const double *state) {$/;"	f	class:ceres::internal::Program
StaticAssertTypeEq	ceres-solver/internal/ceres/gtest/gtest.h	/^bool StaticAssertTypeEq() {$/;"	f	namespace:testing
StaticConstructorSelector	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum StaticConstructorSelector { kStaticMutex = 0 };$/;"	g	class:std::tr1::Mutex
StatisticsString	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^std::string StatisticsString(const std::vector<Error>& errors) {$/;"	f	namespace:cartographer::ground_truth::__anon49
SteepestDescent	ceres-solver/internal/ceres/line_search_direction.cc	/^class SteepestDescent : public LineSearchDirection {$/;"	c	namespace:ceres::internal	file:
StepAccepted	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::StepAccepted(double step_quality) {$/;"	f	class:ceres::internal::DoglegStrategy
StepAccepted	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^void LevenbergMarquardtStrategy::StepAccepted(double step_quality) {$/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
StepAccepted	ceres-solver/internal/ceres/trust_region_step_evaluator.cc	/^void TrustRegionStepEvaluator::StepAccepted($/;"	f	class:ceres::internal::TrustRegionStepEvaluator
StepIsInvalid	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::StepIsInvalid() {$/;"	f	class:ceres::internal::DoglegStrategy
StepIsInvalid	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  virtual void StepIsInvalid() {$/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
StepQuality	ceres-solver/internal/ceres/trust_region_step_evaluator.cc	/^double TrustRegionStepEvaluator::StepQuality($/;"	f	class:ceres::internal::TrustRegionStepEvaluator
StepRejected	ceres-solver/internal/ceres/dogleg_strategy.cc	/^void DoglegStrategy::StepRejected(double step_quality) {$/;"	f	class:ceres::internal::DoglegStrategy
StepRejected	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^void LevenbergMarquardtStrategy::StepRejected(double step_quality) {$/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
StlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::ContainerEqMatcher
StlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
StlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::QuantifierMatcherImpl
StlContainer	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::type StlContainer;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
StlContainerConstIterator	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename StlContainer::const_iterator StlContainerConstIterator;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
StlContainerReference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::ContainerEqMatcher
StlContainerReference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
StlContainerReference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::QuantifierMatcherImpl
StlContainerReference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename View::const_reference StlContainerReference;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
StlContainerView	ceres-solver/internal/ceres/gmock/gmock.h	/^class StlContainerView {$/;"	c	namespace:testing::internal
StlContainerView	ceres-solver/internal/ceres/gmock/gmock.h	/^class StlContainerView< ::testing::tuple<ElementPointer, Size> > {$/;"	c	namespace:testing::internal
StlContainerView	ceres-solver/internal/ceres/gmock/gmock.h	/^class StlContainerView<Element[N]> {$/;"	c	namespace:testing::internal
StorageType	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  enum StorageType {$/;"	g	class:ceres::internal::CompressedRowSparseMatrix
StorageType	ceres-solver/internal/ceres/cxsparse.cc	/^CompressedRowSparseMatrix::StorageType CXSparseCholesky::StorageType() const {$/;"	f	class:ceres::internal::CXSparseCholesky
StorageType	ceres-solver/internal/ceres/eigensparse.cc	/^  virtual CompressedRowSparseMatrix::StorageType StorageType() const {$/;"	f	class:ceres::internal::EigenSparseCholeskyTemplate
StorageType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Functor StorageType;$/;"	t	struct:testing::internal::CallableTraits
StorageType	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ResType(*StorageType)(ArgType);$/;"	t	struct:testing::internal::CallableTraits
StorageType	ceres-solver/internal/ceres/suitesparse.cc	/^CompressedRowSparseMatrix::StorageType SuiteSparseCholesky::StorageType()$/;"	f	class:ceres::internal::SuiteSparseCholesky
StorageTypeForSparseLinearAlgebraLibrary	ceres-solver/internal/ceres/sparse_cholesky.cc	/^CompressedRowSparseMatrix::StorageType StorageTypeForSparseLinearAlgebraLibrary($/;"	f	namespace:ceres::internal
StrCaseCmp	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int StrCaseCmp(const char* s1, const char* s2) {$/;"	f	namespace:std::tr1::posix
StrCaseEq	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrCaseEq(const internal::string& str) {$/;"	f	namespace:testing
StrCaseEq	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrCaseEq(const internal::wstring& str) {$/;"	f	namespace:testing
StrCaseNe	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrCaseNe(const internal::string& str) {$/;"	f	namespace:testing
StrCaseNe	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrCaseNe(const internal::wstring& str) {$/;"	f	namespace:testing
StrDup	ceres-solver/internal/ceres/gtest/gtest.h	/^inline char* StrDup(const char* src) { return _strdup(src); }$/;"	f	namespace:std::tr1::posix
StrDup	ceres-solver/internal/ceres/gtest/gtest.h	/^inline char* StrDup(const char* src) { return strdup(src); }$/;"	f	namespace:std::tr1::posix
StrEq	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrEq(const internal::string& str) {$/;"	f	namespace:testing
StrEq	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrEq(const internal::wstring& str) {$/;"	f	namespace:testing
StrEqualityMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  StrEqualityMatcher(const StringType& str, bool expect_eq,$/;"	f	class:testing::internal::StrEqualityMatcher
StrEqualityMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class StrEqualityMatcher {$/;"	c	namespace:testing::internal
StrError	ceres-solver/internal/ceres/gtest/gtest.h	/^inline const char* StrError(int errnum) { return strerror(errnum); }$/;"	f	namespace:std::tr1::posix
StrNCpy	ceres-solver/internal/ceres/gtest/gtest.h	/^inline const char* StrNCpy(char* dest, const char* src, size_t n) {$/;"	f	namespace:std::tr1::posix
StrNe	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrNe(const internal::string& str) {$/;"	f	namespace:testing
StrNe	ceres-solver/internal/ceres/gmock/gmock.h	/^    StrNe(const internal::wstring& str) {$/;"	f	namespace:testing
StreamFileWriter	cartographer/cartographer/io/file_writer.cc	/^StreamFileWriter::StreamFileWriter(const std::string& filename)$/;"	f	class:cartographer::io::StreamFileWriter
StreamFileWriter	cartographer/cartographer/io/file_writer.h	/^class StreamFileWriter : public FileWriter {$/;"	c	namespace:cartographer::io
StreamHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^  inline void StreamHelper(internal::false_type \/*is_pointer*\/,$/;"	f	class:testing::Message
StreamHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^  inline void StreamHelper(internal::true_type \/*is_pointer*\/, T* pointer) {$/;"	f	class:testing::Message
StreamMatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit StreamMatchResultListener(::std::ostream* os)$/;"	f	class:testing::internal::StreamMatchResultListener
StreamMatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^class StreamMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
StreamWideCharsToMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,$/;"	f	namespace:testing::internal
StreamableToString	ceres-solver/internal/ceres/gtest/gtest.h	/^std::string StreamableToString(const T& streamable) {$/;"	f	namespace:testing::internal
StreamingListener	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  StreamingListener(const string& host, const string& port)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit StreamingListener(AbstractSocketWriter* socket_writer)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GTEST_API_ StreamingListener : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  StrictMock() {$/;"	f	class:testing::StrictMock
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2) : MockClass(a1, a2) {$/;"	f	class:testing::StrictMock
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3) : MockClass(a1, a2, a3) {$/;"	f	class:testing::StrictMock
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3, const A4& a4,$/;"	f	class:testing::StrictMock
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  StrictMock(const A1& a1, const A2& a2, const A3& a3,$/;"	f	class:testing::StrictMock
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit StrictMock(const A1& a1) : MockClass(a1) {$/;"	f	class:testing::StrictMock
StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^class StrictMock : public MockClass {$/;"	c	namespace:testing
String	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ String {$/;"	c	namespace:testing::internal
StringAppendF	ceres-solver/internal/ceres/stringprintf.cc	/^void StringAppendF(string* dst, const char* format, ...) {$/;"	f	namespace:ceres::internal
StringAppendV	ceres-solver/internal/ceres/stringprintf.cc	/^void StringAppendV(string* dst, const char* format, va_list ap) {$/;"	f	namespace:ceres::internal
StringFromGTestEnv	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string StringFromGTestEnv(const char* flag, const char* default_value) {$/;"	f	namespace:testing::internal
StringMatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^  StringMatchResultListener() : MatchResultListener(&ss_) {}$/;"	f	class:testing::StringMatchResultListener
StringMatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^class StringMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing
StringPrintf	ceres-solver/internal/ceres/stringprintf.cc	/^string StringPrintf(const char* format, ...) {$/;"	f	namespace:ceres::internal
StringStreamToString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string StringStreamToString(::std::stringstream* ss) {$/;"	f	namespace:testing::internal
StringToCovarianceAlgorithmType	ceres-solver/internal/ceres/types.cc	/^bool StringToCovarianceAlgorithmType($/;"	f	namespace:ceres
StringToDenseLinearAlgebraLibraryType	ceres-solver/internal/ceres/types.cc	/^bool StringToDenseLinearAlgebraLibraryType($/;"	f	namespace:ceres
StringToDoglegType	ceres-solver/internal/ceres/types.cc	/^bool StringToDoglegType(string value, DoglegType* type) {$/;"	f	namespace:ceres
StringToLineSearchDirectionType	ceres-solver/internal/ceres/types.cc	/^bool StringToLineSearchDirectionType(string value,$/;"	f	namespace:ceres
StringToLineSearchInterpolationType	ceres-solver/internal/ceres/types.cc	/^bool StringToLineSearchInterpolationType($/;"	f	namespace:ceres
StringToLineSearchType	ceres-solver/internal/ceres/types.cc	/^bool StringToLineSearchType(string value, LineSearchType* type) {$/;"	f	namespace:ceres
StringToLinearSolverType	ceres-solver/internal/ceres/types.cc	/^bool StringToLinearSolverType(string value, LinearSolverType* type) {$/;"	f	namespace:ceres
StringToMinimizerType	ceres-solver/internal/ceres/types.cc	/^bool StringToMinimizerType(string value, MinimizerType* type) {$/;"	f	namespace:ceres
StringToNonlinearConjugateGradientType	ceres-solver/internal/ceres/types.cc	/^bool StringToNonlinearConjugateGradientType($/;"	f	namespace:ceres
StringToNumericDiffMethodType	ceres-solver/internal/ceres/types.cc	/^bool StringToNumericDiffMethodType($/;"	f	namespace:ceres
StringToPreconditionerType	ceres-solver/internal/ceres/types.cc	/^bool StringToPreconditionerType(string value, PreconditionerType* type) {$/;"	f	namespace:ceres
StringToSparseLinearAlgebraLibraryType	ceres-solver/internal/ceres/types.cc	/^bool StringToSparseLinearAlgebraLibraryType($/;"	f	namespace:ceres
StringToTrustRegionStrategyType	ceres-solver/internal/ceres/types.cc	/^bool StringToTrustRegionStrategyType(string value,$/;"	f	namespace:ceres
StringToVisibilityClusteringType	ceres-solver/internal/ceres/types.cc	/^bool StringToVisibilityClusteringType($/;"	f	namespace:ceres
StringifyOrdering	ceres-solver/internal/ceres/solver.cc	/^void StringifyOrdering(const vector<int>& ordering, string* report) {$/;"	f	namespace:ceres::__anon190
Strings	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef ::std::vector<string> Strings;$/;"	t	namespace:testing::internal
StripBasename	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  void StripBasename(const std::string &full_path, std::string *filename) {$/;"	f	class:MessageLogger
StripTrailingSpaces	ceres-solver/internal/ceres/gtest/gtest.h	/^inline std::string StripTrailingSpaces(std::string str) {$/;"	f	namespace:std::tr1
Submap	cartographer/cartographer/mapping/submaps.h	/^  Submap(const transform::Rigid3d& local_submap_pose)$/;"	f	class:cartographer::mapping::Submap
Submap	cartographer/cartographer/mapping/submaps.h	/^class Submap {$/;"	c	namespace:cartographer::mapping
Submap2D	cartographer/cartographer/mapping/2d/submap_2d.cc	/^Submap2D::Submap2D(const Eigen::Vector2f& origin, std::unique_ptr<Grid2D> grid)$/;"	f	class:cartographer::mapping::Submap2D
Submap2D	cartographer/cartographer/mapping/2d/submap_2d.cc	/^Submap2D::Submap2D(const proto::Submap2D& proto)$/;"	f	class:cartographer::mapping::Submap2D
Submap2D	cartographer/cartographer/mapping/2d/submap_2d.h	/^class Submap2D : public Submap {$/;"	c	namespace:cartographer::mapping
Submap3D	cartographer/cartographer/mapping/3d/submap_3d.cc	/^Submap3D::Submap3D(const float high_resolution, const float low_resolution,$/;"	f	class:cartographer::mapping::Submap3D
Submap3D	cartographer/cartographer/mapping/3d/submap_3d.cc	/^Submap3D::Submap3D(const proto::Submap3D& proto)$/;"	f	class:cartographer::mapping::Submap3D
Submap3D	cartographer/cartographer/mapping/3d/submap_3d.h	/^class Submap3D : public Submap {$/;"	c	namespace:cartographer::mapping
SubmapController	cartographer/cartographer/mapping/internal/submap_controller.h	/^class SubmapController {$/;"	c	namespace:cartographer::mapping
SubmapCoverageGrid2D	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^  SubmapCoverageGrid2D(const MapLimits& map_limits)$/;"	f	class:cartographer::mapping::__anon82::SubmapCoverageGrid2D
SubmapCoverageGrid2D	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^class SubmapCoverageGrid2D {$/;"	c	namespace:cartographer::mapping::__anon82	file:
SubmapData	cartographer/cartographer/mapping/pose_graph_interface.h	/^  struct SubmapData {$/;"	s	class:cartographer::mapping::PoseGraphInterface
SubmapId	cartographer/cartographer/mapping/id.h	/^struct SubmapId {$/;"	s	namespace:cartographer::mapping
SubmapPose	cartographer/cartographer/mapping/pose_graph_interface.h	/^  struct SubmapPose {$/;"	s	class:cartographer::mapping::PoseGraphInterface
SubmapScanMatcher	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  struct SubmapScanMatcher {$/;"	s	class:cartographer::mapping::constraints::ConstraintBuilder2D
SubmapScanMatcher	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  struct SubmapScanMatcher {$/;"	s	class:cartographer::mapping::constraints::ConstraintBuilder3D
SubmapSlice	cartographer/cartographer/io/submap_painter.h	/^  SubmapSlice()$/;"	f	struct:cartographer::io::SubmapSlice
SubmapSlice	cartographer/cartographer/io/submap_painter.h	/^struct SubmapSlice {$/;"	s	namespace:cartographer::io
SubmapSpec2D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^struct SubmapSpec2D {$/;"	s	namespace:cartographer::mapping::optimization
SubmapSpec3D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^struct SubmapSpec3D {$/;"	s	namespace:cartographer::mapping::optimization
SubmapState	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  enum class SubmapState { kActive, kFinished };$/;"	c	class:cartographer::mapping::PoseGraph2D
SubmapState	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  enum class SubmapState { kActive, kFinished };$/;"	c	class:cartographer::mapping::PoseGraph3D
SubmapTexture	cartographer/cartographer/io/submap_painter.h	/^struct SubmapTexture {$/;"	s	namespace:cartographer::io
SubmapTextures	cartographer/cartographer/io/submap_painter.h	/^struct SubmapTextures {$/;"	s	namespace:cartographer::io
SubmapToProto	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^std::string MapBuilderStub::SubmapToProto($/;"	f	class:cartographer::cloud::MapBuilderStub
SubmapToProto	cartographer/cartographer/mapping/map_builder.cc	/^std::string MapBuilder::SubmapToProto($/;"	f	class:cartographer::mapping::MapBuilder
SubmapsDisplay	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^SubmapsDisplay::SubmapsDisplay() : tf_listener_(tf_buffer_) {$/;"	f	class:cartographer_rviz::SubmapsDisplay
SubmapsDisplay	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^class SubmapsDisplay$/;"	c	namespace:cartographer_rviz
SubscribeGlobalSlamOptimizations	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^int MapBuilderContext<SubmapType>::SubscribeGlobalSlamOptimizations($/;"	f	class:cartographer::cloud::MapBuilderContext
SubscribeGlobalSlamOptimizations	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^int MapBuilderServer::SubscribeGlobalSlamOptimizations($/;"	f	class:cartographer::cloud::MapBuilderServer
SubscribeLocalSlamResults	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^MapBuilderContext<SubmapType>::SubscribeLocalSlamResults($/;"	f	class:cartographer::cloud::MapBuilderContext
SubscribeLocalSlamResults	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^MapBuilderServer::SubscribeLocalSlamResults($/;"	f	class:cartographer::cloud::MapBuilderServer
SubscribeWithHandler	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^::ros::Subscriber SubscribeWithHandler($/;"	f	namespace:cartographer_ros::__anon144
Subscriber	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  struct Subscriber {$/;"	s	class:cartographer_ros::Node
SubsetParameterization	ceres-solver/include/ceres/local_parameterization.h	/^class CERES_EXPORT SubsetParameterization : public LocalParameterization {$/;"	c	namespace:ceres
SubsetParameterization	ceres-solver/internal/ceres/local_parameterization.cc	/^SubsetParameterization::SubsetParameterization($/;"	f	class:ceres::SubsetParameterization
SucceedingIterationCallback	ceres-solver/internal/ceres/minimizer_test.cc	/^class SucceedingIterationCallback : public IterationCallback {$/;"	c	namespace:ceres::internal	file:
SuffixForSize	ceres-solver/internal/ceres/generate_template_specializations.py	/^def SuffixForSize(size):$/;"	f
SuiteSparse	ceres-solver/internal/ceres/suitesparse.cc	/^SuiteSparse::SuiteSparse() { cholmod_start(&cc_); }$/;"	f	class:ceres::internal::SuiteSparse
SuiteSparse	ceres-solver/internal/ceres/suitesparse.h	/^class SuiteSparse {$/;"	c	namespace:ceres::internal
SuiteSparseCholesky	ceres-solver/internal/ceres/suitesparse.cc	/^SuiteSparseCholesky::SuiteSparseCholesky(const OrderingType ordering_type)$/;"	f	class:ceres::internal::SuiteSparseCholesky
SuiteSparseCholesky	ceres-solver/internal/ceres/suitesparse.h	/^class SuiteSparseCholesky : public SparseCholesky {$/;"	c	namespace:ceres::internal
SuiteSparse_long	ceres-solver/internal/ceres/suitesparse.h	69;"	d
SumOverTestCaseList	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static int SumOverTestCaseList(const std::vector<TestCase*>& case_list,$/;"	f	namespace:testing::internal
SummarizeGivenProgram	ceres-solver/internal/ceres/solver.cc	/^void SummarizeGivenProgram(const internal::Program& program,$/;"	f	namespace:ceres::__anon190
SummarizeReducedProgram	ceres-solver/internal/ceres/solver.cc	/^void SummarizeReducedProgram(const internal::Program& program,$/;"	f	namespace:ceres::__anon190
Summary	ceres-solver/include/ceres/gradient_problem_solver.h	/^  struct CERES_EXPORT Summary {$/;"	s	class:ceres::GradientProblemSolver
Summary	ceres-solver/include/ceres/solver.h	/^  struct CERES_EXPORT Summary {$/;"	s	class:ceres::Solver
Summary	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^GradientProblemSolver::Summary::Summary()$/;"	f	class:ceres::GradientProblemSolver::Summary
Summary	ceres-solver/internal/ceres/line_search.h	/^    Summary()$/;"	f	struct:ceres::internal::LineSearch::Summary
Summary	ceres-solver/internal/ceres/line_search.h	/^  struct Summary {$/;"	s	class:ceres::internal::LineSearch
Summary	ceres-solver/internal/ceres/linear_solver.h	/^    Summary()$/;"	f	struct:ceres::internal::LinearSolver::Summary
Summary	ceres-solver/internal/ceres/linear_solver.h	/^  struct Summary {$/;"	s	class:ceres::internal::LinearSolver
Summary	ceres-solver/internal/ceres/solver.cc	/^Solver::Summary::Summary()$/;"	f	class:ceres::Solver::Summary
Summary	ceres-solver/internal/ceres/trust_region_strategy.h	/^    Summary()$/;"	f	struct:ceres::internal::TrustRegionStrategy::Summary
Summary	ceres-solver/internal/ceres/trust_region_strategy.h	/^  struct Summary {$/;"	s	class:ceres::internal::TrustRegionStrategy
SuppressEventForwarding	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestEventListeners::SuppressEventForwarding() {$/;"	f	class:testing::TestEventListeners
SuppressTestEventsIfInSubprocess	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::SuppressTestEventsIfInSubprocess() {$/;"	f	class:testing::internal::UnitTestImpl
SwapLists	cartographer/cartographer/common/lockless_queue.h	/^  void SwapLists() {$/;"	f	class:cartographer::common::LocklessQueue
SwitchEndian	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  T SwitchEndian(const T value) const {$/;"	f	class:__anon155::EndianAwareFileReader	file:
SymmetricDiff	ceres-solver/internal/ceres/autodiff_test.cc	/^bool SymmetricDiff(const B& b,$/;"	f	namespace:ceres::internal
SymmetricGeometricDistance	ceres-solver/examples/libmv_homography.cc	/^double SymmetricGeometricDistance(const Mat3 &H,$/;"	f	namespace:__anon158
SymmetricGeometricDistanceTerms	ceres-solver/examples/libmv_homography.cc	/^void SymmetricGeometricDistanceTerms(const Eigen::Matrix<T, 3, 3> &H,$/;"	f	namespace:__anon158
SymmetricRankKUpdate	ceres-solver/internal/ceres/blas.cc	/^void BLAS::SymmetricRankKUpdate(int num_rows,$/;"	f	class:ceres::internal::BLAS
SymmetricRightMultiply	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^void BlockRandomAccessSparseMatrix::SymmetricRightMultiply(const double* x,$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
SystemTest	ceres-solver/internal/ceres/test_util.h	/^class SystemTest : public::testing::Test {$/;"	c	namespace:ceres::internal
T	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(const T (&a)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalPrinter
T	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void Print(const T (&value)[N], ::std::ostream* os) {$/;"	m	class:testing::internal::UniversalTersePrinter
T	ceres-solver/internal/ceres/gtest/gtest.h	/^inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {$/;"	m	namespace:testing::internal
T	ceres-solver/internal/ceres/gtest/gtest.h	/^inline void CopyArray(const T(&from)[N], U(*to)[N]) {$/;"	m	namespace:testing::internal
T	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ParamGenerator<T> ValuesIn(const T (&array)[N]);$/;"	m	namespace:testing
TAKE_OWNERSHIP	ceres-solver/include/ceres/types.h	/^  TAKE_OWNERSHIP$/;"	e	enum:ceres::Ownership
TARGET	cartographer/scripts/update_configuration_doc.py	/^TARGET = 'docs\/source\/configuration.rst'$/;"	v
TEST	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^TEST(MetricsTest, CollectCounter) {$/;"	f	namespace:cartographer::cloud::metrics::prometheus::__anon35
TEST	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^TEST(MetricsTest, CollectGauge) {$/;"	f	namespace:cartographer::cloud::metrics::prometheus::__anon35
TEST	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^TEST(MetricsTest, CollectHistogram) {$/;"	f	namespace:cartographer::cloud::metrics::prometheus::__anon35
TEST	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^TEST(MetricsTest, RunExposerServer) {$/;"	f	namespace:cartographer::cloud::metrics::prometheus::__anon35
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testBlockingPop) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testBlockingPopWithTimeout) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testPopWithTimeout) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testPushPeekPop) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testPushPopSharedPtr) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testPushWithTimeout) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/blocking_queue_test.cc	/^TEST(BlockingQueueTest, testPushWithTimeoutInfinteQueue) {$/;"	f	namespace:cartographer::common::__anon2
TEST	cartographer/cartographer/common/configuration_files_test.cc	/^TEST(ConfigurationFilesTest, ValidateMapBuilderOptions) {$/;"	f	namespace:cartographer::__anon7
TEST	cartographer/cartographer/common/configuration_files_test.cc	/^TEST(ConfigurationFilesTest, ValidateTrajectoryBuilderOptions) {$/;"	f	namespace:cartographer::__anon7
TEST	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^TEST(FixedRatioSamplerTest, AlwaysFalse) {$/;"	f	namespace:cartographer::common::__anon11
TEST	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^TEST(FixedRatioSamplerTest, AlwaysTrue) {$/;"	f	namespace:cartographer::common::__anon11
TEST	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^TEST(FixedRatioSamplerTest, FirstPulseIsTrue) {$/;"	f	namespace:cartographer::common::__anon11
TEST	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^TEST(FixedRatioSamplerTest, NonSensicalRatio) {$/;"	f	namespace:cartographer::common::__anon11
TEST	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^TEST(FixedRatioSamplerTest, SometimesTrue) {$/;"	f	namespace:cartographer::common::__anon11
TEST	cartographer/cartographer/common/lockless_queue_test.cc	/^TEST(LocklessQueueTest, PushAndPop) {$/;"	f	namespace:cartographer::common::__anon1
TEST	cartographer/cartographer/common/math_test.cc	/^TEST(MathTest, testDeg2rad) {$/;"	f	namespace:cartographer::common::__anon4
TEST	cartographer/cartographer/common/math_test.cc	/^TEST(MathTest, testNormalizeAngleDifference) {$/;"	f	namespace:cartographer::common::__anon4
TEST	cartographer/cartographer/common/math_test.cc	/^TEST(MathTest, testPow2) {$/;"	f	namespace:cartographer::common::__anon4
TEST	cartographer/cartographer/common/math_test.cc	/^TEST(MathTest, testPower) {$/;"	f	namespace:cartographer::common::__anon4
TEST	cartographer/cartographer/common/math_test.cc	/^TEST(MathTest, testRad2deg) {$/;"	f	namespace:cartographer::common::__anon4
TEST	cartographer/cartographer/common/optional_test.cc	/^TEST(OptionalTest, AssignmentOperator) {$/;"	f	namespace:cartographer::common::__anon6
TEST	cartographer/cartographer/common/optional_test.cc	/^TEST(OptionalTest, CreateDisengagedObject) {$/;"	f	namespace:cartographer::common::__anon6
TEST	cartographer/cartographer/common/optional_test.cc	/^TEST(OptionalTest, CreateFromOtherOptional) {$/;"	f	namespace:cartographer::common::__anon6
TEST	cartographer/cartographer/common/optional_test.cc	/^TEST(OptionalTest, CreateWithValue) {$/;"	f	namespace:cartographer::common::__anon6
TEST	cartographer/cartographer/common/rate_timer_test.cc	/^TEST(RateTimerTest, ComputeRate) {$/;"	f	namespace:cartographer::common::__anon8
TEST	cartographer/cartographer/common/rate_timer_test.cc	/^TEST(RateTimerTest, ComputeWallTimeRateRatio) {$/;"	f	namespace:cartographer::common::__anon8
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, ManyDependants) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, ManyDependencies) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, ManyTasks) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, RunTask) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, RunWithDependency) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, RunWithFinishedDependency) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, RunWithMultipleDependencies) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/common/thread_pool_test.cc	/^TEST(ThreadPoolTest, RunWithOutOfScopeDependency) {$/;"	f	namespace:cartographer::common::__anon5
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, CloseStream) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, Filename) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, HeaderAndWrite) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, HeaderAndWriteTerminatedString) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, Write) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, WriteHeader) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, WriteTerminatedHeaderString) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/fake_file_writer_test.cc	/^TEST(FakeFileWriter, WriteTerminatedString) {$/;"	f	namespace:cartographer::io::__anon21
TEST	cartographer/cartographer/io/points_processor_pipeline_builder_test.cc	/^TEST(PointsProcessorPipelineBuilderTest, RegisterBuiltInPointsProcessors) {$/;"	f	namespace:cartographer::io::__anon14
TEST	cartographer/cartographer/mapping/2d/map_limits_test.cc	/^TEST(MapLimitsTest, ConstructAndGet) {$/;"	f	namespace:cartographer::mapping::__anon59
TEST	cartographer/cartographer/mapping/2d/map_limits_test.cc	/^TEST(MapLimitsTest, ProtoConstructor) {$/;"	f	namespace:cartographer::mapping::__anon59
TEST	cartographer/cartographer/mapping/2d/map_limits_test.cc	/^TEST(MapLimitsTest, ToProto) {$/;"	f	namespace:cartographer::mapping::__anon59
TEST	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^TEST(ProbabilityGridTest, ApplyOdds) {$/;"	f	namespace:cartographer::mapping::__anon58
TEST	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^TEST(ProbabilityGridTest, CorrectCropping) {$/;"	f	namespace:cartographer::mapping::__anon58
TEST	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^TEST(ProbabilityGridTest, GetCellIndex) {$/;"	f	namespace:cartographer::mapping::__anon58
TEST	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^TEST(ProbabilityGridTest, GetProbability) {$/;"	f	namespace:cartographer::mapping::__anon58
TEST	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^TEST(ProbabilityGridTest, ProtoConstructor) {$/;"	f	namespace:cartographer::mapping::__anon58
TEST	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^TEST(ProbabilityGridTest, ToProto) {$/;"	f	namespace:cartographer::mapping::__anon58
TEST	cartographer/cartographer/mapping/2d/submap_2d_test.cc	/^TEST(Submap2DTest, TheRightNumberOfRangeDataAreInserted) {$/;"	f	namespace:cartographer::mapping::__anon60
TEST	cartographer/cartographer/mapping/2d/submap_2d_test.cc	/^TEST(Submap2DTest, ToFromProto) {$/;"	f	namespace:cartographer::mapping::__anon60
TEST	cartographer/cartographer/mapping/2d/xy_index_test.cc	/^TEST(XYIndexTest, CellLimitsProtoConstructor) {$/;"	f	namespace:cartographer::mapping::__anon57
TEST	cartographer/cartographer/mapping/2d/xy_index_test.cc	/^TEST(XYIndexTest, CellLimitsToProto) {$/;"	f	namespace:cartographer::mapping::__anon57
TEST	cartographer/cartographer/mapping/2d/xy_index_test.cc	/^TEST(XYIndexTest, XYIndexRangeIterator) {$/;"	f	namespace:cartographer::mapping::__anon57
TEST	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST(HybridGridTest, ApplyOdds) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST(HybridGridTest, GetCellIndex) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST(HybridGridTest, GetCenterOfCell) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST(HybridGridTest, GetProbability) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST	cartographer/cartographer/mapping/3d/submap_3d_test.cc	/^TEST(SubmapsTest, ToFromProto) {$/;"	f	namespace:cartographer::mapping::__anon107
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, EmptyMapById) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, FindNodeId) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, FindSubmapId) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, InsertIntoMapById) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, LowerBound) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, LowerBoundEdgeCases) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, LowerBoundFuzz) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, LowerBoundFuzzWithStruct) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, MapByIdIterateByTrajectories) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, MapByIdIterator) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, MapByIdPrevIterator) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, MapByIdTrajectoryIdRange) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/id_test.cc	/^TEST(IdTest, MapByIdTrajectoryRange) {$/;"	f	namespace:cartographer::mapping::__anon65
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^TEST(Candidate, Construction) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon79
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^TEST(DiscretizeScans, DiscretizeScans) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon79
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^TEST(GenerateRotatedScans, GenerateRotatedScans) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon79
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^TEST(SearchParameters, Construction) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon79
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^TEST(FastCorrelativeScanMatcherTest, CorrectPose) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon80
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^TEST(FastCorrelativeScanMatcherTest, FullSubmapMatching) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon80
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^TEST(PrecomputationGridTest, CorrectValues) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon80
TEST	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^TEST(PrecomputationGridTest, TinyProbabilityGrid) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon80
TEST	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d_test.cc	/^TEST(PrecomputedGridGenerator3DTest, TestAgainstNaiveAlgorithm) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon97
TEST	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^TEST(RotationDeltaCostFunctor3DTest, ComputesCorrectCost) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon101
TEST	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^TEST(RotationDeltaCostFunctor3DTest, SameRotationGivesZeroCost) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon101
TEST	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher_test.cc	/^TEST(RotationalScanMatcher3DTest, InterpolatesAsExpected) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon100
TEST	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher_test.cc	/^TEST(RotationalScanMatcher3DTest, OnlySameHistogramIsScoreOne) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon100
TEST	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^TEST(ConnectedComponentsTest, ConnectedComponents) {$/;"	f	namespace:cartographer::mapping::__anon70
TEST	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^TEST(ConnectedComponentsTest, ConnectionCount) {$/;"	f	namespace:cartographer::mapping::__anon70
TEST	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^TEST(ConnectedComponentsTest, EmptyConnectedComponents) {$/;"	f	namespace:cartographer::mapping::__anon70
TEST	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^TEST(ConnectedComponentsTest, ReflexiveConnectivity) {$/;"	f	namespace:cartographer::mapping::__anon70
TEST	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^TEST(ConnectedComponentsTest, TransitivelyConnected) {$/;"	f	namespace:cartographer::mapping::__anon70
TEST	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d_test.cc	/^TEST(LandmarkCostFunctionTest, SmokeTest) {$/;"	f	namespace:cartographer::mapping::optimization::__anon89
TEST	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d_test.cc	/^TEST(LandmarkCostFunction3DTest, SmokeTest) {$/;"	f	namespace:cartographer::mapping::optimization::__anon92
TEST	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^TEST(RangeDataCollatorTest, SingleSensor) {$/;"	f	namespace:cartographer::mapping::__anon85
TEST	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^TEST(RangeDataCollatorTest, SingleSensorEmptyData) {$/;"	f	namespace:cartographer::mapping::__anon85
TEST	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^TEST(RangeDataCollatorTest, ThreeSensors) {$/;"	f	namespace:cartographer::mapping::__anon85
TEST	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^TEST(RangeDataCollatorTest, TwoSensors) {$/;"	f	namespace:cartographer::mapping::__anon85
TEST	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^TEST(TrajectoryConnectivityStateTest, Connected) {$/;"	f	namespace:cartographer::mapping
TEST	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^TEST(TrajectoryConnectivityStateTest, JoinTwoComponents) {$/;"	f	namespace:cartographer::mapping
TEST	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^TEST(TrajectoryConnectivityStateTest, NotConnected) {$/;"	f	namespace:cartographer::mapping
TEST	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^TEST(TrajectoryConnectivityStateTest, UnknownTrajectory) {$/;"	f	namespace:cartographer::mapping
TEST	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^TEST(TrajectoryConnectivityStateTest, UpdateConnectionTime) {$/;"	f	namespace:cartographer::mapping
TEST	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^TEST(PoseExtrapolatorDeathTest, ExtrapolateInPast) {$/;"	f	namespace:cartographer::mapping::__anon67
TEST	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^TEST(PoseExtrapolatorDeathTest, IncompleteInitialization) {$/;"	f	namespace:cartographer::mapping::__anon67
TEST	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^TEST(PoseExtrapolatorTest, EstimateGravityOrientationWithIMU) {$/;"	f	namespace:cartographer::mapping::__anon67
TEST	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^TEST(PoseExtrapolatorTest, ExtrapolateWithIMU) {$/;"	f	namespace:cartographer::mapping::__anon67
TEST	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^TEST(PoseExtrapolatorTest, ExtrapolateWithPoses) {$/;"	f	namespace:cartographer::mapping::__anon67
TEST	cartographer/cartographer/mapping/pose_graph_test.cc	/^TEST(PoseGraph, SerializeConstraint) {$/;"	f	namespace:cartographer::mapping::__anon111
TEST	cartographer/cartographer/mapping/pose_graph_trimmer_test.cc	/^TEST(PureLocalizationTrimmerTest, MarksSubmapsAsExpected) {$/;"	f	namespace:cartographer::mapping::__anon52
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest, CellUpdate) {$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest, ConversionLookUpTable) {$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest, EqualityLookupTableToApplyOdds) {$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest, MultipleCellUpdate) {$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest, OddsConversions) {$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest, OddsConversionsCorrespondenceCost) {$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/probability_values_test.cc	/^TEST(ProbabilityValuesTest,$/;"	f	namespace:cartographer::mapping::__anon69
TEST	cartographer/cartographer/mapping/submaps_test.cc	/^TEST(SubmapsTest, LogOddsConversions) {$/;"	f	namespace:cartographer::mapping::__anon64
TEST	cartographer/cartographer/mapping/trajectory_node_test.cc	/^TEST(TrajectoryNodeTest, ToAndFromProto) {$/;"	f	namespace:cartographer::mapping::__anon56
TEST	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^TEST(CompressPointCloudTest, Compresses) {$/;"	f	namespace:cartographer::sensor::__anon121
TEST	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^TEST(CompressPointCloudTest, CompressesEmptyPointCloud) {$/;"	f	namespace:cartographer::sensor::__anon121
TEST	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^TEST(CompressPointCloudTest, CompressesNoGaps) {$/;"	f	namespace:cartographer::sensor::__anon121
TEST	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^TEST(CompressPointCloudTest, CompressesPointsCorrectly) {$/;"	f	namespace:cartographer::sensor::__anon121
TEST	cartographer/cartographer/sensor/internal/collator_test.cc	/^TEST(Collator, Ordering) {$/;"	f	namespace:cartographer::sensor::__anon122
TEST	cartographer/cartographer/sensor/internal/collator_test.cc	/^TEST(Collator, OrderingMultipleTrajectories) {$/;"	f	namespace:cartographer::sensor::__anon122
TEST	cartographer/cartographer/sensor/internal/trajectory_collator_test.cc	/^TEST(TrajectoryCollator, OrderingMultipleTrajectories) {$/;"	f	namespace:cartographer::sensor::__anon126
TEST	cartographer/cartographer/sensor/internal/voxel_filter_test.cc	/^TEST(VoxelFilterTest, HandlesLargeCoordinates) {$/;"	f	namespace:cartographer::sensor::__anon124
TEST	cartographer/cartographer/sensor/internal/voxel_filter_test.cc	/^TEST(VoxelFilterTest, IgnoresTime) {$/;"	f	namespace:cartographer::sensor::__anon124
TEST	cartographer/cartographer/sensor/internal/voxel_filter_test.cc	/^TEST(VoxelFilterTest, ReturnsTheFirstPointInEachVoxel) {$/;"	f	namespace:cartographer::sensor::__anon124
TEST	cartographer/cartographer/sensor/map_by_time_test.cc	/^TEST(MapByTimeTest, AppendAndViewTrajectory) {$/;"	f	namespace:cartographer::sensor::__anon118
TEST	cartographer/cartographer/sensor/map_by_time_test.cc	/^TEST(MapByTimeTest, Trimming) {$/;"	f	namespace:cartographer::sensor::__anon118
TEST	cartographer/cartographer/sensor/map_by_time_test.cc	/^TEST(MapByTimeTest, TrimmingDoesNotCreateTrajectory) {$/;"	f	namespace:cartographer::sensor::__anon118
TEST	cartographer/cartographer/sensor/point_cloud_test.cc	/^TEST(PointCloudTest, TransformPointCloud) {$/;"	f	namespace:cartographer::sensor::__anon119
TEST	cartographer/cartographer/sensor/point_cloud_test.cc	/^TEST(PointCloudTest, TransformTimedPointCloud) {$/;"	f	namespace:cartographer::sensor::__anon119
TEST	cartographer/cartographer/transform/transform_interpolation_buffer_test.cc	/^TEST(TransformInterpolationBufferTest, testHas) {$/;"	f	namespace:cartographer::transform::__anon114
TEST	cartographer/cartographer/transform/transform_interpolation_buffer_test.cc	/^TEST(TransformInterpolationBufferTest, testLookup) {$/;"	f	namespace:cartographer::transform::__anon114
TEST	cartographer/cartographer/transform/transform_interpolation_buffer_test.cc	/^TEST(TransformInterpolationBufferTest, testLookupSingleTransform) {$/;"	f	namespace:cartographer::transform::__anon114
TEST	cartographer/cartographer/transform/transform_test.cc	/^TEST(TransformTest, Embed3D) {$/;"	f	namespace:cartographer::transform::__anon113
TEST	cartographer/cartographer/transform/transform_test.cc	/^TEST(TransformTest, GetAngle) {$/;"	f	namespace:cartographer::transform::__anon113
TEST	cartographer/cartographer/transform/transform_test.cc	/^TEST(TransformTest, GetYaw) {$/;"	f	namespace:cartographer::transform::__anon113
TEST	cartographer/cartographer/transform/transform_test.cc	/^TEST(TransformTest, GetYawAxisOrdering) {$/;"	f	namespace:cartographer::transform::__anon113
TEST	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^TEST(MsgConversion, ComputeLocalFrameFromLatLong) {$/;"	f	namespace:cartographer_ros::__anon145
TEST	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^TEST(MsgConversion, LandmarkListToLandmarkData) {$/;"	f	namespace:cartographer_ros::__anon145
TEST	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^TEST(MsgConversion, LaserScanToPointCloud) {$/;"	f	namespace:cartographer_ros::__anon145
TEST	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^TEST(MsgConversion, LaserScanToPointCloudWithInfinityAndNaN) {$/;"	f	namespace:cartographer_ros::__anon145
TEST	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^TEST(MsgConversion, LatLongAltToEcef) {$/;"	f	namespace:cartographer_ros::__anon145
TEST	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion_test.cc	/^TEST(TimeConversion, testToRos) {$/;"	f	namespace:cartographer_ros::__anon139
TEST	ceres-solver/internal/ceres/array_utils_test.cc	/^TEST(ArrayUtils, FindInvalidIndex) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/array_utils_test.cc	/^TEST(ArrayUtils, IsArrayValid) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/array_utils_test.cc	/^TEST(MapValuesToContiguousRange, ContiguousEntries) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/array_utils_test.cc	/^TEST(MapValuesToContiguousRange, NonContiguousEntries) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/array_utils_test.cc	/^TEST(MapValuesToContiguousRange, NonContiguousRepeatingEntries) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^TEST(AutoDiffCostFunction, PartiallyFilledResidualShouldFailEvaluation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^TEST(AutodiffCostFunction, BilinearDifferentiationTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^TEST(AutodiffCostFunction, ManyParameterAutodiffInstantiates) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^TEST(AutoDiffLocalParameterization, QuaternionParameterizationNearZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^TEST(AutoDiffLocalParameterization, QuaternionParameterizationNonZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^TEST(AutoDiffLocalParameterization, QuaternionParameterizationZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^TEST(AutoDiffLocalParameterizationTest, IdentityParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^TEST(AutoDiffLocalParameterizationTest, ScaledParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_test.cc	/^TEST(AutoDiff, AlignedAllocationTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_test.cc	/^TEST(AutoDiff, Metric) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_test.cc	/^TEST(AutoDiff, ProjectiveCameraModel) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_test.cc	/^TEST(AutoDiff, VariadicAutoDiff) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/autodiff_test.cc	/^TEST(AutoDiff, VaryingNumberOfResidualsForOneCostFunctorType) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/block_random_access_dense_matrix_test.cc	/^TEST(BlockRandomAccessDenseMatrix, GetCell) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/block_random_access_dense_matrix_test.cc	/^TEST(BlockRandomAccessDenseMatrix, WriteCell) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^TEST(BlockRandomAccessSparseMatrix, GetCell) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST(BlockSparseMatrix, CreateDiagonalMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/c_api_test.cc	/^TEST(C_API, LossFunctions) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/c_api_test.cc	/^TEST(C_API, SimpleEndToEndTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^TEST(_, BlockPermutationToScalarPermutation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^TEST(_, ScalarMatrixToBlockMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST(CompressedRowSparseMatrix, CreateBlockDiagonalMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST(CompressedRowSparseMatrix, FromTripletSparseMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST(CompressedRowSparseMatrix, FromTripletSparseMatrixTransposed) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST(CompressedRowSparseMatrix, Transpose) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^TEST(CostFunctionTest, ConditionedCostFunction) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/conjugate_gradients_solver_test.cc	/^TEST(ConjuateGradientTest, Solves3x3SymmetricSystem) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/conjugate_gradients_solver_test.cc	/^TEST(ConjugateGradientTest, Solves3x3IdentitySystem) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, MultidimensionalGaussNewtonApproximation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, MultidimensionalGaussNewtonApproximationZeroResidual) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, NegativeGradientDeathTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, ScalarCorrection) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, ScalarCorrectionAlphaClamped) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, ScalarCorrectionZeroResidual) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/corrector_test.cc	/^TEST(Corrector, ZeroGradientDeathTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^TEST(CostFunctionToFunctor, DynamicCostFunctionToFunctor) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^TEST(CostFunctionToFunctor, DynamicNumberOfResiduals) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/covariance_test.cc	/^TEST(CovarianceImpl, ComputeCovarianceSparsity) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/covariance_test.cc	/^TEST(CovarianceImpl, ComputeCovarianceSparsityWithConstantParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/covariance_test.cc	/^TEST(CovarianceImpl, ComputeCovarianceSparsityWithFreeParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(BiCubicInterpolator, JetEvaluation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(CubicInterpolator, JetEvaluation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid1D, OneDataDimension) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid1D, OneDataDimensionOutOfBounds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid1D, TwoDataDimensionIntegerDataInterleaved) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid1D, TwoDataDimensionIntegerDataStacked) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid2D, OneDataDimensionRowMajor) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid2D, OneDataDimensionRowMajorOutOfBounds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid2D, TwoDataDimensionColMajorInterleaved) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid2D, TwoDataDimensionColMajorStacked) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid2D, TwoDataDimensionRowMajorInterleaved) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST(Grid2D, TwoDataDimensionRowMajorStacked) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/detect_structure_test.cc	/^TEST(DetectStructure, DynamicEBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/detect_structure_test.cc	/^TEST(DetectStructure, DynamicFBlockDifferentRows) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/detect_structure_test.cc	/^TEST(DetectStructure, DynamicFBlockSameRow) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/detect_structure_test.cc	/^TEST(DetectStructure, DynamicRow) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/detect_structure_test.cc	/^TEST(DetectStructure, EverythingStatic) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST(DynamicAutodiffCostFunctionTest, JacobianWithFirstParameterBlockConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST(DynamicAutodiffCostFunctionTest, JacobianWithSecondParameterBlockConstant) {  \/\/ NOLINT$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST(DynamicAutodiffCostFunctionTest, TestJacobian) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST(DynamicAutodiffCostFunctionTest, TestResiduals) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST(DynamicNumericdiffCostFunctionTest, JacobianWithFirstParameterBlockConstant) {  \/\/ NOLINT$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST(DynamicNumericdiffCostFunctionTest, JacobianWithSecondParameterBlockConstant) {  \/\/ NOLINT$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST(DynamicNumericdiffCostFunctionTest, TestJacobian) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST(DynamicNumericdiffCostFunctionTest, TestResiduals) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^TEST(DynamicSparsity, StaticAndDynamicSparsityProduceSameSolution) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST(Evaluator, EvaluatorRespectsParameterChanges) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_checker_test.cc	/^TEST(GradientChecker, SmokeTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_checker_test.cc	/^TEST(GradientChecker, TestCorrectnessWithLocalParameterizations) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^TEST(GradientCheckingCostFunction, ResidualsAndJacobiansArePreservedTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^TEST(GradientCheckingCostFunction, SmokeTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^TEST(GradientCheckingProblemImpl, ProblemDimensionsMatch) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^TEST(GradientProblemSolver, SolvesRosenbrockWithDefaultOptions) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_problem_test.cc	/^TEST(GradientProblem, EvaluationWithParameterizationAndWithGradient) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_problem_test.cc	/^TEST(GradientProblem, EvaluationWithoutParameterizationAndWithGradient) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_problem_test.cc	/^TEST(GradientProblem, EvaluationWithoutParameterizationOrGradient) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_problem_test.cc	/^TEST(GradientProblem, EvalutaionWithParameterizationAndNoGradient) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gradient_problem_test.cc	/^TEST(GradientProblem, TakesOwnershipOfFirstOrderFunction) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^TEST(Degree2MaximumSpanningForest, PreserveWeights) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^TEST(Degree2MaximumSpanningForest, StarGraph) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^TEST(IndependentSetOrdering, Chain) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^TEST(IndependentSetOrdering, Star) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^TEST(StableIndependentSet, BreakTies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^TEST(VertexTotalOrdering, TotalOrdering) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(Graph, AddVertexAndEdge) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(Graph, AddVertexIdempotence) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(Graph, DieOnNonExistentVertex) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(Graph, EmptyGraph) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(WeightedGraph, AddVertexAndEdge) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(WeightedGraph, AddVertexIdempotence) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(WeightedGraph, DieOnNonExistentVertex) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(WeightedGraph, EmptyGraph) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/graph_test.cc	/^TEST(WeightedGraph, NonExistentEdge) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/gtest/gtest.h	21153;"	d
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, LastElementZero) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, NearZeroNegative) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, NearZeroPositive) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, NonZeroNegative) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, NonZeroPositive) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, NonZeroPositive_Size4) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, ZeroNegative) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/householder_vector_test.cc	/^TEST(HouseholderVector, ZeroPositive) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/inner_product_computer_test.cc	/^TEST(InnerProductComputer, NormalOperation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/inner_product_computer_test.cc	/^TEST(InnerProductComputer, SubMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^TEST(InvertPSDMatrix, FullRank5x5) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^TEST(InvertPSDMatrix, Identity3x3) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^TEST(InvertPSDMatrix, RankDeficient5x5) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/is_close_test.cc	/^TEST(IsClose, BothParametersNegative) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/is_close_test.cc	/^TEST(IsClose, BothParametersPositive) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/is_close_test.cc	/^TEST(IsClose, BothParametersZero) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/is_close_test.cc	/^TEST(IsClose, OneParameterZero) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/is_close_test.cc	/^TEST(IsClose, ParametersHaveMixedSigns) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(Jet, Jet) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(Jet, JetsInEigenMatrices) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, ArrayScalarBinaryOps) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, ArrayScalarUnaryOps) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, ClassificationFinite) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, ClassificationInf) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, ClassificationMixed) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, ClassificationNaN) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, MatrixScalarBinaryOps) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/jet_test.cc	/^TEST(JetTraitsTest, MatrixScalarUnaryOps) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^TEST(LevenbergMarquardtStrategy, AcceptRejectStepRadiusScaling) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^TEST(LevenbergMarquardtStrategy, CorrectDiagonalToLinearSolver) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_minimizer_test.cc	/^TEST(LineSearchMinimizerTest, FinalCostIsZero) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^TEST(LineSearchPreprocessor, NormalOperation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^TEST(LineSearchPreprocessor, ParameterBlockHasBounds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^TEST(LineSearchPreprocessor, ProblemWithInvalidParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^TEST(LineSearchPreprocessor, RemoveParameterBlocksFailed) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^TEST(LineSearchPreprocessor, RemoveParameterBlocksSucceeds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^TEST(LineSearchPreprocessor, ZeroProblem) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(EigenQuaternionParameterization, AwayFromZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(EigenQuaternionParameterization, NearZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(EigenQuaternionParameterization, ZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, AwayFromZeroTest1) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, AwayFromZeroTest2) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, AwayFromZeroTest3) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, AwayFromZeroTest4) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, AwayFromZeroTest5) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, DeathTests) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, NearZeroTest1) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, NearZeroTest2) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(HomogeneousVectorParameterization, ZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(IdentityParameterization, EverythingTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(QuaternionParameterization, AwayFromZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(QuaternionParameterization, NearZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(QuaternionParameterization, ZeroTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(SubsetParameterization, DuplicateParametersDeathTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(SubsetParameterization, GreaterThanSizeParameterIndexDeathTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(SubsetParameterization, NegativeParameterIndexDeathTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(SubsetParameterization, NormalFunctionTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST(SubsetParameterization,$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, ArctanLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, CauchyLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, ComposedLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, HuberLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, LossFunctionWrapper) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, ScaledLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, SoftLOneLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, TolerantLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, TrivialLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/loss_function_test.cc	/^TEST(LossFunction, TukeyLoss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/minimizer_test.cc	/^TEST(Minimizer, InitializationCopiesCallbacks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/minimizer_test.cc	/^TEST(Minimizer, UserAbortUpdatesSummaryMessage) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/minimizer_test.cc	/^TEST(Minimizer, UserSuccessUpdatesSummaryMessage) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/normal_prior_test.cc	/^TEST(NormalPriorTest, ResidualAtRandomPosition) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/normal_prior_test.cc	/^TEST(NormalPriorTest, ResidualAtRandomPositionNullJacobians) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EasyCaseCostFunctionCentralDifferences) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EasyCaseCostFunctionForwardDifferences) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EasyCaseCostFunctionRidders) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EasyCaseFunctorCentralDifferences) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EasyCaseFunctorForwardDifferences) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EasyCaseFunctorRidders) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, EigenRowMajorColMajorTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, ExponentialCostFunctionRidders) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, ExponentialFunctorRidders) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, PartiallyFilledResidualShouldFailEvaluation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, RandomizedCostFunctionRidders) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction, RandomizedFunctorRidders) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^TEST(NumericDiffCostFunction,$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, AddAndRemoveEveryThingFromOneGroup) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, BulkRemove) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, BulkRemoveWithNoElements) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, EmptyOrderedGroupBehavesCorrectly) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, EverythingInOneGroup) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, MinNonZeroGroup) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, ReverseOrdering) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, ReverseOrderingWithEmptyOrderedGroups) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/ordered_groups_test.cc	/^TEST(OrderedGroups, StartInOneGroupAndThenSplit) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, DefaultBounds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, DetectBadLocalParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, PlusWithBoundsConstraints) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, PlusWithNoLocalParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetBounds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetLocalParameterizationAndNormalOperation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetLocalParameterizationDiesOnNullParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetLocalParameterizationDiesOnSizeMismatch) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetLocalParameterizationDiesWhenResettingToNull) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetLocalParameterizationWithSameExistingParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetParameterizationDiesOnZeroLocalSize) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock, SetStateUpdatesLocalParameterizationJacobian) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/parameter_block_test.cc	/^TEST(ParameterBlock,$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polymomial, ConstantInterpolatingPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, BothOutputArgumentsNullWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, ConstantPolynomialReturnsNoRoots) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, CubicInterpolatingPolynomialFromValues) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, CubicInterpolatingPolynomialFromValuesAndGradients) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, CubicInterpolatingPolynomialFromValuesAndOneGradient) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, DeficientCubicInterpolatingPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, DifferentiateConstantPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, DifferentiateQuadraticPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, InvalidPolynomialOfZeroLengthIsRejected) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, LinearInterpolatingPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, LinearPolynomialWithNegativeRootWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, LinearPolynomialWithPositiveRootWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, MinimizeConstantPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, MinimizeLinearPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, MinimizeQuadraticPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, NullPointerAsImaginaryPartWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, NullPointerAsRealPartWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuadraticInterpolatingPolynomial) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuadraticPolynomialWithCloseRootsWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuadraticPolynomialWithComplexRootsWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuadraticPolynomialWithOneNegativeRootWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuadraticPolynomialWithPositiveRootsWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuadraticPolynomialWithTwoNegativeRootsWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuarticMonomialWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuarticPolynomialWithTwoClustersOfCloseRootsWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuarticPolynomialWithTwoZeroRootsWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/polynomial_test.cc	/^TEST(Polynomial, QuarticPolynomialWorks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddParameterIgnoresDuplicateCalls) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddParameterWithAliasedParametersDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddParameterWithDifferentSizesOnTheSameVariableDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddResidualAddsDuplicatedParametersOnlyOnce) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddResidualWithDifferentSizesOnTheSameVariableDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddResidualWithDuplicateParametersDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddResidualWithIncorrectNumberOfParameterBlocksDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddResidualWithIncorrectSizesOfParameterBlockDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddResidualWithNullCostFunctionDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, AddingParametersAndResidualsResultsInExpectedProblem) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, CostFunctionsAreDeletedEvenWithRemovals) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, GetCostFunctionForResidualBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, GetLossFunctionForResidualBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, GetParameterization) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, IsParameterBlockConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, IsParameterBlockConstantWithUnknownPtrDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, ParameterBlockQueryTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, RemoveParameterBlockWithUnknownPtrDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, ReusedCostFunctionsAreOnlyDeletedOnce) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, SetLocalParameterizationWithUnknownPtrDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, SetParameterBlockConstantWithUnknownPtrDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/problem_test.cc	/^TEST(Problem, SetParameterBlockVariableWithUnknownPtrDies) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, CreateJacobianBlockSparsityTranspose) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, InfeasibleConstantParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, InfeasibleParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, ProblemHasNanParameterBlocks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, ReallocationInCreateJacobianBlockSparsityTranspose) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, RemoveFixedBlocksAllParameterBlocksConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, RemoveFixedBlocksFixedCost) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, RemoveFixedBlocksNoResidualBlocks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, RemoveFixedBlocksNothingConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, RemoveFixedBlocksNumEliminateBlocks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/program_test.cc	/^TEST(Program, RemoveFixedBlocksOneParameterBlockConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/reorder_program_test.cc	/^TEST(_, ApplyOrderingNormal) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/reorder_program_test.cc	/^TEST(_, ApplyOrderingOrderingTooSmall) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/reorder_program_test.cc	/^TEST(_, ReorderResidualBlockNormalFunction) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/residual_block_test.cc	/^TEST(ResidualBlock, EvaluteWithLocalParameterizations) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/residual_block_test.cc	/^TEST(ResidualBlock, EvaluteWithNoLossFunctionOrLocalParameterizations) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^TEST(ResidualBlockUtils, CheckAllCombinationsOfBadness) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(AngleAxis, NearZeroRotatePointGivesSameAnswerAsRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(AngleAxis, RotatePointGivesSameAnswerAsRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(EulerAnglesToRotationMatrix, IsOrthonormal) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(EulerAnglesToRotationMatrix, OnAxis) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(MatrixAdapter, ColumnMajor2x4IsCorrect) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(MatrixAdapter, ColumnMajor3x3ReturnTypeAndAccessIsCorrect) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(MatrixAdapter, RowMajor2x4IsCorrect) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(MatrixAdapter, RowMajor3x3ReturnTypeAndAccessIsCorrect) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Quaternion, MultiplicationIsAssociative) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Quaternion, RotatePointGivesSameAnswerAsRotationByMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Quaternion, RotatePointGivesSameAnswerAsRotationByMatrixCanned) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, AngleAxisToQuaterionAndBack) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, AngleAxisToRotationMatrixAndBack) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, AngleAxisToRotationMatrixAndBackNearZero) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, AtPiAngleAxisRoundTrip) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, NearPiAngleAxisRoundTrip) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, NearZeroAngleAxisToRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, QuaterionToAngleAxisAndBack) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, QuaternionToAngleAxisAngleIsLessThanPi) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, SmallAngleAxisToQuaternion) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, SmallAngleAxisToQuaternionForJets) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, SmallQuaternionToAngleAxis) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, SmallQuaternionToAngleAxisForJets) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, TinyAngleAxisToQuaternion) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, TinyAngleAxisToQuaternionForJets) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, TinyQuaternionToAngleAxis) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, TinyQuaternionToAngleAxisForJets) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, UnitQuaternionToAngleAxis) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, XRotationToQuaternion) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, XRotationToRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, YRotationQuaternionToAngleAxis) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, YRotationToRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, ZRotationQuaternionToAngleAxis) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, ZRotationToRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, ZeroAngleAxisToQuaternion) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, ZeroAngleAxisToQuaternionForJets) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, ZeroAngleAxisToRotationMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(Rotation, ZeroQuaternionToAngleAxisForJets) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(RotationMatrixToAngleAxis, ExhaustiveRoundTrip) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/rotation_test.cc	/^TEST(RotationMatrixToAngleAxis, NearPiExampleOneFromTobiasStrauss) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/single_linkage_clustering_test.cc	/^TEST(SingleLinkageClustering, ComponentWithWeakLink) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/single_linkage_clustering_test.cc	/^TEST(SingleLinkageClustering, ComponentWithWeakLinkAndStrongLink) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/single_linkage_clustering_test.cc	/^TEST(SingleLinkageClustering, GraphHasTwoComponents) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/small_blas_test.cc	/^TEST(BLAS, MatrixMatrixMultiply) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/small_blas_test.cc	/^TEST(BLAS, MatrixTransposeMatrixMultiply) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/small_blas_test.cc	/^TEST(BLAS, MatrixTransposeVectorMultiply) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/small_blas_test.cc	/^TEST(BLAS, MatrixVectorMultiply) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, FixedCostForConstantProblem) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, IterativeLinearSolverForDogleg) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, IterativeSchurWithClusterJacobiPerconditionerNoSparseLibrary) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, IterativeSchurWithClusterTridiagonalPerconditionerNoSparseLibrary) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, LineSearchProblemHasNoParameterBlocks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, LineSearchProblemHasZeroResiduals) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, LineSearchProblemIsConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, LinearSolverTypeNormalOperation) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseNormalCholeskyNoCXSparse) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseNormalCholeskyNoEigenSparse) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseNormalCholeskyNoSparseLibrary) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseNormalCholeskyNoSuiteSparse) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseSchurNoCXSparse) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseSchurNoEigenSparse) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseSchurNoSparseLibrary) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, SparseSchurNoSuiteSparse) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, TrustRegionProblemHasNoParameterBlocks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, TrustRegionProblemHasZeroResiduals) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, TrustRegionProblemIsConstant) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(Solver, UpdateStateEveryIterationOption) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(SolverOptions, DefaultLineSearchOptionsAreValid) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/solver_test.cc	/^TEST(SolverOptions, DefaultTrustRegionOptionsAreValid) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, AppendCols) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, AppendRows) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, AssignmentOperator) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, CopyConstructor) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, CreateDiagonalMatrix) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, DefaultConstructorReturnsEmptyObject) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, Resize) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^TEST(TripletSparseMatrix, SimpleConstructorAndBasicOperations) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^TEST(TrustRegionMinimizer, GradientToleranceConvergenceUpdatesStep) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^TEST(TrustRegionMinimizer, JacobiScalingTest) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^TEST(TrustRegionMinimizer, PowellsSingularFunctionUsingDogleg) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^TEST(TrustRegionMinimizer, PowellsSingularFunctionUsingLevenbergMarquardt) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessor, ParameterBlockBoundsAreInvalid) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessor, ParamterBlockIsInfeasible) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessor, ProblemWithInvalidParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessor, RemoveParameterBlocksFailed) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessor, RemoveParameterBlocksSucceeds) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessor, ZeroProblem) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST(TrustRegionPreprocessorTest, InnerIterationsWithOneParameterBlock) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/visibility_test.cc	/^TEST(VisibilityTest, NoEBlocks) {$/;"	f	namespace:ceres::internal
TEST	ceres-solver/internal/ceres/visibility_test.cc	/^TEST(VisibilityTest, SimpleMatrix) {$/;"	f	namespace:ceres::internal
TEST_BODY	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	259;"	d	file:
TEST_BODY	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	316;"	d	file:
TEST_DID_NOT_DIE	ceres-solver/internal/ceres/gtest/gtest.h	/^    TEST_DID_NOT_DIE$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_ENCOUNTERED_RETURN_STATEMENT	ceres-solver/internal/ceres/gtest/gtest.h	/^    TEST_ENCOUNTERED_RETURN_STATEMENT,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, AddSensorData) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, AddSensorDataWithMock) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, AddTrajectoryBuilder) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, AddTrajectoryBuilderWithMock) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, AddTrajectoryBuilderWithUploadingServer) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, GlobalSlam3D) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, LocalSlam2D) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, LocalSlam2DWithUploadingServer) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, StartAndStopServer) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/client_server_test.cc	/^TEST_F(ClientServerTest, StartAndStopUploadingServerAndServer) {$/;"	f	namespace:cartographer::cloud::__anon48
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler_test.cc	/^TEST_F(AddFixedFramePoseDataHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon38
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler_test.cc	/^TEST_F(AddFixedFramePoseDataHandlerTest, WithMockLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon38
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler_test.cc	/^TEST_F(AddImuDataHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon45
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler_test.cc	/^TEST_F(AddImuDataHandlerTest, WithMockLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon45
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler_test.cc	/^TEST_F(AddLandmarkDataHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon41
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler_test.cc	/^TEST_F(AddLandmarkDataHandlerTest, WithMockLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon41
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler_test.cc	/^TEST_F(AddOdometryDataHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon43
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler_test.cc	/^TEST_F(AddOdometryDataHandlerTest, WithMockLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon43
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler_test.cc	/^TEST_F(AddRangefinderDataHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon39
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^TEST_F(AddTrajectoryHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon47
TEST_F	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^TEST_F(AddTrajectoryHandlerTest, WithLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon47
TEST_F	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler_test.cc	/^TEST_F(GetLandmarkPosesHandlerTest, NoLocalSlamUploader) {$/;"	f	namespace:cartographer::cloud::handlers::__anon44
TEST_F	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler_test.cc	/^TEST_F(SetLandmarkPoseHandlerTest, SetLandmarkPose) {$/;"	f	namespace:cartographer::cloud::handlers::__anon40
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetArrayValuesAsDictionaries) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetArrayValuesAsDoubles) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetArrayValuesAsStrings) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetBoolFalse) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetBoolTrue) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetDictionary) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetDouble) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetInt) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetKeys) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, GetString) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, NonExistingKey) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, TestChooseInvalidArgument) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, TestChooseTrue) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, TestChoseFalse) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, ToString) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, ToStringForArrays) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^TEST_F(LuaParameterDictionaryTest, UintNegative) {$/;"	f	namespace:cartographer::common::__anon3
TEST_F	cartographer/cartographer/common/task_test.cc	/^TEST_F(TaskTest, RunTask) {$/;"	f	namespace:cartographer::common::__anon10
TEST_F	cartographer/cartographer/common/task_test.cc	/^TEST_F(TaskTest, RunTaskWithDependency) {$/;"	f	namespace:cartographer::common::__anon10
TEST_F	cartographer/cartographer/common/task_test.cc	/^TEST_F(TaskTest, RunTaskWithTwoDependency) {$/;"	f	namespace:cartographer::common::__anon10
TEST_F	cartographer/cartographer/common/task_test.cc	/^TEST_F(TaskTest, RunWithCompletedDependency) {$/;"	f	namespace:cartographer::common::__anon10
TEST_F	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^TEST_F(InMemoryProtoStreamTest, ReadStreamInitializedFromQueue) {$/;"	f	namespace:cartographer::io::__anon27
TEST_F	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^TEST_F(InMemoryProtoStreamTest, ReadStreamInitializedIncrementally) {$/;"	f	namespace:cartographer::io::__anon27
TEST_F	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^TEST_F(ProtoStreamDeserializerTest, FailsIfVersionNotSupported) {$/;"	f	namespace:cartographer::io::__anon22
TEST_F	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^TEST_F(ProtoStreamDeserializerTest, WorksOnGoldenTextStream) {$/;"	f	namespace:cartographer::io::__anon22
TEST_F	cartographer/cartographer/io/proto_stream_test.cc	/^TEST_F(ProtoStreamTest, WriteAndReadBack) {$/;"	f	namespace:cartographer::io::__anon16
TEST_F	cartographer/cartographer/io/serialization_format_migration_test.cc	/^TEST_F(MigrationTest, MigrationAddsHeaderAsFirstMessage) {$/;"	f	namespace:cartographer::io::__anon18
TEST_F	cartographer/cartographer/io/serialization_format_migration_test.cc	/^TEST_F(MigrationTest, SerializedDataOrderIsCorrect) {$/;"	f	namespace:cartographer::io::__anon18
TEST_F	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^TEST_F(RangeDataInserterTest2D, InsertPointCloud) {$/;"	f	namespace:cartographer::mapping::__anon61
TEST_F	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^TEST_F(RangeDataInserterTest2D, ProbabilityProgression) {$/;"	f	namespace:cartographer::mapping::__anon61
TEST_F	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST_F(RandomHybridGridTest, FromProto) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST_F	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST_F(RandomHybridGridTest, TestIteration) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST_F	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^TEST_F(RandomHybridGridTest, ToProto) {$/;"	f	namespace:cartographer::mapping::__anon110
TEST_F	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^TEST_F(RangeDataInserter3DTest, InsertPointCloud) {$/;"	f	namespace:cartographer::mapping::__anon109
TEST_F	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^TEST_F(RangeDataInserter3DTest, ProbabilityProgression) {$/;"	f	namespace:cartographer::mapping::__anon109
TEST_F	cartographer/cartographer/mapping/imu_tracker_test.cc	/^TEST_F(ImuTrackerTest, IntegrateFullRotation) {$/;"	f	namespace:cartographer::mapping::__anon54
TEST_F	cartographer/cartographer/mapping/imu_tracker_test.cc	/^TEST_F(ImuTrackerTest, IntegrateYawRotation) {$/;"	f	namespace:cartographer::mapping::__anon54
TEST_F	cartographer/cartographer/mapping/imu_tracker_test.cc	/^TEST_F(ImuTrackerTest, LearnGravityVector) {$/;"	f	namespace:cartographer::mapping::__anon54
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, DoNotTrimUnfinishedSubmap) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, EmptyPoseGraph) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, TestMinAddedSubmapsCountParam) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, TestTransformations) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, TrimOneOfTwoOverlappingSubmaps) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, TrimSubmapWithLowCoveredCellsCount) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^TEST_F(OverlappingSubmapsTrimmer2DTest, UseOnlyIntraSubmapsToComputeFreshness) {$/;"	f	namespace:cartographer::mapping::__anon83
TEST_F	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^TEST_F(PoseGraph2DTest, ConsecutivelyOverlappingNodes) {$/;"	f	namespace:cartographer::mapping::__anon75
TEST_F	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^TEST_F(PoseGraph2DTest, EmptyMap) {$/;"	f	namespace:cartographer::mapping::__anon75
TEST_F	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^TEST_F(PoseGraph2DTest, NoMovement) {$/;"	f	namespace:cartographer::mapping::__anon75
TEST_F	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^TEST_F(PoseGraph2DTest, NoOverlappingNodes) {$/;"	f	namespace:cartographer::mapping::__anon75
TEST_F	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^TEST_F(PoseGraph2DTest, OverlappingNodes) {$/;"	f	namespace:cartographer::mapping::__anon75
TEST_F	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^TEST_F(CeresScanMatcherTest, testOptimizeAlongX) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon81
TEST_F	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^TEST_F(CeresScanMatcherTest, testOptimizeAlongXY) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon81
TEST_F	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^TEST_F(CeresScanMatcherTest, testOptimizeAlongY) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon81
TEST_F	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^TEST_F(CeresScanMatcherTest, testPerfectEstimate) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon81
TEST_F	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcherTest,$/;"	f	namespace:cartographer::mapping::scan_matching::__anon76
TEST_F	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^TEST_F(LocalTrajectoryBuilderTest, MoveInsideCubeUsingOnlyCeresScanMatcher) {$/;"	f	namespace:cartographer::mapping::__anon104
TEST_F	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^TEST_F(PoseGraph3DTest, BasicSerialization) {$/;"	f	namespace:cartographer::mapping::__anon105
TEST_F	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^TEST_F(PoseGraph3DTest, Empty) {$/;"	f	namespace:cartographer::mapping::__anon105
TEST_F	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^TEST_F(PoseGraph3DTest, EvenSubmapTrimmer) {$/;"	f	namespace:cartographer::mapping::__anon105
TEST_F	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^TEST_F(PoseGraph3DTest, PureLocalizationTrimmer) {$/;"	f	namespace:cartographer::mapping::__anon105
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^TEST_F(CeresScanMatcher3DTest, AlongX) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon94
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^TEST_F(CeresScanMatcher3DTest, AlongXYZ) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon94
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^TEST_F(CeresScanMatcher3DTest, AlongZ) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon94
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^TEST_F(CeresScanMatcher3DTest, FullPoseCorrection) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon94
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^TEST_F(CeresScanMatcher3DTest, PerfectEstimate) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon94
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^TEST_F(FastCorrelativeScanMatcher3DTest, CorrectPoseForMatch) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon96
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^TEST_F(FastCorrelativeScanMatcher3DTest, CorrectPoseForMatchFullSubmap) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon96
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^TEST_F(InterpolatedGridTest, InterpolatesGridPoints) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon99
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^TEST_F(InterpolatedGridTest, MonotonicBehaviorBetweenGridPointsInX) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon99
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, AlongX) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, AlongXYZ) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, AlongZ) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, PerfectEstimate) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, RotationAroundX) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, RotationAroundY) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^TEST_F(RealTimeCorrelativeScanMatcher3DTest, RotationAroundYZ) {$/;"	f	namespace:cartographer::mapping::scan_matching::__anon103
TEST_F	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^TEST_F(ConstraintBuilder2DTest, CallsBack) {$/;"	f	namespace:cartographer::mapping::constraints::__anon71
TEST_F	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^TEST_F(ConstraintBuilder2DTest, FindsConstraints) {$/;"	f	namespace:cartographer::mapping::constraints::__anon71
TEST_F	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^TEST_F(ConstraintBuilder3DTest, CallsBack) {$/;"	f	namespace:cartographer::mapping::constraints::__anon72
TEST_F	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^TEST_F(ConstraintBuilder3DTest, FindsConstraints) {$/;"	f	namespace:cartographer::mapping::constraints::__anon72
TEST_F	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^TEST_F(MotionFilterTest, LinearMotion) {$/;"	f	namespace:cartographer::mapping::__anon73
TEST_F	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^TEST_F(MotionFilterTest, NoChange) {$/;"	f	namespace:cartographer::mapping::__anon73
TEST_F	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^TEST_F(MotionFilterTest, NotInitialized) {$/;"	f	namespace:cartographer::mapping::__anon73
TEST_F	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^TEST_F(MotionFilterTest, RotationalMotion) {$/;"	f	namespace:cartographer::mapping::__anon73
TEST_F	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^TEST_F(MotionFilterTest, TimeElapsed) {$/;"	f	namespace:cartographer::mapping::__anon73
TEST_F	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^TEST_F(SpaCostFunction2DTest, CompareAutoDiffAndAnalytical) {$/;"	f	namespace:cartographer::mapping::optimization::__anon91
TEST_F	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^TEST_F(SpaCostFunction2DTest, EvaluateAnalyticalCost) {$/;"	f	namespace:cartographer::mapping::optimization::__anon91
TEST_F	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^TEST_F(SpaCostFunction2DTest, EvaluateAutoDiffCost) {$/;"	f	namespace:cartographer::mapping::optimization::__anon91
TEST_F	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^TEST_F(OptimizationProblem3DTest, ReducesNoise) {$/;"	f	namespace:cartographer::mapping::optimization::__anon87
TEST_F	cartographer/cartographer/mapping/map_builder_test.cc	/^TEST_F(MapBuilderTest, GlobalSlam2D) {$/;"	f	namespace:cartographer::mapping::__anon55
TEST_F	cartographer/cartographer/mapping/map_builder_test.cc	/^TEST_F(MapBuilderTest, GlobalSlam3D) {$/;"	f	namespace:cartographer::mapping::__anon55
TEST_F	cartographer/cartographer/mapping/map_builder_test.cc	/^TEST_F(MapBuilderTest, LocalSlam2D) {$/;"	f	namespace:cartographer::mapping::__anon55
TEST_F	cartographer/cartographer/mapping/map_builder_test.cc	/^TEST_F(MapBuilderTest, LocalSlam3D) {$/;"	f	namespace:cartographer::mapping::__anon55
TEST_F	cartographer/cartographer/mapping/map_builder_test.cc	/^TEST_F(MapBuilderTest, TrajectoryAddFinish2D) {$/;"	f	namespace:cartographer::mapping::__anon55
TEST_F	cartographer/cartographer/mapping/map_builder_test.cc	/^TEST_F(MapBuilderTest, TrajectoryAddFinish3D) {$/;"	f	namespace:cartographer::mapping::__anon55
TEST_F	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^TEST_F(OrderedMultiQueueTest, CommonStartTimePerTrajectory) {$/;"	f	namespace:cartographer::sensor::__anon123
TEST_F	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^TEST_F(OrderedMultiQueueTest, MarkQueueAsFinished) {$/;"	f	namespace:cartographer::sensor::__anon123
TEST_F	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^TEST_F(OrderedMultiQueueTest, Ordering) {$/;"	f	namespace:cartographer::sensor::__anon123
TEST_F	cartographer/cartographer/sensor/landmark_data_test.cc	/^TEST_F(LandmarkDataTest, LandmarkDataToAndFromProto) {$/;"	f	namespace:cartographer::sensor::__anon116
TEST_F	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^TEST_F(BlockJacobiPreconditionerTest, LargeProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^TEST_F(BlockJacobiPreconditionerTest, SmallProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^TEST_F(BlockRandomAccessDiagonalMatrixTest, Invert) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^TEST_F(BlockRandomAccessDiagonalMatrixTest, MatrixContents) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^TEST_F(BlockRandomAccessDiagonalMatrixTest, RightMultiply) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^TEST_F(BlockRandomAccessSparseMatrixTest, IntPairToLongOverflow) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^TEST_F(BlockRandomAccessSparseMatrixTest, LongToIntPair) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, AppendAndDeleteBlockDiagonalMatrix) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, AppendRows) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, LeftMultiplyTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, RightMultiplyTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, SetZeroTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, SquaredColumnNormTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^TEST_F(BlockSparseMatrixTest, ToDenseMatrixTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, DenseSchurWithAutomaticOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, DenseSchurWithUserOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, IterativeSchurWithJacobiAndAutomaticOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, IterativeSchurWithJacobiAndUserOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, IterativeSchurWithSchurJacobiAndUserOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, MultiThreadedDenseSchurWithAutomaticOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, MultiThreadedDenseSchurWithUserOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, SparseSchurWithAutomaticOrderingUsingCXSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, SparseSchurWithUserOrderingUsingCXSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, SparseSchurWithUserOrderingUsingEigenSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest, SparseSchurWithUserOrderingUsingSuiteSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^TEST_F(BundleAdjustmentTest,$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^TEST_F(CanonicalViewsTest, ComputeCanonicalViewsTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^TEST_F(CanonicalViewsTest, SimilarityPenaltyTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^TEST_F(CanonicalViewsTest, SizePenaltyTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^TEST_F(CanonicalViewsTest, ViewScoreTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^TEST_F(SolveUpperTriangularTest, RTRSolveWithSparseRHS) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^TEST_F(SolveUpperTriangularTest, SolveInPlace) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^TEST_F(SolveUpperTriangularTest, TransposeSolveInPlace) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, AppendAndDeleteBlockDiagonalMatrix) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, AppendRows) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, ColumnNorm) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, DeleteRows) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, LeftMultiply) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, RightMultiply) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, Scale) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, ToCRSMatrix) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^TEST_F(CompressedRowSparseMatrixTest, ToDenseMatrix) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, ComputeCovarianceFailure) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, ConstantParameterBlock) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, DenseCovarianceMatrixFromSetOfParameters) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, DenseCovarianceMatrixFromSetOfParametersInTangentSpace) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, DenseCovarianceMatrixFromSetOfParametersThreaded) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, LocalParameterization) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, LocalParameterizationInTangentSpace) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, LocalParameterizationInTangentSpaceWithConstantBlocks) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, NormalBehavior) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, ThreadedNormalBehavior) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(CovarianceTest, TruncatedRank) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(LargeScaleCovarianceTest, Parallel) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/covariance_test.cc	/^TEST_F(RankDeficientCovarianceTest, AutomaticTruncation) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree00Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree01Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree10Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree11Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree12Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree21Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, Degree22Function) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(BiCubicInterpolatorTest, ZeroFunction) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(CubicInterpolatorTest, ConstantFunction) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(CubicInterpolatorTest, LinearFunction) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^TEST_F(CubicInterpolatorTest, QuadraticFunction) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^TEST_F(DenseSparseMatrixTest, ColumnNorm) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^TEST_F(DenseSparseMatrixTest, LeftMultiply) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^TEST_F(DenseSparseMatrixTest, RightMultiply) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^TEST_F(DenseSparseMatrixTest, Scale) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^TEST_F(DenseSparseMatrixTest, ToDenseMatrix) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^TEST_F(DoglegStrategyFixtureEllipse, CorrectGaussNewtonStep) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^TEST_F(DoglegStrategyFixtureEllipse, TrustRegionObeyedSubspace) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^TEST_F(DoglegStrategyFixtureEllipse, TrustRegionObeyedTraditional) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^TEST_F(DoglegStrategyFixtureEllipse, ValidSubspaceBasis) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^TEST_F(DoglegStrategyFixtureValley, CorrectStepGlobalOptimumAlongGradient) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^TEST_F(DoglegStrategyFixtureValley, CorrectStepLocalOptimumAlongGradient) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(SixParameterCostFunctorTest, TestSixParameterJacobian) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(SixParameterCostFunctorTest, TestSixParameterJacobianVCCVCV) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(SixParameterCostFunctorTest, TestSixParameterJacobianVVCVVC) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(SixParameterCostFunctorTest, TestSixParameterResiduals) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(ThreeParameterCostFunctorTest, TestThreeParameterJacobian) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(ThreeParameterCostFunctorTest, TestThreeParameterResiduals) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^TEST_F(ThreeParameterCostFunctorTest,$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^TEST_F(DynamicCompressedRowSparseMatrixTest, ClearRows) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^TEST_F(DynamicCompressedRowSparseMatrixTest, Initialization) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^TEST_F(DynamicCompressedRowSparseMatrixTest, InsertEntryAndFinalize) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST_F(ThreeParameterCostFunctorTest, TestThreeParameterJacobian) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST_F(ThreeParameterCostFunctorTest, TestThreeParameterResiduals) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^TEST_F(ThreeParameterCostFunctorTest,$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^TEST_F(DynamicSparseNormalCholeskySolverTest, CXSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^TEST_F(DynamicSparseNormalCholeskySolverTest, Eigen) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^TEST_F(DynamicSparseNormalCholeskySolverTest, SuiteSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/gtest/gtest.h	21182;"	d
TEST_F	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^TEST_F(ImplicitSchurComplementTest, SchurMatrixValuesTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^TEST_F(IterativeSchurComplementSolverTest, NormalProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^TEST_F(IterativeSchurComplementSolverTest, ProblemWithNoFBlocks) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST_F(ProductParameterizationTest, ComputeJacobian) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST_F(ProductParameterizationTest, LocalAndGlobalSize2) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST_F(ProductParameterizationTest, LocalAndGlobalSize3) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST_F(ProductParameterizationTest, LocalAndGlobalSize4) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/local_parameterization_test.cc	/^TEST_F(ProductParameterizationTest, Plus) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^TEST_F(SchurOrderingTest, AllFixed) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^TEST_F(SchurOrderingTest, NoFixed) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^TEST_F(SchurOrderingTest, OneFixed) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^TEST_F(PartitionedMatrixViewTest, BlockDiagonalEtE) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^TEST_F(PartitionedMatrixViewTest, BlockDiagonalFtF) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^TEST_F(PartitionedMatrixViewTest, DimensionsTest) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^TEST_F(PartitionedMatrixViewTest, LeftMultiply) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^TEST_F(PartitionedMatrixViewTest, RightMultiplyE) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^TEST_F(PartitionedMatrixViewTest, RightMultiplyF) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ConstantParameterBlock) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ExcludedAResidualBlock) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ExcludedParameterBlock) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ExcludedParameterBlockAndExcludedResidualBlock) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, LocalParameterization) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, MultipleParameterAndResidualBlocks) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ParameterAndResidualBlocksPassedInOptions) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ReorderedResidualBlocks) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/problem_test.cc	/^TEST_F(ProblemEvaluateTest, ReorderedResidualBlocksAndReorderedParameterBlocks) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/reorder_program_test.cc	/^TEST_F(ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest,$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^TEST_F(SchurComplementSolverTest, DenseSchurWithEigenLargeProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^TEST_F(SchurComplementSolverTest, DenseSchurWithEigenSmallProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^TEST_F(SchurComplementSolverTest, DenseSchurWithEigenVaryingFBlockSize) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^TEST_F(SchurComplementSolverTest, DenseSchurWithLAPACKLargeProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^TEST_F(SchurComplementSolverTest, DenseSchurWithLAPACKSmallProblem) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^TEST_F(SchurComplementSolverTest,$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^TEST_F(SchurEliminatorTest, ScalarProblemNoRegularization) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^TEST_F(SchurEliminatorTest, ScalarProblemWithRegularization) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^TEST_F(SchurEliminatorTest, VaryingFBlockSizeWithStaticStructure) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^TEST_F(SchurEliminatorTest, VaryingFBlockSizeWithoutStaticStructure) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^TEST_F(SparseNormalCholeskySolverTest,$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, DenseNormalCholesky) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, DenseQR) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, DenseSchur) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, IterativeSchurWithJacobi) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, SparseNormalCholeskyUsingCXSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, SparseNormalCholeskyUsingEigenSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/system_test.cc	/^TEST_F(PowellTest, SparseNormalCholeskyUsingSuiteSparse) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, CGNR) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, DenseNormalCholesky) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, DenseQR) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, DenseSchur) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, IterativeSchur) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, MinimizerIsAwareOfBounds) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, SchurTypeSolverWithBadOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, SchurTypeSolverWithGoodOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, SparseNormalCholesky) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, SparseSchur) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest, ValidInnerIterationsOrdering) {$/;"	f	namespace:ceres::internal
TEST_F	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^TEST_F(LinearSolverAndEvaluatorCreationTest,$/;"	f	namespace:ceres::internal
TEST_P	cartographer_ros/cartographer_ros/cartographer_ros/configuration_files_test.cc	/^TEST_P(ConfigurationFilesTest, ValidateNodeOptions) {$/;"	f	namespace:cartographer_ros::__anon137
TEST_P	ceres-solver/internal/ceres/dense_linear_solver_test.cc	/^TEST_P(DenseLinearSolverTest, _) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, EvaluatorAbortsForResidualsThatFailToEvaluate) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, MultipleResidualProblem) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, MultipleResidualProblemWithSomeConstantParameters) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, MultipleResidualsWithLocalParameterizations) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, SingleResidualProblem) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, SingleResidualProblemWithNuisanceParameters) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/evaluator_test.cc	/^TEST_P(EvaluatorTest, SingleResidualProblemWithPermutedParameters) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/gtest/gtest.h	18115;"	d
TEST_P	ceres-solver/internal/ceres/problem_test.cc	/^TEST_P(DynamicProblem, GetXXXBlocksForYYYBlock) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/problem_test.cc	/^TEST_P(DynamicProblem, RemoveInvalidResidualBlockDies) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/problem_test.cc	/^TEST_P(DynamicProblem, RemoveParameterBlockWithNoResiduals) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/problem_test.cc	/^TEST_P(DynamicProblem, RemoveParameterBlockWithResiduals) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/problem_test.cc	/^TEST_P(DynamicProblem, RemoveResidualBlock) {$/;"	f	namespace:ceres::internal
TEST_P	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^TEST_P(SparseCholeskyTest, FactorAndSolve) {$/;"	f	namespace:ceres::internal
TEST_THREW_EXCEPTION	ceres-solver/internal/ceres/gtest/gtest.h	/^    TEST_THREW_EXCEPTION,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEXTFILE	ceres-solver/include/ceres/types.h	/^  TEXTFILE$/;"	e	enum:ceres::DumpFormatType
THREAD_ANNOTATION_ATTRIBUTE__	cartographer/cartographer/common/mutex.h	31;"	d
THREW	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
TLS	cartographer/bazel/third_party/pixman/config.h	133;"	d
TOOLCHAIN_SUPPORTS_ATTRIBUTE_CONSTRUCTOR	cartographer/bazel/third_party/pixman/config.h	136;"	d
TRADITIONAL_DOGLEG	ceres-solver/include/ceres/types.h	/^  TRADITIONAL_DOGLEG,$/;"	e	enum:ceres::DoglegType
TRUST_REGION	ceres-solver/include/ceres/types.h	/^  TRUST_REGION$/;"	e	enum:ceres::MinimizerType
TYPED_TEST	cartographer/cartographer/transform/rigid_transform_test.cc	/^TYPED_TEST(RigidTransformTest, Identity2DTest) {$/;"	f	namespace:cartographer::transform::__anon112
TYPED_TEST	cartographer/cartographer/transform/rigid_transform_test.cc	/^TYPED_TEST(RigidTransformTest, Identity3DTest) {$/;"	f	namespace:cartographer::transform::__anon112
TYPED_TEST	cartographer/cartographer/transform/rigid_transform_test.cc	/^TYPED_TEST(RigidTransformTest, Inverse2DTest) {$/;"	f	namespace:cartographer::transform::__anon112
TYPED_TEST	cartographer/cartographer/transform/rigid_transform_test.cc	/^TYPED_TEST(RigidTransformTest, Inverse3DTest) {$/;"	f	namespace:cartographer::transform::__anon112
TYPED_TEST	ceres-solver/internal/ceres/gtest/gtest.h	18581;"	d
TYPED_TEST_CASE	ceres-solver/internal/ceres/gtest/gtest.h	18577;"	d
TYPED_TEST_CASE_P	ceres-solver/internal/ceres/gtest/gtest.h	18632;"	d
TYPED_TEST_P	ceres-solver/internal/ceres/gtest/gtest.h	18636;"	d
Tag	cartographer/cartographer/mapping/pose_graph_interface.h	/^    enum Tag { INTRA_SUBMAP, INTER_SUBMAP } tag;$/;"	g	struct:cartographer::mapping::PoseGraphInterface::Constraint
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14> Tail;$/;"	t	struct:testing::internal::Templates14
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Templates27
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Templates26
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Templates25
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Templates24
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Templates23
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Templates22
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Templates21
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Templates20
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Templates19
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Templates18
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16, T17> Tail;$/;"	t	struct:testing::internal::Templates17
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15, T16> Tail;$/;"	t	struct:testing::internal::Templates16
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Templates15
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T15> Tail;$/;"	t	struct:testing::internal::Types15
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;$/;"	t	struct:testing::internal::Types28
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;$/;"	t	struct:testing::internal::Types27
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;$/;"	t	struct:testing::internal::Types26
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;$/;"	t	struct:testing::internal::Types25
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;$/;"	t	struct:testing::internal::Types24
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22, T23> Tail;$/;"	t	struct:testing::internal::Types23
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21, T22> Tail;$/;"	t	struct:testing::internal::Types22
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20, T21> Tail;$/;"	t	struct:testing::internal::Types21
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19, T20> Tail;$/;"	t	struct:testing::internal::Types20
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18, T19> Tail;$/;"	t	struct:testing::internal::Types19
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17, T18> Tail;$/;"	t	struct:testing::internal::Types18
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16, T17> Tail;$/;"	t	struct:testing::internal::Types17
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T16> Tail;$/;"	t	struct:testing::internal::Types16
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28> Tail;$/;"	t	struct:testing::internal::Templates28
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Templates41
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Templates40
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Templates39
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Templates38
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Templates37
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Templates36
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Templates35
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Templates34
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Templates33
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Templates32
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30, T31> Tail;$/;"	t	struct:testing::internal::Templates31
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29, T30> Tail;$/;"	t	struct:testing::internal::Templates30
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Templates29
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T29> Tail;$/;"	t	struct:testing::internal::Types29
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;$/;"	t	struct:testing::internal::Types42
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;$/;"	t	struct:testing::internal::Types41
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;$/;"	t	struct:testing::internal::Types40
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;$/;"	t	struct:testing::internal::Types39
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;$/;"	t	struct:testing::internal::Types38
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36, T37> Tail;$/;"	t	struct:testing::internal::Types37
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35, T36> Tail;$/;"	t	struct:testing::internal::Types36
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34, T35> Tail;$/;"	t	struct:testing::internal::Types35
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33, T34> Tail;$/;"	t	struct:testing::internal::Types34
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32, T33> Tail;$/;"	t	struct:testing::internal::Types33
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31, T32> Tail;$/;"	t	struct:testing::internal::Types32
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30, T31> Tail;$/;"	t	struct:testing::internal::Types31
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T30> Tail;$/;"	t	struct:testing::internal::Types30
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42> Tail;$/;"	t	struct:testing::internal::Templates42
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Templates50
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Templates49
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Templates48
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Templates47
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Templates46
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44, T45> Tail;$/;"	t	struct:testing::internal::Templates45
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43, T44> Tail;$/;"	t	struct:testing::internal::Templates44
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Templates43
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T43> Tail;$/;"	t	struct:testing::internal::Types43
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44, T45, T46, T47, T48, T49, T50> Tail;$/;"	t	struct:testing::internal::Types50
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44, T45, T46, T47, T48, T49> Tail;$/;"	t	struct:testing::internal::Types49
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44, T45, T46, T47, T48> Tail;$/;"	t	struct:testing::internal::Types48
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44, T45, T46, T47> Tail;$/;"	t	struct:testing::internal::Types47
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44, T45, T46> Tail;$/;"	t	struct:testing::internal::Types46
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44, T45> Tail;$/;"	t	struct:testing::internal::Types45
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^      T44> Tail;$/;"	t	struct:testing::internal::Types44
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates0 Tail;$/;"	t	struct:testing::internal::Templates1
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Templates11
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Templates12
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Templates13
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates1<T2> Tail;$/;"	t	struct:testing::internal::Templates2
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates2<T2, T3> Tail;$/;"	t	struct:testing::internal::Templates3
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Templates4
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Templates5
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Templates6
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Templates7
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Templates8
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Templates9
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Templates10
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types0 Tail;$/;"	t	struct:testing::internal::Types1
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;$/;"	t	struct:testing::internal::Types11
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;$/;"	t	struct:testing::internal::Types12
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;$/;"	t	struct:testing::internal::Types13
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;$/;"	t	struct:testing::internal::Types14
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types1<T2> Tail;$/;"	t	struct:testing::internal::Types2
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types2<T2, T3> Tail;$/;"	t	struct:testing::internal::Types3
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types3<T2, T3, T4> Tail;$/;"	t	struct:testing::internal::Types4
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types4<T2, T3, T4, T5> Tail;$/;"	t	struct:testing::internal::Types5
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types5<T2, T3, T4, T5, T6> Tail;$/;"	t	struct:testing::internal::Types6
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types6<T2, T3, T4, T5, T6, T7> Tail;$/;"	t	struct:testing::internal::Types7
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types7<T2, T3, T4, T5, T6, T7, T8> Tail;$/;"	t	struct:testing::internal::Types8
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;$/;"	t	struct:testing::internal::Types9
Tail	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;$/;"	t	struct:testing::internal::Types10
Take0thOrderPart	ceres-solver/include/ceres/internal/autodiff.h	/^inline void Take0thOrderPart(int M, const JetT *src, T dst) {$/;"	f	namespace:ceres::internal
Take1stOrderPart	ceres-solver/include/ceres/internal/autodiff.h	/^inline void Take1stOrderPart(const int M, const JetT *src, T *dst) {$/;"	f	namespace:ceres::internal
Task	cartographer/cartographer/common/task.h	/^class Task {$/;"	c	namespace:cartographer::common
TaskTest	cartographer/cartographer/common/task_test.cc	/^class TaskTest : public ::testing::Test {$/;"	c	namespace:cartographer::common::__anon10	file:
TearDown	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Test::TearDown() {$/;"	f	class:testing::Test
TearDown	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Environment
TearDown	ceres-solver/internal/ceres/problem_test.cc	/^  void TearDown() {$/;"	f	class:ceres::internal::ProblemEvaluateTest
TearDownEnvironment	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void TearDownEnvironment(Environment* env) { env->TearDown(); }$/;"	f	namespace:testing::internal
TearDownTestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void TearDownTestCase() {}$/;"	f	class:testing::Test
TearDownTestCaseFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::TearDownTestCaseFunc TearDownTestCaseFunc;$/;"	t	class:testing::Test
TearDownTestCaseFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef void (*TearDownTestCaseFunc)();$/;"	t	namespace:testing::internal
TempDir	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string TempDir() {$/;"	f	namespace:testing::internal
TemplateSel	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TemplateSel {$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates {$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,$/;"	s	namespace:testing::internal
Templates	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing::internal
Templates0	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates0 {};$/;"	s	namespace:testing::internal
Templates1	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates1 {$/;"	s	namespace:testing::internal
Templates10	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates10 {$/;"	s	namespace:testing::internal
Templates11	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates11 {$/;"	s	namespace:testing::internal
Templates12	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates12 {$/;"	s	namespace:testing::internal
Templates13	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates13 {$/;"	s	namespace:testing::internal
Templates14	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates14 {$/;"	s	namespace:testing::internal
Templates15	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates15 {$/;"	s	namespace:testing::internal
Templates16	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates16 {$/;"	s	namespace:testing::internal
Templates17	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates17 {$/;"	s	namespace:testing::internal
Templates18	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates18 {$/;"	s	namespace:testing::internal
Templates19	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates19 {$/;"	s	namespace:testing::internal
Templates2	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates2 {$/;"	s	namespace:testing::internal
Templates20	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates20 {$/;"	s	namespace:testing::internal
Templates21	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates21 {$/;"	s	namespace:testing::internal
Templates22	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates22 {$/;"	s	namespace:testing::internal
Templates23	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates23 {$/;"	s	namespace:testing::internal
Templates24	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates24 {$/;"	s	namespace:testing::internal
Templates25	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates25 {$/;"	s	namespace:testing::internal
Templates26	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates26 {$/;"	s	namespace:testing::internal
Templates27	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates27 {$/;"	s	namespace:testing::internal
Templates28	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates28 {$/;"	s	namespace:testing::internal
Templates29	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates29 {$/;"	s	namespace:testing::internal
Templates3	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates3 {$/;"	s	namespace:testing::internal
Templates30	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates30 {$/;"	s	namespace:testing::internal
Templates31	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates31 {$/;"	s	namespace:testing::internal
Templates32	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates32 {$/;"	s	namespace:testing::internal
Templates33	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates33 {$/;"	s	namespace:testing::internal
Templates34	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates34 {$/;"	s	namespace:testing::internal
Templates35	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates35 {$/;"	s	namespace:testing::internal
Templates36	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates36 {$/;"	s	namespace:testing::internal
Templates37	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates37 {$/;"	s	namespace:testing::internal
Templates38	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates38 {$/;"	s	namespace:testing::internal
Templates39	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates39 {$/;"	s	namespace:testing::internal
Templates4	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates4 {$/;"	s	namespace:testing::internal
Templates40	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates40 {$/;"	s	namespace:testing::internal
Templates41	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates41 {$/;"	s	namespace:testing::internal
Templates42	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates42 {$/;"	s	namespace:testing::internal
Templates43	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates43 {$/;"	s	namespace:testing::internal
Templates44	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates44 {$/;"	s	namespace:testing::internal
Templates45	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates45 {$/;"	s	namespace:testing::internal
Templates46	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates46 {$/;"	s	namespace:testing::internal
Templates47	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates47 {$/;"	s	namespace:testing::internal
Templates48	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates48 {$/;"	s	namespace:testing::internal
Templates49	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates49 {$/;"	s	namespace:testing::internal
Templates5	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates5 {$/;"	s	namespace:testing::internal
Templates50	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates50 {$/;"	s	namespace:testing::internal
Templates6	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates6 {$/;"	s	namespace:testing::internal
Templates7	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates7 {$/;"	s	namespace:testing::internal
Templates8	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates8 {$/;"	s	namespace:testing::internal
Templates9	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Templates9 {$/;"	s	namespace:testing::internal
TenParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct TenParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
TenParameterCost	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^struct TenParameterCost {$/;"	s	namespace:ceres::internal	file:
TerminationCheckingCallback	ceres-solver/examples/libmv_homography.cc	/^  TerminationCheckingCallback(const Mat &x1, const Mat &x2,$/;"	f	class:__anon158::TerminationCheckingCallback
TerminationCheckingCallback	ceres-solver/examples/libmv_homography.cc	/^class TerminationCheckingCallback : public ceres::IterationCallback {$/;"	c	namespace:__anon158	file:
TerminationType	ceres-solver/include/ceres/types.h	/^enum TerminationType {$/;"	g	namespace:ceres
TerminationTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* TerminationTypeToString(TerminationType type) {$/;"	f	namespace:ceres
Ternary	ceres-solver/internal/ceres/integral_types.h	/^struct Ternary {$/;"	s	namespace:ceres::internal
Ternary	ceres-solver/internal/ceres/integral_types.h	/^struct Ternary<false, kTrueType, kFalseType> {$/;"	s	namespace:ceres::internal
TernaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  TernaryCostFunction(int num_residuals,$/;"	f	class:ceres::internal::TernaryCostFunction
TernaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^class TernaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
TernaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  TernaryCostFunction(int num_residuals,$/;"	f	class:ceres::internal::TernaryCostFunction
TernaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^class TernaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
TernaryCostFunction	ceres-solver/internal/ceres/program_test.cc	/^class TernaryCostFunction : public MockCostFunctionBase<2, 1, 1, 1> {};$/;"	c	namespace:ceres::internal	file:
TernaryCostFunction	ceres-solver/internal/ceres/reorder_program_test.cc	/^class TernaryCostFunction : public MockCostFunctionBase<2, 1, 1, 1> {};$/;"	c	namespace:ceres::internal	file:
TernaryCostFunction	ceres-solver/internal/ceres/residual_block_test.cc	/^  TernaryCostFunction(int num_residuals,$/;"	f	class:ceres::internal::TernaryCostFunction
TernaryCostFunction	ceres-solver/internal/ceres/residual_block_test.cc	/^class TernaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
TersePrintPrefixToStrings	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void TersePrintPrefixToStrings(const Tuple& t, Strings* strings) {$/;"	f	struct:testing::internal::TuplePrefixPrinter
TersePrintPrefixToStrings	ceres-solver/internal/ceres/gtest/gtest.h	/^  static void TersePrintPrefixToStrings(const Tuple&, Strings*) {}$/;"	f	struct:testing::internal::TuplePrefixPrinter
Test	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Test::Test()$/;"	f	class:testing::Test
Test	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ Test {$/;"	c	namespace:testing
TestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestCase::TestCase(const char* a_name, const char* a_type_param,$/;"	f	class:testing::TestCase
TestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TestCase {$/;"	c	namespace:testing
TestCaseFailed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool TestCaseFailed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestCaseInfoContainer	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseRegistry
TestCaseNameIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit TestCaseNameIs(const std::string& name)$/;"	f	class:testing::internal::TestCaseNameIs
TestCaseNameIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class TestCaseNameIs {$/;"	c	namespace:testing::internal	file:
TestCasePassed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool TestCasePassed(const TestCase* test_case) {$/;"	f	namespace:testing::internal
TestDisabled	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool TestDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestEventListener	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestEventListener {$/;"	c	namespace:testing
TestEventListeners	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventListeners::TestEventListeners()$/;"	f	class:testing::TestEventListeners
TestEventListeners	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TestEventListeners {$/;"	c	namespace:testing
TestEventRepeater	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestEventRepeater() : forwarding_enabled_(true) {}$/;"	f	class:testing::internal::TestEventRepeater
TestEventRepeater	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class TestEventRepeater : public TestEventListener {$/;"	c	namespace:testing::internal	file:
TestExists	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool TestExists(const std::string& test_name) const {$/;"	f	class:testing::internal::TypedTestCasePState
TestFactoryBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
TestFactoryBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryImpl	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestFactoryImpl : public TestFactoryBase {$/;"	c	namespace:testing::internal
TestFailed	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool TestFailed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestFileAbsolutePath	ceres-solver/internal/ceres/test_util.cc	/^std::string TestFileAbsolutePath(const std::string& filename) {$/;"	f	namespace:ceres::internal
TestFromInitialPose	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^  void TestFromInitialPose(const transform::Rigid2d& initial_pose) {$/;"	f	class:cartographer::mapping::scan_matching::__anon81::CeresScanMatcherTest
TestFromInitialPose	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  void TestFromInitialPose(const transform::Rigid3d& initial_pose) {$/;"	f	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest
TestFromInitialPose	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^  void TestFromInitialPose(const transform::Rigid3d& initial_pose) {$/;"	f	class:cartographer::mapping::scan_matching::__anon103::RealTimeCorrelativeScanMatcher3DTest
TestImplicitSchurComplement	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  AssertionResult TestImplicitSchurComplement(double* D) {$/;"	f	class:ceres::internal::ImplicitSchurComplementTest
TestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestInfo::TestInfo(const std::string& a_test_case_name,$/;"	f	class:testing::TestInfo
TestInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^    TestInfo(const char* a_test_case_base_name,$/;"	f	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
TestInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct TestInfo {$/;"	s	class:testing::internal::ParameterizedTestCaseInfo
TestInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TestInfo {$/;"	c	namespace:testing
TestInfoContainer	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;$/;"	t	class:testing::internal::ParameterizedTestCaseInfo
TestMetaFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestMetaFactory() {}$/;"	f	class:testing::internal::TestMetaFactory
TestMetaFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestMetaFactory$/;"	c	namespace:testing::internal
TestMetaFactoryBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestMetaFactoryBase {$/;"	c	namespace:testing::internal
TestNameIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit TestNameIs(const char* name)$/;"	f	class:testing::__anon170::TestNameIs
TestNameIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class TestNameIs {$/;"	c	namespace:testing::__anon170	file:
TestParamInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestParamInfo(const ParamType& a_param, size_t an_index) :$/;"	f	struct:testing::TestParamInfo
TestParamInfo	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TestParamInfo {$/;"	s	namespace:testing
TestParameterization	ceres-solver/internal/ceres/parameter_block_test.cc	/^struct TestParameterization : public LocalParameterization {$/;"	s	namespace:ceres::internal	file:
TestPartFatallyFailed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool TestPartFatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartNonfatallyFailed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool TestPartNonfatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing
TestPartResult	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestPartResult(Type a_type,$/;"	f	class:testing::TestPartResult
TestPartResult	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TestPartResult {$/;"	c	namespace:testing
TestPartResultArray	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestPartResultArray() {}$/;"	f	class:testing::TestPartResultArray
TestPartResultArray	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TestPartResultArray {$/;"	c	namespace:testing
TestPartResultReporterInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestPartResultReporterInterface {$/;"	c	namespace:testing
TestPartResultTypeToString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char * TestPartResultTypeToString(TestPartResult::Type type) {$/;"	f	namespace:testing
TestPassed	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool TestPassed(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestPoint	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^void TestPoint(const Eigen::Vector3f& p) {$/;"	f	namespace:cartographer::sensor::__anon121
TestPropertiesAsXmlAttributes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes($/;"	f	class:testing::internal::XmlUnitTestResultPrinter
TestProperty	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestProperty(const std::string& a_key, const std::string& a_value) :$/;"	f	class:testing::TestProperty
TestProperty	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestProperty {$/;"	c	namespace:testing
TestPropertyKeyIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}$/;"	f	class:testing::internal::TestPropertyKeyIs
TestPropertyKeyIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class TestPropertyKeyIs {$/;"	c	namespace:testing::internal	file:
TestReportable	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool TestReportable(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestReportableDisabled	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool TestReportableDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestCase
TestResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestResult::TestResult()$/;"	f	class:testing::TestResult
TestResult	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TestResult {$/;"	c	namespace:testing
TestResultAccessor	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class TestResultAccessor {$/;"	c	namespace:testing::internal	file:
TestRole	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	g	class:testing::internal::DeathTest
TestSolver	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^  void TestSolver($/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolverTest
TestSolver	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^  void TestSolver(const LinearSolver::Options& options, double* D) {$/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolverTest
TestSolver	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  AssertionResult TestSolver(double* D) {$/;"	f	class:ceres::internal::IterativeSchurComplementSolverTest
TestSolver	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^  void TestSolver(const LinearSolver::Options& options) {$/;"	f	class:ceres::internal::SparseNormalCholeskySolverTest
TestSolver	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^  void TestSolver(const LinearSolver::Options& options, double* D) {$/;"	f	class:ceres::internal::SparseNormalCholeskySolverTest
TestTerm	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  TestTerm(int arity, int const *dim) : arity_(arity) {$/;"	f	class:ceres::internal::TestTerm
TestTerm	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^class TestTerm : public CostFunction {$/;"	c	namespace:ceres::internal	file:
TestWithParam	ceres-solver/internal/ceres/gtest/gtest.h	/^class TestWithParam : public Test, public WithParamInterface<T> {$/;"	c	namespace:testing
TfBridge	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.cc	/^TfBridge::TfBridge(const std::string& tracking_frame,$/;"	f	class:cartographer_ros::TfBridge
TfBridge	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	/^class TfBridge {$/;"	c	namespace:cartographer_ros
ThreadFuncWithCLinkage	ceres-solver/internal/ceres/gtest/gtest.h	/^extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {$/;"	f	namespace:std::tr1
ThreadIdAndHandle	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  typedef std::pair<DWORD, HANDLE> ThreadIdAndHandle;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	file:
ThreadIdToThreadLocals	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  typedef std::map<DWORD, ThreadLocalValues> ThreadIdToThreadLocals;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	file:
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  ThreadLocal() : default_factory_(new DefaultValueHolderFactory()) {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  ThreadLocal() : value_() {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  ThreadLocal()$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ThreadLocal(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ThreadLocal(const T& value)$/;"	f	class:std::tr1::ThreadLocal
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^class ThreadLocal : public ThreadLocalBase {$/;"	c	namespace:std::tr1
ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^class ThreadLocal {$/;"	c	namespace:std::tr1
ThreadLocalBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  ThreadLocalBase() {}$/;"	f	class:std::tr1::ThreadLocalBase
ThreadLocalBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class ThreadLocalBase {$/;"	c	namespace:std::tr1
ThreadLocalRegistry	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ ThreadLocalRegistry {$/;"	c	namespace:std::tr1
ThreadLocalRegistryImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class ThreadLocalRegistryImpl {$/;"	c	namespace:testing::internal	file:
ThreadLocalValueHolderBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class ThreadLocalValueHolderBase {$/;"	c	namespace:std::tr1
ThreadLocalValues	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^                   linked_ptr<ThreadLocalValueHolderBase> > ThreadLocalValues;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	file:
ThreadMain	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static DWORD WINAPI ThreadMain(void* ptr) {$/;"	f	class:testing::internal::__anon173::ThreadWithParamSupport	file:
ThreadMainParam	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    ThreadMainParam(Runnable* runnable, Notification* thread_can_start)$/;"	f	struct:testing::internal::__anon173::ThreadWithParamSupport::ThreadMainParam
ThreadMainParam	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  struct ThreadMainParam {$/;"	s	class:testing::internal::__anon173::ThreadWithParamSupport	file:
ThreadPool	cartographer/cartographer/common/thread_pool.cc	/^ThreadPool::ThreadPool(int num_threads) {$/;"	f	class:cartographer::common::ThreadPool
ThreadPool	cartographer/cartographer/common/thread_pool.h	/^class ThreadPool : public ThreadPoolInterface {$/;"	c	namespace:cartographer::common
ThreadPoolForTesting	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^ThreadPoolForTesting::ThreadPoolForTesting()$/;"	f	class:cartographer::common::testing::ThreadPoolForTesting
ThreadPoolForTesting	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^class ThreadPoolForTesting : public ThreadPoolInterface {$/;"	c	namespace:cartographer::common::testing
ThreadPoolInterface	cartographer/cartographer/common/thread_pool.h	/^  ThreadPoolInterface() {}$/;"	f	class:cartographer::common::ThreadPoolInterface
ThreadPoolInterface	cartographer/cartographer/common/thread_pool.h	/^class ThreadPoolInterface {$/;"	c	namespace:cartographer::common
ThreadSafeLazyInit	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Mutex::ThreadSafeLazyInit() {$/;"	f	class:testing::internal::Mutex
ThreadWithParam	ceres-solver/internal/ceres/gtest/gtest.h	/^  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)$/;"	f	class:std::tr1::ThreadWithParam
ThreadWithParam	ceres-solver/internal/ceres/gtest/gtest.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;"	c	namespace:std::tr1
ThreadWithParamBase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ThreadWithParamBase::ThreadWithParamBase(Runnable *runnable,$/;"	f	class:testing::internal::ThreadWithParamBase
ThreadWithParamBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ ThreadWithParamBase {$/;"	c	namespace:std::tr1
ThreadWithParamBase	ceres-solver/internal/ceres/gtest/gtest.h	/^class ThreadWithParamBase {$/;"	c	namespace:std::tr1
ThreadWithParamSupport	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class ThreadWithParamSupport : public ThreadWithParamBase {$/;"	c	namespace:testing::internal::__anon173	file:
ThreadedSolverConfig	ceres-solver/internal/ceres/test_util.cc	/^SolverConfig ThreadedSolverConfig($/;"	f	namespace:ceres::internal
ThreeParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct ThreeParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
ThreeParameterCostFunctorTest	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^class ThreeParameterCostFunctorTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
ThreeParameterCostFunctorTest	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^class ThreeParameterCostFunctorTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
TimeInMillis	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef TypeWithSize<8>::Int TimeInMillis;  \/\/ Represents time in milliseconds.$/;"	t	namespace:std::tr1
TimeInMillis	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef internal::TimeInMillis TimeInMillis;$/;"	t	namespace:testing
TimeStatistics	ceres-solver/internal/ceres/evaluator.h	/^  virtual std::map<std::string, double> TimeStatistics() const {$/;"	f	class:ceres::internal::Evaluator
TimeStatistics	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual std::map<std::string, double> TimeStatistics() const {$/;"	f	class:ceres::internal::GradientProblemEvaluator
TimeStatistics	ceres-solver/internal/ceres/line_search.cc	/^void LineSearchFunction::TimeStatistics($/;"	f	class:ceres::internal::LineSearchFunction
TimeStatistics	ceres-solver/internal/ceres/linear_solver.h	/^  virtual std::map<std::string, double> TimeStatistics() const {$/;"	f	class:ceres::internal::LinearSolver
TimeStatistics	ceres-solver/internal/ceres/linear_solver.h	/^  virtual std::map<std::string, double> TimeStatistics() const {$/;"	f	class:ceres::internal::TypedLinearSolver
TimeStatistics	ceres-solver/internal/ceres/program_evaluator.h	/^  virtual std::map<std::string, double> TimeStatistics() const {$/;"	f	class:ceres::internal::ProgramEvaluator
TimedPointCloud	cartographer/cartographer/sensor/point_cloud.h	/^typedef std::vector<Eigen::Vector4f> TimedPointCloud;$/;"	t	namespace:cartographer::sensor
TimedPointCloudData	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^struct TimedPointCloudData {$/;"	s	namespace:cartographer::sensor
TimedPointCloudOriginData	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^struct TimedPointCloudOriginData {$/;"	s	namespace:cartographer::sensor
TimedPose	cartographer/cartographer/mapping/pose_extrapolator.h	/^  struct TimedPose {$/;"	s	class:cartographer::mapping::PoseExtrapolator
TimedRangeData	cartographer/cartographer/sensor/range_data.h	/^struct TimedRangeData {$/;"	s	namespace:cartographer::sensor
Times	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& Times(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::TypedExpectation
Times	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& Times(int n) {$/;"	f	class:testing::internal::TypedExpectation
Timespan	cartographer/cartographer/mapping/detect_floors.h	/^struct Timespan {$/;"	s	namespace:cartographer::mapping
TimestampIsGreater	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^    struct TimestampIsGreater {$/;"	s	struct:cartographer_ros::PlayableBagMultiplexer::BagMessageItem
TimestampedTransform	cartographer/cartographer/transform/timestamped_transform.h	/^struct TimestampedTransform {$/;"	s	namespace:cartographer::transform
To	ceres-solver/examples/libmv_homography.cc	/^  static void To(const Parameters &p, Parameterized *h) {$/;"	f	class:__anon158::Homography2DNormalizedParameterization
To3DIndex	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^inline Eigen::Array3i To3DIndex(const int index, const int bits) {$/;"	f	namespace:cartographer::mapping
ToCRSMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::ToCRSMatrix(CRSMatrix* matrix) const {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
ToDebugString	ceres-solver/internal/ceres/function_sample.cc	/^std::string FunctionSample::ToDebugString() const {$/;"	f	class:ceres::internal::FunctionSample
ToDegrees	ceres-solver/internal/ceres/rotation_test.cc	/^static void ToDegrees(double euler_angles[3]) {$/;"	f	namespace:ceres::internal
ToDenseMatrix	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::ToDenseMatrix(Matrix* dense_matrix) const {$/;"	f	class:ceres::internal::BlockSparseMatrix
ToDenseMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::ToDenseMatrix(Matrix* dense_matrix) const {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
ToDenseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::ToDenseMatrix(Matrix* dense_matrix) const {$/;"	f	class:ceres::internal::DenseSparseMatrix
ToDenseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::ToDenseMatrix(Matrix* dense_matrix) const {$/;"	f	class:ceres::internal::TripletSparseMatrix
ToEigen	cartographer/cartographer/io/submap_painter.cc	/^Eigen::Affine3d ToEigen(const ::cartographer::transform::Rigid3d& rigid3) {$/;"	f	namespace:cartographer::io::__anon29
ToEigen	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  static Eigen::Quaternion<T> ToEigen(const T* const quaternion) {$/;"	f	class:cartographer::mapping::AccelerationCostFunction3D
ToEigen	cartographer/cartographer/transform/rigid_transform_test_helpers.h	/^Eigen::Transform<T, 2, Eigen::Affine> ToEigen(const Rigid2<T>& rigid2) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer/cartographer/transform/rigid_transform_test_helpers.h	/^Eigen::Transform<T, 3, Eigen::Affine> ToEigen(const Rigid3<T>& rigid3) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer/cartographer/transform/transform.cc	/^Eigen::Quaterniond ToEigen(const proto::Quaterniond& quaternion) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer/cartographer/transform/transform.cc	/^Eigen::Vector2d ToEigen(const proto::Vector2d& vector) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer/cartographer/transform/transform.cc	/^Eigen::Vector3d ToEigen(const proto::Vector3d& vector) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer/cartographer/transform/transform.cc	/^Eigen::Vector3f ToEigen(const proto::Vector3f& vector) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer/cartographer/transform/transform.cc	/^Eigen::Vector4f ToEigen(const proto::Vector4f& vector) {$/;"	f	namespace:cartographer::transform
ToEigen	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^Eigen::Quaterniond ToEigen(const geometry_msgs::Quaternion& quaternion) {$/;"	f	namespace:cartographer_ros
ToEigen	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^Eigen::Vector3d ToEigen(const geometry_msgs::Vector3& vector3) {$/;"	f	namespace:cartographer_ros
ToFlatIndex	cartographer/cartographer/mapping/2d/grid_2d.cc	/^int Grid2D::ToFlatIndex(const Eigen::Array2i& cell_index) const {$/;"	f	class:cartographer::mapping::Grid2D
ToFlatIndex	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^inline int ToFlatIndex(const Eigen::Array3i& index, const int bits) {$/;"	f	namespace:cartographer::mapping
ToFloatColor	cartographer/cartographer/io/color.h	/^inline FloatColor ToFloatColor(const Uint8Color& color) {$/;"	f	namespace:cartographer::io
ToGeometryMsgPoint	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^geometry_msgs::Point ToGeometryMsgPoint(const Eigen::Vector3d& vector3d) {$/;"	f	namespace:cartographer_ros
ToGeometryMsgPose	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^geometry_msgs::Pose ToGeometryMsgPose(const Rigid3d& rigid3d) {$/;"	f	namespace:cartographer_ros
ToGeometryMsgTransform	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^geometry_msgs::Transform ToGeometryMsgTransform(const Rigid3d& rigid3d) {$/;"	f	namespace:cartographer_ros
ToImuData	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^std::unique_ptr<carto::sensor::ImuData> SensorBridge::ToImuData($/;"	f	class:cartographer_ros::SensorBridge
ToLandmarkData	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^LandmarkData ToLandmarkData(const LandmarkList& landmark_list) {$/;"	f	namespace:cartographer_ros
ToLower	ceres-solver/internal/ceres/gtest/gtest.h	/^inline char ToLower(char ch) {$/;"	f	namespace:std::tr1
ToMessage	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^::std_msgs::ColorRGBA ToMessage(const cartographer::io::FloatColor& color) {$/;"	f	namespace:cartographer_ros::__anon140
ToOdometryData	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^std::unique_ptr<carto::sensor::OdometryData> SensorBridge::ToOdometryData($/;"	f	class:cartographer_ros::SensorBridge
ToOgre	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^Ogre::Quaternion ToOgre(const Eigen::Quaterniond& q) {$/;"	f	namespace:cartographer_rviz
ToOgre	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^Ogre::Vector3 ToOgre(const Eigen::Vector3d& v) {$/;"	f	namespace:cartographer_rviz
ToPointCloud2Message	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^sensor_msgs::PointCloud2 ToPointCloud2Message($/;"	f	namespace:cartographer_ros
ToPointCloudWithIntensities	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^ToPointCloudWithIntensities(const sensor_msgs::LaserScan& msg) {$/;"	f	namespace:cartographer_ros
ToPointCloudWithIntensities	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^ToPointCloudWithIntensities(const sensor_msgs::MultiEchoLaserScan& msg) {$/;"	f	namespace:cartographer_ros
ToPointCloudWithIntensities	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^ToPointCloudWithIntensities(const sensor_msgs::PointCloud2& message) {$/;"	f	namespace:cartographer_ros
ToPose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^transform::Rigid2d ToPose(const std::array<double, 3>& values) {$/;"	f	namespace:cartographer::mapping::optimization::__anon93
ToProbability	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	/^  static float ToProbability(float value) {$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGrid3D
ToProto	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^mapping::proto::PoseGraph PoseGraphStub::ToProto() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
ToProto	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^proto::SensorId ToProto($/;"	f	namespace:cartographer::cloud
ToProto	cartographer/cartographer/mapping/2d/grid_2d.cc	/^proto::Grid2D Grid2D::ToProto() const {$/;"	f	class:cartographer::mapping::Grid2D
ToProto	cartographer/cartographer/mapping/2d/map_limits.h	/^inline proto::MapLimits ToProto(const MapLimits& map_limits) {$/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/mapping/2d/probability_grid.cc	/^proto::Grid2D ProbabilityGrid::ToProto() const {$/;"	f	class:cartographer::mapping::ProbabilityGrid
ToProto	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void Submap2D::ToProto(proto::Submap* const proto,$/;"	f	class:cartographer::mapping::Submap2D
ToProto	cartographer/cartographer/mapping/2d/xy_index.h	/^inline proto::CellLimits ToProto(const CellLimits& cell_limits) {$/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void Submap3D::ToProto(proto::Submap* const proto,$/;"	f	class:cartographer::mapping::Submap3D
ToProto	cartographer/cartographer/mapping/id.h	/^  void ToProto(proto::NodeId* proto) const {$/;"	f	struct:cartographer::mapping::NodeId
ToProto	cartographer/cartographer/mapping/id.h	/^  void ToProto(proto::SubmapId* proto) const {$/;"	f	struct:cartographer::mapping::SubmapId
ToProto	cartographer/cartographer/mapping/internal/connected_components.cc	/^proto::ConnectedComponents ToProto($/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/mapping/pose_graph.cc	/^proto::PoseGraph PoseGraph::ToProto() const {$/;"	f	class:cartographer::mapping::PoseGraph
ToProto	cartographer/cartographer/mapping/pose_graph.cc	/^proto::PoseGraph::Constraint ToProto(const PoseGraph::Constraint& constraint) {$/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/mapping/pose_graph.cc	/^proto::PoseGraph::Constraint::Tag ToProto($/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/mapping/trajectory_builder_interface.cc	/^proto::SensorId ToProto(const TrajectoryBuilderInterface::SensorId& sensor_id) {$/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/mapping/trajectory_node.cc	/^proto::TrajectoryNodeData ToProto(const TrajectoryNode::Data& constant_data) {$/;"	f	namespace:cartographer::mapping
ToProto	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^proto::CompressedPointCloud CompressedPointCloud::ToProto() const {$/;"	f	class:cartographer::sensor::CompressedPointCloud
ToProto	cartographer/cartographer/sensor/fixed_frame_pose_data.cc	/^proto::FixedFramePoseData ToProto(const FixedFramePoseData& pose_data) {$/;"	f	namespace:cartographer::sensor
ToProto	cartographer/cartographer/sensor/imu_data.cc	/^proto::ImuData ToProto(const ImuData& imu_data) {$/;"	f	namespace:cartographer::sensor
ToProto	cartographer/cartographer/sensor/landmark_data.cc	/^proto::LandmarkData ToProto(const LandmarkData& landmark_data) {$/;"	f	namespace:cartographer::sensor
ToProto	cartographer/cartographer/sensor/odometry_data.cc	/^proto::OdometryData ToProto(const OdometryData& odometry_data) {$/;"	f	namespace:cartographer::sensor
ToProto	cartographer/cartographer/sensor/range_data.cc	/^proto::RangeData ToProto(const RangeData& range_data) {$/;"	f	namespace:cartographer::sensor
ToProto	cartographer/cartographer/sensor/timed_point_cloud_data.cc	/^proto::TimedPointCloudData ToProto($/;"	f	namespace:cartographer::sensor
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Quaterniond ToProto(const Eigen::Quaterniond& quaternion) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Quaternionf ToProto(const Eigen::Quaternionf& quaternion) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Rigid2d ToProto(const transform::Rigid2d& transform) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Rigid2f ToProto(const transform::Rigid2f& transform) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Rigid3d ToProto(const transform::Rigid3d& rigid) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Rigid3f ToProto(const transform::Rigid3f& rigid) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Vector2d ToProto(const Eigen::Vector2d& vector) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Vector3d ToProto(const Eigen::Vector3d& vector) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Vector3f ToProto(const Eigen::Vector3f& vector) {$/;"	f	namespace:cartographer::transform
ToProto	cartographer/cartographer/transform/transform.cc	/^proto::Vector4f ToProto(const Eigen::Vector4f& vector) {$/;"	f	namespace:cartographer::transform
ToResponseProto	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void Submap2D::ToResponseProto($/;"	f	class:cartographer::mapping::Submap2D
ToResponseProto	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void Submap3D::ToResponseProto($/;"	f	class:cartographer::mapping::Submap3D
ToRigid	cartographer/cartographer/mapping/internal/optimization/ceres_pose.cc	/^const transform::Rigid3d CeresPose::ToRigid() const {$/;"	f	class:cartographer::mapping::optimization::CeresPose
ToRigid2	cartographer/cartographer/transform/transform.cc	/^Rigid2d ToRigid2(const proto::Rigid2d& transform) {$/;"	f	namespace:cartographer::transform
ToRigid3	cartographer/cartographer/transform/transform.cc	/^transform::Rigid3d ToRigid3(const proto::Rigid3d& rigid) {$/;"	f	namespace:cartographer::transform
ToRigid3d	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^Rigid3d ToRigid3d(const geometry_msgs::Pose& pose) {$/;"	f	namespace:cartographer_ros
ToRigid3d	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^Rigid3d ToRigid3d(const geometry_msgs::TransformStamped& transform) {$/;"	f	namespace:cartographer_ros
ToRos	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion.cc	/^::ros::Time ToRos(::cartographer::common::Time time) {$/;"	f	namespace:cartographer_ros
ToRosMessage	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.cc	/^cartographer_ros_msgs::TrajectoryOptions ToRosMessage($/;"	f	namespace:cartographer_ros
ToScore	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  float ToScore(float value) const {$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
ToSeconds	cartographer/cartographer/common/time.cc	/^double ToSeconds(const Duration duration) {$/;"	f	namespace:cartographer::common
ToString	cartographer/cartographer/common/histogram.cc	/^std::string Histogram::ToString(const int buckets) const {$/;"	f	class:cartographer::common::Histogram
ToString	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^std::string LuaParameterDictionary::ToString() const { return DoToString(""); }$/;"	f	class:cartographer::common::LuaParameterDictionary
ToString	ceres-solver/internal/ceres/parameter_block.h	/^  std::string ToString() const {$/;"	f	class:ceres::internal::ParameterBlock
ToString	ceres-solver/internal/ceres/program.cc	/^string Program::ToString() const {$/;"	f	class:ceres::internal::Program
ToString	ceres-solver/internal/ceres/residual_block.h	/^  std::string ToString() const {$/;"	f	class:ceres::internal::ResidualBlock
ToString	ceres-solver/internal/ceres/test_util.h	/^  std::string ToString() const {$/;"	f	struct:ceres::internal::SolverConfig
ToTextFile	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::ToTextFile(FILE* file) const {$/;"	f	class:ceres::internal::BlockSparseMatrix
ToTextFile	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void CompressedRowSparseMatrix::ToTextFile(FILE* file) const {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
ToTextFile	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^void DenseSparseMatrix::ToTextFile(FILE* file) const {$/;"	f	class:ceres::internal::DenseSparseMatrix
ToTextFile	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::ToTextFile(FILE* file) const {$/;"	f	class:ceres::internal::TripletSparseMatrix
ToTripletSparseMatrix	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^void BlockSparseMatrix::ToTripletSparseMatrix($/;"	f	class:ceres::internal::BlockSparseMatrix
ToUint8Color	cartographer/cartographer/io/color.h	/^inline Uint8Color ToUint8Color(const FloatColor& color) {$/;"	f	namespace:cartographer::io
ToUniversal	cartographer/cartographer/common/time.cc	/^int64 ToUniversal(const Time time) { return time.time_since_epoch().count(); }$/;"	f	namespace:cartographer::common
ToUpper	ceres-solver/internal/ceres/gtest/gtest.h	/^inline char ToUpper(char ch) {$/;"	f	namespace:std::tr1
ToVectorInt	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  std::vector<int> ToVectorInt(const Range& range) {$/;"	f	class:cartographer::mapping::__anon75::PoseGraph2DTest
ToggleVisibility	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^void DrawableSubmap::ToggleVisibility() {$/;"	f	class:cartographer_rviz::DrawableSubmap
TolerantLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT TolerantLoss : public LossFunction {$/;"	c	namespace:ceres
TolerantLoss	ceres-solver/internal/ceres/loss_function.cc	/^TolerantLoss::TolerantLoss(double a, double b)$/;"	f	class:ceres::TolerantLoss
TraceInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^struct TraceInfo {$/;"	s	namespace:testing::internal	file:
Trajectory	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^Trajectory::Trajectory(std::unique_ptr<::rviz::BoolProperty> property)$/;"	f	class:cartographer_rviz::Trajectory
Trajectory	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^struct Trajectory : public QObject {$/;"	s	namespace:cartographer_rviz
TrajectoryBuilderInterface	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^  TrajectoryBuilderInterface() {}$/;"	f	class:cartographer::mapping::TrajectoryBuilderInterface
TrajectoryBuilderInterface	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^class TrajectoryBuilderInterface {$/;"	c	namespace:cartographer::mapping
TrajectoryBuilderStub	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^TrajectoryBuilderStub::TrajectoryBuilderStub($/;"	f	class:cartographer::cloud::TrajectoryBuilderStub
TrajectoryBuilderStub	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^class TrajectoryBuilderStub : public mapping::TrajectoryBuilderInterface {$/;"	c	namespace:cartographer::cloud
TrajectoryCollator	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  TrajectoryCollator() {}$/;"	f	class:cartographer::sensor::TrajectoryCollator
TrajectoryCollator	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^class TrajectoryCollator : public CollatorInterface {$/;"	c	namespace:cartographer::sensor
TrajectoryConnectivityState	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	/^  TrajectoryConnectivityState() {}$/;"	f	class:cartographer::mapping::TrajectoryConnectivityState
TrajectoryConnectivityState	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	/^class TrajectoryConnectivityState {$/;"	c	namespace:cartographer::mapping
TrajectoryData	cartographer/cartographer/mapping/pose_graph_interface.h	/^  struct TrajectoryData {$/;"	s	class:cartographer::mapping::PoseGraphInterface
TrajectoryNode	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  struct TrajectoryNode {$/;"	s	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest	file:
TrajectoryNode	cartographer/cartographer/mapping/trajectory_node.h	/^struct TrajectoryNode {$/;"	s	namespace:cartographer::mapping
TrajectoryNodePose	cartographer/cartographer/mapping/trajectory_node.h	/^struct TrajectoryNodePose {$/;"	s	namespace:cartographer::mapping
TrajectoryOptions	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^struct TrajectoryOptions {$/;"	s	namespace:cartographer_ros
TrajectorySensorSamplers	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    TrajectorySensorSamplers(const double rangefinder_sampling_ratio,$/;"	f	struct:cartographer_ros::Node::TrajectorySensorSamplers
TrajectorySensorSamplers	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  struct TrajectorySensorSamplers {$/;"	s	class:cartographer_ros::Node
TrajectoryState	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  struct TrajectoryState {$/;"	s	class:cartographer_ros::MapBuilderBridge
TranscendentalCostFunction	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class TranscendentalCostFunction : public SizedCostFunction<2, 5, 5> {$/;"	c	namespace:ceres::internal
TranscendentalFunctor	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^class TranscendentalFunctor {$/;"	c	namespace:ceres::internal
TransformInterpolationBuffer	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^TransformInterpolationBuffer::TransformInterpolationBuffer($/;"	f	class:cartographer::transform::TransformInterpolationBuffer
TransformInterpolationBuffer	cartographer/cartographer/transform/transform_interpolation_buffer.h	/^class TransformInterpolationBuffer {$/;"	c	namespace:cartographer::transform
TransformPointCloud	cartographer/cartographer/sensor/point_cloud.cc	/^PointCloud TransformPointCloud(const PointCloud& point_cloud,$/;"	f	namespace:cartographer::sensor
TransformRangeData	cartographer/cartographer/sensor/range_data.cc	/^RangeData TransformRangeData(const RangeData& range_data,$/;"	f	namespace:cartographer::sensor
TransformTimedPointCloud	cartographer/cartographer/sensor/point_cloud.cc	/^TimedPointCloud TransformTimedPointCloud(const TimedPointCloud& point_cloud,$/;"	f	namespace:cartographer::sensor
TransformTimedRangeData	cartographer/cartographer/sensor/range_data.cc	/^TimedRangeData TransformTimedRangeData(const TimedRangeData& range_data,$/;"	f	namespace:cartographer::sensor
TransformToGravityAlignedFrameAndFilter	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^LocalTrajectoryBuilder2D::TransformToGravityAlignedFrameAndFilter($/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
TransformTupleValues	ceres-solver/internal/ceres/gmock/gmock.h	/^OutIter TransformTupleValues(Func f, const Tuple& t, OutIter out) {$/;"	f	namespace:testing::internal
TransformTupleValuesHelper	ceres-solver/internal/ceres/gmock/gmock.h	/^class TransformTupleValuesHelper {$/;"	c	namespace:testing::internal
TransitivelyConnected	cartographer/cartographer/mapping/internal/connected_components.cc	/^bool ConnectedComponents::TransitivelyConnected(const int trajectory_id_a,$/;"	f	class:cartographer::mapping::ConnectedComponents
TransitivelyConnected	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^bool TrajectoryConnectivityState::TransitivelyConnected($/;"	f	class:cartographer::mapping::TrajectoryConnectivityState
TranslateTrajectoryId	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^void LocalTrajectoryUploader::TranslateTrajectoryId($/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
Translation	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid2 Translation(const Vector& vector) {$/;"	f	class:cartographer::transform::Rigid2
Translation	cartographer/cartographer/transform/rigid_transform.h	/^  static Rigid3 Translation(const Vector& vector) {$/;"	f	class:cartographer::transform::Rigid3
TranslationDeltaCostFunctor2D	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^  explicit TranslationDeltaCostFunctor2D($/;"	f	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor2D
TranslationDeltaCostFunctor2D	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^class TranslationDeltaCostFunctor2D {$/;"	c	namespace:cartographer::mapping::scan_matching
TranslationDeltaCostFunctor3D	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  explicit TranslationDeltaCostFunctor3D($/;"	f	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
TranslationDeltaCostFunctor3D	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^class TranslationDeltaCostFunctor3D {$/;"	c	namespace:cartographer::mapping::scan_matching
TranslationFromDictionary	cartographer/cartographer/transform/rigid_transform.cc	/^Eigen::Vector3d TranslationFromDictionary($/;"	f	namespace:cartographer::transform::__anon115
Transpose	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix* CompressedRowSparseMatrix::Transpose() const {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
Transpose3x3	ceres-solver/internal/ceres/rotation_test.cc	/^static void Transpose3x3(double m[9]) {$/;"	f	namespace:ceres::internal
TransposeForCompressedRowSparseStructure	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^void TransposeForCompressedRowSparseStructure(const int num_rows,$/;"	f	namespace:ceres::internal::__anon189
TransposeMatrix	ceres-solver/internal/ceres/cxsparse.cc	/^cs_di* CXSparse::TransposeMatrix(cs_di* A) { return cs_di_transpose(A, 1); }$/;"	f	class:ceres::internal::CXSparse
Trim	cartographer/cartographer/mapping/id.h	/^  void Trim(const IdType& id) {$/;"	f	class:cartographer::mapping::MapById
Trim	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^void OverlappingSubmapsTrimmer2D::Trim(Trimmable* pose_graph) {$/;"	f	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
Trim	cartographer/cartographer/mapping/pose_graph_trimmer.cc	/^void PureLocalizationTrimmer::Trim(Trimmable* const pose_graph) {$/;"	f	class:cartographer::mapping::PureLocalizationTrimmer
Trim	cartographer/cartographer/sensor/map_by_time.h	/^  void Trim(const mapping::MapById<mapping::NodeId, NodeType>& nodes,$/;"	f	class:cartographer::sensor::MapByTime
TrimImuData	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::TrimImuData() {$/;"	f	class:cartographer::mapping::PoseExtrapolator
TrimOdometryData	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::TrimOdometryData() {$/;"	f	class:cartographer::mapping::PoseExtrapolator
TrimSubmap	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::TrimSubmap(const SubmapId& submap_id) {$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
TrimSubmap	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::TrimSubmap(const SubmapId& submap_id) {$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
TrimTrajectoryNode	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^void OptimizationProblem2D::TrimTrajectoryNode(const NodeId& node_id) {$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
TrimTrajectoryNode	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^void OptimizationProblem3D::TrimTrajectoryNode(const NodeId& node_id) {$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
Trimmable	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^class Trimmable {$/;"	c	namespace:cartographer::mapping
TrimmingHandle	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::TrimmingHandle::TrimmingHandle(PoseGraph2D* const parent)$/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
TrimmingHandle	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  class TrimmingHandle : public Trimmable {$/;"	c	class:cartographer::mapping::PoseGraph2D
TrimmingHandle	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::TrimmingHandle::TrimmingHandle(PoseGraph3D* const parent)$/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
TrimmingHandle	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  class TrimmingHandle : public Trimmable {$/;"	c	class:cartographer::mapping::PoseGraph3D
TripletSparseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix::TripletSparseMatrix()$/;"	f	class:ceres::internal::TripletSparseMatrix
TripletSparseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix::TripletSparseMatrix(const TripletSparseMatrix& orig)$/;"	f	class:ceres::internal::TripletSparseMatrix
TripletSparseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix::TripletSparseMatrix(const int num_rows,$/;"	f	class:ceres::internal::TripletSparseMatrix
TripletSparseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix::TripletSparseMatrix(int num_rows,$/;"	f	class:ceres::internal::TripletSparseMatrix
TripletSparseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^class TripletSparseMatrix : public SparseMatrix {$/;"	c	namespace:ceres::internal
TripletSparseMatrixSolver	ceres-solver/internal/ceres/linear_solver.h	/^typedef TypedLinearSolver<TripletSparseMatrix>       TripletSparseMatrixSolver;        \/\/ NOLINT$/;"	t	namespace:ceres::internal
TrivialLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT TrivialLoss : public LossFunction {$/;"	c	namespace:ceres
Truly	ceres-solver/internal/ceres/gmock/gmock.h	/^Truly(Predicate pred) {$/;"	f	namespace:testing
TrulyMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit TrulyMatcher(Predicate pred) : predicate_(pred) {}$/;"	f	class:testing::internal::TrulyMatcher
TrulyMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class TrulyMatcher {$/;"	c	namespace:testing::internal
TrustRegionMinimizer	ceres-solver/internal/ceres/trust_region_minimizer.h	/^class TrustRegionMinimizer : public Minimizer {$/;"	c	namespace:ceres::internal
TrustRegionOptionsAreValid	ceres-solver/internal/ceres/solver.cc	/^bool TrustRegionOptionsAreValid(const Solver::Options& options, string* error) {$/;"	f	namespace:ceres::__anon190
TrustRegionPreprocessor	ceres-solver/internal/ceres/trust_region_preprocessor.h	/^class TrustRegionPreprocessor : public Preprocessor {$/;"	c	namespace:ceres::internal
TrustRegionStepEvaluator	ceres-solver/internal/ceres/trust_region_step_evaluator.cc	/^TrustRegionStepEvaluator::TrustRegionStepEvaluator($/;"	f	class:ceres::internal::TrustRegionStepEvaluator
TrustRegionStepEvaluator	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^class TrustRegionStepEvaluator {$/;"	c	namespace:ceres::internal
TrustRegionStrategy	ceres-solver/internal/ceres/trust_region_strategy.h	/^class TrustRegionStrategy {$/;"	c	namespace:ceres::internal
TrustRegionStrategyType	ceres-solver/include/ceres/types.h	/^enum TrustRegionStrategyType {$/;"	g	namespace:ceres
TrustRegionStrategyTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* TrustRegionStrategyTypeToString(TrustRegionStrategyType type) {$/;"	f	namespace:ceres
TryAugment	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool TryAugment(size_t ilhs, ::std::vector<char>* seen) {$/;"	f	class:testing::internal::MaxBipartiteMatchState	file:
TryLock	ceres-solver/internal/ceres/mutex.h	/^bool Mutex::TryLock()      { if (mutex_) return false; Lock(); return true; }$/;"	f	class:ceres::internal::Mutex
TryLock	ceres-solver/internal/ceres/mutex.h	/^bool Mutex::TryLock()      { return is_safe_ ?$/;"	f	class:ceres::internal::Mutex
TukeyLoss	ceres-solver/include/ceres/loss_function.h	/^  explicit TukeyLoss(double a) : a_squared_(a * a) { }$/;"	f	class:ceres::TukeyLoss
TukeyLoss	ceres-solver/include/ceres/loss_function.h	/^class CERES_EXPORT TukeyLoss : public ceres::LossFunction {$/;"	c	namespace:ceres
Tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ::std::tuple<Types...> Tuple;$/;"	t	struct:testing::internal::TuplePolicy
Tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef TupleT Tuple;$/;"	t	struct:testing::internal::TuplePolicy
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 0, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 1, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 2, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 3, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 4, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 5, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 6, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 7, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 8, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleElement	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TupleElement<true, 9, GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1::gtest_internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, -1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, -1, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, -1, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, -1, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, -1, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, -1, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, -1, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, k7, -1, -1> {$/;"	c	namespace:testing::internal
TupleFields	ceres-solver/internal/ceres/gmock/gmock.h	/^class TupleFields<Tuple, k0, k1, k2, k3, k4, k5, k6, k7, k8, -1> {$/;"	c	namespace:testing::internal
TupleMatches	ceres-solver/internal/ceres/gmock/gmock.h	/^bool TupleMatches(const MatcherTuple& matcher_tuple,$/;"	f	namespace:testing::internal
TuplePolicy	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TuplePolicy {$/;"	s	namespace:testing::internal
TuplePolicy	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TuplePolicy< ::std::tuple<Types...> > {$/;"	s	namespace:testing::internal
TuplePrefix	ceres-solver/internal/ceres/gmock/gmock.h	/^class TuplePrefix {$/;"	c	namespace:testing::internal
TuplePrefix	ceres-solver/internal/ceres/gmock/gmock.h	/^class TuplePrefix<0> {$/;"	c	namespace:testing::internal
TuplePrefixPrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TuplePrefixPrinter {$/;"	s	namespace:testing::internal
TuplePrefixPrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TuplePrefixPrinter<0> {$/;"	s	namespace:testing::internal
TupleSize	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple_size<Tuple> TupleSize;$/;"	t	class:testing::internal::TransformTupleValuesHelper
TwoParameterBlockFunctor	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^struct TwoParameterBlockFunctor {$/;"	s	namespace:ceres::internal	file:
Type	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum Type {$/;"	g	class:testing::TestPartResult
Type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef std::string Type(const TestParamInfo<ParamType>&);$/;"	t	struct:testing::internal::ParamNameGenFunc
TypeId	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef const void* TypeId;$/;"	t	namespace:testing::internal
TypeIdHelper	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeIdHelper {$/;"	c	namespace:testing::internal
TypeKind	ceres-solver/internal/ceres/gmock/gmock.h	/^enum TypeKind {$/;"	g	namespace:testing::internal
TypeKind	ceres-solver/internal/ceres/gtest/gtest.h	/^enum TypeKind {$/;"	g	namespace:testing::internal2
TypeList	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TypeList {$/;"	s	namespace:testing::internal
TypeList	ceres-solver/internal/ceres/gtest/gtest.h	/^struct TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing::internal
TypeParameterizedTest	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeParameterizedTest {$/;"	c	namespace:testing::internal
TypeParameterizedTest	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeParameterizedTest<Fixture, TestSel, Types0> {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeParameterizedTestCase {$/;"	c	namespace:testing::internal
TypeParameterizedTestCase	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeParameterizedTestCase<Fixture, Templates0, Types> {$/;"	c	namespace:testing::internal
TypeWithSize	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeWithSize {$/;"	c	namespace:std::tr1
TypeWithSize	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeWithSize<4> {$/;"	c	namespace:std::tr1
TypeWithSize	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeWithSize<8> {$/;"	c	namespace:std::tr1
TypeWithoutFormatter	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeWithoutFormatter {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeWithoutFormatter<T, kConvertibleToInteger> {$/;"	c	namespace:testing::internal2
TypeWithoutFormatter	ceres-solver/internal/ceres/gtest/gtest.h	/^class TypeWithoutFormatter<T, kProtobuf> {$/;"	c	namespace:testing::internal2
TypedEq	ceres-solver/internal/ceres/gmock/gmock.h	/^inline Matcher<Lhs> TypedEq(const Rhs& rhs) { return Eq(rhs); }$/;"	f	namespace:testing
TypedExpectation	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation(FunctionMockerBase<F>* owner,$/;"	f	class:testing::internal::TypedExpectation
TypedExpectation	ceres-solver/internal/ceres/gmock/gmock.h	/^class TypedExpectation : public ExpectationBase {$/;"	c	namespace:testing::internal
TypedLinearSolver	ceres-solver/internal/ceres/linear_solver.h	/^class TypedLinearSolver : public LinearSolver {$/;"	c	namespace:ceres::internal
TypedPreconditioner	ceres-solver/internal/ceres/preconditioner.h	/^class TypedPreconditioner : public Preconditioner {$/;"	c	namespace:ceres::internal
TypedTestCasePState	ceres-solver/internal/ceres/gtest/gtest.h	/^  TypedTestCasePState() : registered_(false) {}$/;"	f	class:testing::internal::TypedTestCasePState
TypedTestCasePState	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ TypedTestCasePState {$/;"	c	namespace:testing::internal
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types {$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, T5, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, T3, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, T2, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<T1, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types<internal::None, internal::None, internal::None, internal::None,$/;"	s	namespace:testing
Types0	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types0 {};$/;"	s	namespace:testing::internal
Types1	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types1 {$/;"	s	namespace:testing::internal
Types10	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types10 {$/;"	s	namespace:testing::internal
Types11	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types11 {$/;"	s	namespace:testing::internal
Types12	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types12 {$/;"	s	namespace:testing::internal
Types13	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types13 {$/;"	s	namespace:testing::internal
Types14	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types14 {$/;"	s	namespace:testing::internal
Types15	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types15 {$/;"	s	namespace:testing::internal
Types16	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types16 {$/;"	s	namespace:testing::internal
Types17	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types17 {$/;"	s	namespace:testing::internal
Types18	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types18 {$/;"	s	namespace:testing::internal
Types19	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types19 {$/;"	s	namespace:testing::internal
Types2	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types2 {$/;"	s	namespace:testing::internal
Types20	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types20 {$/;"	s	namespace:testing::internal
Types21	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types21 {$/;"	s	namespace:testing::internal
Types22	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types22 {$/;"	s	namespace:testing::internal
Types23	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types23 {$/;"	s	namespace:testing::internal
Types24	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types24 {$/;"	s	namespace:testing::internal
Types25	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types25 {$/;"	s	namespace:testing::internal
Types26	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types26 {$/;"	s	namespace:testing::internal
Types27	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types27 {$/;"	s	namespace:testing::internal
Types28	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types28 {$/;"	s	namespace:testing::internal
Types29	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types29 {$/;"	s	namespace:testing::internal
Types3	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types3 {$/;"	s	namespace:testing::internal
Types30	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types30 {$/;"	s	namespace:testing::internal
Types31	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types31 {$/;"	s	namespace:testing::internal
Types32	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types32 {$/;"	s	namespace:testing::internal
Types33	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types33 {$/;"	s	namespace:testing::internal
Types34	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types34 {$/;"	s	namespace:testing::internal
Types35	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types35 {$/;"	s	namespace:testing::internal
Types36	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types36 {$/;"	s	namespace:testing::internal
Types37	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types37 {$/;"	s	namespace:testing::internal
Types38	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types38 {$/;"	s	namespace:testing::internal
Types39	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types39 {$/;"	s	namespace:testing::internal
Types4	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types4 {$/;"	s	namespace:testing::internal
Types40	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types40 {$/;"	s	namespace:testing::internal
Types41	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types41 {$/;"	s	namespace:testing::internal
Types42	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types42 {$/;"	s	namespace:testing::internal
Types43	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types43 {$/;"	s	namespace:testing::internal
Types44	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types44 {$/;"	s	namespace:testing::internal
Types45	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types45 {$/;"	s	namespace:testing::internal
Types46	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types46 {$/;"	s	namespace:testing::internal
Types47	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types47 {$/;"	s	namespace:testing::internal
Types48	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types48 {$/;"	s	namespace:testing::internal
Types49	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types49 {$/;"	s	namespace:testing::internal
Types5	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types5 {$/;"	s	namespace:testing::internal
Types50	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types50 {$/;"	s	namespace:testing::internal
Types6	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types6 {$/;"	s	namespace:testing::internal
Types7	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types7 {$/;"	s	namespace:testing::internal
Types8	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types8 {$/;"	s	namespace:testing::internal
Types9	ceres-solver/internal/ceres/gtest/gtest.h	/^struct Types9 {$/;"	s	namespace:testing::internal
UInt	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef unsigned __int64 UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef unsigned int UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef void UInt;$/;"	t	class:std::tr1::TypeWithSize
UInt32	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef TypeWithSize<4>::UInt UInt32;$/;"	t	namespace:std::tr1
UInt64	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef TypeWithSize<8>::UInt UInt64;$/;"	t	namespace:std::tr1
UNCONSTRAINED_SOLVE	ceres-solver/examples/more_garbow_hillstrom.cc	594;"	d	file:
UNSYMMETRIC	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    UNSYMMETRIC,$/;"	e	enum:ceres::internal::CompressedRowSparseMatrix::StorageType
UPPER_TRIANGULAR	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    UPPER_TRIANGULAR$/;"	e	enum:ceres::internal::CompressedRowSparseMatrix::StorageType
USER_FAILURE	ceres-solver/include/ceres/types.h	/^  USER_FAILURE$/;"	e	enum:ceres::TerminationType
USER_SUCCESS	ceres-solver/include/ceres/types.h	/^  USER_SUCCESS,$/;"	e	enum:ceres::TerminationType
USER_TIME_PATTERN	cartographer_ros/jenkins/worker.py	/^USER_TIME_PATTERN = Pattern($/;"	v
USE_GCC_INLINE_ASM	cartographer/bazel/third_party/pixman/config.h	148;"	d
USE_ICONV	cartographer/bazel/third_party/fontconfig/config.h	303;"	d
USE_OPENMP	cartographer/bazel/third_party/pixman/config.h	157;"	d
Uint8ColorToCairo	cartographer/cartographer/io/image.cc	/^uint32 Uint8ColorToCairo(const Uint8Color& color) {$/;"	f	namespace:cartographer::io::__anon23
Uint8ComponentToFloat	cartographer/cartographer/io/color.h	/^inline float Uint8ComponentToFloat(uint8 c) { return c \/ 255.f; }$/;"	f	namespace:cartographer::io
UnaryCostFunction	ceres-solver/internal/ceres/covariance_test.cc	/^  UnaryCostFunction(const int num_residuals,$/;"	f	class:ceres::internal::UnaryCostFunction
UnaryCostFunction	ceres-solver/internal/ceres/covariance_test.cc	/^class UnaryCostFunction: public CostFunction {$/;"	c	namespace:ceres::internal	file:
UnaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  UnaryCostFunction(int num_residuals, int32 parameter_block_size) {$/;"	f	class:ceres::internal::UnaryCostFunction
UnaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^class UnaryCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
UnaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  UnaryCostFunction(int num_residuals, int32 parameter_block_size) {$/;"	f	class:ceres::internal::UnaryCostFunction
UnaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^class UnaryCostFunction : public CostFunction {$/;"	c	namespace:ceres::internal	file:
UnaryCostFunction	ceres-solver/internal/ceres/program_test.cc	/^class UnaryCostFunction : public MockCostFunctionBase<2, 1, 0, 0> {};$/;"	c	namespace:ceres::internal	file:
UnaryCostFunction	ceres-solver/internal/ceres/reorder_program_test.cc	/^class UnaryCostFunction : public MockCostFunctionBase<2, 1, 0, 0> {};$/;"	c	namespace:ceres::internal	file:
UnaryIdentityCostFunction	ceres-solver/internal/ceres/program_test.cc	/^class UnaryIdentityCostFunction : public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
UnaryIdentityCostFunction	ceres-solver/internal/ceres/solver_test.cc	/^class UnaryIdentityCostFunction : public SizedCostFunction<1, 1> {$/;"	c	namespace:ceres::internal	file:
Uniform	ceres-solver/internal/ceres/random.h	/^inline int Uniform(int n) {$/;"	f	namespace:ceres
Union	cartographer/cartographer/mapping/internal/connected_components.cc	/^void ConnectedComponents::Union(const int trajectory_id_a,$/;"	f	class:cartographer::mapping::ConnectedComponents
UnitQuaternionRotatePoint	ceres-solver/include/ceres/rotation.h	/^void UnitQuaternionRotatePoint(const T q[4], const T pt[3], T result[3]) {$/;"	f	namespace:ceres
UnitTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UnitTest::UnitTest() {$/;"	f	class:testing::UnitTest
UnitTest	ceres-solver/internal/ceres/gtest/gtest.h	/^class GTEST_API_ UnitTest {$/;"	c	namespace:testing
UnitTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GTEST_API_ UnitTestImpl {$/;"	c	namespace:testing::internal	file:
UnitTestOptions	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class GTEST_API_ UnitTestOptions {$/;"	c	namespace:testing::internal	file:
UniversalPrint	ceres-solver/internal/ceres/gtest/gtest.h	/^void UniversalPrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UniversalPrintArray(const char* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintArray	ceres-solver/internal/ceres/gtest/gtest.h	/^void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalPrintCharArray	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static void UniversalPrintCharArray($/;"	f	namespace:testing::internal
UniversalPrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalPrinter {$/;"	c	namespace:testing::internal
UniversalPrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalPrinter<T&> {$/;"	c	namespace:testing::internal
UniversalPrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalPrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrint	ceres-solver/internal/ceres/gtest/gtest.h	/^void UniversalTersePrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal
UniversalTersePrintTupleFieldsToStrings	ceres-solver/internal/ceres/gtest/gtest.h	/^Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {$/;"	f	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter {$/;"	c	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter<T&> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter<char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter<const wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	ceres-solver/internal/ceres/gtest/gtest.h	/^class UniversalTersePrinter<wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTimeScaleClock	cartographer/cartographer/common/time.h	/^struct UniversalTimeScaleClock {$/;"	s	namespace:cartographer::common
UnixToCommonTime	cartographer/cartographer/ground_truth/relations_text_file.cc	/^common::Time UnixToCommonTime(double unix_time) {$/;"	f	namespace:cartographer::ground_truth::__anon50
Unlock	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Mutex::Unlock() {$/;"	f	class:testing::internal::Mutex
Unlock	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Unlock() {$/;"	f	class:std::tr1::MutexBase
Unlock	ceres-solver/internal/ceres/gtest/gtest.h	/^  void Unlock() {}$/;"	f	class:std::tr1::Mutex
Unlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Unlock()       { CERES_SAFE_PTHREAD(pthread_mutex_unlock); }$/;"	f	class:ceres::internal::Mutex
Unlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Unlock()       { CERES_SAFE_PTHREAD(pthread_rwlock_unlock); }$/;"	f	class:ceres::internal::Mutex
Unlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Unlock()       { assert(mutex_++ == -1); }$/;"	f	class:ceres::internal::Mutex
Unlock	ceres-solver/internal/ceres/mutex.h	/^void Mutex::Unlock()       { if (is_safe_) LeaveCriticalSection(&mutex_); }$/;"	f	class:ceres::internal::Mutex
UnorderedElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAre() {$/;"	f	namespace:testing
UnorderedElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1) {$/;"	f	namespace:testing
UnorderedElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2) {$/;"	f	namespace:testing
UnorderedElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3) {$/;"	f	namespace:testing
UnorderedElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4) {$/;"	f	namespace:testing
UnorderedElementsAre	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAre(const T1& e1, const T2& e2, const T3& e3, const T4& e4,$/;"	f	namespace:testing
UnorderedElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAreArray(::std::initializer_list<T> xs) {$/;"	f	namespace:testing
UnorderedElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAreArray(Iter first, Iter last) {$/;"	f	namespace:testing
UnorderedElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAreArray(const Container& container) {$/;"	f	namespace:testing
UnorderedElementsAreArray	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedElementsAreArray(const T* pointer, size_t count) {$/;"	f	namespace:testing
UnorderedElementsAreArrayMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  UnorderedElementsAreArrayMatcher() {}$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
UnorderedElementsAreArrayMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  UnorderedElementsAreArrayMatcher(Iter first, Iter last)$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
UnorderedElementsAreArrayMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class UnorderedElementsAreArrayMatcher {$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit UnorderedElementsAreMatcher(const MatcherTuple& args)$/;"	f	class:testing::internal::UnorderedElementsAreMatcher
UnorderedElementsAreMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class UnorderedElementsAreMatcher {$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^  UnorderedElementsAreMatcherImpl(InputIter first, InputIter last) {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImpl
UnorderedElementsAreMatcherImpl	ceres-solver/internal/ceres/gmock/gmock.h	/^class UnorderedElementsAreMatcherImpl$/;"	c	namespace:testing::internal
UnorderedElementsAreMatcherImplBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ UnorderedElementsAreMatcherImplBase {$/;"	c	namespace:testing::internal
UnorderedPointwise	ceres-solver/internal/ceres/gmock/gmock.h	/^UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,$/;"	f	namespace:testing
UnpackCamerasRotationAndTranslation	ceres-solver/examples/libmv_bundle_adjuster.cc	/^void UnpackCamerasRotationAndTranslation($/;"	f	namespace:__anon155
UnpackTextureData	cartographer/cartographer/io/submap_painter.cc	/^SubmapTexture::Pixels UnpackTextureData(const std::string& compressed_cells,$/;"	f	namespace:cartographer::io
UnshuffleTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void TestCase::UnshuffleTests() {$/;"	f	class:testing::TestCase
UnshuffleTests	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::UnshuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl
UnsignedInteger	ceres-solver/internal/ceres/integral_types.h	/^struct UnsignedInteger {$/;"	s	namespace:ceres::internal
UnsubscribeGlobalSlamOptimizations	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^void MapBuilderContext<SubmapType>::UnsubscribeGlobalSlamOptimizations($/;"	f	class:cartographer::cloud::MapBuilderContext
UnsubscribeGlobalSlamOptimizations	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::UnsubscribeGlobalSlamOptimizations($/;"	f	class:cartographer::cloud::MapBuilderServer
UnsubscribeLocalSlamResults	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^void MapBuilderContext<SubmapType>::UnsubscribeLocalSlamResults($/;"	f	class:cartographer::cloud::MapBuilderContext
UnsubscribeLocalSlamResults	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::UnsubscribeLocalSlamResults($/;"	f	class:cartographer::cloud::MapBuilderServer
Unsuccessful	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  static Candidate3D Unsuccessful() {$/;"	f	struct:cartographer::mapping::scan_matching::Candidate3D
UntypedActionResultHolderBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class UntypedActionResultHolderBase {$/;"	c	namespace:testing::internal
UntypedActions	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef std::vector<const void*> UntypedActions;$/;"	t	class:testing::internal::ExpectationBase
UntypedExpectations	ceres-solver/internal/ceres/gmock/gmock.h	/^  UntypedExpectations;$/;"	t	class:testing::internal::UntypedFunctionMockerBase
UntypedFunctionMockerBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class GTEST_API_ UntypedFunctionMockerBase {$/;"	c	namespace:testing::internal
UntypedFunctionMockerBase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UntypedFunctionMockerBase::UntypedFunctionMockerBase()$/;"	f	class:testing::internal::UntypedFunctionMockerBase
UntypedOnCallSpecBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  UntypedOnCallSpecBase(const char* a_file, int a_line)$/;"	f	class:testing::internal::UntypedOnCallSpecBase
UntypedOnCallSpecBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class UntypedOnCallSpecBase {$/;"	c	namespace:testing::internal
UntypedOnCallSpecs	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef std::vector<const void*> UntypedOnCallSpecs;$/;"	t	class:testing::internal::UntypedFunctionMockerBase
UntypedPerformAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual UntypedActionResultHolderBase* UntypedPerformAction($/;"	f	class:testing::internal::FunctionMockerBase
UntypedPerformDefaultAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual UntypedActionResultHolderBase* UntypedPerformDefaultAction($/;"	f	class:testing::internal::FunctionMockerBase
UntypedPrintArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual void UntypedPrintArgs(const void* untyped_args,$/;"	f	class:testing::internal::FunctionMockerBase
UntypedTimes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void ExpectationBase::UntypedTimes(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase
Unused	ceres-solver/internal/ceres/gmock/gmock.h	/^typedef internal::IgnoredValue Unused;$/;"	t	namespace:testing
Unwrap	ceres-solver/internal/ceres/gmock/gmock.h	/^  T Unwrap() { return ::testing::internal::move(value_); }$/;"	f	class:testing::internal::ReferenceOrValueWrapper
Unwrap	ceres-solver/internal/ceres/gmock/gmock.h	/^  T Unwrap() {$/;"	f	class:testing::internal::ActionResultHolder
Unwrap	ceres-solver/internal/ceres/gmock/gmock.h	/^  T& Unwrap() { return *value_ptr_; }$/;"	f	class:testing::internal::ReferenceOrValueWrapper
Unwrap	ceres-solver/internal/ceres/gmock/gmock.h	/^  void Unwrap() { }$/;"	f	class:testing::internal::ActionResultHolder
Update	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^void DrawableSubmap::Update($/;"	f	class:cartographer_rviz::DrawableSubmap
Update	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^void OgreSlice::Update($/;"	f	class:cartographer_rviz::OgreSlice
Update	ceres-solver/internal/ceres/low_rank_inverse_hessian.cc	/^bool LowRankInverseHessian::Update(const Vector& delta_x,$/;"	f	class:ceres::internal::LowRankInverseHessian
Update	ceres-solver/internal/ceres/preconditioner.h	/^  virtual bool Update(const LinearOperator& A, const double* D) {$/;"	f	class:ceres::internal::TypedPreconditioner
UpdateBlockDiagonalEtE	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^UpdateBlockDiagonalEtE($/;"	f	class:ceres::internal::PartitionedMatrixView
UpdateBlockDiagonalFtF	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^UpdateBlockDiagonalFtF(BlockSparseMatrix* block_diagonal) const {$/;"	f	class:ceres::internal::PartitionedMatrixView
UpdateCanonicalViewAssignments	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^void CanonicalViewsClustering::UpdateCanonicalViewAssignments($/;"	f	class:ceres::internal::CanonicalViewsClustering
UpdateFromProto	cartographer/cartographer/mapping/2d/submap_2d.cc	/^void Submap2D::UpdateFromProto(const proto::Submap& proto) {$/;"	f	class:cartographer::mapping::Submap2D
UpdateFromProto	cartographer/cartographer/mapping/3d/submap_3d.cc	/^void Submap3D::UpdateFromProto(const proto::Submap& proto) {$/;"	f	class:cartographer::mapping::Submap3D
UpdateImpl	ceres-solver/internal/ceres/block_jacobi_preconditioner.cc	/^bool BlockJacobiPreconditioner::UpdateImpl(const BlockSparseMatrix& A,$/;"	f	class:ceres::internal::BlockJacobiPreconditioner
UpdateImpl	ceres-solver/internal/ceres/preconditioner.cc	/^bool SparseMatrixPreconditionerWrapper::UpdateImpl(const SparseMatrix& A,$/;"	f	class:ceres::internal::SparseMatrixPreconditionerWrapper
UpdateImpl	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^bool SchurJacobiPreconditioner::UpdateImpl(const BlockSparseMatrix& A,$/;"	f	class:ceres::internal::SchurJacobiPreconditioner
UpdateImpl	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^bool VisibilityBasedPreconditioner::UpdateImpl(const BlockSparseMatrix& A,$/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
UpdateLocalParameterizationJacobian	ceres-solver/internal/ceres/parameter_block.h	/^  bool UpdateLocalParameterizationJacobian() {$/;"	f	class:ceres::internal::ParameterBlock
UpdateOgreNodeVisibility	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^void OgreSlice::UpdateOgreNodeVisibility(bool submap_visibility) {$/;"	f	class:cartographer_rviz::OgreSlice
UpdateOptions	ceres-solver/internal/ceres/test_util.h	/^  void UpdateOptions(Solver::Options* options) const {$/;"	f	struct:ceres::internal::SolverConfig
UpdateRhs	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^void ImplicitSchurComplement::UpdateRhs() {$/;"	f	class:ceres::internal::ImplicitSchurComplement
UpdateRhs	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^UpdateRhs(const Chunk& chunk,$/;"	f	class:ceres::internal::SchurEliminator
UpdateSceneNode	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^void DrawableSubmap::UpdateSceneNode() {$/;"	f	class:cartographer_rviz::DrawableSubmap
UpdateSubmap	cartographer/cartographer/mapping/internal/submap_controller.h	/^  std::shared_ptr<SubmapType> UpdateSubmap($/;"	f	class:cartographer::mapping::SubmapController
UpdateTrajectoryConnectivity	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::UpdateTrajectoryConnectivity(const Constraint& constraint) {$/;"	f	class:cartographer::mapping::PoseGraph2D
UpdateTrajectoryConnectivity	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::UpdateTrajectoryConnectivity(const Constraint& constraint) {$/;"	f	class:cartographer::mapping::PoseGraph3D
UpdateVelocitiesFromPoses	cartographer/cartographer/mapping/pose_extrapolator.cc	/^void PoseExtrapolator::UpdateVelocitiesFromPoses() {$/;"	f	class:cartographer::mapping::PoseExtrapolator
UponLeavingGTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void OsStackTraceGetter::UponLeavingGTest() {}$/;"	f	class:testing::internal::OsStackTraceGetter
UpperBoundForParameter	ceres-solver/internal/ceres/parameter_block.h	/^  double UpperBoundForParameter(int index) const {$/;"	f	class:ceres::internal::ParameterBlock
UpperCase	ceres-solver/internal/ceres/types.cc	/^static void UpperCase(string* input) {$/;"	f	namespace:ceres
UrlEncode	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^string StreamingListener::UrlEncode(const char* str) {$/;"	f	class:testing::internal::StreamingListener
UserThreadFunc	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef void UserThreadFunc(T);$/;"	t	class:std::tr1::ThreadWithParam
Utf16ToAnsi	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {$/;"	f	class:testing::internal::String
VERSION	cartographer/bazel/third_party/fontconfig/config.h	327;"	d
VERSION	cartographer/bazel/third_party/pixman/config.h	172;"	d
VL	ceres-solver/internal/ceres/jet_test.cc	42;"	d	file:
VLOG	ceres-solver/internal/ceres/miniglog/glog/logging.h	306;"	d
VLOG	ceres-solver/internal/ceres/miniglog/glog/logging.h	311;"	d
VLOG_IF	ceres-solver/internal/ceres/miniglog/glog/logging.h	308;"	d
VLOG_IF	ceres-solver/internal/ceres/miniglog/glog/logging.h	313;"	d
VLOG_IS_ON	ceres-solver/internal/ceres/miniglog/glog/logging.h	318;"	d
VLOG_IS_ON	ceres-solver/internal/ceres/miniglog/glog/logging.h	320;"	d
ValidateRegex	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ValidateRegex(const char* regex) {$/;"	f	namespace:testing::internal
ValidateTestProperty	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool TestResult::ValidateTestProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult
ValidateTestPropertyName	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ValidateTestPropertyName(const std::string& property_name,$/;"	f	namespace:testing
ValidateTopicNames	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::ValidateTopicNames($/;"	f	class:cartographer_ros::Node
ValidateTrajectoryOptions	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^bool Node::ValidateTrajectoryOptions(const TrajectoryOptions& options) {$/;"	f	class:cartographer_ros::Node
Value	ceres-solver/internal/ceres/gmock/gmock.h	/^inline bool Value(const T& value, M matcher) {$/;"	f	namespace:testing
ValueArray1	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit ValueArray1(T1 v1) : v1_(v1) {}$/;"	f	class:testing::internal::ValueArray1
ValueArray1	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray1 {$/;"	c	namespace:testing::internal
ValueArray10	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray10
ValueArray10	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray10 {$/;"	c	namespace:testing::internal
ValueArray11	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray11
ValueArray11	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray11 {$/;"	c	namespace:testing::internal
ValueArray12	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray12
ValueArray12	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray12 {$/;"	c	namespace:testing::internal
ValueArray13	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray13
ValueArray13	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray13 {$/;"	c	namespace:testing::internal
ValueArray14	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray14
ValueArray14	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray14 {$/;"	c	namespace:testing::internal
ValueArray15	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray15
ValueArray15	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray15 {$/;"	c	namespace:testing::internal
ValueArray16	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray16
ValueArray16	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray16 {$/;"	c	namespace:testing::internal
ValueArray17	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray17
ValueArray17	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray17 {$/;"	c	namespace:testing::internal
ValueArray18	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray18
ValueArray18	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray18 {$/;"	c	namespace:testing::internal
ValueArray19	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray19
ValueArray19	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray19 {$/;"	c	namespace:testing::internal
ValueArray2	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) {}$/;"	f	class:testing::internal::ValueArray2
ValueArray2	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray2 {$/;"	c	namespace:testing::internal
ValueArray20	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray20
ValueArray20	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray20 {$/;"	c	namespace:testing::internal
ValueArray21	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray21
ValueArray21	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray21 {$/;"	c	namespace:testing::internal
ValueArray22	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray22
ValueArray22	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray22 {$/;"	c	namespace:testing::internal
ValueArray23	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray23
ValueArray23	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray23 {$/;"	c	namespace:testing::internal
ValueArray24	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray24
ValueArray24	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray24 {$/;"	c	namespace:testing::internal
ValueArray25	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray25
ValueArray25	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray25 {$/;"	c	namespace:testing::internal
ValueArray26	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray26
ValueArray26	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray26 {$/;"	c	namespace:testing::internal
ValueArray27	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray27
ValueArray27	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray27 {$/;"	c	namespace:testing::internal
ValueArray28	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray28
ValueArray28	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray28 {$/;"	c	namespace:testing::internal
ValueArray29	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray29
ValueArray29	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray29 {$/;"	c	namespace:testing::internal
ValueArray3	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) {}$/;"	f	class:testing::internal::ValueArray3
ValueArray3	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray3 {$/;"	c	namespace:testing::internal
ValueArray30	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray30
ValueArray30	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray30 {$/;"	c	namespace:testing::internal
ValueArray31	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray31
ValueArray31	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray31 {$/;"	c	namespace:testing::internal
ValueArray32	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray32
ValueArray32	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray32 {$/;"	c	namespace:testing::internal
ValueArray33	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray33
ValueArray33	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray33 {$/;"	c	namespace:testing::internal
ValueArray34	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray34
ValueArray34	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray34 {$/;"	c	namespace:testing::internal
ValueArray35	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray35
ValueArray35	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray35 {$/;"	c	namespace:testing::internal
ValueArray36	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray36
ValueArray36	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray36 {$/;"	c	namespace:testing::internal
ValueArray37	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray37
ValueArray37	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray37 {$/;"	c	namespace:testing::internal
ValueArray38	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray38
ValueArray38	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray38 {$/;"	c	namespace:testing::internal
ValueArray39	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray39
ValueArray39	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray39 {$/;"	c	namespace:testing::internal
ValueArray4	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray4
ValueArray4	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray4 {$/;"	c	namespace:testing::internal
ValueArray40	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray40
ValueArray40	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray40 {$/;"	c	namespace:testing::internal
ValueArray41	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray41
ValueArray41	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray41 {$/;"	c	namespace:testing::internal
ValueArray42	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray42
ValueArray42	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray42 {$/;"	c	namespace:testing::internal
ValueArray43	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray43
ValueArray43	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray43 {$/;"	c	namespace:testing::internal
ValueArray44	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray44
ValueArray44	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray44 {$/;"	c	namespace:testing::internal
ValueArray45	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray45
ValueArray45	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray45 {$/;"	c	namespace:testing::internal
ValueArray46	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray46
ValueArray46	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray46 {$/;"	c	namespace:testing::internal
ValueArray47	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray47
ValueArray47	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray47 {$/;"	c	namespace:testing::internal
ValueArray48	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray48
ValueArray48	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray48 {$/;"	c	namespace:testing::internal
ValueArray49	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray49
ValueArray49	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray49 {$/;"	c	namespace:testing::internal
ValueArray5	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),$/;"	f	class:testing::internal::ValueArray5
ValueArray5	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray5 {$/;"	c	namespace:testing::internal
ValueArray50	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	class:testing::internal::ValueArray50
ValueArray50	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray50 {$/;"	c	namespace:testing::internal
ValueArray6	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),$/;"	f	class:testing::internal::ValueArray6
ValueArray6	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray6 {$/;"	c	namespace:testing::internal
ValueArray7	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),$/;"	f	class:testing::internal::ValueArray7
ValueArray7	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray7 {$/;"	c	namespace:testing::internal
ValueArray8	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	class:testing::internal::ValueArray8
ValueArray8	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray8 {$/;"	c	namespace:testing::internal
ValueArray9	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	class:testing::internal::ValueArray9
ValueArray9	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValueArray9 {$/;"	c	namespace:testing::internal
ValueHolder	ceres-solver/internal/ceres/gtest/gtest.h	/^    ValueHolder() : value_() {}$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
ValueHolder	ceres-solver/internal/ceres/gtest/gtest.h	/^    explicit ValueHolder(const T& value) : value_(value) {}$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
ValueHolder	ceres-solver/internal/ceres/gtest/gtest.h	/^  class ValueHolder : public ThreadLocalValueHolderBase {$/;"	c	class:std::tr1::ThreadLocal
ValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^    ValueHolderFactory() {}$/;"	f	class:std::tr1::ThreadLocal::ValueHolderFactory
ValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  class ValueHolderFactory {$/;"	c	class:std::tr1::ThreadLocal
ValueProducer	ceres-solver/internal/ceres/gmock/gmock.h	/^  class ValueProducer {$/;"	c	class:testing::DefaultValue
ValueToCorrespondenceCost	cartographer/cartographer/mapping/probability_values.h	/^inline float ValueToCorrespondenceCost(const uint16 value) {$/;"	f	namespace:cartographer::mapping
ValueToProbability	cartographer/cartographer/mapping/probability_values.h	/^inline float ValueToProbability(const uint16 value) {$/;"	f	namespace:cartographer::mapping
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^    T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray1<T1> Values(T1 v1) {$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) {$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) {$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) {$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
Values	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,$/;"	f	namespace:testing
ValuesIn	ceres-solver/internal/ceres/gtest/gtest.h	/^ValuesIn(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:testing
ValuesIn	ceres-solver/internal/ceres/gtest/gtest.h	/^internal::ParamGenerator<typename Container::value_type> ValuesIn($/;"	f	namespace:testing
ValuesInIteratorRangeGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
ValuesInIteratorRangeGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, 0, 0, 0, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, 0, 0, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, 0, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, N6, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, ceres::DYNAMIC, ceres::DYNAMIC,$/;"	s	namespace:ceres::internal
VariadicMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  VariadicMatcher(const Args&... matchers)  \/\/ NOLINT$/;"	f	class:testing::internal::VariadicMatcher
VariadicMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class VariadicMatcher {$/;"	c	namespace:testing::internal
VaryingResidualFunctor	ceres-solver/internal/ceres/autodiff_test.cc	/^struct VaryingResidualFunctor {$/;"	s	namespace:ceres::internal	file:
Vec	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::VectorXd Vec;$/;"	t	file:
Vec2	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::Matrix<double, 2, 1> Vec2;$/;"	t	file:
Vec3	ceres-solver/examples/libmv_bundle_adjuster.cc	/^typedef Eigen::Vector3d Vec3;$/;"	t	file:
Vec3	ceres-solver/examples/libmv_homography.cc	/^typedef Eigen::Vector3d Vec3;$/;"	t	file:
Vec4	ceres-solver/examples/libmv_bundle_adjuster.cc	/^typedef Eigen::Vector4d Vec4;$/;"	t	file:
Vec6	ceres-solver/examples/libmv_bundle_adjuster.cc	/^typedef Eigen::Matrix<double, 6, 1> Vec6;$/;"	t	file:
Vector	ceres-solver/examples/nist.cc	/^typedef Eigen::Matrix<double, Dynamic, 1> Vector;$/;"	t	namespace:ceres::examples	file:
Vector	ceres-solver/include/ceres/internal/eigen.h	/^  Vector;$/;"	t	struct:ceres::EigenTypes
Vector	ceres-solver/include/ceres/internal/eigen.h	/^typedef Eigen::Matrix<double, Eigen::Dynamic, 1> Vector;$/;"	t	namespace:ceres
Vector2d	ceres-solver/internal/ceres/dogleg_strategy.h	/^  typedef Eigen::Matrix<double, 2, 1, Eigen::DontAlign> Vector2d;$/;"	t	class:ceres::internal::DoglegStrategy
VectorOfConstraints	ceres-solver/examples/slam/pose_graph_3d/types.h	/^    VectorOfConstraints;$/;"	t	namespace:ceres::examples
VectorRef	ceres-solver/examples/bal_problem.cc	/^typedef Eigen::Map<Eigen::VectorXd> VectorRef;$/;"	t	namespace:ceres::examples::__anon154	file:
VectorRef	ceres-solver/include/ceres/internal/eigen.h	/^  VectorRef;$/;"	t	struct:ceres::EigenTypes
VectorRef	ceres-solver/include/ceres/internal/eigen.h	/^typedef Eigen::Map<Vector> VectorRef;$/;"	t	namespace:ceres
VerifyAccuracy	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  void VerifyAccuracy(const std::vector<TrajectoryNode>& expected_trajectory,$/;"	f	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest
VerifyAllElementsAndMatchersAreMatched	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^VerifyAllElementsAndMatchersAreMatched($/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
VerifyDiagonalBlocks	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^  void VerifyDiagonalBlocks(const int problem_id) {$/;"	f	class:ceres::internal::BlockJacobiPreconditionerTest
VerifyRegisteredTestNames	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* TypedTestCasePState::VerifyRegisteredTestNames($/;"	f	class:testing::internal::TypedTestCasePState
VersionString	ceres-solver/internal/ceres/solver_utils.cc	/^std::string VersionString() {$/;"	f	namespace:ceres::internal
VertexDegreeLessThan	ceres-solver/internal/ceres/graph_algorithms.h	/^  explicit VertexDegreeLessThan(const Graph<Vertex>& graph)$/;"	f	class:ceres::internal::VertexDegreeLessThan
VertexDegreeLessThan	ceres-solver/internal/ceres/graph_algorithms.h	/^class VertexDegreeLessThan {$/;"	c	namespace:ceres::internal
VertexSet	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^typedef HashSet<ParameterBlock*> VertexSet;$/;"	t	namespace:ceres::internal	file:
VertexTotalOrdering	ceres-solver/internal/ceres/graph_algorithms.h	/^  explicit VertexTotalOrdering(const Graph<Vertex>& graph)$/;"	f	class:ceres::internal::VertexTotalOrdering
VertexTotalOrdering	ceres-solver/internal/ceres/graph_algorithms.h	/^class VertexTotalOrdering {$/;"	c	namespace:ceres::internal
VertexWeight	ceres-solver/internal/ceres/graph.h	/^  double VertexWeight(const Vertex& vertex) const {$/;"	f	class:ceres::internal::WeightedGraph
View	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::QuantifierMatcherImpl
View	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef internal::StlContainerView<Container> View;$/;"	t	class:testing::internal::ContainerEqMatcher
View	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef internal::StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::ElementsAreMatcherImpl
View	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef internal::StlContainerView<RawContainer> View;$/;"	t	class:testing::internal::UnorderedElementsAreMatcherImpl
VisibilityBasedPreconditioner	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^VisibilityBasedPreconditioner::VisibilityBasedPreconditioner($/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
VisibilityBasedPreconditioner	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^class VisibilityBasedPreconditioner : public BlockSparseMatrixPreconditioner {$/;"	c	namespace:ceres::internal
VisibilityClusteringType	ceres-solver/include/ceres/types.h	/^enum VisibilityClusteringType {$/;"	g	namespace:ceres
VisibilityClusteringTypeToString	ceres-solver/internal/ceres/types.cc	/^const char* VisibilityClusteringTypeToString($/;"	f	namespace:ceres
VisibilityTest	ceres-solver/internal/ceres/visibility_test.cc	/^class VisibilityTest : public ::testing::Test {$/;"	c	namespace:ceres::internal	file:
VoidResult	ceres-solver/internal/ceres/gmock/gmock.h	/^    typedef typename Function<F>::MakeResultVoid VoidResult;$/;"	t	class:testing::internal::DoBothAction::Impl
VoxelData	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  struct VoxelData {$/;"	s	class:cartographer::io::OutlierRemovingPointsProcessor
VoxelFilter	cartographer/cartographer/sensor/internal/voxel_filter.h	/^  explicit VoxelFilter(float size) : resolution_(size) {}$/;"	f	class:cartographer::sensor::VoxelFilter
VoxelFilter	cartographer/cartographer/sensor/internal/voxel_filter.h	/^class VoxelFilter {$/;"	c	namespace:cartographer::sensor
WALL_TIME_PATTERN	cartographer_ros/jenkins/worker.py	/^WALL_TIME_PATTERN = Pattern($/;"	v
WARNING	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int WARNING = -1;$/;"	v
WARNING	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^const int WARNING = ::WARNING;$/;"	m	namespace:google
WARN_UNUSED_RESULT	cartographer/bazel/third_party/cairo/config.h	375;"	d
WOLFE	ceres-solver/include/ceres/types.h	/^  WOLFE,$/;"	e	enum:ceres::LineSearchType
WORDS_BIGENDIAN	cartographer/bazel/third_party/cairo/config.h	381;"	d
WORDS_BIGENDIAN	cartographer/bazel/third_party/cairo/config.h	392;"	d
WORDS_BIGENDIAN	cartographer/bazel/third_party/fontconfig/config.h	333;"	d
WORDS_BIGENDIAN	cartographer/bazel/third_party/pixman/config.h	178;"	d
Wait	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int ForkingDeathTest::Wait() {$/;"	f	class:testing::internal::ForkingDeathTest
Wait	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int WindowsDeathTest::Wait() {$/;"	f	class:testing::internal::WindowsDeathTest
WaitForAllComputations	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^void PoseGraph2D::WaitForAllComputations() {$/;"	f	class:cartographer::mapping::PoseGraph2D
WaitForAllComputations	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^void PoseGraph3D::WaitForAllComputations() {$/;"	f	class:cartographer::mapping::PoseGraph3D
WaitForAllComputations	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  void WaitForAllComputations() { PoseGraph3D::WaitForAllComputations(); }$/;"	f	class:cartographer::mapping::__anon105::PoseGraph3DForTesting
WaitForLocalSlamResultUploads	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void WaitForLocalSlamResultUploads(size_t size) {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
WaitForLocalSlamResults	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  void WaitForLocalSlamResults(size_t size) {$/;"	f	class:cartographer::cloud::__anon48::ClientServerTest
WaitForNotification	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void Notification::WaitForNotification() {$/;"	f	class:testing::internal::Notification
WaitForNotification	ceres-solver/internal/ceres/gtest/gtest.h	/^  void WaitForNotification() {$/;"	f	class:std::tr1::Notification
WaitForNumberSequence	cartographer/cartographer/common/thread_pool_test.cc	/^  void WaitForNumberSequence(const std::vector<int>& expected_numbers) {$/;"	f	class:cartographer::common::__anon5::Receiver
WaitForShutdown	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::WaitForShutdown() {$/;"	f	class:cartographer::cloud::MapBuilderServer
WaitForSinks	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  void WaitForSinks() {$/;"	f	class:MessageLogger
WaitTillSent	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.cc	/^void ScopedRosLogSink::WaitTillSent() {$/;"	f	class:cartographer_ros::ScopedRosLogSink
WaitTillSent	ceres-solver/internal/ceres/gmock/mock-log.h	/^  virtual void WaitTillSent() {$/;"	f	class:testing::ScopedMockLog
WaitUntilEmpty	cartographer/cartographer/common/blocking_queue.h	/^  void WaitUntilEmpty() {$/;"	f	class:cartographer::common::BlockingQueue
WaitUntilIdle	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^void MapBuilderServer::WaitUntilIdle() {$/;"	f	class:cartographer::cloud::MapBuilderServer
WaitUntilIdle	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^void ThreadPoolForTesting::WaitUntilIdle() {$/;"	f	class:cartographer::common::testing::ThreadPoolForTesting
WallTimeInSeconds	ceres-solver/internal/ceres/wall_time.cc	/^double WallTimeInSeconds() {$/;"	f	namespace:ceres::internal
WatcherThreadFunc	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static DWORD WINAPI WatcherThreadFunc(LPVOID param) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	file:
WeightedGraph	ceres-solver/internal/ceres/graph.h	/^  WeightedGraph() {}$/;"	f	class:ceres::internal::WeightedGraph
WeightedGraph	ceres-solver/internal/ceres/graph.h	/^class WeightedGraph {$/;"	c	namespace:ceres::internal
WhenDone	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^void ConstraintBuilder2D::WhenDone($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
WhenDone	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^void ConstraintBuilder3D::WhenDone($/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
WhenDynamicCastTo	ceres-solver/internal/ceres/gmock/gmock.h	/^WhenDynamicCastTo(const Matcher<To>& inner_matcher) {$/;"	f	namespace:testing
WhenDynamicCastToMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit WhenDynamicCastToMatcher(const Matcher<To&>& matcher)$/;"	f	class:testing::internal::WhenDynamicCastToMatcher
WhenDynamicCastToMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit WhenDynamicCastToMatcher(const Matcher<To>& matcher)$/;"	f	class:testing::internal::WhenDynamicCastToMatcher
WhenDynamicCastToMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class WhenDynamicCastToMatcher : public WhenDynamicCastToMatcherBase<To> {$/;"	c	namespace:testing::internal
WhenDynamicCastToMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class WhenDynamicCastToMatcher<To&> : public WhenDynamicCastToMatcherBase<To&> {$/;"	c	namespace:testing::internal
WhenDynamicCastToMatcherBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit WhenDynamicCastToMatcherBase(const Matcher<To>& matcher)$/;"	f	class:testing::internal::WhenDynamicCastToMatcherBase
WhenDynamicCastToMatcherBase	ceres-solver/internal/ceres/gmock/gmock.h	/^class WhenDynamicCastToMatcherBase {$/;"	c	namespace:testing::internal
WhenSorted	ceres-solver/internal/ceres/gmock/gmock.h	/^WhenSorted(const ContainerMatcher& container_matcher) {$/;"	f	namespace:testing
WhenSortedBy	ceres-solver/internal/ceres/gmock/gmock.h	/^WhenSortedBy(const Comparator& comparator,$/;"	f	namespace:testing
WhenSortedByMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  WhenSortedByMatcher(const Comparator& comparator,$/;"	f	class:testing::internal::WhenSortedByMatcher
WhenSortedByMatcher	ceres-solver/internal/ceres/gmock/gmock.h	/^class WhenSortedByMatcher {$/;"	c	namespace:testing::internal
WideCStringEquals	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {$/;"	f	class:testing::internal::String
WideStringToUtf8	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string WideStringToUtf8(const wchar_t* str, int num_chars) {$/;"	f	namespace:testing::internal
WillByDefault	ceres-solver/internal/ceres/gmock/gmock.h	/^  OnCallSpec& WillByDefault(const Action<F>& action) {$/;"	f	class:testing::internal::OnCallSpec
WillOnce	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& WillOnce(const Action<F>& action) {$/;"	f	class:testing::internal::TypedExpectation
WillRepeatedly	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& WillRepeatedly(const Action<F>& action) {$/;"	f	class:testing::internal::TypedExpectation
WindowsDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  WindowsDeathTest(const char* a_statement,$/;"	f	class:testing::internal::WindowsDeathTest
WindowsDeathTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class WindowsDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
With	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockSpec<F>& With() {$/;"	f	class:testing::internal::FunctionMocker
With	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockSpec<F>& With(const Matcher<A1>& m1) {$/;"	f	class:testing::internal::FunctionMocker
With	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockSpec<F>& With(const Matcher<A1>& m1, const Matcher<A2>& m2) {$/;"	f	class:testing::internal::FunctionMocker
With	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockSpec<F>& With(const Matcher<A1>& m1, const Matcher<A2>& m2,$/;"	f	class:testing::internal::FunctionMocker
With	ceres-solver/internal/ceres/gmock/gmock.h	/^  OnCallSpec& With(const Matcher<const ArgumentTuple&>& m) {$/;"	f	class:testing::internal::OnCallSpec
With	ceres-solver/internal/ceres/gmock/gmock.h	/^  TypedExpectation& With(const Matcher<const ArgumentTuple&>& m) {$/;"	f	class:testing::internal::TypedExpectation
WithArg	ceres-solver/internal/ceres/gmock/gmock.h	/^WithArg(const InnerAction& action) {$/;"	f	namespace:testing
WithArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^WithArgs(const InnerAction& action) {$/;"	f	namespace:testing
WithArgsAction	ceres-solver/internal/ceres/gmock/gmock.h	/^  explicit WithArgsAction(const InnerAction& action) : action_(action) {}$/;"	f	class:testing::internal::WithArgsAction
WithArgsAction	ceres-solver/internal/ceres/gmock/gmock.h	/^class WithArgsAction {$/;"	c	namespace:testing::internal
WithParamInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^class WithParamInterface {$/;"	c	namespace:testing
WithoutArgs	ceres-solver/internal/ceres/gmock/gmock.h	/^WithoutArgs(const InnerAction& action) {$/;"	f	namespace:testing
WolfeLineSearch	ceres-solver/internal/ceres/line_search.cc	/^WolfeLineSearch::WolfeLineSearch(const LineSearch::Options& options)$/;"	f	class:ceres::internal::WolfeLineSearch
WolfeLineSearch	ceres-solver/internal/ceres/line_search.h	/^class WolfeLineSearch : public LineSearch {$/;"	c	namespace:ceres::internal
Worker	cartographer_ros/jenkins/worker.py	/^class Worker(object):$/;"	c
Wrapper	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ReferenceOrValueWrapper<T> Wrapper;$/;"	t	class:testing::internal::ActionResultHolder
Write	cartographer/cartographer/io/fake_file_writer.cc	/^bool FakeFileWriter::Write(const char* const data, const size_t len) {$/;"	f	class:cartographer::io::FakeFileWriter
Write	cartographer/cartographer/io/file_writer.cc	/^bool StreamFileWriter::Write(const char* const data, const size_t len) {$/;"	f	class:cartographer::io::StreamFileWriter
Write	cartographer/cartographer/io/proto_stream.cc	/^void ProtoStreamWriter::Write(const std::string& uncompressed_data) {$/;"	f	class:cartographer::io::ProtoStreamWriter
Write	ceres-solver/internal/ceres/block_jacobian_writer.h	/^  void Write(int \/* residual_id *\/,$/;"	f	class:ceres::internal::BlockJacobianWriter
Write	ceres-solver/internal/ceres/compressed_row_jacobian_writer.cc	/^void CompressedRowJacobianWriter::Write(int residual_id,$/;"	f	class:ceres::internal::CompressedRowJacobianWriter
Write	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^  void Write(int residual_id,$/;"	f	class:ceres::internal::DenseJacobianWriter
Write	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc	/^void DynamicCompressedRowJacobianWriter::Write(int residual_id,$/;"	f	class:ceres::internal::DynamicCompressedRowJacobianWriter
Write	ceres-solver/internal/ceres/gtest/gtest.h	/^inline int Write(int fd, const void* buf, unsigned int count) {$/;"	f	namespace:std::tr1::posix
WriteArrayToFileOrDie	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^void WriteArrayToFileOrDie(const string& filename,$/;"	f	namespace:ceres::internal::__anon182
WriteBinaryIntensity	cartographer/cartographer/io/ply_writing_points_processor.cc	/^void WriteBinaryIntensity(const float intensity,$/;"	f	namespace:cartographer::io::__anon13
WriteBinaryPcdHeader	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^void WriteBinaryPcdHeader(const bool has_color, const int64 num_points,$/;"	f	namespace:cartographer::io::__anon15
WriteBinaryPcdPointColor	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^void WriteBinaryPcdPointColor(const Uint8Color& color,$/;"	f	namespace:cartographer::io::__anon15
WriteBinaryPcdPointCoordinate	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^void WriteBinaryPcdPointCoordinate(const Eigen::Vector3f& point,$/;"	f	namespace:cartographer::io::__anon15
WriteBinaryPlyHeader	cartographer/cartographer/io/ply_writing_points_processor.cc	/^void WriteBinaryPlyHeader(const bool has_color, const bool has_intensities,$/;"	f	namespace:cartographer::io::__anon13
WriteBinaryPlyPointColor	cartographer/cartographer/io/ply_writing_points_processor.cc	/^void WriteBinaryPlyPointColor(const Uint8Color& color,$/;"	f	namespace:cartographer::io::__anon13
WriteBinaryPlyPointCoordinate	cartographer/cartographer/io/ply_writing_points_processor.cc	/^void WriteBinaryPlyPointCoordinate(const Eigen::Vector3f& point,$/;"	f	namespace:cartographer::io::__anon13
WriteHeader	cartographer/cartographer/io/fake_file_writer.cc	/^bool FakeFileWriter::WriteHeader(const char* const data, const size_t len) {$/;"	f	class:cartographer::io::FakeFileWriter
WriteHeader	cartographer/cartographer/io/file_writer.cc	/^bool StreamFileWriter::WriteHeader(const char* const data, const size_t len) {$/;"	f	class:cartographer::io::StreamFileWriter
WritePbStream	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^void WritePbStream($/;"	f	namespace:cartographer::io
WritePgm	cartographer_ros/cartographer_ros/cartographer_ros/ros_map.cc	/^void WritePgm(const ::cartographer::io::Image& image, const double resolution,$/;"	f	namespace:cartographer_ros
WritePng	cartographer/cartographer/io/image.cc	/^void Image::WritePng(FileWriter* const file_writer) {$/;"	f	class:cartographer::io::Image
WriteProto	cartographer/cartographer/io/internal/in_memory_proto_stream.cc	/^void ForwardingProtoStreamWriter::WriteProto($/;"	f	class:cartographer::io::ForwardingProtoStreamWriter
WriteProto	cartographer/cartographer/io/proto_stream.cc	/^void ProtoStreamWriter::WriteProto(const google::protobuf::Message& proto) {$/;"	f	class:cartographer::io::ProtoStreamWriter
WriteRelationMetricsToFile	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^void WriteRelationMetricsToFile(const std::vector<Error>& errors,$/;"	f	namespace:cartographer::ground_truth::__anon49
WriteSizeAsLittleEndian	cartographer/cartographer/io/proto_stream.cc	/^void WriteSizeAsLittleEndian(uint64 size, std::ostream* out) {$/;"	f	namespace:cartographer::io::__anon17
WriteStateHandler	cartographer/cartographer/cloud/internal/handlers/write_state_handler.h	/^class WriteStateHandler : public async_grpc::RpcHandler<WriteStateSignature> {$/;"	c	namespace:cartographer::cloud::handlers
WriteStringToFileOrDie	ceres-solver/internal/ceres/file.cc	/^void WriteStringToFileOrDie(const string &data, const string &filename) {$/;"	f	namespace:ceres::internal
WriteToFile	ceres-solver/examples/bal_problem.cc	/^void BALProblem::WriteToFile(const std::string& filename) const {$/;"	f	class:ceres::examples::BALProblem
WriteToFile	ceres-solver/examples/pgm_image.h	/^bool PGMImage<Real>::WriteToFile(std::string filename) const {$/;"	f	class:ceres::examples::PGMImage
WriteToPLYFile	ceres-solver/examples/bal_problem.cc	/^void BALProblem::WriteToPLYFile(const std::string& filename) const {$/;"	f	class:ceres::examples::BALProblem
WriteToShardStatusFileIfNeeded	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void WriteToShardStatusFileIfNeeded() {$/;"	f	namespace:testing::internal
WriteVoxels	cartographer/cartographer/io/xray_points_processor.cc	/^void XRayPointsProcessor::WriteVoxels(const Aggregation& aggregation,$/;"	f	class:cartographer::io::XRayPointsProcessor
WriteXyzPoint	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^void WriteXyzPoint(const Eigen::Vector3f& point,$/;"	f	namespace:cartographer::io::__anon28
WriteYaml	cartographer_ros/cartographer_ros/cartographer_ros/ros_map.cc	/^void WriteYaml(const double resolution, const Eigen::Vector2d& origin,$/;"	f	namespace:cartographer_ros
WriterLock	ceres-solver/internal/ceres/mutex.h	/^  inline void WriterLock() { Lock(); }     \/\/ Acquire an exclusive lock$/;"	f	class:ceres::internal::Mutex
WriterUnlock	ceres-solver/internal/ceres/mutex.h	/^  inline void WriterUnlock() { Unlock(); } \/\/ Release a lock from WriterLock()$/;"	f	class:ceres::internal::Mutex
X	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  Vec3 X;$/;"	m	struct:__anon155::EuclideanPoint	file:
XRayPointsProcessor	cartographer/cartographer/io/xray_points_processor.cc	/^XRayPointsProcessor::XRayPointsProcessor($/;"	f	class:cartographer::io::XRayPointsProcessor
XRayPointsProcessor	cartographer/cartographer/io/xray_points_processor.h	/^class XRayPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
XYIndexRangeIterator	cartographer/cartographer/mapping/2d/xy_index.h	/^  XYIndexRangeIterator(const Eigen::Array2i& min_xy_index,$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
XYIndexRangeIterator	cartographer/cartographer/mapping/2d/xy_index.h	/^  explicit XYIndexRangeIterator(const CellLimits& cell_limits)$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
XYIndexRangeIterator	cartographer/cartographer/mapping/2d/xy_index.h	/^class XYIndexRangeIterator$/;"	c	namespace:cartographer::mapping
XmlUnitTestResultPrinter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
XmlUnitTestResultPrinter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^class XmlUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
XyzWriterPointsProcessor	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^XyzWriterPointsProcessor::XyzWriterPointsProcessor($/;"	f	class:cartographer::io::XyzWriterPointsProcessor
XyzWriterPointsProcessor	cartographer/cartographer/io/xyz_writing_points_processor.h	/^class XyzWriterPointsProcessor : public PointsProcessor {$/;"	c	namespace:cartographer::io
YES	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  enum class Quoted { YES, NO };$/;"	m	class:cartographer::common::LuaParameterDictionary::Quoted
YES	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  enum class ReferenceCount { YES, NO };$/;"	m	class:cartographer::common::LuaParameterDictionary::ReferenceCount
YawOnlyQuaternionPlus	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	/^struct YawOnlyQuaternionPlus {$/;"	s	namespace:cartographer::mapping
ZoomPhase	ceres-solver/internal/ceres/line_search.cc	/^bool WolfeLineSearch::ZoomPhase(const FunctionSample& initial_position,$/;"	f	class:ceres::internal::WolfeLineSearch
_	ceres-solver/internal/ceres/gmock/gmock.h	/^const internal::AnythingMatcher _ = {};$/;"	m	namespace:testing
_ALL_SOURCE	cartographer/bazel/third_party/cairo/config.h	354;"	d
_ALL_SOURCE	cartographer/bazel/third_party/fontconfig/config.h	307;"	d
_DARWIN_USE_64_BIT_INODE	cartographer/bazel/third_party/cairo/config.h	405;"	d
_DARWIN_USE_64_BIT_INODE	cartographer/bazel/third_party/fontconfig/config.h	343;"	d
_GNU_SOURCE	cartographer/bazel/third_party/cairo/config.h	358;"	d
_GNU_SOURCE	cartographer/bazel/third_party/fontconfig/config.h	311;"	d
_HAS_EXCEPTIONS	ceres-solver/internal/ceres/gtest/gtest.h	723;"	d
_Known_bound	cartographer/cartographer/common/make_unique.h	/^  typedef void _Known_bound;$/;"	t	struct:cartographer::common::_Unique_if
_POSIX_PTHREAD_SEMANTICS	cartographer/bazel/third_party/cairo/config.h	362;"	d
_POSIX_PTHREAD_SEMANTICS	cartographer/bazel/third_party/fontconfig/config.h	315;"	d
_Single_object	cartographer/cartographer/common/make_unique.h	/^  typedef std::unique_ptr<T> _Single_object;$/;"	t	struct:cartographer::common::_Unique_if
_TANDEM_SOURCE	cartographer/bazel/third_party/cairo/config.h	366;"	d
_TANDEM_SOURCE	cartographer/bazel/third_party/fontconfig/config.h	319;"	d
_Unique_if	cartographer/cartographer/common/make_unique.h	/^struct _Unique_if {$/;"	s	namespace:cartographer::common
_Unique_if	cartographer/cartographer/common/make_unique.h	/^struct _Unique_if<T[N]> {$/;"	s	namespace:cartographer::common
_Unique_if	cartographer/cartographer/common/make_unique.h	/^struct _Unique_if<T[]> {$/;"	s	namespace:cartographer::common
_Unknown_bound	cartographer/cartographer/common/make_unique.h	/^  typedef std::unique_ptr<T[]> _Unknown_bound;$/;"	t	struct:cartographer::common::_Unique_if
_WIN32_WINNT	ceres-solver/internal/ceres/mutex.h	109;"	d
_XOPEN_SOURCE	ceres-solver/internal/ceres/mutex.h	128;"	d
__EXTENSIONS__	cartographer/bazel/third_party/cairo/config.h	370;"	d
__EXTENSIONS__	cartographer/bazel/third_party/fontconfig/config.h	323;"	d
__init__	cartographer/scripts/update_configuration_doc.py	/^  def __init__(self, name, package, preceding_comments):$/;"	m	class:Message
__init__	cartographer/scripts/update_configuration_doc.py	/^  def __init__(self, name_set):$/;"	m	class:Resolver
__init__	cartographer_ros/jenkins/worker.py	/^  def __init__(self, datastore_client, job_id):$/;"	m	class:Job
__init__	cartographer_ros/jenkins/worker.py	/^  def __init__(self, datastore_client, pipeline_id, run_id):$/;"	m	class:Worker
__init__	cartographer_ros/jenkins/worker.py	/^  def __init__(self, pattern):$/;"	m	class:Pattern
__repr__	cartographer_ros/jenkins/worker.py	/^  def __repr__(self):$/;"	m	class:Job	file:
__repr__	cartographer_ros/jenkins/worker.py	/^  def __repr__(self):$/;"	m	class:Worker	file:
_tmain	ceres-solver/internal/ceres/gmock_main.cc	/^GTEST_API_ int _tmain(int argc, TCHAR** argv) {$/;"	f
a	ceres-solver/include/ceres/jet.h	/^  T a;$/;"	m	struct:ceres::Jet
a_	ceres-solver/include/ceres/loss_function.h	/^  const double a_, b_, c_;$/;"	m	class:ceres::TolerantLoss
a_	ceres-solver/include/ceres/loss_function.h	/^  const double a_;$/;"	m	class:ceres::ArctanLoss
a_	ceres-solver/include/ceres/loss_function.h	/^  const double a_;$/;"	m	class:ceres::HuberLoss
a_	ceres-solver/include/ceres/loss_function.h	/^  const double a_;$/;"	m	class:ceres::ScaledLoss
a_	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^  double a_;$/;"	m	class:ceres::internal::BinaryScalarCost	file:
a_	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^  const double a_, b_;$/;"	m	class:ceres::internal::LinearCostFunction	file:
a_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  vector<vector<double> > a_;  \/\/ our vectors.$/;"	m	class:ceres::internal::BadTestTerm	file:
a_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  vector<vector<double> > a_;  \/\/ our vectors.$/;"	m	class:ceres::internal::GoodTestTerm	file:
a_	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  vector<vector<double> > a_;$/;"	m	class:ceres::internal::TestTerm	file:
a_squared_	ceres-solver/include/ceres/loss_function.h	/^  const double a_squared_;$/;"	m	class:ceres::TukeyLoss
abs	ceres-solver/include/ceres/jet.h	/^Jet<T, N> abs(const Jet<T, N>& f) {$/;"	f	namespace:ceres
abs	ceres-solver/include/ceres/jet.h	/^inline double abs     (double x) { return std::abs(x);      }$/;"	f	namespace:ceres
accumulated_candidate_model_cost_change_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  double accumulated_candidate_model_cost_change_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
accumulated_range_data_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  sensor::RangeData accumulated_range_data_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
accumulated_range_data_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  sensor::RangeData accumulated_range_data_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
accumulated_reference_model_cost_change_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  double accumulated_reference_model_cost_change_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
accumulation_started_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  std::chrono::steady_clock::time_point accumulation_started_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
accumulation_started_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  std::chrono::steady_clock::time_point accumulation_started_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
acos	ceres-solver/include/ceres/jet.h	/^Jet<T, N> acos(const Jet<T, N>& f) {$/;"	f	namespace:ceres
acos	ceres-solver/include/ceres/jet.h	/^inline double acos    (double x) { return std::acos(x);     }$/;"	f	namespace:ceres
action1_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Action<VoidResult> action1_;$/;"	m	class:testing::internal::DoBothAction::Impl
action1_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Action1 action1_;$/;"	m	class:testing::internal::DoBothAction
action2_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Action<F> action2_;$/;"	m	class:testing::internal::DoBothAction::Impl
action2_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Action2 action2_;$/;"	m	class:testing::internal::DoBothAction
action_	ceres-solver/internal/ceres/gmock/gmock.h	/^    Action<InnerFunctionType> action_;$/;"	m	class:testing::internal::WithArgsAction::Impl
action_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Action<OriginalFunction> action_;$/;"	m	class:testing::internal::IgnoreResultAction::Impl
action_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Action<F> action_;$/;"	m	class:testing::internal::OnCallSpec
action_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const A action_;$/;"	m	class:testing::internal::IgnoreResultAction
action_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const InnerAction action_;$/;"	m	class:testing::internal::WithArgsAction
action_count_checked_	ceres-solver/internal/ceres/gmock/gmock.h	/^  mutable bool action_count_checked_;  \/\/ Under mutex_.$/;"	m	class:testing::internal::ExpectationBase
active_submaps_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  ActiveSubmaps2D active_submaps_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
active_submaps_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  std::unique_ptr<ActiveSubmaps2D> active_submaps_;$/;"	m	class:cartographer::mapping::__anon75::PoseGraph2DTest	file:
active_submaps_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  mapping::ActiveSubmaps3D active_submaps_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
ad_hoc_test_result	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }$/;"	f	class:testing::internal::UnitTestImpl
ad_hoc_test_result	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const TestResult& UnitTest::ad_hoc_test_result() const {$/;"	f	class:testing::UnitTest
ad_hoc_test_result	ceres-solver/internal/ceres/gtest/gtest.h	/^  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }$/;"	f	class:testing::TestCase
ad_hoc_test_result_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::internal::UnitTestImpl	file:
ad_hoc_test_result_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::TestCase
add_fixed_frame_pose_client_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      add_fixed_frame_pose_client_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
add_imu_client_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      add_imu_client_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
add_landmark_client_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      add_landmark_client_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
add_odometry_client_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      add_odometry_client_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
add_rangefinder_client_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      add_rangefinder_client_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
address_	ceres-solver/internal/ceres/gmock/gmock.h	/^  static T* address_;$/;"	m	class:testing::DefaultValue
address_	ceres-solver/internal/ceres/gmock/gmock.h	/^T* DefaultValue<T&>::address_ = NULL;$/;"	m	class:testing::DefaultValue
adds_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
aggregations_	cartographer/cartographer/io/xray_points_processor.h	/^  std::vector<Aggregation> aggregations_;$/;"	m	class:cartographer::io::XRayPointsProcessor
algorithm_type	ceres-solver/include/ceres/covariance.h	/^    CovarianceAlgorithmType algorithm_type;$/;"	m	struct:ceres::Covariance::Options
all_covariance_blocks_	ceres-solver/internal/ceres/covariance_test.cc	/^  vector<pair<const double*, const double*> > all_covariance_blocks_;$/;"	m	class:ceres::internal::CovarianceTest	file:
all_covariance_blocks_	ceres-solver/internal/ceres/covariance_test.cc	/^  vector<pair<const double*, const double*> > all_covariance_blocks_;$/;"	m	class:ceres::internal::LargeScaleCovarianceTest	file:
all_trajectories_	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	/^  std::vector<::cartographer::mapping::proto::Trajectory> all_trajectories_;$/;"	m	class:cartographer_ros::AssetsWriter
all_trajectory_builder_options	cartographer/cartographer/io/proto_stream_deserializer.h	/^  all_trajectory_builder_options() {$/;"	f	class:cartographer::io::ProtoStreamDeserializer
all_trajectory_builder_options_	cartographer/cartographer/io/proto_stream_deserializer.h	/^  mapping::proto::SerializedData all_trajectory_builder_options_;$/;"	m	class:cartographer::io::ProtoStreamDeserializer
all_trajectory_builder_options_	cartographer/cartographer/mapping/map_builder.h	/^      all_trajectory_builder_options_;$/;"	m	class:cartographer::mapping::MapBuilder
alpha	cartographer/cartographer/io/submap_painter.h	/^    std::vector<char> alpha;$/;"	m	struct:cartographer::io::SubmapTexture::Pixels
alpha_	ceres-solver/examples/fields_of_experts.h	/^  const double alpha_;$/;"	m	class:ceres::examples::FieldsOfExpertsLoss
alpha_	ceres-solver/examples/fields_of_experts.h	/^  std::vector<double> alpha_;$/;"	m	class:ceres::examples::FieldsOfExperts
alpha_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  double alpha_;$/;"	m	class:ceres::internal::DoglegStrategy
alpha_sq_norm_	ceres-solver/internal/ceres/corrector.h	/^  double alpha_sq_norm_;$/;"	m	class:ceres::internal::Corrector
also_run_disabled_tests_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool also_run_disabled_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
analytical_cost_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  std::unique_ptr<ceres::CostFunction> analytical_cost_;$/;"	m	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
analyzed_	ceres-solver/internal/ceres/eigensparse.cc	/^  bool analyzed_;$/;"	m	class:ceres::internal::EigenSparseCholeskyTemplate	file:
angle_	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^  const double angle_;$/;"	m	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor2D
angular_perturbation_step_size	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  double angular_perturbation_step_size;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters
angular_search_window	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    const double angular_search_window;  \/\/ radians$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::SearchParameters
angular_velocity	cartographer/cartographer/sensor/imu_data.h	/^  Eigen::Vector3d angular_velocity;$/;"	m	struct:cartographer::sensor::ImuData
angular_velocity_	cartographer/cartographer/mapping/imu_tracker_test.cc	/^  Eigen::Vector3d angular_velocity_;$/;"	m	class:cartographer::mapping::__anon54::ImuTrackerTest	file:
angular_velocity_from_odometry_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  Eigen::Vector3d angular_velocity_from_odometry_ = Eigen::Vector3d::Zero();$/;"	m	class:cartographer::mapping::PoseExtrapolator
angular_velocity_from_poses_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  Eigen::Vector3d angular_velocity_from_poses_ = Eigen::Vector3d::Zero();$/;"	m	class:cartographer::mapping::PoseExtrapolator
apply_loss_function	ceres-solver/include/ceres/covariance.h	/^    bool apply_loss_function;$/;"	m	struct:ceres::Covariance::Options
apply_loss_function	ceres-solver/include/ceres/problem.h	/^    bool apply_loss_function;$/;"	m	struct:ceres::Problem::EvaluateOptions
apply_loss_function	ceres-solver/internal/ceres/evaluator.h	/^    bool apply_loss_function;$/;"	m	struct:ceres::internal::Evaluator::EvaluateOptions
approximate_eigenvalue_scale_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  double approximate_eigenvalue_scale_;$/;"	m	class:ceres::internal::LowRankInverseHessian
args_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<char*> args_;$/;"	m	class:testing::internal::Arguments	file:
argv	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  char* const* argv;  \/\/ Command-line arguments for the child's call to exec$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
arity_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  int arity_;$/;"	m	class:ceres::internal::BadTestTerm	file:
arity_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  int arity_;$/;"	m	class:ceres::internal::GoodTestTerm	file:
arity_	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  int arity_;$/;"	m	class:ceres::internal::TestTerm	file:
array_	ceres-solver/include/ceres/internal/fixed_array.h	/^  InnerContainer* const array_;$/;"	m	class:ceres::internal::FixedArray
array_	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* array_;$/;"	m	class:ceres::internal::scoped_array
array_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Element* array_;$/;"	m	class:testing::internal::NativeArray
array_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::vector<TestPartResult> array_;$/;"	m	class:testing::TestPartResultArray
arraysize	ceres-solver/include/ceres/internal/macros.h	91;"	d
asin	ceres-solver/include/ceres/jet.h	/^Jet<T, N> asin(const Jet<T, N>& f) {$/;"	f	namespace:ceres
asin	ceres-solver/include/ceres/jet.h	/^inline double asin    (double x) { return std::asin(x);     }$/;"	f	namespace:ceres
assume_full_rank_ete_	ceres-solver/internal/ceres/schur_eliminator.h	/^  bool assume_full_rank_ete_;$/;"	m	class:ceres::internal::SchurEliminator
at	cartographer/cartographer/mapping/id.h	/^  DataType& at(const IdType& id) {$/;"	f	class:cartographer::mapping::MapById
at	cartographer/cartographer/mapping/id.h	/^  const DataType& at(const IdType& id) const {$/;"	f	class:cartographer::mapping::MapById
atan	ceres-solver/include/ceres/jet.h	/^Jet<T, N> atan(const Jet<T, N>& f) {$/;"	f	namespace:ceres
atan	ceres-solver/include/ceres/jet.h	/^inline double atan    (double x) { return std::atan(x);     }$/;"	f	namespace:ceres
atan2	cartographer/cartographer/common/math.h	/^T atan2(const Eigen::Matrix<T, 2, 1>& vector) {$/;"	f	namespace:cartographer::common
atan2	ceres-solver/include/ceres/jet.h	/^Jet<T, N> atan2(const Jet<T, N>& g, const Jet<T, N>& f) {$/;"	f	namespace:ceres
atan2	ceres-solver/include/ceres/jet.h	/^inline double atan2(double y, double x) { return std::atan2(y, x); }$/;"	f	namespace:ceres
auto_diff_cost_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  std::unique_ptr<ceres::CostFunction> auto_diff_cost_;$/;"	m	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
axes	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^  axes = plot.subplot(1, 2, 1, projection='3d')$/;"	v
axes	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^  axes = plot.subplot(1, 2, 2, projection='3d')$/;"	v
b	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  scoped_array<double> b;$/;"	m	struct:ceres::internal::LinearLeastSquaresProblem
b	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  scoped_array<double> b;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
b	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  scoped_array<double> b;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
b_	ceres-solver/examples/denoising.cc	/^  double sqrta_, b_;$/;"	m	class:ceres::examples::QuadraticCostFunction	file:
b_	ceres-solver/include/ceres/loss_function.h	/^  const double a_, b_, c_;$/;"	m	class:ceres::TolerantLoss
b_	ceres-solver/include/ceres/loss_function.h	/^  const double b_;$/;"	m	class:ceres::ArctanLoss
b_	ceres-solver/include/ceres/loss_function.h	/^  const double b_;$/;"	m	class:ceres::CauchyLoss
b_	ceres-solver/include/ceres/loss_function.h	/^  const double b_;$/;"	m	class:ceres::HuberLoss
b_	ceres-solver/include/ceres/loss_function.h	/^  const double b_;$/;"	m	class:ceres::SoftLOneLoss
b_	ceres-solver/include/ceres/normal_prior.h	/^  Vector b_;$/;"	m	class:ceres::NormalPrior
b_	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^  const double a_, b_;$/;"	m	class:ceres::internal::LinearCostFunction	file:
b_	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^  scoped_array<double> b_;$/;"	m	class:ceres::internal::DynamicSparseNormalCholeskySolverTest	file:
b_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  const double* b_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
b_	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  scoped_array<double> b_;$/;"	m	class:ceres::internal::ImplicitSchurComplementTest	file:
b_	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  scoped_array<double> b_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolverTest	file:
b_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^  scoped_array<double> b_;$/;"	m	class:ceres::internal::SparseNormalCholeskySolverTest	file:
bag_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  std::unique_ptr<rosbag::Bag> bag_;$/;"	m	class:cartographer_ros::PlayableBag
bag_filename_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  const std::string bag_filename_;$/;"	m	class:cartographer_ros::PlayableBag
bag_filenames_	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	/^  std::vector<std::string> bag_filenames_;$/;"	m	class:cartographer_ros::AssetsWriter
bag_id	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^int PlayableBag::bag_id() const { return bag_id_; }$/;"	f	class:cartographer_ros::PlayableBag
bag_id_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  const int bag_id_;$/;"	m	class:cartographer_ros::PlayableBag
bag_index	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^    int bag_index;$/;"	m	struct:cartographer_ros::PlayableBagMultiplexer::BagMessageItem
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
base_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
basic_manipulator	ceres-solver/internal/ceres/gtest/gtest.h	/^      ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) {$/;"	f	class:testing::AssertionResult
batch_size_	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  int batch_size_;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
begin	cartographer/cartographer/mapping/2d/xy_index.h	/^  XYIndexRangeIterator begin() {$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
begin	cartographer/cartographer/mapping/id.h	/^  ConstIterator begin() const { return BeginOfTrajectory(0); }$/;"	f	class:cartographer::mapping::MapById
begin	cartographer/cartographer/mapping/id.h	/^  IteratorType begin() const { return begin_; }$/;"	f	class:cartographer::mapping::Range
begin	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^CompressedPointCloud::ConstIterator CompressedPointCloud::begin() const {$/;"	f	class:cartographer::sensor::CompressedPointCloud
begin	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline const_iterator begin() const { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
begin	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline iterator begin() { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
begin	ceres-solver/internal/ceres/gmock/gmock.h	/^  const_iterator begin() const { return expectations_.begin(); }$/;"	f	class:testing::ExpectationSet
begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  const_iterator begin() const { return array_; }$/;"	f	class:testing::internal::NativeArray
begin	ceres-solver/internal/ceres/gtest/gtest.h	/^  iterator begin() const { return iterator(impl_->Begin()); }$/;"	f	class:testing::internal::ParamGenerator
begin10_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T10>::iterator begin10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator begin1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator begin2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator begin3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator begin4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
begin5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator begin5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
begin6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator begin6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
begin7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator begin7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
begin8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator begin8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin9_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
begin9_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator begin9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
begin_	cartographer/cartographer/mapping/id.h	/^  IteratorType begin_;$/;"	m	class:cartographer::mapping::Range
begin_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int begin_;$/;"	m	struct:ceres::Grid1D
begin_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T begin_;$/;"	m	class:testing::internal::RangeGenerator
bits	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Bits &bits() const { return u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
bits_	ceres-solver/internal/ceres/gtest/gtest.h	/^    Bits bits_;      \/\/ The bits that represent the number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
block	ceres-solver/internal/ceres/block_structure.h	/^  Block block;$/;"	m	struct:ceres::internal::CompressedList
block_density	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    double block_density;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
block_density	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    double block_density;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
block_diagonal_EtE_inverse	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  const BlockSparseMatrix* block_diagonal_EtE_inverse() const {$/;"	f	class:ceres::internal::ImplicitSchurComplement
block_diagonal_EtE_inverse_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  scoped_ptr<BlockSparseMatrix> block_diagonal_EtE_inverse_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
block_diagonal_FtF_inverse	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  const BlockSparseMatrix* block_diagonal_FtF_inverse() const {$/;"	f	class:ceres::internal::ImplicitSchurComplement
block_diagonal_FtF_inverse_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  scoped_ptr<BlockSparseMatrix> block_diagonal_FtF_inverse_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
block_id	ceres-solver/internal/ceres/block_structure.h	/^  int block_id;$/;"	m	struct:ceres::internal::Cell
block_layout_	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  std::vector<int> block_layout_;$/;"	m	class:ceres::internal::BlockRandomAccessDenseMatrix
block_pairs_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  std::set<std::pair<int, int> > block_pairs_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
block_positions_	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  std::vector<int> block_positions_;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrix
block_size_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  std::vector<int> block_size_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
block_structure	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^const CompressedRowBlockStructure* BlockSparseMatrix::block_structure()$/;"	f	class:ceres::internal::BlockSparseMatrix
block_structure_	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  scoped_ptr<CompressedRowBlockStructure> block_structure_;$/;"	m	class:ceres::internal::BlockSparseMatrix
blocker_	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  QueueKey blocker_;$/;"	m	class:cartographer::sensor::OrderedMultiQueue
blocks_	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  const std::vector<int> blocks_;$/;"	m	class:ceres::internal::BlockRandomAccessDiagonalMatrix
blocks_	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  const std::vector<int> blocks_;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrix
blocks_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  std::vector<int> blocks_;$/;"	m	class:ceres::internal::SparseSchurComplementSolver
bool_constant	ceres-solver/internal/ceres/gtest/gtest.h	/^struct bool_constant {$/;"	s	namespace:std::tr1
boundaries_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  const BucketBoundaries boundaries_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::HistogramFamily	file:
bounding_box	cartographer/cartographer/io/xray_points_processor.h	/^  Eigen::AlignedBox3i bounding_box() const { return bounding_box_; }$/;"	f	class:cartographer::io::XRayPointsProcessor
bounding_box_	cartographer/cartographer/io/xray_points_processor.h	/^  Eigen::AlignedBox3i bounding_box_;$/;"	m	class:cartographer::io::XRayPointsProcessor
breadcrumb_start	ceres-solver/scripts/make_docs.py	/^                       else breadcrumb_start_other$/;"	v
breadcrumb_start_index	ceres-solver/scripts/make_docs.py	/^breadcrumb_start_index = breadcrumb_start_other.replace('index.html', '#')$/;"	v
break_on_failure_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool break_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
bubbles_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  std::vector<Eigen::Vector3f> bubbles_;$/;"	m	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest	file:
buffer_	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	/^  const tf2_ros::Buffer* const buffer_;$/;"	m	class:cartographer_ros::TfBridge::tf2_ros
buffer_	ceres-solver/internal/ceres/schur_eliminator.h	/^  scoped_array<double> buffer_;$/;"	m	class:ceres::internal::SchurEliminator
buffer_delay_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  const ::ros::Duration buffer_delay_;$/;"	m	class:cartographer_ros::PlayableBag
buffer_layout	ceres-solver/internal/ceres/schur_eliminator.h	/^    BufferLayoutType buffer_layout;$/;"	m	struct:ceres::internal::SchurEliminator::Chunk
buffer_size_	ceres-solver/include/ceres/local_parameterization.h	/^  int buffer_size_;$/;"	m	class:ceres::ProductParameterization
buffer_size_	ceres-solver/internal/ceres/schur_eliminator.h	/^  int buffer_size_;$/;"	m	class:ceres::internal::SchurEliminator
buffered_messages_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  std::deque<rosbag::MessageInstance> buffered_messages_;$/;"	m	class:cartographer_ros::PlayableBag
build_root	ceres-solver/scripts/make_docs.py	/^build_root = sys.argv[2]$/;"	v
c_	ceres-solver/include/ceres/loss_function.h	/^  const double a_, b_, c_;$/;"	m	class:ceres::TolerantLoss
c_	ceres-solver/include/ceres/loss_function.h	/^  const double c_;$/;"	m	class:ceres::CauchyLoss
c_	ceres-solver/include/ceres/loss_function.h	/^  const double c_;$/;"	m	class:ceres::SoftLOneLoss
c_str	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* c_str() const { return pathname_.c_str(); }$/;"	f	class:testing::internal::FilePath
cache_dir	ceres-solver/scripts/make_docs.py	/^cache_dir  = build_root + '\/doctrees'$/;"	v
cached_extrapolated_pose_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  TimedPose cached_extrapolated_pose_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
cairo_data	cartographer/cartographer/io/submap_painter.h	/^  std::vector<uint32_t> cairo_data;$/;"	m	struct:cartographer::io::SubmapSlice
call_count_	ceres-solver/internal/ceres/gmock/gmock.h	/^  int call_count_;  \/\/ How many times this expectation has been invoked.$/;"	m	class:testing::internal::ExpectationBase
callable_	ceres-solver/internal/ceres/gmock/gmock.h	/^    mutable CallableStorageType callable_;$/;"	m	class:testing::internal::ResultOfMatcher::Impl
callable_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const CallableStorageType callable_;$/;"	m	class:testing::internal::ResultOfMatcher
callback	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^    Callback callback;$/;"	m	struct:cartographer::sensor::OrderedMultiQueue::Queue
callback	cartographer_ros/cartographer_ros/scripts/tf_remove_frames.py	/^  def callback(msg):$/;"	f	function:main
callback_	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  GradientCheckingIterationCallback* callback_;$/;"	m	class:ceres::internal::__anon179::GradientCheckingCostFunction	file:
callbacks	ceres-solver/include/ceres/gradient_problem_solver.h	/^    std::vector<IterationCallback*> callbacks;$/;"	m	struct:ceres::GradientProblemSolver::Options
callbacks	ceres-solver/include/ceres/solver.h	/^    std::vector<IterationCallback*> callbacks;$/;"	m	struct:ceres::Solver::Options
callbacks	ceres-solver/internal/ceres/minimizer.h	/^    std::vector<IterationCallback*> callbacks;$/;"	m	struct:ceres::internal::Minimizer::Options
calls	ceres-solver/internal/ceres/execution_summary.h	/^  const std::map<std::string, int>& calls() const { return calls_; }$/;"	f	class:ceres::internal::ExecutionSummary
calls	ceres-solver/internal/ceres/solver_test.cc	/^  int calls;$/;"	m	struct:ceres::internal::RememberingCallback	file:
calls_	ceres-solver/internal/ceres/execution_summary.h	/^  std::map<std::string, int> calls_;$/;"	m	class:ceres::internal::ExecutionSummary
calls_	ceres-solver/internal/ceres/parameter_block_test.cc	/^  mutable int calls_;$/;"	m	class:ceres::internal::BadLocalParameterization	file:
calls_mutex_	ceres-solver/internal/ceres/execution_summary.h	/^  Mutex calls_mutex_;$/;"	m	class:ceres::internal::ExecutionSummary
camera_block_size	ceres-solver/examples/bal_problem.h	/^  int camera_block_size()      const { return use_quaternions_ ? 10 : 9; }$/;"	f	class:ceres::examples::BALProblem
camera_index	ceres-solver/examples/bal_problem.h	/^  const int* camera_index()    const { return camera_index_;             }$/;"	f	class:ceres::examples::BALProblem
camera_index	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  const int* camera_index()    const { return camera_index_; }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
camera_index_	ceres-solver/examples/bal_problem.h	/^  int* camera_index_;$/;"	m	class:ceres::examples::BALProblem
camera_index_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int* camera_index_;$/;"	m	class:BALProblem	file:
camera_index_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int* camera_index_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
cameras	ceres-solver/examples/bal_problem.h	/^  const double* cameras()      const { return parameters_;               }$/;"	f	class:ceres::examples::BALProblem
can_append_	cartographer/cartographer/mapping/id.h	/^    bool can_append_ = true;$/;"	m	struct:cartographer::mapping::MapById::MapByIndex
candidate_cost_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double candidate_cost_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
candidate_cost_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  double candidate_cost_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
candidate_x_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector candidate_x_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
capture	ceres-solver/internal/ceres/gtest/gtest.h	/^  void capture(T* ptr) {$/;"	f	class:testing::internal::linked_ptr
cardinality	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Cardinality& cardinality() const { return cardinality_; }$/;"	f	class:testing::internal::ExpectationBase
cardinality_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Cardinality cardinality_;            \/\/ The cardinality of the expectation.$/;"	m	class:testing::internal::ExpectationBase
cardinality_specified	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool cardinality_specified() const { return cardinality_specified_; }$/;"	f	class:testing::internal::ExpectationBase
cardinality_specified_	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool cardinality_specified_;$/;"	m	class:testing::internal::ExpectationBase
cartographer	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/client/map_builder_stub.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/client_server_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/load_state_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/write_state_handler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/handlers/write_state_handler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/local_trajectory_uploader.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/map_builder_context_impl.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/map_builder_server.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/sensor/serialization.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/testing/mock_local_trajectory_uploader.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/testing/mock_map_builder_context.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/internal/testing/test_helpers.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/map_builder_server_interface.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/map_builder_server_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/map_builder_server_main.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/map_builder_server_options.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/map_builder_server_options.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/blocking_queue.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/blocking_queue_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/ceres_solver_options.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/ceres_solver_options.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/configuration_file_resolver.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/configuration_file_resolver.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/configuration_files_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/fixed_ratio_sampler.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/fixed_ratio_sampler.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/histogram.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/histogram.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/lockless_queue.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/lockless_queue_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/lua_parameter_dictionary.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/lua_parameter_dictionary_test_helpers.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/make_unique.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/math.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/math_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/mutex.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/optional.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/optional_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/port.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/rate_timer.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/rate_timer_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/task.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/task.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/task_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/thread_pool.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/thread_pool.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/common/thread_pool_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/time.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/common/time.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/ground_truth/relations_text_file.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/ground_truth/relations_text_file.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/color.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/color.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/coloring_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/coloring_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/counting_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/counting_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/draw_trajectories.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/draw_trajectories.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/fake_file_writer.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/fake_file_writer.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/fake_file_writer_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/file_writer.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/file_writer.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/frame_id_filtering_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/hybrid_grid_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/image.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/image.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/intensity_to_color_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/internal/in_memory_proto_stream.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/internal/mapping_state_serialization.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/min_max_range_filtering_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/null_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/outlier_removing_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/pcd_writing_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/ply_writing_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/ply_writing_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/points_batch.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/points_batch.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/points_processor_pipeline_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/points_processor_pipeline_builder_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/probability_grid_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/probability_grid_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/proto_stream.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/proto_stream.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/proto_stream_deserializer.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/proto_stream_deserializer.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/proto_stream_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/proto_stream_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/serialization_format_migration.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/serialization_format_migration.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/serialization_format_migration_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/submap_painter.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/submap_painter.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/xray_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/xray_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/io/xyz_writing_points_processor.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/grid_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/grid_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/map_limits.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/map_limits_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/probability_grid.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/probability_grid.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/submap_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/submap_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/submap_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/2d/xy_index.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/2d/xy_index_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/3d/range_data_inserter_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/3d/submap_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/3d/submap_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/3d/submap_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/detect_floors.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/detect_floors.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/grid_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/id.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/id_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/imu_tracker.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/imu_tracker.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/imu_tracker_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_options_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_options_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/ray_casting.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/ray_casting.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_options_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_options_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/connected_components.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/connected_components.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/global_trajectory_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/kidnap_detection.cc	/^namespace cartographer{$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^namespace cartographer{$/;"	n
cartographer	cartographer/cartographer/mapping/internal/motion_filter.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/motion_filter.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/ceres_pose.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/range_data_collator.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/range_data_collator.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/submap_controller.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/submap_controller.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/testing/mock_map_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/testing/mock_pose_graph.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/testing/mock_trajectory_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/testing/test_helpers.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/local_slam_result_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/map_builder.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/map_builder.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/map_builder_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/map_builder_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/pose_extrapolator.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/pose_extrapolator.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/pose_graph.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/pose_graph.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/pose_graph_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/pose_graph_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/pose_graph_trimmer.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/pose_graph_trimmer_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/probability_values.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/probability_values.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/probability_values_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/range_data_inserter_interface.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/range_data_inserter_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/submaps.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/submaps_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/trajectory_builder_interface.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/trajectory_node.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/mapping/trajectory_node.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/mapping/trajectory_node_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/metrics/counter.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/metrics/counter.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/metrics/family_factory.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/metrics/gauge.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/metrics/gauge.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/metrics/histogram.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/metrics/histogram.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/metrics/register.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/metrics/register.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/collator_interface.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/compressed_point_cloud.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/fixed_frame_pose_data.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/fixed_frame_pose_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/imu_data.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/imu_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/collator.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/collator.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/collator_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/dispatchable.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/test_helpers.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/trajectory_collator_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/internal/voxel_filter.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/internal/voxel_filter_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/landmark_data.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/landmark_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/landmark_data_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/map_by_time.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/map_by_time_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/odometry_data.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/odometry_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/point_cloud.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/point_cloud.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/point_cloud_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/range_data.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/range_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/sensor/range_data_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/timed_point_cloud_data.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/transform/rigid_transform.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/transform/rigid_transform.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/transform/rigid_transform_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/transform/rigid_transform_test_helpers.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/transform/timestamped_transform.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/transform/timestamped_transform.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/transform/transform.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/transform/transform.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/transform/transform_interpolation_buffer.h	/^namespace cartographer {$/;"	n
cartographer	cartographer/cartographer/transform/transform_interpolation_buffer_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer	cartographer/cartographer/transform/transform_test.cc	/^namespace cartographer {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/cartographer_grpc/node_grpc_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/configuration_files_test.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/dev/trajectory_comparison_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node_options.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/pbstream_map_publisher_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/pbstream_to_ros_map_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/ros_map.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/ros_map.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/split_string.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/split_string.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/start_trajectory_main.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/submap.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/submap.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/time_conversion_test.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^namespace cartographer_ros {$/;"	n
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/urdf_reader.cc	/^namespace cartographer_ros {$/;"	n	file:
cartographer_ros	cartographer_ros/cartographer_ros/cartographer_ros/urdf_reader.h	/^namespace cartographer_ros {$/;"	n
cartographer_rviz	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^namespace cartographer_rviz {$/;"	n	file:
cartographer_rviz	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^namespace cartographer_rviz {$/;"	n
cartographer_rviz	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^namespace cartographer_rviz {$/;"	n	file:
cartographer_rviz	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^namespace cartographer_rviz {$/;"	n
cartographer_rviz	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^namespace cartographer_rviz {$/;"	n	file:
cartographer_rviz	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^namespace cartographer_rviz {$/;"	n
case_sensitive_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const bool case_sensitive_;$/;"	m	class:testing::internal::StrEqualityMatcher
cast	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid2<OtherType> cast() const {$/;"	f	class:cartographer::transform::Rigid2
cast	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid3<OtherType> cast() const {$/;"	f	class:cartographer::transform::Rigid3
catch_exceptions	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool catch_exceptions() const { return catch_exceptions_; }$/;"	f	class:testing::internal::UnitTestImpl
catch_exceptions_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^      catch_exceptions_(false) {$/;"	f	namespace:testing::internal
catch_exceptions_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
catch_exceptions_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::UnitTestImpl	file:
cc_	ceres-solver/internal/ceres/suitesparse.h	/^  cholmod_common cc_;$/;"	m	class:ceres::internal::SuiteSparse
ceil	ceres-solver/include/ceres/jet.h	/^Jet<T, N> ceil(const Jet<T, N>& f) {$/;"	f	namespace:ceres
ceil	ceres-solver/include/ceres/jet.h	/^inline double ceil    (double x) { return std::ceil(x);     }$/;"	f	namespace:ceres
cell_indices_per_depth	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  std::vector<std::vector<Eigen::Array3i>> cell_indices_per_depth;$/;"	m	struct:cartographer::mapping::scan_matching::DiscreteScan3D	file:
cell_infos_	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  scoped_array<CellInfo> cell_infos_;$/;"	m	class:ceres::internal::BlockRandomAccessDenseMatrix
cell_limits	cartographer/cartographer/mapping/2d/map_limits.h	/^  const CellLimits& cell_limits() const { return cell_limits_; }$/;"	f	class:cartographer::mapping::MapLimits
cell_limits_	cartographer/cartographer/mapping/2d/map_limits.h	/^  CellLimits cell_limits_;$/;"	m	class:cartographer::mapping::MapLimits
cell_values_	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  std::vector<std::pair<std::pair<int, int>, double*> > cell_values_;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrix
cells	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^  const std::map<CellId, StoredType>& cells() const { return cells_; }$/;"	f	class:cartographer::mapping::__anon82::SubmapCoverageGrid2D
cells	ceres-solver/internal/ceres/block_structure.h	/^  std::vector<Cell> cells;$/;"	m	struct:ceres::internal::CompressedList
cells_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^  std::map<CellId, StoredType> cells_;$/;"	m	class:cartographer::mapping::__anon82::SubmapCoverageGrid2D	file:
cells_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  std::vector<uint8> cells_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
centers_	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^  std::vector<int> centers_;$/;"	m	class:ceres::internal::CanonicalViewsTest	file:
ceres	ceres-solver/examples/bal_problem.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/bal_problem.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/bundle_adjuster.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/denoising.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/fields_of_experts.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/fields_of_experts.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/more_garbow_hillstrom.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/nist.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/pgm_image.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/random.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/common/read_g2o.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/pose_graph_2d/angle_local_parameterization.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/pose_graph_2d/normalize_angle.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/pose_graph_2d/types.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/slam/pose_graph_3d/types.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/examples/snavely_reprojection_error.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/autodiff_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/conditioned_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/cost_function_to_functor.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/covariance.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/crs_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/cubic_interpolation.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/dynamic_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/fpclassify.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/gradient_checker.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/gradient_problem.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/gradient_problem_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/autodiff.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/eigen.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/fixed_array.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/manual_constructor.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/numeric_diff.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/port.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/scoped_ptr.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/iteration_callback.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/jet.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/local_parameterization.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/loss_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/normal_prior.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/numeric_diff_options.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/ordered_groups.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/problem.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/rotation.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/sized_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/include/ceres/types.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/array_utils.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/array_utils.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/array_utils_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/autodiff_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/blas.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/blas.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_evaluate_preparer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_evaluate_preparer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_jacobi_preconditioner.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_jacobian_writer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_jacobian_writer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_random_access_dense_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_random_access_dense_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_random_access_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_random_access_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_structure.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/block_structure.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/c_api_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/callbacks.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/callbacks.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/canonical_views_clustering.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/casts.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/cgnr_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/cgnr_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/collections_port.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/compressed_row_jacobian_writer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/conditioned_cost_function.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/conjugate_gradients_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/conjugate_gradients_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/conjugate_gradients_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/corrector.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/corrector.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/corrector_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/covariance.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/covariance_impl.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/covariance_impl.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/covariance_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/cxsparse.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/cxsparse.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dense_linear_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dense_normal_cholesky_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dense_normal_cholesky_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dense_qr_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dense_qr_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/detect_structure.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/detect_structure.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/detect_structure_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dogleg_strategy.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dogleg_strategy.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_compressed_row_finalizer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/eigensparse.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/eigensparse.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/evaluator.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/evaluator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/evaluator_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/evaluator_test_utils.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/evaluator_test_utils.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/execution_summary.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/file.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/file.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/function_sample.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/function_sample.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_2.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_6.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_9.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_8.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_9.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_d_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_2.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/partitioned_matrix_view_d_d_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_2.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_6.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_9.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_8.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_9.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_2_d_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_2.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_3.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_4.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/generated/schur_eliminator_d_d_d.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_checker.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_checker_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_problem.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/gradient_problem_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/graph.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/graph_algorithms.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/graph_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/householder_vector.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/householder_vector_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/implicit_schur_complement.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/inner_product_computer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/inner_product_computer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/inner_product_computer_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/integral_types.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/invert_psd_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/is_close.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/is_close.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/is_close_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/iterative_schur_complement_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/jet_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/lapack.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/lapack.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/line_search.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/line_search.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/line_search_direction.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/line_search_direction.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/line_search_minimizer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/line_search_minimizer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/line_search_minimizer_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/line_search_preprocessor.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/line_search_preprocessor.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/linear_operator.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/linear_operator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/linear_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/linear_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/local_parameterization.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/local_parameterization_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/loss_function.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/loss_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/low_rank_inverse_hessian.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/map_util.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/minimizer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/minimizer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/minimizer_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/mutex.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/normal_prior.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/normal_prior_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/ordered_groups_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/parameter_block.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/parameter_block_ordering.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/parameter_block_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/partitioned_matrix_view.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/polynomial.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/polynomial.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/polynomial_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/preconditioner.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/preconditioner.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/preprocessor.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/preprocessor.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/problem.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/problem_impl.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/problem_impl.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/problem_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/program.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/program.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/program_evaluator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/program_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/random.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/reorder_program.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/reorder_program.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/reorder_program_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/residual_block.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/residual_block.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/residual_block_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/residual_block_utils.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/residual_block_utils.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/rotation_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_complement_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_complement_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_eliminator.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_eliminator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/schur_templates.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/schur_templates.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/scratch_evaluate_preparer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/scratch_evaluate_preparer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/single_linkage_clustering.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/single_linkage_clustering.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/single_linkage_clustering_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/small_blas.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/small_blas_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/solver_utils.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/solver_utils.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/sparse_cholesky.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/sparse_cholesky.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/split.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/split.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/stl_util.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/stringprintf.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/stringprintf.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/suitesparse.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/suitesparse.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/system_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/test_util.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/test_util.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_minimizer.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_preprocessor.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_step_evaluator.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/trust_region_strategy.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/trust_region_strategy.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/types.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/visibility.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/visibility.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^namespace ceres {$/;"	n
ceres	ceres-solver/internal/ceres/visibility_based_preconditioner_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/visibility_test.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/wall_time.cc	/^namespace ceres {$/;"	n	file:
ceres	ceres-solver/internal/ceres/wall_time.h	/^namespace ceres {$/;"	n
ceres_cost_function_t	ceres-solver/include/ceres/c_api.h	/^typedef int (*ceres_cost_function_t)(void* user_data,$/;"	t
ceres_create_arctan_loss_function_data	ceres-solver/internal/ceres/c_api.cc	/^void* ceres_create_arctan_loss_function_data(double a) {$/;"	f
ceres_create_cauchy_loss_function_data	ceres-solver/internal/ceres/c_api.cc	/^void* ceres_create_cauchy_loss_function_data(double a) {$/;"	f
ceres_create_huber_loss_function_data	ceres-solver/internal/ceres/c_api.cc	/^void* ceres_create_huber_loss_function_data(double a) {$/;"	f
ceres_create_problem	ceres-solver/internal/ceres/c_api.cc	/^ceres_problem_t* ceres_create_problem() {$/;"	f
ceres_create_softl1_loss_function_data	ceres-solver/internal/ceres/c_api.cc	/^void* ceres_create_softl1_loss_function_data(double a) {$/;"	f
ceres_create_tolerant_loss_function_data	ceres-solver/internal/ceres/c_api.cc	/^void* ceres_create_tolerant_loss_function_data(double a, double b) {$/;"	f
ceres_free_problem	ceres-solver/internal/ceres/c_api.cc	/^void ceres_free_problem(ceres_problem_t* problem) {$/;"	f
ceres_free_stock_loss_function_data	ceres-solver/internal/ceres/c_api.cc	/^void ceres_free_stock_loss_function_data(void* loss_function_data) {$/;"	f
ceres_init	ceres-solver/internal/ceres/c_api.cc	/^void ceres_init() {$/;"	f
ceres_loss_function_t	ceres-solver/include/ceres/c_api.h	/^typedef void (*ceres_loss_function_t)(void* user_data,$/;"	t
ceres_problem_add_residual_block	ceres-solver/internal/ceres/c_api.cc	/^ceres_residual_block_id_t* ceres_problem_add_residual_block($/;"	f
ceres_problem_t	ceres-solver/include/ceres/c_api.h	/^typedef struct ceres_problem_s ceres_problem_t;$/;"	t	typeref:struct:ceres_problem_s
ceres_residual_block_id_t	ceres-solver/include/ceres/c_api.h	/^typedef struct ceres_residual_block_id_s ceres_residual_block_id_t;$/;"	t	typeref:struct:ceres_residual_block_id_s
ceres_scan_matcher_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  scan_matching::CeresScanMatcher2D ceres_scan_matcher_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
ceres_scan_matcher_	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^  std::unique_ptr<CeresScanMatcher2D> ceres_scan_matcher_;$/;"	m	class:cartographer::mapping::scan_matching::__anon81::CeresScanMatcherTest	file:
ceres_scan_matcher_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  std::unique_ptr<scan_matching::CeresScanMatcher3D> ceres_scan_matcher_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
ceres_scan_matcher_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  std::unique_ptr<CeresScanMatcher3D> ceres_scan_matcher_;$/;"	m	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest	file:
ceres_scan_matcher_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  scan_matching::CeresScanMatcher2D ceres_scan_matcher_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
ceres_scan_matcher_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  scan_matching::CeresScanMatcher3D ceres_scan_matcher_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
ceres_solve	ceres-solver/internal/ceres/c_api.cc	/^void ceres_solve(ceres_problem_t* c_problem) {$/;"	f
ceres_solver_options_	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	/^  ceres::Solver::Options ceres_solver_options_;$/;"	m	class:cartographer::mapping::scan_matching::CeresScanMatcher2D
ceres_solver_options_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	/^  ceres::Solver::Options ceres_solver_options_;$/;"	m	class:cartographer::mapping::scan_matching::CeresScanMatcher3D
ceres_stock_loss_function	ceres-solver/internal/ceres/c_api.cc	/^void ceres_stock_loss_function(void* user_data,$/;"	f
certified_cost	ceres-solver/examples/nist.cc	/^  double certified_cost()   const { return certified_cost_; }$/;"	f	class:ceres::examples::NISTProblem
certified_cost_	ceres-solver/examples/nist.cc	/^  double certified_cost_;$/;"	m	class:ceres::examples::NISTProblem	file:
check_gradients	ceres-solver/include/ceres/solver.h	/^    bool check_gradients;$/;"	m	struct:ceres::Solver::Options
child_handle_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  AutoHandle child_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
child_pid_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  pid_t child_pid_;$/;"	m	class:testing::internal::ForkingDeathTest	file:
chunk_outer_product_buffer_	ceres-solver/internal/ceres/schur_eliminator.h	/^  scoped_array<double> chunk_outer_product_buffer_;$/;"	m	class:ceres::internal::SchurEliminator
chunks_	ceres-solver/internal/ceres/schur_eliminator.h	/^  std::vector<Chunk> chunks_;$/;"	m	class:ceres::internal::SchurEliminator
client_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ros::ServiceClient client_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
client_channel_	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  std::shared_ptr<::grpc::Channel> client_channel_;$/;"	m	class:cartographer::cloud::MapBuilderStub
client_channel_	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  std::shared_ptr<::grpc::Channel> client_channel_;$/;"	m	class:cartographer::cloud::PoseGraphStub
client_channel_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^  std::shared_ptr<::grpc::Channel> client_channel_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
client_channel_	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  std::shared_ptr<::grpc::Channel> client_channel_;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
clone_	ceres-solver/internal/ceres/gtest/gtest.h	/^  void (NativeArray::*clone_)(const Element*, size_t);$/;"	m	class:testing::internal::NativeArray
close	ceres-solver/examples/libmv_bundle_adjuster.cc	99;"	d	file:
close_fd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int close_fd;       \/\/ File descriptor to close; the read end of a pipe$/;"	m	struct:testing::internal::ExecDeathTestArgs	file:
cloud	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/client/map_builder_stub.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/client_server_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/load_state_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/write_state_handler.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/handlers/write_state_handler.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/local_trajectory_uploader.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/map_builder_context_impl.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/map_builder_server.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/sensor/serialization.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/sensor/serialization.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/testing/mock_local_trajectory_uploader.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/testing/mock_map_builder_context.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/internal/testing/test_helpers.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/map_builder_server_interface.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/map_builder_server_interface.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/map_builder_server_main.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/map_builder_server_options.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/map_builder_server_options.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cloud	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^namespace cloud {$/;"	n	namespace:cartographer
cloud	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^namespace cloud {$/;"	n	namespace:cartographer	file:
cluster_membership_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  std::vector<int> cluster_membership_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
cluster_pairs_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  HashSet<std::pair<int, int> > cluster_pairs_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
code_location_	ceres-solver/internal/ceres/gtest/gtest.h	/^  CodeLocation code_location_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
coeff_	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  Eigen::Matrix3d coeff_;$/;"	m	class:ceres::internal::BiCubicInterpolatorTest	file:
col	ceres-solver/internal/ceres/inner_product_computer.h	/^    int col;$/;"	m	struct:ceres::internal::InnerProductComputer::ProductTerm
col_begin_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int col_begin_;$/;"	m	struct:ceres::Grid2D
col_blocks	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  const std::vector<int>& col_blocks() const { return col_blocks_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
col_blocks_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<int> col_blocks_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
col_end_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int col_end_;$/;"	m	struct:ceres::Grid2D
color_	cartographer/cartographer/io/coloring_points_processor.h	/^  const FloatColor color_;$/;"	m	class:cartographer::io::ColoringPointsProcessor
color_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string color_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
colors	cartographer/cartographer/io/points_batch.h	/^  std::vector<FloatColor> colors;$/;"	m	struct:cartographer::io::PointsBatch
cols	ceres-solver/include/ceres/crs_matrix.h	/^  std::vector<int> cols;$/;"	m	struct:ceres::CRSMatrix
cols	ceres-solver/internal/ceres/block_structure.h	/^  std::vector<Block> cols;$/;"	m	struct:ceres::internal::CompressedRowBlockStructure
cols	ceres-solver/internal/ceres/block_structure.h	/^  std::vector<CompressedColumn> cols;$/;"	m	struct:ceres::internal::CompressedColumnBlockStructure
cols	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^  vector<int> cols;$/;"	m	class:ceres::internal::SolveUpperTriangularTest	file:
cols	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^  const int* cols;$/;"	m	struct:ceres::internal::__anon189::RowColLessThan	file:
cols	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  const int* cols() const { return &cols_[0]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
cols	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  const int* cols()      const { return cols_.get();       }$/;"	f	class:ceres::internal::TripletSparseMatrix
cols_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<int> cols_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
cols_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  scoped_array<int> cols_;$/;"	m	class:ceres::internal::TripletSparseMatrix
column_bounds_	ceres-solver/internal/ceres/covariance_test.cc	/^  BoundsMap column_bounds_;$/;"	m	class:ceres::internal::CovarianceTest	file:
column_data	cartographer/cartographer/io/xray_points_processor.h	/^    std::map<std::pair<int, int>, ColumnData> column_data;$/;"	m	struct:cartographer::io::XRayPointsProcessor::Aggregation
common	cartographer/cartographer/common/blocking_queue.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/blocking_queue_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/ceres_solver_options.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/ceres_solver_options.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/configuration_file_resolver.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/configuration_file_resolver.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/fixed_ratio_sampler.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/fixed_ratio_sampler.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/fixed_ratio_sampler_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/histogram.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/histogram.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/lockless_queue.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/lockless_queue_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/lua_parameter_dictionary.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/lua_parameter_dictionary_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/lua_parameter_dictionary_test_helpers.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/make_unique.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/math.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/math_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/mutex.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/optional.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/optional_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/port.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/rate_timer.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/rate_timer_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/task.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/task.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/task_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/thread_pool.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/thread_pool.h	/^namespace common {$/;"	n	namespace:cartographer
common	cartographer/cartographer/common/thread_pool_test.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/time.cc	/^namespace common {$/;"	n	namespace:cartographer	file:
common	cartographer/cartographer/common/time.h	/^namespace common {$/;"	n	namespace:cartographer
common_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
common_start_time_per_trajectory_	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  std::map<int, common::Time> common_start_time_per_trajectory_;$/;"	m	class:cartographer::sensor::OrderedMultiQueue
comparator_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Comparator comparator_;$/;"	m	class:testing::internal::WhenSortedByMatcher::Impl
comparator_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Comparator comparator_;$/;"	m	class:testing::internal::WhenSortedByMatcher
compressed_point_cloud_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  const CompressedPointCloud* compressed_point_cloud_;$/;"	m	class:cartographer::sensor::CompressedPointCloud::ConstIterator
conditioners_	ceres-solver/include/ceres/conditioned_cost_function.h	/^  std::vector<CostFunction*> conditioners_;$/;"	m	class:ceres::ConditionedCostFunction
configuration_files_directories_	cartographer/cartographer/common/configuration_file_resolver.h	/^  std::vector<std::string> configuration_files_directories_;$/;"	m	class:cartographer::common::ConfigurationFileResolver
connected_components_	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	/^  mutable ConnectedComponents connected_components_;$/;"	m	class:cartographer::mapping::TrajectoryConnectivityState
const_iterator	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef T const* const_iterator;$/;"	t	class:ceres::internal::FixedArray
const_iterator	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Expectation::Set::const_iterator const_iterator;$/;"	t	class:testing::ExpectationSet
const_iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef const Element* const_iterator;$/;"	t	class:testing::internal::NativeArray
const_reference	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef T const& const_reference;$/;"	t	class:ceres::internal::FixedArray
const_reference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef const type const_reference;$/;"	t	class:testing::internal::StlContainerView
const_reference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef const type& const_reference;$/;"	t	class:testing::internal::StlContainerView
constancy_mask_	ceres-solver/include/ceres/local_parameterization.h	/^  std::vector<char> constancy_mask_;$/;"	m	class:ceres::SubsetParameterization
constant_data	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^    std::shared_ptr<const TrajectoryNode::Data> constant_data;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder2D::InsertionResult
constant_data	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^    std::shared_ptr<const mapping::TrajectoryNode::Data> constant_data;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder3D::InsertionResult
constant_data	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    std::shared_ptr<const TrajectoryNode::Data> constant_data;$/;"	m	struct:cartographer::mapping::TrajectoryBuilderInterface::InsertionResult
constant_data	cartographer/cartographer/mapping/trajectory_node.h	/^  std::shared_ptr<const Data> constant_data;$/;"	m	struct:cartographer::mapping::TrajectoryNode
constant_parameter_blocks_	ceres-solver/internal/ceres/covariance_impl.h	/^  std::set<const double*> constant_parameter_blocks_;$/;"	m	class:ceres::internal::CovarianceImpl
constant_pose_data	cartographer/cartographer/mapping/trajectory_node.h	/^  common::optional<ConstantPoseData> constant_pose_data;$/;"	m	struct:cartographer::mapping::TrajectoryNodePose
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem14::constrained_optimal_cost = 0.15567008e1;$/;"	m	class:ceres::examples::TestProblem14	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem18::constrained_optimal_cost = 0.53209865e-3;$/;"	m	class:ceres::examples::TestProblem18	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem10::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem10	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem11::constrained_optimal_cost = 0.58281431e-4;$/;"	m	class:ceres::examples::TestProblem11	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem12::constrained_optimal_cost = 0.30998153e-5;$/;"	m	class:ceres::examples::TestProblem12	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem13::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem13	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem15::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem15	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem16::constrained_optimal_cost = 0.88860479e5;$/;"	m	class:ceres::examples::TestProblem16	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem17::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem17	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem19::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem19	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem1::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem1	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem2::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem2	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem3::constrained_optimal_cost = 0.15125900e-9;$/;"	m	class:ceres::examples::TestProblem3	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem4::constrained_optimal_cost = 0.78400000e3;$/;"	m	class:ceres::examples::TestProblem4	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem5::constrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem5	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem6::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem6	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem7::constrained_optimal_cost = 0.99042212;$/;"	m	class:ceres::examples::TestProblem7	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem8::constrained_optimal_cost =$/;"	m	class:ceres::examples::TestProblem8	file:
constrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem9::constrained_optimal_cost = 0.11279300e-7;$/;"	m	class:ceres::examples::TestProblem9	file:
constraint_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  PoseGraphInterface::Constraint::Pose constraint_;$/;"	m	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
constraint_builder_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^  std::unique_ptr<ConstraintBuilder2D> constraint_builder_;$/;"	m	class:cartographer::mapping::constraints::__anon71::ConstraintBuilder2DTest	file:
constraint_builder_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^  std::unique_ptr<ConstraintBuilder3D> constraint_builder_;$/;"	m	class:cartographer::mapping::constraints::__anon72::ConstraintBuilder3DTest	file:
constraint_list_publisher_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::Publisher constraint_list_publisher_;$/;"	m	class:cartographer_ros::Node
constraints	cartographer/cartographer/cloud/internal/client/pose_graph_stub.cc	/^PoseGraphStub::constraints() const {$/;"	f	class:cartographer::cloud::PoseGraphStub
constraints	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^std::vector<PoseGraphInterface::Constraint> PoseGraph2D::constraints() const {$/;"	f	class:cartographer::mapping::PoseGraph2D
constraints	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^std::vector<PoseGraphInterface::Constraint> PoseGraph3D::constraints() const {$/;"	f	class:cartographer::mapping::PoseGraph3D
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder.cc	/^namespace constraints {$/;"	n	namespace:cartographer::mapping	file:
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder.h	/^namespace constraints {$/;"	n	namespace:cartographer::mapping
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^namespace constraints {$/;"	n	namespace:cartographer::mapping	file:
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^namespace constraints {$/;"	n	namespace:cartographer::mapping
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^namespace constraints {$/;"	n	namespace:cartographer::mapping	file:
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^namespace constraints {$/;"	n	namespace:cartographer::mapping	file:
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^namespace constraints {$/;"	n	namespace:cartographer::mapping
constraints	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^namespace constraints {$/;"	n	namespace:cartographer::mapping	file:
constraints_	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  std::vector<PoseGraphInterface::Constraint> constraints_;$/;"	m	class:cartographer::mapping::testing::FakeTrimmable
container_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ContainerType container_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator
content_	cartographer/cartographer/io/fake_file_writer.h	/^  std::shared_ptr<std::vector<char>> content_;$/;"	m	class:cartographer::io::FakeFileWriter
copy	ceres-solver/internal/ceres/gtest/gtest.h	/^  template <typename U> void copy(linked_ptr<U> const* ptr) {$/;"	f	class:testing::internal::linked_ptr
copyright	cartographer/docs/source/conf.py	/^copyright = u'2016 The Cartographer Authors'$/;"	v
copyright	cartographer_ros/docs/source/conf.py	/^copyright = u'2016 The Cartographer Authors'$/;"	v
copyright	ceres-solver/docs/source/conf.py	/^copyright = u'2016 Google Inc'$/;"	v
correspondence_cost_cells	cartographer/cartographer/mapping/2d/grid_2d.h	/^  const std::vector<uint16>& correspondence_cost_cells() const {$/;"	f	class:cartographer::mapping::Grid2D
correspondence_cost_cells_	cartographer/cartographer/mapping/2d/grid_2d.h	/^  std::vector<uint16> correspondence_cost_cells_;$/;"	m	class:cartographer::mapping::Grid2D
corridor_length	ceres-solver/examples/robot_pose_mle.cc	/^  const double corridor_length;$/;"	m	struct:RangeConstraint	file:
cos	ceres-solver/include/ceres/jet.h	/^Jet<T, N> cos(const Jet<T, N>& f) {$/;"	f	namespace:ceres
cos	ceres-solver/include/ceres/jet.h	/^inline double cos     (double x) { return std::cos(x);      }$/;"	f	namespace:ceres
cosh	ceres-solver/include/ceres/jet.h	/^Jet<T, N> cosh(const Jet<T, N>& f) {$/;"	f	namespace:ceres
cosh	ceres-solver/include/ceres/jet.h	/^inline double cosh    (double x) { return std::cosh(x);     }$/;"	f	namespace:ceres
cost	ceres-solver/include/ceres/iteration_callback.h	/^  double cost;$/;"	m	struct:ceres::IterationSummary
cost	ceres-solver/internal/ceres/evaluator_test_utils.h	/^  double cost;$/;"	m	struct:ceres::internal::ExpectedEvaluation
cost	ceres-solver/internal/ceres/line_search_minimizer.h	/^    double cost;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
cost	ceres-solver/internal/ceres/program_evaluator.h	/^    double cost;$/;"	m	struct:ceres::internal::ProgramEvaluator::EvaluateScratch
cost_change	ceres-solver/include/ceres/iteration_callback.h	/^  double cost_change;$/;"	m	struct:ceres::IterationSummary
cost_evaluation_time_in_seconds	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double cost_evaluation_time_in_seconds;$/;"	m	struct:ceres::GradientProblemSolver::Summary
cost_evaluation_time_in_seconds	ceres-solver/internal/ceres/line_search.h	/^    double cost_evaluation_time_in_seconds;$/;"	m	struct:ceres::internal::LineSearch::Summary
cost_function	ceres-solver/internal/ceres/residual_block.h	/^  const CostFunction* cost_function() const { return cost_function_; }$/;"	f	class:ceres::internal::ResidualBlock
cost_function_	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	/^  internal::scoped_ptr<CostFunction> cost_function_;$/;"	m	class:ceres::DynamicCostFunctionToFunctor
cost_function_	ceres-solver/internal/ceres/c_api.cc	/^  ceres_cost_function_t cost_function_;$/;"	m	class:CallbackCostFunction	file:
cost_function_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  scoped_ptr<CostFunction> cost_function_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
cost_function_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  scoped_ptr<CostFunction> cost_function_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
cost_function_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  scoped_ptr<CostFunction> cost_function_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
cost_function_	ceres-solver/internal/ceres/residual_block.h	/^  const CostFunction* cost_function_;$/;"	m	class:ceres::internal::ResidualBlock
cost_function_ownership	ceres-solver/include/ceres/problem.h	/^    Ownership cost_function_ownership;$/;"	m	struct:ceres::Problem::Options
cost_functions_to_delete_	ceres-solver/internal/ceres/problem_impl.h	/^  std::vector<CostFunction*> cost_functions_to_delete_;$/;"	m	class:ceres::internal::ProblemImpl
cost_functor_	ceres-solver/include/ceres/cost_function_to_functor.h	/^  DynamicCostFunctionToFunctor cost_functor_;$/;"	m	class:ceres::CostFunctionToFunctor
count	cartographer/cartographer/io/xray_points_processor.h	/^    uint32_t count = 0;$/;"	m	struct:cartographer::io::XRayPointsProcessor::ColumnData
count	cartographer/cartographer/mapping/3d/submap_3d.cc	/^  int count = 0;$/;"	m	struct:cartographer::mapping::__anon106::PixelData	file:
count	ceres-solver/internal/ceres/gmock/gmock.h	/^  size_t count() const { return matchers_.size(); }$/;"	f	class:testing::internal::ElementsAreMatcherImpl
counter	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^        int counter = 0;$/;"	m	class:cartographer::mapping::KidnapDetection
counters_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^      counters_;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
covariance_matrix	ceres-solver/internal/ceres/covariance_impl.h	/^  const CompressedRowSparseMatrix* covariance_matrix() const {$/;"	f	class:ceres::internal::CovarianceImpl
covariance_matrix_	ceres-solver/internal/ceres/covariance_impl.h	/^  scoped_ptr<CompressedRowSparseMatrix> covariance_matrix_;$/;"	m	class:ceres::internal::CovarianceImpl
create_job_selector	cartographer_ros/jenkins/worker.py	/^def create_job_selector(worker_id, num_workers):$/;"	f
creation_task_handle	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^    std::weak_ptr<common::Task> creation_task_handle;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder2D::SubmapScanMatcher
creation_task_handle	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^    std::weak_ptr<common::Task> creation_task_handle;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder3D::SubmapScanMatcher
critical_section_	ceres-solver/internal/ceres/gtest/gtest.h	/^  GTEST_CRITICAL_SECTION* critical_section_;$/;"	m	class:std::tr1::Mutex
critical_section_init_phase_	ceres-solver/internal/ceres/gtest/gtest.h	/^  long critical_section_init_phase_;  \/\/ NOLINT$/;"	m	class:std::tr1::Mutex
crsm	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^  scoped_ptr<CompressedRowSparseMatrix> crsm;$/;"	m	class:ceres::internal::CompressedRowSparseMatrixTest	file:
crsm	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  scoped_ptr<CompressedRowSparseMatrix> crsm;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
cs_	ceres-solver/internal/ceres/cxsparse.h	/^  CXSparse cs_;$/;"	m	class:ceres::internal::CXSparseCholesky
cumulative_time_in_seconds	ceres-solver/include/ceres/iteration_callback.h	/^  double cumulative_time_in_seconds;$/;"	m	struct:ceres::IterationSummary
current10_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T10>::iterator current10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T1>::iterator current1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T2>::iterator current2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T3>::iterator current3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T4>::iterator current4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T5>::iterator current5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T6>::iterator current6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T7>::iterator current7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T8>::iterator current8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current9_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current9_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ParamGenerator<T9>::iterator current9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
current_	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    const ValueType* current_;$/;"	m	class:cartographer::mapping::FlatGrid::Iterator
current_alpha_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  float current_alpha_ = 0.f;$/;"	m	class:cartographer_rviz::DrawableSubmap
current_block_coordinates_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  Eigen::Vector3i current_block_coordinates_;$/;"	m	class:cartographer::sensor::CompressedPointCloud::ConstIterator
current_cost_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  double current_cost_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
current_data_	cartographer/cartographer/mapping/id.h	/^    typename std::map<int, DataType>::const_iterator current_data_;$/;"	m	class:cartographer::mapping::MapById::ConstIterator
current_end_	cartographer/cartographer/mapping/internal/range_data_collator.h	/^  common::Time current_end_ = common::Time::min();$/;"	m	class:cartographer::mapping::RangeDataCollator
current_point_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  Eigen::Vector3f current_point_;$/;"	m	class:cartographer::sensor::CompressedPointCloud::ConstIterator
current_pose_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  transform::Rigid2d current_pose_;$/;"	m	class:cartographer::mapping::__anon75::PoseGraph2DTest	file:
current_spec	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockSpec<F>& current_spec() { return current_spec_; }$/;"	f	class:testing::internal::FunctionMockerBase
current_spec_	ceres-solver/internal/ceres/gmock/gmock.h	/^  MockSpec<F> current_spec_;$/;"	m	class:testing::internal::FunctionMockerBase
current_start_	cartographer/cartographer/mapping/internal/range_data_collator.h	/^  common::Time current_start_ = common::Time::min();$/;"	m	class:cartographer::mapping::RangeDataCollator
current_submap_count_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  uint16 current_submap_count_ = 0;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
current_subscription_index_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  int current_subscription_index_ = 0;$/;"	m	class:cartographer::cloud::MapBuilderServer
current_test_case	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const TestCase* current_test_case() const { return current_test_case_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_case_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestCase* current_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	file:
current_test_info	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestInfo* current_test_info() { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const TestInfo* current_test_info() const { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl
current_test_info_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestInfo* current_test_info_;$/;"	m	class:testing::internal::UnitTestImpl	file:
current_test_result	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestResult* UnitTestImpl::current_test_result() {$/;"	f	class:testing::internal::UnitTestImpl
current_trajectory_	cartographer/cartographer/mapping/id.h	/^    typename std::map<int, MapByIndex>::const_iterator current_trajectory_;$/;"	m	class:cartographer::mapping::MapById::ConstIterator
current_trajectory_	cartographer/cartographer/mapping/id.h	/^    typename std::map<int, MapByIndex>::const_iterator current_trajectory_;$/;"	m	class:cartographer::mapping::MapById::ConstTrajectoryIterator
current_trajectory_	cartographer/cartographer/sensor/map_by_time.h	/^        current_trajectory_;$/;"	m	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
current_value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    ParamType current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
data	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    std::unique_ptr<sensor::Data> data;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::Data
data	cartographer/cartographer/common/lockless_queue.h	/^    std::unique_ptr<T> data;$/;"	m	struct:cartographer::common::LocklessQueue::Node
data	cartographer/cartographer/mapping/id.h	/^    const DataType& data;$/;"	m	struct:cartographer::mapping::MapById::IdDataReference
data	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  Data& data() { return *data_; }$/;"	f	class:cartographer::mapping::optimization::CeresPose
data	cartographer/cartographer/sensor/internal/dispatchable.h	/^  const DataType &data() const { return data_; }$/;"	f	class:cartographer::sensor::Dispatchable
data	cartographer/cartographer/sensor/internal/test_helpers.h	/^  std::unique_ptr<sensor::Data> data;$/;"	m	struct:cartographer::sensor::test::CollatorInput
data	ceres-solver/examples/curve_fitting.c	/^double data[] = {$/;"	v
data	ceres-solver/examples/curve_fitting.cc	/^const double data[] = {$/;"	v
data	ceres-solver/examples/pgm_image.h	/^const std::vector<Real>& PGMImage<Real>::data() const {$/;"	f	class:ceres::examples::PGMImage
data	ceres-solver/examples/robust_curve_fitting.cc	/^const double data[] = {$/;"	v
data	ceres-solver/internal/ceres/c_api_test.cc	/^double data[] = {$/;"	v
data_	cartographer/cartographer/mapping/id.h	/^    std::map<int, DataType> data_;$/;"	m	struct:cartographer::mapping::MapById::MapByIndex
data_	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  std::shared_ptr<Data> data_;$/;"	m	class:cartographer::mapping::optimization::CeresPose
data_	cartographer/cartographer/sensor/internal/dispatchable.h	/^  const DataType data_;$/;"	m	class:cartographer::sensor::Dispatchable
data_	cartographer/cartographer/sensor/map_by_time.h	/^  std::map<int, std::map<common::Time, DataType>> data_;$/;"	m	class:cartographer::sensor::MapByTime
data_	ceres-solver/examples/pgm_image.h	/^  std::vector<Real> data_;$/;"	m	class:ceres::examples::PGMImage
data_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const T* data_;$/;"	m	struct:ceres::Grid1D
data_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const T* data_;$/;"	m	struct:ceres::Grid2D
data_	ceres-solver/internal/ceres/gtest/gtest.h	/^  AssertHelperData* const data_;$/;"	m	class:testing::internal::AssertHelper
data_list_head_	cartographer/cartographer/common/lockless_queue.h	/^  Node* data_list_head_;$/;"	m	class:cartographer::common::LocklessQueue
data_list_tail_	cartographer/cartographer/common/lockless_queue.h	/^  Node* data_list_tail_;$/;"	m	class:cartographer::common::LocklessQueue
data_type	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  std::string data_type;$/;"	m	struct:cartographer_ros::__anon128::FrameProperties	file:
dcrsm	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  scoped_ptr<DynamicCompressedRowSparseMatrix> dcrsm;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
death_test_count	ceres-solver/internal/ceres/gtest/gtest.h	/^  int death_test_count() const { return death_test_count_; }$/;"	f	class:testing::TestResult
death_test_count_	ceres-solver/internal/ceres/gtest/gtest.h	/^  int death_test_count_;$/;"	m	class:testing::TestResult
death_test_factory	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::DeathTestFactory* death_test_factory() {$/;"	f	class:testing::internal::UnitTestImpl
death_test_factory_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::scoped_ptr<internal::DeathTestFactory> death_test_factory_;$/;"	m	class:testing::internal::UnitTestImpl	file:
death_test_style_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string death_test_style_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
death_test_use_fork_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool death_test_use_fork_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
decltype	cartographer/cartographer/mapping/id.h	/^auto GetTimeImpl(const T& t, int) -> decltype(t.time()) {$/;"	f	namespace:cartographer::mapping::internal
decltype	cartographer/cartographer/mapping/id.h	/^auto GetTimeImpl(const T& t, unsigned) -> decltype(t.time) {$/;"	f	namespace:cartographer::mapping::internal
decrease_factor_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  double decrease_factor_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
decrease_threshold_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double decrease_threshold_;$/;"	m	class:ceres::internal::DoglegStrategy
default_factory_	ceres-solver/internal/ceres/gtest/gtest.h	/^  scoped_ptr<ValueHolderFactory> default_factory_;$/;"	m	class:std::tr1::ThreadLocal
default_global_test_part_result_reporter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^          &default_global_test_part_result_reporter_),$/;"	m	namespace:testing::internal	file:
default_global_test_part_result_reporter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
default_per_thread_test_part_result_reporter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^          &default_per_thread_test_part_result_reporter_),$/;"	m	namespace:testing::internal	file:
default_per_thread_test_part_result_reporter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^      default_per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
default_result_printer	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestEventListener* default_result_printer() const {$/;"	f	class:testing::TestEventListeners
default_result_printer_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestEventListener* default_result_printer_;$/;"	m	class:testing::TestEventListeners
default_xml_generator	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestEventListener* default_xml_generator() const {$/;"	f	class:testing::TestEventListeners
default_xml_generator_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestEventListener* default_xml_generator_;$/;"	m	class:testing::TestEventListeners
delta_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector delta_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
delta_gradient_history_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  ColMajorMatrix delta_gradient_history_;$/;"	m	class:ceres::internal::LowRankInverseHessian
delta_offset	ceres-solver/internal/ceres/parameter_block.h	/^  int delta_offset() const { return delta_offset_; }$/;"	f	class:ceres::internal::ParameterBlock
delta_offset_	ceres-solver/internal/ceres/parameter_block.h	/^  int32 delta_offset_;$/;"	m	class:ceres::internal::ParameterBlock
delta_rotation	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^  Eigen::Quaternion<T> delta_rotation;$/;"	m	struct:cartographer::mapping::IntegrateImuResult
delta_rotation_imu_frame_	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^  const Eigen::Quaterniond delta_rotation_imu_frame_;$/;"	m	class:cartographer::mapping::RotationCostFunction3D
delta_velocity	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^  Eigen::Matrix<T, 3, 1> delta_velocity;$/;"	m	struct:cartographer::mapping::IntegrateImuResult
delta_velocity_imu_frame_	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  const Eigen::Vector3d delta_velocity_imu_frame_;$/;"	m	class:cartographer::mapping::AccelerationCostFunction3D
delta_x_dot_delta_gradient_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  Vector delta_x_dot_delta_gradient_;$/;"	m	class:ceres::internal::LowRankInverseHessian
delta_x_history_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  ColMajorMatrix delta_x_history_;$/;"	m	class:ceres::internal::LowRankInverseHessian
dense	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  Matrix dense;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
dense_ata	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^  Matrix dense_ata;$/;"	m	class:ceres::internal::BlockJacobiPreconditionerTest	file:
dense_linear_algebra_library_type	ceres-solver/include/ceres/solver.h	/^    DenseLinearAlgebraLibraryType dense_linear_algebra_library_type;$/;"	m	struct:ceres::Solver::Options
dense_linear_algebra_library_type	ceres-solver/include/ceres/solver.h	/^    DenseLinearAlgebraLibraryType dense_linear_algebra_library_type;$/;"	m	struct:ceres::Solver::Summary
dense_linear_algebra_library_type	ceres-solver/internal/ceres/linear_solver.h	/^    DenseLinearAlgebraLibraryType dense_linear_algebra_library_type;$/;"	m	struct:ceres::internal::LinearSolver::Options
density	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^    double density;$/;"	m	struct:ceres::internal::TripletSparseMatrix::RandomMatrixOptions
depart	ceres-solver/internal/ceres/gtest/gtest.h	/^  void depart() {$/;"	f	class:testing::internal::linked_ptr
diagonal_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector diagonal_;  \/\/ sqrt(diag(J^T J))$/;"	m	class:ceres::internal::DoglegStrategy
diagonal_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  Vector diagonal_;   \/\/ diagonal_ =  diag(J'J)$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
diagonal_	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^  const double* diagonal_;$/;"	m	class:ceres::internal::RegularizationCheckingLinearSolver	file:
difference_type	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:ceres::internal::FixedArray
difference_type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:testing::internal::ParamIterator
digits10	ceres-solver/include/ceres/jet.h	/^  static inline int digits10() { return NumTraits<T>::digits10(); }$/;"	f	struct:Eigen::NumTraits
direction	ceres-solver/internal/ceres/line_search.h	/^  const Vector& direction() const { return direction_; }$/;"	f	class:ceres::internal::LineSearchFunction
direction_	ceres-solver/internal/ceres/line_search.h	/^  Vector direction_;$/;"	m	class:ceres::internal::LineSearchFunction
directional_derivative	ceres-solver/internal/ceres/line_search_minimizer.h	/^    double directional_derivative;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
disable_all_safety_checks	ceres-solver/include/ceres/problem.h	/^    bool disable_all_safety_checks;$/;"	m	struct:ceres::Problem::Options
disabled_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::disabled_test_count() const {$/;"	f	class:testing::TestCase
disabled_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::disabled_test_count() const {$/;"	f	class:testing::UnitTest
disabled_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
display_context_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  ::rviz::DisplayContext* const display_context_;$/;"	m	class:cartographer_rviz::DrawableSubmap::rviz
distance_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<DistanceType> distance_matcher_;$/;"	m	class:testing::internal::BeginEndDistanceIsMatcher::Impl
distance_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const DistanceMatcher distance_matcher_;$/;"	m	class:testing::internal::BeginEndDistanceIsMatcher
distribution_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  std::uniform_real_distribution<float> distribution_ =$/;"	m	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest	file:
distribution_	cartographer/cartographer/transform/rigid_transform_test.cc	/^  std::uniform_real_distribution<T> distribution_ =$/;"	m	class:cartographer::transform::__anon112::RigidTransformTest	file:
dogleg_step_norm_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  double dogleg_step_norm_;$/;"	m	class:ceres::internal::DoglegStrategy
dogleg_type	ceres-solver/include/ceres/solver.h	/^    DoglegType dogleg_type;$/;"	m	struct:ceres::Solver::Options
dogleg_type	ceres-solver/include/ceres/solver.h	/^    DoglegType dogleg_type;$/;"	m	struct:ceres::Solver::Summary
dogleg_type	ceres-solver/internal/ceres/trust_region_strategy.h	/^    DoglegType dogleg_type;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
dogleg_type_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  DoglegType dogleg_type_;$/;"	m	class:ceres::internal::DoglegStrategy
down_cast	ceres-solver/internal/ceres/casts.h	/^inline To down_cast(From* f) {                   \/\/ so we only accept pointers$/;"	f	namespace:ceres
draw_trajectories_	cartographer/cartographer/io/probability_grid_points_processor.h	/^  const DrawTrajectories draw_trajectories_;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
draw_trajectories_	cartographer/cartographer/io/xray_points_processor.h	/^  const DrawTrajectories draw_trajectories_;$/;"	m	class:cartographer::io::XRayPointsProcessor
drop_frame_ids_	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^  const std::unordered_set<std::string> drop_frame_ids_;$/;"	m	class:cartographer::io::FrameIdFilteringPointsProcessor
dsm	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^  scoped_ptr<DenseSparseMatrix> dsm;$/;"	m	class:ceres::internal::DenseSparseMatrixTest	file:
dummy_	ceres-solver/internal/ceres/gtest/gtest.h	/^  static bool dummy_;$/;"	m	class:testing::internal::TypeIdHelper
dummy_	ceres-solver/internal/ceres/gtest/gtest.h	/^bool TypeIdHelper<T>::dummy_ = false;$/;"	m	class:testing::internal::TypeIdHelper
dummy_precision	ceres-solver/include/ceres/jet.h	/^  static typename ceres::Jet<T, N> dummy_precision() {$/;"	f	struct:Eigen::NumTraits
dump_filename_base	ceres-solver/internal/ceres/trust_region_strategy.h	/^    std::string dump_filename_base;$/;"	m	struct:ceres::internal::TrustRegionStrategy::PerSolveOptions
dump_format_type	ceres-solver/internal/ceres/trust_region_strategy.h	/^    DumpFormatType dump_format_type;$/;"	m	struct:ceres::internal::TrustRegionStrategy::PerSolveOptions
duration_in_seconds_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  const double duration_in_seconds_;$/;"	m	class:cartographer_ros::PlayableBag
dynamic_cols_	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h	/^  std::vector<std::vector<int> > dynamic_cols_;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrix
dynamic_sparsity	ceres-solver/include/ceres/solver.h	/^    bool dynamic_sparsity;$/;"	m	struct:ceres::Solver::Options
dynamic_sparsity	ceres-solver/internal/ceres/evaluator.h	/^    bool dynamic_sparsity;$/;"	m	struct:ceres::internal::Evaluator::Options
dynamic_sparsity	ceres-solver/internal/ceres/evaluator_test.cc	/^  bool dynamic_sparsity;$/;"	m	struct:ceres::internal::EvaluatorTestOptions	file:
dynamic_sparsity	ceres-solver/internal/ceres/linear_solver.h	/^    bool dynamic_sparsity;$/;"	m	struct:ceres::internal::LinearSolver::Options
dynamic_values_	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h	/^  std::vector<std::vector<double> > dynamic_values_;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrix
e_block_size	ceres-solver/internal/ceres/linear_solver.h	/^    int e_block_size;$/;"	m	struct:ceres::internal::LinearSolver::Options
e_block_size	ceres-solver/internal/ceres/preconditioner.h	/^    int e_block_size;$/;"	m	struct:ceres::internal::Preconditioner::Options
earliest_time	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^common::Time TransformInterpolationBuffer::earliest_time() const {$/;"	f	class:cartographer::transform::TransformInterpolationBuffer
ecef_to_local_frame_	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^      ecef_to_local_frame_;$/;"	m	class:cartographer_ros::SensorBridge
edge_weights_	ceres-solver/internal/ceres/graph.h	/^  HashMap<std::pair<Vertex, Vertex>, double> edge_weights_;$/;"	m	class:ceres::internal::WeightedGraph
edges_	ceres-solver/internal/ceres/graph.h	/^  HashMap<Vertex, HashSet<Vertex> > edges_;$/;"	m	class:ceres::internal::Graph
edges_	ceres-solver/internal/ceres/graph.h	/^  HashMap<Vertex, HashSet<Vertex> > edges_;$/;"	m	class:ceres::internal::WeightedGraph
edit_distance	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^namespace edit_distance {$/;"	n	namespace:testing::internal	file:
edit_distance	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace edit_distance {$/;"	n	namespace:testing::internal
ei_abs	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_abs (const Jet<T, N>& x) { return fabs(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_abs2	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_abs2(const Jet<T, N>& x) { return x * x;          }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_atan	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_atan(const Jet<T, N>& x) { return atan(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_conj	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline const Jet<T, N>& ei_conj(const Jet<T, N>& x) { return x;              }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_cos	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_cos (const Jet<T, N>& x) { return cos(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_cosh	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_cosh(const Jet<T, N>& x) { return cosh(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_exp	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_exp (const Jet<T, N>& x) { return exp(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_imag	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_imag(const Jet<T, N>&  ) { return Jet<T, N>(0.0); }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_log	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_log (const Jet<T, N>& x) { return log(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_pow	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_pow (const Jet<T, N>& x, Jet<T, N> y) { return pow(x, y); }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_real	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline const Jet<T, N>& ei_real(const Jet<T, N>& x) { return x;              }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_sin	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_sin (const Jet<T, N>& x) { return sin(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_sinh	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_sinh(const Jet<T, N>& x) { return sinh(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_sqrt	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_sqrt(const Jet<T, N>& x) { return sqrt(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_tan	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_tan (const Jet<T, N>& x) { return tan(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_tanh	ceres-solver/include/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_tanh(const Jet<T, N>& x) { return tanh(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
elapsed_time	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::internal::UnitTestImpl
elapsed_time	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^internal::TimeInMillis UnitTest::elapsed_time() const {$/;"	f	class:testing::UnitTest
elapsed_time	ceres-solver/internal/ceres/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestCase
elapsed_time	ceres-solver/internal/ceres/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestResult
elapsed_time_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::internal::UnitTestImpl	file:
elapsed_time_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestCase
elapsed_time_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestResult
element	ceres-solver/include/ceres/internal/fixed_array.h	/^    T element;$/;"	m	struct:ceres::internal::FixedArray::InnerContainer
element_to_group	ceres-solver/include/ceres/ordered_groups.h	/^  const std::map<T, int>& element_to_group() const {$/;"	f	class:ceres::OrderedGroups
element_to_group_	ceres-solver/include/ceres/ordered_groups.h	/^  std::map<T, int> element_to_group_;$/;"	m	class:ceres::OrderedGroups
element_type	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  typedef C element_type;$/;"	t	class:ceres::internal::scoped_array
element_type	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  typedef C element_type;$/;"	t	class:ceres::internal::scoped_ptr
element_type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T element_type;$/;"	t	class:testing::internal::linked_ptr
elimination_groups	ceres-solver/internal/ceres/linear_solver.h	/^    std::vector<int> elimination_groups;$/;"	m	struct:ceres::internal::LinearSolver::Options
elimination_groups	ceres-solver/internal/ceres/preconditioner.h	/^    std::vector<int> elimination_groups;$/;"	m	struct:ceres::internal::Preconditioner::Options
eliminator_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  scoped_ptr<SchurEliminatorBase> eliminator_;$/;"	m	class:ceres::internal::SchurComplementSolver
eliminator_	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	/^  scoped_ptr<SchurEliminatorBase> eliminator_;$/;"	m	class:ceres::internal::SchurJacobiPreconditioner
eliminator_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  scoped_ptr<SchurEliminatorBase> eliminator_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
empty	cartographer/cartographer/mapping/id.h	/^  bool empty() const { return begin() == end(); }$/;"	f	class:cartographer::mapping::MapById
empty	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^bool CompressedPointCloud::empty() const { return num_points_ == 0; }$/;"	f	class:cartographer::sensor::CompressedPointCloud
empty	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^bool TransformInterpolationBuffer::empty() const {$/;"	f	class:cartographer::transform::TransformInterpolationBuffer
enable_fast_removal	ceres-solver/include/ceres/problem.h	/^    bool enable_fast_removal;$/;"	m	struct:ceres::Problem::Options
end	cartographer/cartographer/mapping/2d/xy_index.h	/^  XYIndexRangeIterator end() {$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
end	cartographer/cartographer/mapping/detect_floors.h	/^  common::Time end;$/;"	m	struct:cartographer::mapping::Timespan
end	cartographer/cartographer/mapping/id.h	/^  ConstIterator end() const {$/;"	f	class:cartographer::mapping::MapById
end	cartographer/cartographer/mapping/id.h	/^  IteratorType end() const { return end_; }$/;"	f	class:cartographer::mapping::Range
end	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^CompressedPointCloud::ConstIterator CompressedPointCloud::end() const {$/;"	f	class:cartographer::sensor::CompressedPointCloud
end	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline const_iterator end() const { return &array_[size_].element; }$/;"	f	class:ceres::internal::FixedArray
end	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline iterator end() { return &array_[size_].element; }$/;"	f	class:ceres::internal::FixedArray
end	ceres-solver/internal/ceres/gmock/gmock.h	/^  const_iterator end() const { return expectations_.end(); }$/;"	f	class:testing::ExpectationSet
end	ceres-solver/internal/ceres/gtest/gtest.h	/^  const_iterator end() const { return array_ + size_; }$/;"	f	class:testing::internal::NativeArray
end	ceres-solver/internal/ceres/gtest/gtest.h	/^  iterator end() const { return iterator(impl_->End()); }$/;"	f	class:testing::internal::ParamGenerator
end10_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T10>::iterator end10_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end1_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T1>::iterator end1_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator2::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end2_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T2>::iterator end2_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator3::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end3_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T3>::iterator end3_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator4::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end4_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T4>::iterator end4_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator5::Iterator
end5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end5_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T5>::iterator end5_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator6::Iterator
end6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end6_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T6>::iterator end6_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator7::Iterator
end7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end7_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T7>::iterator end7_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator8::Iterator
end8_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T8>::iterator end8_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end9_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator10::Iterator
end9_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const typename ParamGenerator<T9>::iterator end9_;$/;"	m	class:testing::internal::CartesianProductGenerator9::Iterator
end_	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^    const ValueType* end_;$/;"	m	class:cartographer::mapping::FlatGrid::Iterator
end_	cartographer/cartographer/mapping/id.h	/^  IteratorType end_;$/;"	m	class:cartographer::mapping::Range
end_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int end_;$/;"	m	struct:ceres::Grid1D
end_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T end_;$/;"	m	class:testing::internal::RangeGenerator
end_index	cartographer/cartographer/mapping/detect_floors.cc	/^  int end_index;$/;"	m	struct:cartographer::mapping::__anon62::Span	file:
end_index_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const int end_index_;$/;"	m	class:testing::internal::RangeGenerator
end_row_block_	ceres-solver/internal/ceres/inner_product_computer.h	/^  const int end_row_block_;$/;"	m	class:ceres::internal::InnerProductComputer
end_trajectory_	cartographer/cartographer/mapping/id.h	/^    typename std::map<int, MapByIndex>::const_iterator end_trajectory_;$/;"	m	class:cartographer::mapping::MapById::ConstIterator
environ	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^extern "C" char** environ;$/;"	m	namespace:testing::internal	file:
environments	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<Environment*>& environments() { return environments_; }$/;"	f	class:testing::internal::UnitTestImpl
environments_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<Environment*> environments_;$/;"	m	class:testing::internal::UnitTestImpl	file:
eof	cartographer/cartographer/io/proto_stream.cc	/^bool ProtoStreamReader::eof() const { return in_.eof(); }$/;"	f	class:cartographer::io::ProtoStreamReader
eps	cartographer/cartographer/transform/rigid_transform_test.cc	/^  T eps() { return std::numeric_limits<T>::epsilon(); }$/;"	f	class:cartographer::transform::__anon112::RigidTransformTest
epsilon	ceres-solver/include/ceres/jet.h	/^  static inline Real epsilon() {$/;"	f	struct:Eigen::NumTraits
errno_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const int errno_;$/;"	m	class:testing::internal::SetErrnoAndReturnAction
error	ceres-solver/internal/ceres/line_search.h	/^    std::string error;$/;"	m	struct:ceres::internal::LineSearch::Summary
error	ceres-solver/internal/ceres/preprocessor.h	/^  std::string error;$/;"	m	struct:ceres::internal::PreprocessedProblem
error_log	ceres-solver/include/ceres/gradient_checker.h	/^    std::string error_log;$/;"	m	struct:ceres::GradientChecker::ProbeResults
error_log	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^  const std::string& error_log() const { return error_log_; }$/;"	f	class:ceres::internal::GradientCheckingIterationCallback
error_log_	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^  std::string error_log_;$/;"	m	class:ceres::internal::GradientCheckingIterationCallback
eta	ceres-solver/include/ceres/iteration_callback.h	/^  double eta;$/;"	m	struct:ceres::IterationSummary
eta	ceres-solver/include/ceres/solver.h	/^    double eta;$/;"	m	struct:ceres::Solver::Options
eta	ceres-solver/internal/ceres/minimizer.h	/^    double eta;$/;"	m	struct:ceres::internal::Minimizer::Options
eta	ceres-solver/internal/ceres/trust_region_strategy.h	/^    double eta;$/;"	m	struct:ceres::internal::TrustRegionStrategy::PerSolveOptions
evaluate_options_	ceres-solver/internal/ceres/covariance_impl.h	/^  Problem::EvaluateOptions evaluate_options_;$/;"	m	class:ceres::internal::CovarianceImpl
evaluate_preparers_	ceres-solver/internal/ceres/program_evaluator.h	/^  scoped_array<EvaluatePreparer> evaluate_preparers_;$/;"	m	class:ceres::internal::ProgramEvaluator
evaluate_scratch_	ceres-solver/internal/ceres/program_evaluator.h	/^  scoped_array<EvaluateScratch> evaluate_scratch_;$/;"	m	class:ceres::internal::ProgramEvaluator
evaluator	ceres-solver/internal/ceres/minimizer.h	/^    shared_ptr<Evaluator> evaluator;$/;"	m	struct:ceres::internal::Minimizer::Options
evaluator	ceres-solver/internal/ceres/preprocessor.h	/^  shared_ptr<Evaluator> evaluator;$/;"	m	struct:ceres::internal::PreprocessedProblem
evaluator_	ceres-solver/internal/ceres/line_search.h	/^  Evaluator* evaluator_;$/;"	m	class:ceres::internal::LineSearchFunction
evaluator_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Evaluator* evaluator_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
evaluator_options	ceres-solver/internal/ceres/preprocessor.h	/^  Evaluator::Options evaluator_options;$/;"	m	struct:ceres::internal::PreprocessedProblem
evaluator_options_	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^  Evaluator::Options evaluator_options_;$/;"	m	class:ceres::internal::CoordinateDescentMinimizer
event_	ceres-solver/internal/ceres/gtest/gtest.h	/^  AutoHandle event_;$/;"	m	class:std::tr1::Notification
event_handle_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  AutoHandle event_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
events_	cartographer/cartographer/common/rate_timer.h	/^  std::deque<Event> events_;$/;"	m	class:cartographer::common::RateTimer
events_	ceres-solver/internal/ceres/wall_time.h	/^  std::string events_;$/;"	m	class:ceres::internal::EventLogger
examples	ceres-solver/examples/bal_problem.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/bal_problem.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/bundle_adjuster.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/denoising.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/fields_of_experts.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/fields_of_experts.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/more_garbow_hillstrom.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/nist.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/pgm_image.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/random.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/common/read_g2o.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/pose_graph_2d/angle_local_parameterization.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/pose_graph_2d/normalize_angle.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/pose_graph_2d/types.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d.cc	/^namespace examples {$/;"	n	namespace:ceres	file:
examples	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/slam/pose_graph_3d/types.h	/^namespace examples {$/;"	n	namespace:ceres
examples	ceres-solver/examples/snavely_reprojection_error.h	/^namespace examples {$/;"	n	namespace:ceres
exclude_patterns	cartographer/docs/source/conf.py	/^exclude_patterns = []$/;"	v
exclude_patterns	cartographer_ros/docs/source/conf.py	/^exclude_patterns = []$/;"	v
exclude_patterns	ceres-solver/docs/source/conf.py	/^exclude_patterns = []$/;"	v
execution_summary_	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  ::ceres::internal::ExecutionSummary execution_summary_;$/;"	m	class:ceres::internal::GradientProblemEvaluator
execution_summary_	ceres-solver/internal/ceres/linear_solver.h	/^  ExecutionSummary execution_summary_;$/;"	m	class:ceres::internal::TypedLinearSolver
execution_summary_	ceres-solver/internal/ceres/program_evaluator.h	/^  ::ceres::internal::ExecutionSummary execution_summary_;$/;"	m	class:ceres::internal::ProgramEvaluator
exit_code_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const int exit_code_;$/;"	m	class:testing::ExitedWithCode
exp	ceres-solver/include/ceres/jet.h	/^Jet<T, N> exp(const Jet<T, N>& f) {$/;"	f	namespace:ceres
exp	ceres-solver/include/ceres/jet.h	/^inline double exp     (double x) { return std::exp(x);      }$/;"	f	namespace:ceres
expect_eq_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const bool expect_eq_;$/;"	m	class:testing::internal::StrEqualityMatcher
expectation_base	ceres-solver/internal/ceres/gmock/gmock.h	/^  expectation_base() const {$/;"	f	class:testing::Expectation
expectation_base_	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::linked_ptr<internal::ExpectationBase> expectation_base_;$/;"	m	class:testing::Expectation
expectations_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Expectation::Set expectations_;$/;"	m	class:testing::ExpectationSet
expected_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const FloatType expected_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl
expected_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const FloatType expected_;$/;"	m	class:testing::internal::FloatingEqMatcher
expected_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const StlContainer expected_;$/;"	m	class:testing::internal::ContainerEqMatcher
expected_average_symmetric_distance	ceres-solver/examples/libmv_homography.cc	/^  double expected_average_symmetric_distance;$/;"	m	struct:__anon158::EstimateHomographyOptions	file:
expected_final_residuals_	ceres-solver/internal/ceres/test_util.h	/^  std::vector<double> expected_final_residuals_;$/;"	m	class:ceres::internal::SystemTest
expected_jacobian_x_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> expected_jacobian_x_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_jacobian_x_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> expected_jacobian_x_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_jacobian_y_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> expected_jacobian_y_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_jacobian_y_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> expected_jacobian_y_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_jacobian_z_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> expected_jacobian_z_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_jacobian_z_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> expected_jacobian_z_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_jacobians_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<vector<double> > expected_jacobians_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
expected_num_nonzeros	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  int expected_num_nonzeros;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
expected_output	cartographer/cartographer/sensor/internal/test_helpers.h	/^  const CollatorOutput expected_output;$/;"	m	struct:cartographer::sensor::test::CollatorInput
expected_pose_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  transform::Rigid3d expected_pose_;$/;"	m	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest	file:
expected_pose_	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^  transform::Rigid3d expected_pose_;$/;"	m	class:cartographer::mapping::scan_matching::__anon103::RealTimeCorrelativeScanMatcher3DTest	file:
expected_residuals_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> expected_residuals_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
expected_residuals_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> expected_residuals_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_residuals_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> expected_residuals_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
expected_sensor_ids_	cartographer/cartographer/mapping/internal/range_data_collator.h	/^  const std::set<std::string> expected_sensor_ids_;$/;"	m	class:cartographer::mapping::RangeDataCollator
exponent_bits	ceres-solver/internal/ceres/gtest/gtest.h	/^  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
exponential_residual	ceres-solver/examples/curve_fitting.c	/^int exponential_residual(void* user_data,$/;"	f
exponential_residual	ceres-solver/internal/ceres/c_api_test.cc	/^int exponential_residual(void* user_data,$/;"	f
extensions	cartographer/docs/source/conf.py	/^extensions = [$/;"	v
extensions	cartographer_ros/docs/source/conf.py	/^extensions = [$/;"	v
extensions	ceres-solver/docs/source/conf.py	/^extensions = ['sphinx.ext.todo', 'sphinx.ext.mathjax', 'sphinx.ext.ifconfig']$/;"	v
extra_info_	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  string extra_info_;$/;"	m	class:ceres::internal::__anon179::GradientCheckingCostFunction	file:
extra_matcher	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<const ArgumentTuple&>& extra_matcher() const {$/;"	f	class:testing::internal::TypedExpectation
extra_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher<const ArgumentTuple&> extra_matcher_;$/;"	m	class:testing::internal::OnCallSpec
extra_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher<const ArgumentTuple&> extra_matcher_;$/;"	m	class:testing::internal::TypedExpectation
extra_matcher_specified_	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool extra_matcher_specified_;$/;"	m	class:testing::internal::ExpectationBase
extract	cartographer_ros/jenkins/worker.py	/^  def extract(self, text):$/;"	m	class:Pattern
extract_ground_truth_stats	cartographer_ros/jenkins/worker.py	/^def extract_ground_truth_stats(input_text):$/;"	f
extract_last_occurence	cartographer_ros/jenkins/worker.py	/^  def extract_last_occurence(self, text):$/;"	m	class:Pattern
extract_stats	cartographer_ros/jenkins/worker.py	/^def extract_stats(inp):$/;"	f
extrapolation_imu_tracker_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  std::unique_ptr<ImuTracker> extrapolation_imu_tracker_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
extrapolator_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  std::unique_ptr<PoseExtrapolator> extrapolator_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
extrapolator_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  std::unique_ptr<mapping::PoseExtrapolator> extrapolator_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
extrapolators_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  std::map<int, ::cartographer::mapping::PoseExtrapolator> extrapolators_;$/;"	m	class:cartographer_ros::Node
f0	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f0_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T0 f0_;$/;"	m	class:std::tr1::tuple
f1	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,$/;"	m	class:std::tr1::tuple
f1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T1 f1_;$/;"	m	class:std::tr1::tuple
f2	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T2 f2_;$/;"	m	class:std::tr1::tuple
f3	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T3 f3_;$/;"	m	class:std::tr1::tuple
f4	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,$/;"	m	class:std::tr1::tuple
f4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T4 f4_;$/;"	m	class:std::tr1::tuple
f5	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T5 f5_;$/;"	m	class:std::tr1::tuple
f6	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T6 f6_;$/;"	m	class:std::tr1::tuple
f7	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,$/;"	m	class:std::tr1::tuple
f7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T7 f7_;$/;"	m	class:std::tr1::tuple
f8	ceres-solver/internal/ceres/gtest/gtest.h	/^      GTEST_BY_REF_(T8) f8, GTEST_BY_REF_(T9) f9) : f0_(f0), f1_(f1), f2_(f2),$/;"	m	class:std::tr1::tuple
f8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T8 f8_;$/;"	m	class:std::tr1::tuple
f9_	ceres-solver/internal/ceres/gtest/gtest.h	/^      f3_(f3), f4_(f4), f5_(f5), f6_(f6), f7_(f7), f8_(f8), f9_(f9) {}$/;"	f	class:std::tr1::tuple
f9_	ceres-solver/internal/ceres/gtest/gtest.h	/^      f9_(t.f9_) {}$/;"	f	class:std::tr1::tuple
f9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T9 f9_;$/;"	m	class:std::tr1::tuple
f_	ceres-solver/include/ceres/loss_function.h	/^  internal::scoped_ptr<const LossFunction> f_, g_;$/;"	m	class:ceres::ComposedLoss
f_block_size	ceres-solver/internal/ceres/linear_solver.h	/^    int f_block_size;$/;"	m	struct:ceres::internal::LinearSolver::Options
f_block_size	ceres-solver/internal/ceres/preconditioner.h	/^    int f_block_size;$/;"	m	struct:ceres::internal::Preconditioner::Options
factor_	ceres-solver/internal/ceres/suitesparse.h	/^  cholmod_factor* factor_;$/;"	m	class:ceres::internal::SuiteSparseCholesky
factories_	cartographer/cartographer/io/points_processor_pipeline_builder.h	/^  std::unordered_map<std::string, FactoryFunction> factories_;$/;"	m	class:cartographer::io::PointsProcessorPipelineBuilder
factory_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const FactoryFunction factory_;$/;"	m	class:testing::DefaultValue::FactoryValueProducer
factory_	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::TestFactoryBase* const factory_;  \/\/ The factory that creates$/;"	m	class:testing::TestInfo::internal
fade_out_start_distance_in_meters_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::FloatProperty* fade_out_start_distance_in_meters_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
failed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool failed() const { return type_ != kSuccess; }$/;"	f	class:testing::TestPartResult
failed_test_case_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::failed_test_case_count() const {$/;"	f	class:testing::UnitTest
failed_test_case_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::failed_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failed_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::failed_test_count() const {$/;"	f	class:testing::TestCase
failed_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }$/;"	f	class:testing::UnitTest
failed_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::failed_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
failure_message	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* failure_message() const { return message(); }$/;"	f	class:testing::AssertionResult
fake_pose_graph_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^  testing::FakeTrimmable fake_pose_graph_;$/;"	m	class:cartographer::mapping::__anon83::OverlappingSubmapsTrimmer2DTest	file:
false_type	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef bool_constant<false> false_type;$/;"	t	namespace:std::tr1
fast_correlative_scan_matcher	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^        fast_correlative_scan_matcher;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder2D::SubmapScanMatcher
fast_correlative_scan_matcher	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^        fast_correlative_scan_matcher;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder3D::SubmapScanMatcher
fatally_failed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool fatally_failed() const { return type_ == kFatalFailure; }$/;"	f	class:testing::TestPartResult
fd_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const int fd_;  \/\/ A stream to capture.$/;"	m	class:testing::internal::CapturedStream	file:
field_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const FieldType Class::*field_;$/;"	m	class:testing::internal::FieldMatcher::Class
figure	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^figure = plot.figure()$/;"	v
file	ceres-solver/internal/ceres/gmock/gmock.h	/^  const char* file() const { return file_; }$/;"	f	class:testing::internal::ExpectationBase
file	ceres-solver/internal/ceres/gmock/gmock.h	/^  const char* file() const { return file_; }$/;"	f	class:testing::internal::UntypedOnCallSpecBase
file	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* file;$/;"	m	struct:testing::internal::TraceInfo	file:
file	ceres-solver/internal/ceres/gtest/gtest.h	/^      const char* file;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
file	ceres-solver/internal/ceres/gtest/gtest.h	/^    const char* const file;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
file	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* file() const { return location_.file.c_str(); }$/;"	f	class:testing::TestInfo
file	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::string& file() const { return file_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
file	ceres-solver/internal/ceres/gtest/gtest.h	/^  string file;$/;"	m	struct:testing::internal::CodeLocation
file_	cartographer/cartographer/io/ply_writing_points_processor.h	/^  std::unique_ptr<FileWriter> file_;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
file_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const char* file_;          \/\/ The file that contains the expectation.$/;"	m	class:testing::internal::ExpectationBase
file_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const char* file_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase
file_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* const file_;$/;"	m	class:testing::internal::ExecDeathTest	file:
file_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* const file_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
file_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string file_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
file_	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  std::string file_;$/;"	m	class:MessageLogger
file_descriptor_	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int file_descriptor_;$/;"	m	class:__anon155::EndianAwareFileReader	file:
file_endian_type_	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int file_endian_type_;$/;"	m	class:__anon155::EndianAwareFileReader	file:
file_name	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* file_name() const {$/;"	f	class:testing::TestPartResult
file_name_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string file_name_;$/;"	m	class:testing::TestPartResult
file_path	ceres-solver/internal/ceres/gmock/mock-log.h	/^    std::string file_path;$/;"	m	struct:testing::ScopedMockLog::MessageInfo
file_resolver_	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  const std::shared_ptr<FileResolver> file_resolver_;$/;"	m	class:cartographer::common::LuaParameterDictionary
file_writer_	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  std::unique_ptr<FileWriter> file_writer_;$/;"	m	class:cartographer::io::HybridGridPointsProcessor
file_writer_	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  std::unique_ptr<FileWriter> file_writer_;$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
file_writer_	cartographer/cartographer/io/probability_grid_points_processor.h	/^  std::unique_ptr<FileWriter> file_writer_;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
file_writer_	cartographer/cartographer/io/xyz_writing_points_processor.h	/^  std::unique_ptr<FileWriter> file_writer_;$/;"	m	class:cartographer::io::XyzWriterPointsProcessor
file_writer_factory_	cartographer/cartographer/io/xray_points_processor.h	/^  FileWriterFactory file_writer_factory_;$/;"	m	class:cartographer::io::XRayPointsProcessor
file_writer_factory_	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  ::cartographer::io::FileWriterFactory file_writer_factory_;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
filename_	cartographer/cartographer/io/fake_file_writer.h	/^  std::string filename_;$/;"	m	class:cartographer::io::FakeFileWriter
filename_	cartographer/cartographer/io/file_writer.h	/^  const std::string filename_;$/;"	m	class:cartographer::io::StreamFileWriter
filename_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ::std::string filename_;$/;"	m	class:testing::internal::CapturedStream	file:
filename_only_	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  std::string filename_only_;$/;"	m	class:MessageLogger
filestem_	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  const std::string filestem_;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
filter_	ceres-solver/examples/fields_of_experts.h	/^  const std::vector<double>& filter_;$/;"	m	class:ceres::examples::FieldsOfExpertsCost
filter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string filter_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
filtered_gravity_aligned_point_cloud	cartographer/cartographer/mapping/trajectory_node.h	/^    sensor::PointCloud filtered_gravity_aligned_point_cloud;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
filtering_early_message_handler_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  FilteringEarlyMessageHandler filtering_early_message_handler_;$/;"	m	class:cartographer_ros::PlayableBag
filters_	ceres-solver/examples/fields_of_experts.h	/^  std::vector<std::vector<double> > filters_;$/;"	m	class:ceres::examples::FieldsOfExperts
final	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^      const mapping::proto::TrajectoryBuilderOptions &trajectory_options) final;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
final	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  void EnqueueSensorData(std::unique_ptr<proto::SensorData> sensor_data) final;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
final	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  void FinishTrajectory(int local_trajectory_id) final;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
final	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  void Shutdown() final;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
final	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  void Start() final;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
final	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void Shutdown() final;$/;"	m	class:cartographer::cloud::MapBuilderServer
final	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void Start() final;$/;"	m	class:cartographer::cloud::MapBuilderServer
final	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void WaitForShutdown() final;$/;"	m	class:cartographer::cloud::MapBuilderServer
final	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void WaitUntilIdle() final;$/;"	m	class:cartographer::cloud::MapBuilderServer
final_cost	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double final_cost;$/;"	m	struct:ceres::GradientProblemSolver::Summary
final_cost	ceres-solver/include/ceres/solver.h	/^    double final_cost;$/;"	m	struct:ceres::Solver::Summary
final_parameters	ceres-solver/examples/nist.cc	/^  Matrix final_parameters() const  { return final_parameters_; }$/;"	f	class:ceres::examples::NISTProblem
final_parameters_	ceres-solver/examples/nist.cc	/^  Matrix final_parameters_;$/;"	m	class:ceres::examples::NISTProblem	file:
find	cartographer/cartographer/mapping/id.h	/^  ConstIterator find(const IdType& id) const {$/;"	f	class:cartographer::mapping::MapById
finished	cartographer/cartographer/mapping/submaps.h	/^  bool finished() const { return finished_; }$/;"	f	class:cartographer::mapping::Submap
finished	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^    bool finished = false;$/;"	m	struct:cartographer::sensor::OrderedMultiQueue::Queue
finished_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  bool finished_ = false;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
finished_	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  bool finished_ = false;$/;"	m	class:cartographer::mapping::PureLocalizationTrimmer
finished_	cartographer/cartographer/mapping/submaps.h	/^  bool finished_ = false;$/;"	m	class:cartographer::mapping::Submap
finished_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  bool finished_;$/;"	m	class:cartographer_ros::PlayableBag
finished_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool finished_;  \/\/ true iff we know that the thread function has finished.$/;"	m	class:std::tr1::ThreadWithParam
finite_diff_cost_function_	ceres-solver/include/ceres/gradient_checker.h	/^  internal::scoped_ptr<CostFunction> finite_diff_cost_function_;$/;"	m	class:ceres::GradientChecker
first_delta_time_seconds_	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  const double first_delta_time_seconds_;$/;"	m	class:cartographer::mapping::AccelerationCostFunction3D
first_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const FirstMatcher first_matcher_;$/;"	m	class:testing::internal::PairMatcher
first_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<const FirstType&> first_matcher_;$/;"	m	class:testing::internal::PairMatcherImpl
first_used_file	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* first_used_file;$/;"	m	struct:testing::__anon176::MockObjectState	file:
first_used_line	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int first_used_line;$/;"	m	struct:testing::__anon176::MockObjectState	file:
first_used_test	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ::std::string first_used_test;$/;"	m	struct:testing::__anon176::MockObjectState	file:
first_used_test_case	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ::std::string first_used_test_case;$/;"	m	struct:testing::__anon176::MockObjectState	file:
fixed_cost	ceres-solver/include/ceres/solver.h	/^    double fixed_cost;$/;"	m	struct:ceres::Solver::Summary
fixed_cost	ceres-solver/internal/ceres/preprocessor.h	/^  double fixed_cost;$/;"	m	struct:ceres::internal::PreprocessedProblem
fixed_frame_origin_in_map	cartographer/cartographer/mapping/pose_graph_interface.h	/^    common::optional<transform::Rigid3d> fixed_frame_origin_in_map;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::TrajectoryData
fixed_frame_pose_data	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  const sensor::MapByTime<sensor::FixedFramePoseData>& fixed_frame_pose_data()$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
fixed_frame_pose_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  sensor::MapByTime<sensor::FixedFramePoseData> fixed_frame_pose_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
fixed_frame_pose_sampler	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    ::cartographer::common::FixedRatioSampler fixed_frame_pose_sampler;$/;"	m	struct:cartographer_ros::Node::TrajectorySensorSamplers
fixed_frame_pose_sampling_ratio	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  double fixed_frame_pose_sampling_ratio;$/;"	m	struct:cartographer_ros::TrajectoryOptions
fixture_class_id_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::TypeId fixture_class_id_;   \/\/ ID of the test fixture class$/;"	m	class:testing::TestInfo
flag_to_set_on_destruction_	ceres-solver/internal/ceres/gradient_problem_test.cc	/^  bool* flag_to_set_on_destruction_;$/;"	m	class:ceres::internal::QuadraticTestFunction	file:
floor	ceres-solver/include/ceres/jet.h	/^Jet<T, N> floor(const Jet<T, N>& f) {$/;"	f	namespace:ceres
floor	ceres-solver/include/ceres/jet.h	/^inline double floor   (double x) { return std::floor(x);    }$/;"	f	namespace:ceres
floors_	cartographer/cartographer/io/xray_points_processor.h	/^  std::vector<mapping::Floor> floors_;$/;"	m	class:cartographer::io::XRayPointsProcessor
forwarding_enabled	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool forwarding_enabled() const { return forwarding_enabled_; }$/;"	f	class:testing::internal::TestEventRepeater
forwarding_enabled_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool forwarding_enabled_;$/;"	m	class:testing::internal::TestEventRepeater	file:
fraction_bits	ceres-solver/internal/ceres/gtest/gtest.h	/^  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
frame_id	cartographer/cartographer/io/points_batch.h	/^  std::string frame_id;$/;"	m	struct:cartographer::io::PointsBatch
frame_id_	cartographer/cartographer/io/coloring_points_processor.h	/^  const std::string frame_id_;$/;"	m	class:cartographer::io::ColoringPointsProcessor
frame_id_	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  const std::string frame_id_;$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
frame_id_to_max_overlap_duration_	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  std::map<std::string, double> frame_id_to_max_overlap_duration_;$/;"	m	class:cartographer_ros::__anon128::RangeDataChecker	file:
frame_id_to_previous_time_to_	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^      frame_id_to_previous_time_to_;$/;"	m	class:cartographer_ros::__anon128::RangeDataChecker	file:
frame_id_to_range_checksum_	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  std::map<std::string, RangeChecksum> frame_id_to_range_checksum_;$/;"	m	class:cartographer_ros::__anon128::RangeDataChecker	file:
free_list_head_	cartographer/cartographer/common/lockless_queue.h	/^  std::atomic<Node*> free_list_head_;$/;"	m	class:cartographer::common::LocklessQueue
fresh_submaps_count_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  const uint16 fresh_submaps_count_;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
full_match_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const bool full_match_;$/;"	m	class:testing::internal::MatchesRegexMatcher
full_pattern_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* full_pattern_;  \/\/ For FullMatch();$/;"	m	class:std::tr1::RE
full_regex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  regex_t full_regex_;     \/\/ For FullMatch().$/;"	m	class:std::tr1::RE
func_	ceres-solver/internal/ceres/gtest/gtest.h	/^    UserThreadFunc* const func_;$/;"	m	class:std::tr1::ThreadWithParam::RunnableImpl
func_	ceres-solver/internal/ceres/gtest/gtest.h	/^  UserThreadFunc* const func_;  \/\/ User-supplied thread function.$/;"	m	class:std::tr1::ThreadWithParam
function	ceres-solver/internal/ceres/line_search.h	/^    LineSearchFunction* function;$/;"	m	struct:ceres::internal::LineSearch::Options
function_	ceres-solver/include/ceres/gradient_checker.h	/^  const CostFunction* function_;$/;"	m	class:ceres::GradientChecker
function_	ceres-solver/include/ceres/gradient_problem.h	/^  internal::scoped_ptr<FirstOrderFunction> function_;$/;"	m	class:ceres::GradientProblem
function_	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  const CostFunction* function_;$/;"	m	class:ceres::internal::__anon179::GradientCheckingCostFunction	file:
function_impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  FunctionImpl function_impl_;$/;"	m	class:testing::internal::InvokeAction
function_impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  FunctionImpl function_impl_;$/;"	m	class:testing::internal::InvokeWithoutArgsAction
function_mocker_	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::FunctionMockerBase<F>* const function_mocker_;$/;"	m	class:testing::internal::MockSpec::internal
function_mockers	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  FunctionMockers function_mockers;  \/\/ All registered methods of the object.$/;"	m	struct:testing::__anon176::MockObjectState	file:
function_tolerance	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double function_tolerance;$/;"	m	struct:ceres::GradientProblemSolver::Options
function_tolerance	ceres-solver/include/ceres/solver.h	/^    double function_tolerance;$/;"	m	struct:ceres::Solver::Options
function_tolerance	ceres-solver/internal/ceres/line_search_direction.h	/^    double function_tolerance;$/;"	m	struct:ceres::internal::LineSearchDirection::Options
function_tolerance	ceres-solver/internal/ceres/minimizer.h	/^    double function_tolerance;$/;"	m	struct:ceres::internal::Minimizer::Options
function_tolerance_	ceres-solver/internal/ceres/line_search_direction.cc	/^  const double function_tolerance_;$/;"	m	class:ceres::internal::NonlinearConjugateGradient	file:
functor_	ceres-solver/include/ceres/autodiff_cost_function.h	/^  internal::scoped_ptr<CostFunctor> functor_;$/;"	m	class:ceres::AutoDiffCostFunction
functor_	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  internal::scoped_ptr<Functor> functor_;$/;"	m	class:ceres::AutoDiffLocalParameterization
functor_	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	/^  internal::scoped_ptr<CostFunctor> functor_;$/;"	m	class:ceres::DynamicAutoDiffCostFunction
functor_	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  internal::scoped_ptr<const CostFunctor> functor_;$/;"	m	class:ceres::DynamicNumericDiffCostFunction
functor_	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^  internal::scoped_ptr<CostFunctor> functor_;$/;"	m	class:ceres::NumericDiffCostFunction
functor_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  EasyFunctor functor_;$/;"	m	class:ceres::internal::EasyCostFunction
functor_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  ExponentialFunctor functor_;$/;"	m	class:ceres::internal::ExponentialCostFunction
functor_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  RandomizedFunctor functor_;$/;"	m	class:ceres::internal::RandomizedCostFunction
functor_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  TranscendentalFunctor functor_;$/;"	m	class:ceres::internal::TranscendentalCostFunction
g10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator10 g10_;$/;"	m	class:testing::internal::CartesianProductHolder10
g10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T10> g10_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder10
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder2
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder3
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder4
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder5
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder6
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder7
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder8
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator1 g1_;$/;"	m	class:testing::internal::CartesianProductHolder9
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T1> g1_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder10
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder2
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder3
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder4
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder5
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder6
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder7
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder8
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator2 g2_;$/;"	m	class:testing::internal::CartesianProductHolder9
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator2
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T2> g2_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder10
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder3
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder4
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder5
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder6
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder7
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder8
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator3 g3_;$/;"	m	class:testing::internal::CartesianProductHolder9
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator3
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T3> g3_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder10
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder4
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder5
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder6
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder7
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder8
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator4 g4_;$/;"	m	class:testing::internal::CartesianProductHolder9
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator4
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T4> g4_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder10
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder5
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder6
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder7
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder8
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator5 g5_;$/;"	m	class:testing::internal::CartesianProductHolder9
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator5
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T5> g5_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder10
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder6
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder7
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder8
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator6 g6_;$/;"	m	class:testing::internal::CartesianProductHolder9
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator6
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T6> g6_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder10
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder7
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder8
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator7 g7_;$/;"	m	class:testing::internal::CartesianProductHolder9
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator7
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T7> g7_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder10
g8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder8
g8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator8 g8_;$/;"	m	class:testing::internal::CartesianProductHolder9
g8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator8
g8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T8> g8_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder10
g9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const Generator9 g9_;$/;"	m	class:testing::internal::CartesianProductHolder9
g9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator10
g9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamGenerator<T9> g9_;$/;"	m	class:testing::internal::CartesianProductGenerator9
g_	ceres-solver/include/ceres/loss_function.h	/^  internal::scoped_ptr<const LossFunction> f_, g_;$/;"	m	class:ceres::ComposedLoss
g_argvs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^::std::vector<testing::internal::string> g_argvs;$/;"	m	namespace:testing::internal	file:
g_captured_stderr	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static CapturedStream* g_captured_stderr = NULL;$/;"	m	namespace:testing::internal	file:
g_captured_stdout	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static CapturedStream* g_captured_stdout = NULL;$/;"	m	namespace:testing::internal	file:
g_gmock_implicit_sequence	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTEST_API_ ThreadLocal<Sequence*> g_gmock_implicit_sequence;$/;"	m	namespace:testing::internal	file:
g_gmock_mutex	ceres-solver/internal/ceres/gmock/gmock.h	/^          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) = 0;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
g_gmock_mutex	ceres-solver/internal/ceres/gmock/gmock.h	/^      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) = 0;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
g_help_flag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool g_help_flag = false;$/;"	m	namespace:testing::internal	file:
g_in_fast_death_test_child	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static bool g_in_fast_death_test_child = false;$/;"	m	namespace:testing::internal	file:
g_injected_test_argvs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const ::std::vector<testing::internal::string>* g_injected_test_argvs =$/;"	m	namespace:testing::internal	file:
g_mock_object_registry	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^MockObjectRegistry g_mock_object_registry;$/;"	m	namespace:testing::__anon176	file:
g_uninteresting_call_reaction	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::map<const void*, internal::CallReaction> g_uninteresting_call_reaction;$/;"	m	namespace:testing::__anon176	file:
gauges_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^      gauges_;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
gauss_newton_step	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector gauss_newton_step() const { return gauss_newton_step_; }$/;"	f	class:ceres::internal::DoglegStrategy
gauss_newton_step_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector gauss_newton_step_;$/;"	m	class:ceres::internal::DoglegStrategy
generator	ceres-solver/internal/ceres/gtest/gtest.h	/^      GeneratorCreationFunc* generator;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
get	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline T* get() { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
get	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline const T* get() const { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
get	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline Type* get() {$/;"	f	class:ceres::internal::ManualConstructor
get	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline const Type* get() const  {$/;"	f	class:ceres::internal::ManualConstructor
get	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* get() const { return ptr_; }$/;"	f	class:ceres::internal::scoped_ptr
get	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* get() const {$/;"	f	class:ceres::internal::scoped_array
get	ceres-solver/internal/ceres/gtest/gtest.h	/^      const typename ::std::tr1::tuple_element<I, Tuple>::type>::type get($/;"	f	struct:testing::internal::TuplePolicy
get	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* get() const { return ptr_; }$/;"	f	struct:std::tr1::tuple_element
get	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* get() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
get	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T& get() const { return *pointer(); }$/;"	f	class:std::tr1::ThreadLocal
get	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T& get() const { return value_; }$/;"	f	class:std::tr1::ThreadLocal
get	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const typename ::std::tuple_element<I, Tuple>::type& get($/;"	f	struct:testing::internal::TuplePolicy
get_head_git_sha1	cartographer_ros/jenkins/worker.py	/^def get_head_git_sha1():$/;"	f
get_major_minor	ceres-solver/jni/assert_ndk_version.sh	/^function get_major_minor() {$/;"	f
global_J_local	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  Matrix global_J_local;$/;"	m	class:ceres::internal::MatrixParameterization	file:
global_landmark_pose	cartographer/cartographer/mapping/pose_graph_interface.h	/^    common::optional<transform::Rigid3d> global_landmark_pose;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode
global_pose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  transform::Rigid2d global_pose;$/;"	m	struct:cartographer::mapping::optimization::SubmapSpec2D
global_pose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  transform::Rigid3d global_pose;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec3D
global_pose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  transform::Rigid3d global_pose;$/;"	m	struct:cartographer::mapping::optimization::SubmapSpec3D
global_pose	cartographer/cartographer/mapping/trajectory_node.h	/^  transform::Rigid3d global_pose;$/;"	m	struct:cartographer::mapping::TrajectoryNode
global_pose	cartographer/cartographer/mapping/trajectory_node.h	/^  transform::Rigid3d global_pose;$/;"	m	struct:cartographer::mapping::TrajectoryNodePose
global_pose_2d	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  transform::Rigid2d global_pose_2d;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec2D
global_size_	ceres-solver/include/ceres/local_parameterization.h	/^  int global_size_;$/;"	m	class:ceres::ProductParameterization
global_slam_optimization_callback_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  GlobalSlamOptimizationCallback global_slam_optimization_callback_;$/;"	m	class:cartographer::mapping::PoseGraph2D
global_slam_optimization_callback_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  GlobalSlamOptimizationCallback global_slam_optimization_callback_;$/;"	m	class:cartographer::mapping::PoseGraph3D
global_test_part_result_reporter_mutex_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::Mutex global_test_part_result_reporter_mutex_;$/;"	m	class:testing::internal::UnitTestImpl	file:
global_test_part_result_repoter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestPartResultReporterInterface* global_test_part_result_repoter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
google	ceres-solver/internal/ceres/miniglog/glog/logging.cc	/^namespace google {$/;"	n	file:
google	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^namespace google {$/;"	n
gradient	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector gradient() const { return gradient_; }$/;"	f	class:ceres::internal::DoglegStrategy
gradient	ceres-solver/internal/ceres/evaluator_test_utils.h	/^  const double gradient[50];$/;"	m	struct:ceres::internal::ExpectedEvaluation
gradient	ceres-solver/internal/ceres/function_sample.h	/^  double gradient;$/;"	m	struct:ceres::internal::FunctionSample
gradient	ceres-solver/internal/ceres/line_search_minimizer.h	/^    Vector gradient;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
gradient	ceres-solver/internal/ceres/program_evaluator.h	/^    scoped_array<double> gradient;$/;"	m	struct:ceres::internal::ProgramEvaluator::EvaluateScratch
gradient_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector gradient_;$/;"	m	class:ceres::internal::DoglegStrategy
gradient_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector gradient_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
gradient_check_numeric_derivative_relative_step_size	ceres-solver/include/ceres/solver.h	/^    double gradient_check_numeric_derivative_relative_step_size;$/;"	m	struct:ceres::Solver::Options
gradient_check_relative_precision	ceres-solver/include/ceres/solver.h	/^    double gradient_check_relative_precision;$/;"	m	struct:ceres::Solver::Options
gradient_checker_	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  GradientChecker gradient_checker_;$/;"	m	class:ceres::internal::__anon179::GradientCheckingCostFunction	file:
gradient_checking_problem	ceres-solver/internal/ceres/preprocessor.h	/^  scoped_ptr<ProblemImpl> gradient_checking_problem;$/;"	m	struct:ceres::internal::PreprocessedProblem
gradient_error_detected	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^  bool gradient_error_detected() const { return gradient_error_detected_; }$/;"	f	class:ceres::internal::GradientCheckingIterationCallback
gradient_error_detected_	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^  bool gradient_error_detected_;$/;"	m	class:ceres::internal::GradientCheckingIterationCallback
gradient_evaluation_time_in_seconds	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double gradient_evaluation_time_in_seconds;$/;"	m	struct:ceres::GradientProblemSolver::Summary
gradient_evaluation_time_in_seconds	ceres-solver/internal/ceres/line_search.h	/^    double gradient_evaluation_time_in_seconds;$/;"	m	struct:ceres::internal::LineSearch::Summary
gradient_is_valid	ceres-solver/internal/ceres/function_sample.h	/^  bool gradient_is_valid;$/;"	m	struct:ceres::internal::FunctionSample
gradient_max_norm	ceres-solver/include/ceres/iteration_callback.h	/^  double gradient_max_norm;$/;"	m	struct:ceres::IterationSummary
gradient_max_norm	ceres-solver/internal/ceres/line_search_minimizer.h	/^    double gradient_max_norm;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
gradient_norm	ceres-solver/include/ceres/iteration_callback.h	/^  double gradient_norm;$/;"	m	struct:ceres::IterationSummary
gradient_squared_norm	ceres-solver/internal/ceres/line_search_minimizer.h	/^    double gradient_squared_norm;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
gradient_tolerance	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double gradient_tolerance;$/;"	m	struct:ceres::GradientProblemSolver::Options
gradient_tolerance	ceres-solver/include/ceres/solver.h	/^    double gradient_tolerance;$/;"	m	struct:ceres::Solver::Options
gradient_tolerance	ceres-solver/internal/ceres/minimizer.h	/^    double gradient_tolerance;$/;"	m	struct:ceres::internal::Minimizer::Options
graph_	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^  const WeightedGraph<int>* graph_;$/;"	m	class:ceres::internal::CanonicalViewsClustering	file:
graph_	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^  WeightedGraph<int> graph_;$/;"	m	class:ceres::internal::CanonicalViewsTest	file:
graph_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const MatchMatrix* graph_;  \/\/ not owned$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
graph_	ceres-solver/internal/ceres/graph_algorithms.h	/^  const Graph<Vertex>& graph_;$/;"	m	class:ceres::internal::VertexDegreeLessThan
graph_	ceres-solver/internal/ceres/graph_algorithms.h	/^  const Graph<Vertex>& graph_;$/;"	m	class:ceres::internal::VertexTotalOrdering
gravity_alignment	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  Eigen::Quaterniond gravity_alignment;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec2D
gravity_alignment	cartographer/cartographer/mapping/trajectory_node.h	/^    Eigen::Quaterniond gravity_alignment;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
gravity_constant	cartographer/cartographer/mapping/pose_graph_interface.h	/^    double gravity_constant = 9.8;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::TrajectoryData
gravity_time_constant_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  const double gravity_time_constant_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
gravity_vector_	cartographer/cartographer/mapping/imu_tracker.h	/^  Eigen::Vector3d gravity_vector_;$/;"	m	class:cartographer::mapping::ImuTracker
grid	cartographer/cartographer/mapping/2d/submap_2d.h	/^  const Grid2D* grid() const { return grid_.get(); }$/;"	f	class:cartographer::mapping::Submap2D
grid	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^    const Grid2D* grid;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder2D::SubmapScanMatcher
grid_	cartographer/cartographer/mapping/2d/submap_2d.h	/^  std::unique_ptr<Grid2D> grid_;$/;"	m	class:cartographer::mapping::Submap2D
grid_	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^    const Grid2D& grid_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D::GridArrayAdapter
grid_	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  const Grid2D& grid_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
grid_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const Grid& grid_;$/;"	m	class:ceres::BiCubicInterpolator
grid_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const Grid& grid_;$/;"	m	class:ceres::CubicInterpolator
grid_size	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^  static int grid_size() { return 1 << kBits; }$/;"	f	class:cartographer::mapping::FlatGrid
ground_truth	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^namespace ground_truth {$/;"	n	namespace:cartographer	file:
ground_truth	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^namespace ground_truth {$/;"	n	namespace:cartographer	file:
ground_truth	cartographer/cartographer/ground_truth/relations_text_file.cc	/^namespace ground_truth {$/;"	n	namespace:cartographer	file:
ground_truth	cartographer/cartographer/ground_truth/relations_text_file.h	/^namespace ground_truth {$/;"	n	namespace:cartographer
group_to_elements	ceres-solver/include/ceres/ordered_groups.h	/^  const std::map<int, std::set<T> >& group_to_elements() const {$/;"	f	class:ceres::OrderedGroups
group_to_elements_	ceres-solver/include/ceres/ordered_groups.h	/^  std::map<int, std::set<T> > group_to_elements_;$/;"	m	class:ceres::OrderedGroups
grpc_server_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  std::unique_ptr<async_grpc::Server> grpc_server_;$/;"	m	class:cartographer::cloud::MapBuilderServer
gtest_flag_saver_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::scoped_ptr< GTEST_FLAG_SAVER_ > gtest_flag_saver_;$/;"	m	class:testing::Test
gtest_internal	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace gtest_internal {$/;"	n	namespace:std::tr1
gtest_trace_stack	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const std::vector<TraceInfo>& gtest_trace_stack() const {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<TraceInfo>& gtest_trace_stack() {$/;"	f	class:testing::internal::UnitTestImpl
gtest_trace_stack_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;$/;"	m	class:testing::internal::UnitTestImpl	file:
handle_	ceres-solver/internal/ceres/gtest/gtest.h	/^  Handle handle_;$/;"	m	class:std::tr1::AutoHandle
handlers	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/load_state_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
handlers	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler_test.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/write_state_handler.cc	/^namespace handlers {$/;"	n	namespace:cartographer::cloud	file:
handlers	cartographer/cartographer/cloud/internal/handlers/write_state_handler.h	/^namespace handlers {$/;"	n	namespace:cartographer::cloud
has_colors_	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  bool has_colors_;$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
has_colors_	cartographer/cartographer/io/ply_writing_points_processor.h	/^  bool has_colors_;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
has_diagonal_appended_	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^  bool has_diagonal_appended_;$/;"	m	class:ceres::internal::DenseSparseMatrix
has_diagonal_reserved_	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^  bool has_diagonal_reserved_;$/;"	m	class:ceres::internal::DenseSparseMatrix
has_edits	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool has_edits() const { return adds_ || removes_; }$/;"	f	class:testing::internal::edit_distance::__anon166::Hunk
has_intensities_	cartographer/cartographer/io/ply_writing_points_processor.h	/^  bool has_intensities_;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
has_new_fatal_failure	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }$/;"	f	class:testing::internal::HasNewFatalFailureHelper
has_new_fatal_failure_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool has_new_fatal_failure_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
has_owner_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool has_owner_;$/;"	m	class:std::tr1::MutexBase
has_value	cartographer/cartographer/common/optional.h	/^  bool has_value() const { return value_ != nullptr; }$/;"	f	class:cartographer::common::optional
header	cartographer/cartographer/io/proto_stream_deserializer.h	/^  mapping::proto::SerializationHeader& header() { return header_; }$/;"	f	class:cartographer::io::ProtoStreamDeserializer
header_	cartographer/cartographer/io/proto_stream_deserializer.h	/^  mapping::proto::SerializationHeader header_;$/;"	m	class:cartographer::io::ProtoStreamDeserializer
height	cartographer/cartographer/io/image.h	/^  int height() const { return height_; }$/;"	f	class:cartographer::io::Image
height	cartographer/cartographer/io/submap_painter.h	/^  int height;$/;"	m	struct:cartographer::io::SubmapSlice
height	cartographer/cartographer/io/submap_painter.h	/^  int height;$/;"	m	struct:cartographer::io::SubmapTexture
height	ceres-solver/examples/pgm_image.h	/^int PGMImage<Real>::height() const {$/;"	f	class:ceres::examples::PGMImage
height_	cartographer/cartographer/io/image.h	/^  int height_;$/;"	m	class:cartographer::io::Image
height_	ceres-solver/examples/pgm_image.h	/^  int height_, width_;$/;"	m	class:ceres::examples::PGMImage
high_resolution_hybrid_grid	cartographer/cartographer/mapping/3d/submap_3d.h	/^  const HybridGrid& high_resolution_hybrid_grid() const {$/;"	f	class:cartographer::mapping::Submap3D
high_resolution_hybrid_grid	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^    const HybridGrid* high_resolution_hybrid_grid;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder3D::SubmapScanMatcher
high_resolution_hybrid_grid_	cartographer/cartographer/mapping/3d/submap_3d.h	/^  std::unique_ptr<HybridGrid> high_resolution_hybrid_grid_;$/;"	m	class:cartographer::mapping::Submap3D
high_resolution_point_cloud	cartographer/cartographer/mapping/trajectory_node.h	/^    sensor::PointCloud high_resolution_point_cloud;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
histogram_	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.h	/^  Eigen::VectorXf histogram_;$/;"	m	class:cartographer::mapping::scan_matching::RotationalScanMatcher
histograms_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^      histograms_;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
hit_table_	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^  const std::vector<uint16> hit_table_;$/;"	m	class:cartographer::mapping::ProbabilityGridRangeDataInserter2D
hit_table_	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	/^  const std::vector<uint16> hit_table_;$/;"	m	class:cartographer::mapping::RangeDataInserter3D
hits	cartographer/cartographer/io/outlier_removing_points_processor.h	/^    int hits = 0;$/;"	m	struct:cartographer::io::OutlierRemovingPointsProcessor::VoxelData
host_endian_type_	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int host_endian_type_;$/;"	m	class:__anon155::EndianAwareFileReader	file:
host_name_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    const string host_name_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
html_dir	ceres-solver/scripts/make_docs.py	/^html_dir   = build_root + '\/html'$/;"	v
html_domain_indices	ceres-solver/docs/source/conf.py	/^html_domain_indices = True$/;"	v
html_show_copyright	ceres-solver/docs/source/conf.py	/^html_show_copyright = True$/;"	v
html_show_sourcelink	ceres-solver/docs/source/conf.py	/^html_show_sourcelink = False$/;"	v
html_show_sphinx	ceres-solver/docs/source/conf.py	/^html_show_sphinx = False$/;"	v
html_split_index	ceres-solver/docs/source/conf.py	/^html_split_index = False$/;"	v
html_static_path	cartographer/docs/source/conf.py	/^html_static_path = []$/;"	v
html_static_path	cartographer_ros/docs/source/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	cartographer/docs/source/conf.py	/^html_theme = 'default'$/;"	v
html_theme	cartographer_ros/docs/source/conf.py	/^html_theme = 'default'$/;"	v
html_theme	ceres-solver/docs/source/conf.py	/^html_theme = 'sphinx_rtd_theme'$/;"	v
html_theme_path	ceres-solver/docs/source/conf.py	/^html_theme_path = ["_themes",]$/;"	v
html_theme_path	ceres-solver/docs/source/conf.py	/^html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]$/;"	v
html_title	ceres-solver/docs/source/conf.py	/^html_title = "Ceres Solver"$/;"	v
html_use_index	ceres-solver/docs/source/conf.py	/^html_use_index = True$/;"	v
html_use_smartypants	ceres-solver/docs/source/conf.py	/^html_use_smartypants = True$/;"	v
htmlhelp_basename	cartographer/docs/source/conf.py	/^htmlhelp_basename = 'Cartographerdoc'$/;"	v
htmlhelp_basename	cartographer_ros/docs/source/conf.py	/^htmlhelp_basename = 'CartographerROSdoc'$/;"	v
htmlhelp_basename	ceres-solver/docs/source/conf.py	/^htmlhelp_basename = 'CeresSolverdoc'$/;"	v
hunk_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
hunk_adds_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
hunk_removes_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
hybrid_grid_	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  mapping::HybridGrid hybrid_grid_;$/;"	m	class:cartographer::io::HybridGridPointsProcessor
hybrid_grid_	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^  HybridGrid hybrid_grid_;$/;"	m	class:cartographer::mapping::__anon110::RandomHybridGridTest	file:
hybrid_grid_	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  HybridGrid hybrid_grid_;$/;"	m	class:cartographer::mapping::__anon109::RangeDataInserter3DTest	file:
hybrid_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  HybridGrid hybrid_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest	file:
hybrid_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  std::unique_ptr<HybridGrid> hybrid_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest	file:
hybrid_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^  const HybridGrid& hybrid_grid_;$/;"	m	class:cartographer::mapping::scan_matching::InterpolatedGrid
hybrid_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^  HybridGrid hybrid_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon99::InterpolatedGridTest	file:
hybrid_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^  HybridGrid hybrid_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon103::RealTimeCorrelativeScanMatcher3DTest	file:
id	cartographer/cartographer/mapping/id.h	/^    IdType id;$/;"	m	struct:cartographer::mapping::MapById::IdDataReference
id	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    std::string id;$/;"	m	struct:cartographer::mapping::TrajectoryBuilderInterface::SensorId
id	cartographer/cartographer/sensor/landmark_data.h	/^  std::string id;$/;"	m	struct:cartographer::sensor::LandmarkObservation
id	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  ::cartographer::mapping::SubmapId id() const { return id_; }$/;"	f	class:cartographer_rviz::DrawableSubmap
id_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  const ::cartographer::mapping::SubmapId id_;$/;"	m	class:cartographer_rviz::DrawableSubmap
id_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  const ::cartographer::mapping::SubmapId id_;$/;"	m	class:cartographer_rviz::OgreSlice
id_begin	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  int id_begin;$/;"	m	struct:ceres::examples::Constraint2d
id_begin	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  int id_begin;$/;"	m	struct:ceres::examples::Constraint3d
id_end	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  int id_end;$/;"	m	struct:ceres::examples::Constraint2d
id_end	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  int id_end;$/;"	m	struct:ceres::examples::Constraint3d
id_to_pending_data_	cartographer/cartographer/mapping/internal/range_data_collator.h	/^  std::map<std::string, sensor::TimedPointCloudData> id_to_pending_data_;$/;"	m	class:cartographer::mapping::RangeDataCollator
identity_	ceres-solver/internal/ceres/casts.h	/^struct identity_ {$/;"	s	namespace:ceres
ids_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  IdMap ids_;$/;"	m	class:testing::internal::edit_distance::__anon165::InternalStrings	file:
image	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int image;$/;"	m	struct:__anon155::EuclideanCamera	file:
image	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int image;$/;"	m	struct:__anon155::Marker	file:
immediate_prerequisites_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ExpectationSet immediate_prerequisites_;$/;"	m	class:testing::internal::ExpectationBase
impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Impl& impl() const { return impl_; }$/;"	f	class:testing::PolymorphicMatcher
impl	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::UnitTestImpl* impl() const { return impl_; }$/;"	f	class:testing::UnitTest
impl	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::UnitTestImpl* impl() { return impl_; }$/;"	f	class:testing::UnitTest
impl_	ceres-solver/include/ceres/covariance.h	/^  internal::scoped_ptr<internal::CovarianceImpl> impl_;$/;"	m	class:ceres::Covariance
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^    Impl impl_;$/;"	m	class:testing::PolymorphicAction::MonomorphicImpl
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Impl impl_;$/;"	m	class:testing::PolymorphicMatcher::MonomorphicImpl
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::testing::internal::linked_ptr<const MatcherInterface<T> > impl_;$/;"	m	class:testing::internal::MatcherBase
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicAction
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicMatcher
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const internal::linked_ptr<ActionInterface<F2> > impl_;$/;"	m	class:testing::internal::ActionAdaptor
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::linked_ptr<ActionInterface<F> > impl_;$/;"	m	class:testing::Action
impl_	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::linked_ptr<const CardinalityInterface> impl_;$/;"	m	class:testing::Cardinality
impl_	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::UnitTestImpl* impl_;$/;"	m	class:testing::UnitTest
impl_	ceres-solver/internal/ceres/gtest/gtest.h	/^  linked_ptr<const ParamGeneratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamGenerator
impl_	ceres-solver/internal/ceres/gtest/gtest.h	/^  scoped_ptr<ParamIteratorInterface<T> > impl_;$/;"	m	class:testing::internal::ParamIterator
implicit_cast	ceres-solver/internal/ceres/casts.h	/^inline To implicit_cast(typename identity_<From>::type const &f) {$/;"	f	namespace:ceres
implicit_cast	ceres-solver/internal/ceres/casts.h	/^inline To implicit_cast(typename identity_<To>::type to) {$/;"	f	namespace:ceres
imu_angular_velocity_	cartographer/cartographer/mapping/imu_tracker.h	/^  Eigen::Vector3d imu_angular_velocity_;$/;"	m	class:cartographer::mapping::ImuTracker
imu_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  sensor::MapByTime<sensor::ImuData> imu_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
imu_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  sensor::MapByTime<sensor::ImuData> imu_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
imu_data_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  std::deque<sensor::ImuData> imu_data_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
imu_gravity_time_constant_	cartographer/cartographer/mapping/imu_tracker.h	/^  const double imu_gravity_time_constant_;$/;"	m	class:cartographer::mapping::ImuTracker
imu_sampler	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    ::cartographer::common::FixedRatioSampler imu_sampler;$/;"	m	struct:cartographer_ros::Node::TrajectorySensorSamplers
imu_sampling_ratio	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  double imu_sampling_ratio;$/;"	m	struct:cartographer_ros::TrajectoryOptions
imu_tracker_	cartographer/cartographer/mapping/imu_tracker_test.cc	/^  std::unique_ptr<ImuTracker> imu_tracker_;$/;"	m	class:cartographer::mapping::__anon54::ImuTrackerTest	file:
imu_tracker_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  std::unique_ptr<ImuTracker> imu_tracker_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
in_	cartographer/cartographer/io/proto_stream.h	/^  std::ifstream in_;$/;"	m	class:cartographer::io::ProtoStreamReader
included_files_	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  std::vector<std::string> included_files_;$/;"	m	class:cartographer::common::LuaParameterDictionary
incoming_data_list_head_	cartographer/cartographer/common/lockless_queue.h	/^  std::atomic<Node*> incoming_data_list_head_;$/;"	m	class:cartographer::common::LocklessQueue
incoming_data_queue_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^      incoming_data_queue_;$/;"	m	class:cartographer::cloud::MapBuilderServer
increase_threshold_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double increase_threshold_;$/;"	m	class:ceres::internal::DoglegStrategy
increment_death_test_count	ceres-solver/internal/ceres/gtest/gtest.h	/^  int increment_death_test_count() { return ++death_test_count_; }$/;"	f	class:testing::TestResult
increment_death_test_count	ceres-solver/internal/ceres/gtest/gtest.h	/^  int increment_death_test_count() {$/;"	f	class:testing::TestInfo
independent_set_offsets_	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^  std::vector<int> independent_set_offsets_;$/;"	m	class:ceres::internal::CoordinateDescentMinimizer
index	ceres-solver/internal/ceres/gtest/gtest.h	/^  int index() const { return index_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
index	ceres-solver/internal/ceres/gtest/gtest.h	/^  size_t index;$/;"	m	struct:testing::TestParamInfo
index	ceres-solver/internal/ceres/inner_product_computer.h	/^    int index;$/;"	m	struct:ceres::internal::InnerProductComputer::ProductTerm
index	ceres-solver/internal/ceres/parameter_block.h	/^  int index() const { return index_; }$/;"	f	class:ceres::internal::ParameterBlock
index	ceres-solver/internal/ceres/residual_block.h	/^  int index() const { return index_; }$/;"	f	class:ceres::internal::ResidualBlock
index_	ceres-solver/internal/ceres/gtest/gtest.h	/^    int index_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
index_	ceres-solver/internal/ceres/gtest/gtest.h	/^  int index_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
index_	ceres-solver/internal/ceres/parameter_block.h	/^  int32 index_;$/;"	m	class:ceres::internal::ParameterBlock
index_	ceres-solver/internal/ceres/residual_block.h	/^  int32 index_;$/;"	m	class:ceres::internal::ResidualBlock
index_into_reference_table_	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  int index_into_reference_table_;$/;"	m	class:cartographer::common::LuaParameterDictionary
indices_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  std::list<int> indices_;$/;"	m	class:ceres::internal::LowRankInverseHessian
information	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  Eigen::Matrix3d information;$/;"	m	struct:ceres::examples::Constraint2d
information	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  Eigen::Matrix<double, 6, 6> information;$/;"	m	struct:ceres::examples::Constraint3d
initial_cost	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double initial_cost;$/;"	m	struct:ceres::GradientProblemSolver::Summary
initial_cost	ceres-solver/include/ceres/solver.h	/^    double initial_cost;$/;"	m	struct:ceres::Solver::Summary
initial_evaluator_jacobian_time_in_seconds	ceres-solver/internal/ceres/line_search.h	/^  double initial_evaluator_jacobian_time_in_seconds;$/;"	m	class:ceres::internal::LineSearchFunction
initial_evaluator_residual_time_in_seconds	ceres-solver/internal/ceres/line_search.h	/^  double initial_evaluator_residual_time_in_seconds;$/;"	m	class:ceres::internal::LineSearchFunction
initial_parameters	ceres-solver/examples/nist.cc	/^  Matrix initial_parameters(int start) const { return initial_parameters_.row(start); }  \/\/ NOLINT$/;"	f	class:ceres::examples::NISTProblem
initial_parameters_	ceres-solver/examples/nist.cc	/^  Matrix initial_parameters_;$/;"	m	class:ceres::examples::NISTProblem	file:
initial_radius	ceres-solver/internal/ceres/trust_region_strategy.h	/^    double initial_radius;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
initial_trust_region_radius	ceres-solver/include/ceres/solver.h	/^    double initial_trust_region_radius;$/;"	m	struct:ceres::Solver::Options
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem14::initial_x[] = {-3.0, -1.0, -3.0, -1.0};$/;"	m	class:ceres::examples::TestProblem14	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem18::initial_x[] = {1.0, 2.0, 1.0, 1.0, 1.0, 1.0};$/;"	m	class:ceres::examples::TestProblem18	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem10::initial_x[] = {0.02, 4000, 250};$/;"	m	class:ceres::examples::TestProblem10	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem11::initial_x[] = {5.0, 2.5, 0.15};$/;"	m	class:ceres::examples::TestProblem11	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem12::initial_x[] = {0.0, 10.0, 20.0};$/;"	m	class:ceres::examples::TestProblem12	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem13::initial_x[] = {3.0, -1.0, 0.0, 1.0};$/;"	m	class:ceres::examples::TestProblem13	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem15::initial_x[] = {0.25, 0.39, 0.415, 0.39};$/;"	m	class:ceres::examples::TestProblem15	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem16::initial_x[] = {25.0, 5.0, -5.0, -1.0};$/;"	m	class:ceres::examples::TestProblem16	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem17::initial_x[] = {0.5, 1.5, -1.0, 0.01, 0.02};$/;"	m	class:ceres::examples::TestProblem17	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem19::initial_x[] = {1.3, 0.65, 0.65, 0.7, 0.6,$/;"	m	class:ceres::examples::TestProblem19	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem1::initial_x[] = {-1.2, 1.0};$/;"	m	class:ceres::examples::TestProblem1	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem2::initial_x[] = {0.5, -2.0};$/;"	m	class:ceres::examples::TestProblem2	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem3::initial_x[] = {0.0, 1.0};$/;"	m	class:ceres::examples::TestProblem3	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem4::initial_x[] = {1.0, 1.0};$/;"	m	class:ceres::examples::TestProblem4	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem5::initial_x[] = {1.0, 1.0};$/;"	m	class:ceres::examples::TestProblem5	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem6::initial_x[] = {1.0, 1.0};$/;"	m	class:ceres::examples::TestProblem6	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem7::initial_x[] = {-1.0, 0.0, 0.0};$/;"	m	class:ceres::examples::TestProblem7	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem8::initial_x[] = {1.0, 1.0, 1.0};$/;"	m	class:ceres::examples::TestProblem8	file:
initial_x	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem9::initial_x[] = {0.4, 1.0, 0.0};$/;"	m	class:ceres::examples::TestProblem9	file:
initialized_	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool initialized_;$/;"	m	class:ceres::internal::BFGS	file:
inline_space_	ceres-solver/include/ceres/internal/fixed_array.h	/^  ManualConstructor<InnerContainer> inline_space_[kInlineElements];$/;"	m	class:ceres::internal::FixedArray
inner_iteration_minimizer	ceres-solver/internal/ceres/minimizer.h	/^    shared_ptr<CoordinateDescentMinimizer> inner_iteration_minimizer;$/;"	m	struct:ceres::internal::Minimizer::Options
inner_iteration_minimizer	ceres-solver/internal/ceres/preprocessor.h	/^  shared_ptr<CoordinateDescentMinimizer> inner_iteration_minimizer;$/;"	m	struct:ceres::internal::PreprocessedProblem
inner_iteration_ordering	ceres-solver/include/ceres/solver.h	/^    shared_ptr<ParameterBlockOrdering> inner_iteration_ordering;$/;"	m	struct:ceres::Solver::Options
inner_iteration_ordering_given	ceres-solver/include/ceres/solver.h	/^    std::vector<int> inner_iteration_ordering_given;$/;"	m	struct:ceres::Solver::Summary
inner_iteration_ordering_used	ceres-solver/include/ceres/solver.h	/^    std::vector<int> inner_iteration_ordering_used;$/;"	m	struct:ceres::Solver::Summary
inner_iteration_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double inner_iteration_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
inner_iteration_tolerance	ceres-solver/include/ceres/solver.h	/^    double inner_iteration_tolerance;$/;"	m	struct:ceres::Solver::Options
inner_iteration_tolerance	ceres-solver/internal/ceres/minimizer.h	/^    double inner_iteration_tolerance;$/;"	m	struct:ceres::internal::Minimizer::Options
inner_iteration_x_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector inner_iteration_x_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
inner_iterations_are_enabled_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  bool inner_iterations_are_enabled_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
inner_iterations_given	ceres-solver/include/ceres/solver.h	/^    bool inner_iterations_given;$/;"	m	struct:ceres::Solver::Summary
inner_iterations_used	ceres-solver/include/ceres/solver.h	/^    bool inner_iterations_used;$/;"	m	struct:ceres::Solver::Summary
inner_iterations_were_useful_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  bool inner_iterations_were_useful_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
inner_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const InnerMatcher inner_matcher_;$/;"	m	class:testing::internal::ArgsMatcher
inner_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const M inner_matcher_;$/;"	m	class:testing::internal::ContainsMatcher
inner_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const M inner_matcher_;$/;"	m	class:testing::internal::EachMatcher
inner_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<const Element&> inner_matcher_;$/;"	m	class:testing::internal::QuantifierMatcherImpl
inner_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<const KeyType&> inner_matcher_;$/;"	m	class:testing::internal::KeyMatcherImpl
inner_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const MonomorphicInnerMatcher inner_matcher_;$/;"	m	class:testing::internal::ArgsMatcherImpl
inner_product_computer_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	/^  scoped_ptr<InnerProductComputer> inner_product_computer_;$/;"	m	class:ceres::internal::SparseNormalCholeskySolver
input_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  std::vector<int32>::const_iterator input_;$/;"	m	class:cartographer::sensor::CompressedPointCloud::ConstIterator
insertion_result	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^        insertion_result;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamResult
insertion_result	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^    std::unique_ptr<const InsertionResult> insertion_result;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder2D::MatchingResult
insertion_result	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^    std::unique_ptr<const InsertionResult> insertion_result;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder3D::MatchingResult
insertion_submaps	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^    std::vector<std::shared_ptr<const Submap2D>> insertion_submaps;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder2D::InsertionResult
insertion_submaps	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^    std::vector<std::shared_ptr<const mapping::Submap3D>> insertion_submaps;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder3D::InsertionResult
insertion_submaps	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    std::vector<std::shared_ptr<const Submap>> insertion_submaps;$/;"	m	struct:cartographer::mapping::TrajectoryBuilderInterface::InsertionResult
instantiations_	ceres-solver/internal/ceres/gtest/gtest.h	/^  InstantiationContainer instantiations_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
int32	ceres-solver/include/ceres/types.h	/^typedef int   int32;$/;"	t	namespace:ceres
int32	ceres-solver/internal/ceres/integral_types.h	/^typedef Integer<32>::type int32;$/;"	t	namespace:ceres::internal
int64	ceres-solver/internal/ceres/integral_types.h	/^typedef Integer<64>::type int64;$/;"	t	namespace:ceres::internal
int8	ceres-solver/internal/ceres/integral_types.h	/^typedef Integer< 8>::type int8;$/;"	t	namespace:ceres::internal
intensities	cartographer/cartographer/io/points_batch.h	/^  std::vector<float> intensities;$/;"	m	struct:cartographer::io::PointsBatch
intensities	cartographer/cartographer/sensor/point_cloud.h	/^  std::vector<float> intensities;$/;"	m	struct:cartographer::sensor::PointCloudWithIntensities
intensity	cartographer/cartographer/io/submap_painter.h	/^    std::vector<char> intensity;$/;"	m	struct:cartographer::io::SubmapTexture::Pixels
intercept_mode_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const InterceptMode intercept_mode_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
internal	cartographer/cartographer/mapping/id.h	/^namespace internal {$/;"	n	namespace:cartographer::mapping
internal	ceres-solver/include/ceres/covariance.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/internal/autodiff.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/internal/fixed_array.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/internal/manual_constructor.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/internal/numeric_diff.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/internal/scoped_ptr.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/internal/variadic_evaluate.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/include/ceres/problem.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/array_utils.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/array_utils.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/array_utils_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/autodiff_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/blas.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/blas.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_evaluate_preparer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_evaluate_preparer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_jacobi_preconditioner.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_jacobi_preconditioner_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_jacobian_writer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_jacobian_writer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_random_access_dense_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_random_access_dense_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_random_access_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_random_access_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/block_sparse_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_structure.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/block_structure.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/c_api_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/callbacks.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/callbacks.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/canonical_views_clustering.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/cgnr_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/cgnr_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/collections_port.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/compressed_row_jacobian_writer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/conjugate_gradients_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/conjugate_gradients_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/conjugate_gradients_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/corrector.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/corrector.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/corrector_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/covariance_impl.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/covariance_impl.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/covariance_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/cxsparse.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/cxsparse.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dense_linear_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dense_normal_cholesky_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dense_normal_cholesky_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dense_qr_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dense_qr_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/detect_structure.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/detect_structure.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/detect_structure_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dogleg_strategy.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dogleg_strategy.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_compressed_row_finalizer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/eigensparse.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/eigensparse.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/evaluator.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/evaluator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/evaluator_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/evaluator_test_utils.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/evaluator_test_utils.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/execution_summary.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/file.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/file.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/function_sample.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/function_sample.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_2.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_2_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_6.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_9.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_3_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_8.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_9.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_4_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_2_d_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_2.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_4_4_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/partitioned_matrix_view_d_d_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_2.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_2_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_6.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_9.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_3_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_8.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_9.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_4_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_2_d_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_2.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_3.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_4.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_4_4_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/generated/schur_eliminator_d_d_d.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/gmock/gmock.h	/^namespace internal {$/;"	n	namespace:testing
internal	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	ceres-solver/internal/ceres/gradient_checker_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/gradient_problem_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/graph.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/graph_algorithms.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/graph_algorithms_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/graph_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace internal {$/;"	n	namespace:testing
internal	ceres-solver/internal/ceres/householder_vector.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/householder_vector_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/implicit_schur_complement.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/inner_product_computer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/inner_product_computer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/inner_product_computer_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/integral_types.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/invert_psd_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/is_close.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/is_close.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/is_close_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/iterative_schur_complement_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/jet_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/lapack.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/lapack.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/line_search.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/line_search.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/line_search_direction.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/line_search_direction.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/line_search_minimizer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/line_search_minimizer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/line_search_minimizer_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/line_search_preprocessor.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/line_search_preprocessor.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/line_search_preprocessor_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/linear_least_squares_problems.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/linear_operator.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/linear_operator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/linear_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/linear_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/local_parameterization_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/loss_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/low_rank_inverse_hessian.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/minimizer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/minimizer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/minimizer_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/mutex.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/normal_prior_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/ordered_groups_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/parameter_block.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/parameter_block_ordering.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/parameter_block_ordering.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/parameter_block_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/partitioned_matrix_view.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/polynomial.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/polynomial.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/polynomial_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/preconditioner.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/preconditioner.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/preprocessor.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/preprocessor.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/problem_impl.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/problem_impl.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/problem_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/program.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/program.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/program_evaluator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/program_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/reorder_program.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/reorder_program.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/reorder_program_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/residual_block.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/residual_block.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/residual_block_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/residual_block_utils.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/residual_block_utils.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/residual_block_utils_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/rotation_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_complement_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_complement_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_eliminator.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_eliminator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/schur_templates.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/schur_templates.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/scratch_evaluate_preparer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/scratch_evaluate_preparer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/single_linkage_clustering.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/single_linkage_clustering.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/single_linkage_clustering_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/small_blas.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/small_blas_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/solver_utils.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/solver_utils.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/sparse_cholesky.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/sparse_cholesky.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/sparse_cholesky_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/sparse_normal_cholesky_solver_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/split.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/split.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/stringprintf.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/stringprintf.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/suitesparse.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/suitesparse.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/system_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/test_util.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/test_util.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/triplet_sparse_matrix_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_minimizer.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_preprocessor.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_step_evaluator.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/trust_region_strategy.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/trust_region_strategy.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/visibility.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/visibility.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^namespace internal {$/;"	n	namespace:ceres
internal	ceres-solver/internal/ceres/visibility_based_preconditioner_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/visibility_test.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/wall_time.cc	/^namespace internal {$/;"	n	namespace:ceres	file:
internal	ceres-solver/internal/ceres/wall_time.h	/^namespace internal {$/;"	n	namespace:ceres
internal2	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^namespace internal2 {$/;"	n	namespace:testing	file:
internal2	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace internal2 {$/;"	n	namespace:testing
internal_run_death_test_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string internal_run_death_test_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
internal_run_death_test_flag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;"	f	class:testing::internal::UnitTestImpl
internal_run_death_test_flag_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::scoped_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;"	m	class:testing::internal::UnitTestImpl	file:
interpolated_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^  InterpolatedGrid interpolated_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon99::InterpolatedGridTest	file:
interpolated_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  const InterpolatedGrid interpolated_grid_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
interpolation_parameter_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  const double interpolation_parameter_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction2D
interpolation_parameter_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  const double interpolation_parameter_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction3D
interpolation_type	ceres-solver/internal/ceres/line_search.h	/^    LineSearchInterpolationType interpolation_type;$/;"	m	struct:ceres::internal::LineSearch::Options
interpolator_	ceres-solver/examples/sampled_function/sampled_function.cc	/^  const CubicInterpolator<Grid1D<double> >& interpolator_;$/;"	m	struct:InterpolatedCostFunctor	file:
intersphinx_mapping	cartographer_ros/docs/source/conf.py	/^intersphinx_mapping = {$/;"	v
inverse	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid2 inverse() const {$/;"	f	class:cartographer::transform::Rigid2
inverse	cartographer/cartographer/transform/rigid_transform.h	/^  Rigid3 inverse() const {$/;"	f	class:cartographer::transform::Rigid3
inverse_hessian_	ceres-solver/internal/ceres/line_search_direction.cc	/^  Matrix inverse_hessian_;$/;"	m	class:ceres::internal::BFGS	file:
invoke_argument	ceres-solver/internal/ceres/gmock/gmock.h	/^namespace invoke_argument {$/;"	n	namespace:testing::internal
io	cartographer/cartographer/io/color.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/color.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/coloring_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/coloring_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/counting_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/counting_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/draw_trajectories.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/draw_trajectories.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/fake_file_writer.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/fake_file_writer.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/fake_file_writer_test.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/file_writer.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/file_writer.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/frame_id_filtering_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/hybrid_grid_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/image.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/image.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/intensity_to_color_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/internal/in_memory_proto_stream.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/internal/mapping_state_serialization.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/internal/mapping_state_serialization.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/min_max_range_filtering_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/null_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/outlier_removing_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/outlier_removing_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/pcd_writing_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/pcd_writing_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/ply_writing_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/ply_writing_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/points_batch.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/points_batch.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/points_processor_pipeline_builder.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/points_processor_pipeline_builder.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/points_processor_pipeline_builder_test.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/probability_grid_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/probability_grid_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/proto_stream.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/proto_stream.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/proto_stream_deserializer.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/proto_stream_deserializer.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/proto_stream_interface.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/proto_stream_test.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/serialization_format_migration.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/serialization_format_migration.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/serialization_format_migration_test.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/submap_painter.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/submap_painter.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/xray_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/xray_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
io	cartographer/cartographer/io/xyz_writing_points_processor.cc	/^namespace io {$/;"	n	namespace:cartographer	file:
io	cartographer/cartographer/io/xyz_writing_points_processor.h	/^namespace io {$/;"	n	namespace:cartographer
is_closed_	cartographer/cartographer/io/fake_file_writer.h	/^  bool is_closed_;$/;"	m	class:cartographer::io::FakeFileWriter
is_computed_	ceres-solver/internal/ceres/covariance_impl.h	/^  bool is_computed_;$/;"	m	class:ceres::internal::CovarianceImpl
is_constant_	ceres-solver/internal/ceres/parameter_block.h	/^  bool is_constant_;$/;"	m	class:ceres::internal::ParameterBlock
is_constrained	ceres-solver/include/ceres/solver.h	/^    bool is_constrained;$/;"	m	struct:ceres::Solver::Summary
is_constrained	ceres-solver/internal/ceres/minimizer.h	/^    bool is_constrained;$/;"	m	struct:ceres::internal::Minimizer::Options
is_disabled_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool is_disabled_;                \/\/ True iff this test is disabled$/;"	m	class:testing::TestInfo
is_nan	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool is_nan() const {$/;"	f	class:testing::internal::FloatingPoint
is_not_silent_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  bool is_not_silent_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
is_pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^struct is_pointer : public false_type {};$/;"	s	namespace:std::tr1
is_pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^struct is_pointer<T*> : public true_type {};$/;"	s	namespace:std::tr1
is_positive_definite_	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool is_positive_definite_;$/;"	m	class:ceres::internal::BFGS	file:
is_positive_definite_	ceres-solver/internal/ceres/line_search_direction.cc	/^  bool is_positive_definite_;$/;"	m	class:ceres::internal::LBFGS	file:
is_reference	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct is_reference : public false_type {};$/;"	s	namespace:testing::internal
is_reference	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct is_reference<T&> : public true_type {};$/;"	s	namespace:testing::internal
is_reportable	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool is_reportable() const {$/;"	f	class:testing::TestInfo
is_safe_	ceres-solver/internal/ceres/mutex.h	/^  volatile bool is_safe_;$/;"	m	class:ceres::internal::Mutex
is_silent	ceres-solver/internal/ceres/line_search.h	/^    bool is_silent;$/;"	m	struct:ceres::internal::LineSearch::Options
is_silent	ceres-solver/internal/ceres/minimizer.h	/^    bool is_silent;$/;"	m	struct:ceres::internal::Minimizer::Options
is_steady	cartographer/cartographer/common/time.h	/^  static constexpr bool is_steady = true;$/;"	m	struct:cartographer::common::UniversalTimeScaleClock
is_valid_	ceres-solver/internal/ceres/covariance_impl.h	/^  bool is_valid_;$/;"	m	class:ceres::internal::CovarianceImpl
is_valid_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool is_valid_;$/;"	m	class:std::tr1::RE
iteration	ceres-solver/include/ceres/iteration_callback.h	/^  int32 iteration;$/;"	m	struct:ceres::IterationSummary
iteration_start_time_in_secs_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double iteration_start_time_in_secs_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
iteration_summary_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  IterationSummary iteration_summary_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
iteration_time_in_seconds	ceres-solver/include/ceres/iteration_callback.h	/^  double iteration_time_in_seconds;$/;"	m	struct:ceres::IterationSummary
iterations	ceres-solver/include/ceres/gradient_problem_solver.h	/^    std::vector<IterationSummary> iterations;$/;"	m	struct:ceres::GradientProblemSolver::Summary
iterations	ceres-solver/include/ceres/solver.h	/^    std::vector<IterationSummary> iterations;$/;"	m	struct:ceres::Solver::Summary
iterator	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef T* iterator;$/;"	t	class:ceres::internal::FixedArray
iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Element* iterator;$/;"	t	class:testing::internal::NativeArray
iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef ParamIterator<T> iterator;$/;"	t	class:testing::internal::ParamGenerator
iterator_	cartographer/cartographer/sensor/map_by_time.h	/^    typename std::map<common::Time, DataType>::const_iterator iterator_;$/;"	m	class:cartographer::sensor::MapByTime::ConstIterator
iterator_	ceres-solver/internal/ceres/gtest/gtest.h	/^    typename ContainerType::const_iterator iterator_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
jacobi_scaling	ceres-solver/include/ceres/solver.h	/^    bool jacobi_scaling;$/;"	m	struct:ceres::Solver::Options
jacobi_scaling	ceres-solver/internal/ceres/minimizer.h	/^    bool jacobi_scaling;$/;"	m	struct:ceres::internal::Minimizer::Options
jacobian	ceres-solver/internal/ceres/evaluator_test_utils.h	/^  const double jacobian[200];$/;"	m	struct:ceres::internal::ExpectedEvaluation
jacobian	ceres-solver/internal/ceres/minimizer.h	/^    shared_ptr<SparseMatrix> jacobian;$/;"	m	struct:ceres::internal::Minimizer::Options
jacobian1_	ceres-solver/internal/ceres/covariance_test.cc	/^  vector<double> jacobian1_;$/;"	m	class:ceres::internal::BinaryCostFunction	file:
jacobian2_	ceres-solver/internal/ceres/covariance_test.cc	/^  vector<double> jacobian2_;$/;"	m	class:ceres::internal::BinaryCostFunction	file:
jacobian_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  JacobianType jacobian_;$/;"	m	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
jacobian_	ceres-solver/internal/ceres/covariance_test.cc	/^  vector<double> jacobian_;$/;"	m	class:ceres::internal::UnaryCostFunction	file:
jacobian_	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^  scoped_ptr<DenseSparseMatrix> jacobian_;$/;"	m	class:ceres::internal::__anon178::Fixture	file:
jacobian_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  SparseMatrix* jacobian_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
jacobian_block_ptrs	ceres-solver/internal/ceres/program_evaluator.h	/^    scoped_array<double*> jacobian_block_ptrs;$/;"	m	struct:ceres::internal::ProgramEvaluator::EvaluateScratch
jacobian_evaluation_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double jacobian_evaluation_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
jacobian_layout_	ceres-solver/internal/ceres/block_evaluate_preparer.h	/^  int const* const* jacobian_layout_;$/;"	m	class:ceres::internal::BlockEvaluatePreparer
jacobian_layout_	ceres-solver/internal/ceres/block_jacobian_writer.h	/^  std::vector<int*> jacobian_layout_;$/;"	m	class:ceres::internal::BlockJacobianWriter
jacobian_layout_storage_	ceres-solver/internal/ceres/block_jacobian_writer.h	/^  std::vector<int> jacobian_layout_storage_;$/;"	m	class:ceres::internal::BlockJacobianWriter
jacobian_offsets_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  std::map<int, Matrix> jacobian_offsets_;$/;"	m	class:ceres::internal::LinearCostFunction	file:
jacobian_ptrs_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  std::array<double*, kParameterBlocksCount> jacobian_ptrs_;$/;"	m	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
jacobian_scaling_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector jacobian_scaling_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
jacobian_scratch_	ceres-solver/internal/ceres/scratch_evaluate_preparer.h	/^  scoped_array<double> jacobian_scratch_;$/;"	m	class:ceres::internal::ScratchEvaluatePreparer
jacobian_vect_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<vector<double> > jacobian_vect_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
jacobian_vect_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<vector<double> > jacobian_vect_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
jacobian_vect_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<vector<double> > jacobian_vect_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
jacobian_writer_	ceres-solver/internal/ceres/program_evaluator.h	/^  JacobianWriter jacobian_writer_;$/;"	m	class:ceres::internal::ProgramEvaluator
jacobians	ceres-solver/include/ceres/gradient_checker.h	/^    std::vector<Matrix> jacobians;$/;"	m	struct:ceres::GradientChecker::ProbeResults
join_new	ceres-solver/internal/ceres/gtest/gtest.h	/^  void join_new() {$/;"	f	class:testing::internal::linked_ptr_internal
kActive	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  enum class SubmapState { kActive, kFinished };$/;"	m	class:cartographer::mapping::PoseGraph2D::SubmapState
kActive	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  enum class SubmapState { kActive, kFinished };$/;"	m	class:cartographer::mapping::PoseGraph3D::SubmapState
kAdd	ceres-solver/internal/ceres/gtest/gtest.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kAfter	ceres-solver/internal/ceres/gmock/gmock.h	/^    kAfter,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kAlignOrNot	ceres-solver/include/ceres/jet.h	/^  static constexpr int kAlignOrNot =$/;"	m	struct:ceres::Jet
kAlignment	ceres-solver/include/ceres/jet.h	/^  static constexpr size_t kAlignment = kAlignOrNot == Eigen::AutoAlign$/;"	m	struct:ceres::Jet
kAllTrajectoryBuilderOptionsProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kAllTrajectoryBuilderOptionsProtoString[] =$/;"	m	namespace:cartographer::io::__anon22	file:
kAllow	ceres-solver/internal/ceres/gmock/gmock.h	/^  kAllow,$/;"	e	enum:testing::internal::CallReaction
kAlphaUpdateThreshold	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^constexpr float kAlphaUpdateThreshold = 0.2f;$/;"	m	namespace:cartographer_rviz::__anon148	file:
kAlsoRunDisabledTestsFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparator	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kAlternatePathSeparator = '\/';$/;"	m	namespace:testing::internal	file:
kAlternatePathSeparatorString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kAlternatePathSeparatorString[] = "\/";$/;"	m	namespace:testing::internal	file:
kAsIs	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  kAsIs,$/;"	e	enum:testing::internal::CharFormat	file:
kAutomaticOrdering	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^const bool kAutomaticOrdering = true;$/;"	m	namespace:ceres::internal	file:
kAutomaticOrdering	ceres-solver/internal/ceres/system_test.cc	/^const bool kAutomaticOrdering = true;$/;"	m	namespace:ceres::internal	file:
kBigEndian	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  static const long int kBigEndian = 0x00010203ul;$/;"	m	class:__anon155::EndianAwareFileReader	file:
kBitCount	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const size_t kBitCount = 8*sizeof(RawType);$/;"	m	class:testing::internal::FloatingPoint
kBitsPerCoordinate	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^constexpr int kBitsPerCoordinate = 10;$/;"	m	namespace:cartographer::sensor::__anon117	file:
kBool	ceres-solver/internal/ceres/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kBreakOnFailureFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kBreakOnFailureFlag[] = "break_on_failure";$/;"	m	namespace:testing::internal	file:
kCairoFormat	cartographer/cartographer/io/image.h	/^constexpr cairo_format_t kCairoFormat = CAIRO_FORMAT_ARGB32;$/;"	m	namespace:cartographer::io
kCanonicalViewsSimilarityPenaltyWeight	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^static const double kCanonicalViewsSimilarityPenaltyWeight = 0.0;$/;"	m	namespace:ceres::internal	file:
kCanonicalViewsSizePenaltyWeight	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^static const double kCanonicalViewsSizePenaltyWeight = 3.0;$/;"	m	namespace:ceres::internal	file:
kCatchExceptionsFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kCatchExceptionsFlag[] = "catch_exceptions";$/;"	m	namespace:testing::internal	file:
kCeresScanMatcherCostMetric	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^static auto* kCeresScanMatcherCostMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping	file:
kCeresScanMatcherCostMetric	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^static auto* kCeresScanMatcherCostMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping	file:
kCheckTypeIsNotConstOrAReference	ceres-solver/internal/ceres/gtest/gtest.h	/^    kCheckTypeIsNotConstOrAReference = StaticAssertTypeEqHelper<$/;"	e	enum:testing::internal::NativeArray::__anon177
kClockPublishFrequencySec	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^constexpr double kClockPublishFrequencySec = 1. \/ 30.;$/;"	m	namespace:cartographer_ros	file:
kClockTopic	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^constexpr char kClockTopic[] = "clock";$/;"	m	namespace:cartographer_ros	file:
kColorEncodedHelpMessage	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kColorEncodedHelpMessage[] =$/;"	m	namespace:testing::internal	file:
kColorFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kColorFlag[] = "color";$/;"	m	namespace:testing::internal	file:
kConfigurationFileActionName	cartographer/cartographer/io/coloring_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "color_points";$/;"	m	class:cartographer::io::ColoringPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/counting_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "dump_num_points";$/;"	m	class:cartographer::io::CountingPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::FixedRatioSamplingPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "frame_id_filter";$/;"	m	class:cartographer::io::FrameIdFilteringPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::HybridGridPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "write_pcd";$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/ply_writing_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "write_ply";$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/probability_grid_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/xray_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName =$/;"	m	class:cartographer::io::XRayPointsProcessor
kConfigurationFileActionName	cartographer/cartographer/io/xyz_writing_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "write_xyz";$/;"	m	class:cartographer::io::XyzWriterPointsProcessor
kConfigurationFileActionName	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  constexpr static const char* kConfigurationFileActionName = "write_ros_map";$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
kConnectionTimeoutInSecond	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^constexpr int kConnectionTimeoutInSecond = 10;$/;"	m	namespace:cartographer::cloud::__anon33	file:
kConnectionTimeoutInSecond	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^constexpr int kConnectionTimeoutInSecond = 10;$/;"	m	namespace:cartographer::cloud::__anon37	file:
kConstraintListTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kConstraintListTopic[] = "constraint_list";$/;"	m	namespace:cartographer_ros
kConstraintLowResolutionScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kConstraintLowResolutionScoresMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintMarkerScale	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^constexpr double kConstraintMarkerScale = 0.025;$/;"	m	namespace:cartographer_ros::__anon140	file:
kConstraintPublishPeriodSec	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr double kConstraintPublishPeriodSec = 0.5;$/;"	m	namespace:cartographer_ros
kConstraintRotationalScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kConstraintRotationalScoresMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kConstraintScoresMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kConstraintScoresMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintsFoundMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kConstraintsFoundMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintsFoundMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kConstraintsFoundMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintsSearchedMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kConstraintsSearchedMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConstraintsSearchedMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kConstraintsSearchedMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kConvertibleToInteger	ceres-solver/internal/ceres/gtest/gtest.h	/^  kConvertibleToInteger,  \/\/ a type implicitly convertible to BiggestInt$/;"	e	enum:testing::internal2::TypeKind
kCoordinateMask	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^constexpr int kCoordinateMask = (1 << kBitsPerCoordinate) - 1;$/;"	m	namespace:cartographer::sensor::__anon117	file:
kCounter	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^static auto* kCounter = ::cartographer::metrics::Counter::Null();$/;"	m	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
kCurrentDirectoryString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kCurrentDirectoryString[] = ".\\\\";$/;"	m	namespace:testing::internal	file:
kCurrentDirectoryString	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kCurrentDirectoryString[] = "\\\\";$/;"	m	namespace:testing::internal	file:
kDeathTestCaseFilter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDeathTestCaseFilter[] = "*DeathTest:*DeathTest\/*";$/;"	m	namespace:testing	file:
kDeathTestInternalError	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDeathTestInternalError = 'I';$/;"	m	namespace:testing::internal	file:
kDeathTestLived	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDeathTestLived = 'L';$/;"	m	namespace:testing::internal	file:
kDeathTestReturned	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDeathTestReturned = 'R';$/;"	m	namespace:testing::internal	file:
kDeathTestStyleFlag	ceres-solver/internal/ceres/gtest/gtest.h	/^const char kDeathTestStyleFlag[] = "death_test_style";$/;"	m	namespace:testing::internal
kDeathTestThrew	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDeathTestThrew = 'T';$/;"	m	namespace:testing::internal	file:
kDeathTestUseFork	ceres-solver/internal/ceres/gtest/gtest.h	/^const char kDeathTestUseFork[] = "death_test_use_fork";$/;"	m	namespace:testing::internal
kDefault	ceres-solver/internal/ceres/gmock/gmock.h	/^  kDefault = kWarn  \/\/ By default, warn about uninteresting calls.$/;"	e	enum:testing::internal::CallReaction
kDefaultDeathTestStyle	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDefaultDeathTestStyle[] = "fast";$/;"	m	namespace:testing	file:
kDefaultOutputFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDefaultOutputFile[] = "test_detail.xml";$/;"	m	namespace:testing	file:
kDefaultSubmapQueryServiceName	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^constexpr char kDefaultSubmapQueryServiceName[] = "\/submap_query";$/;"	m	namespace:cartographer_rviz::__anon147	file:
kDefaultTrackingFrame	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^constexpr char kDefaultTrackingFrame[] = "base_link";$/;"	m	namespace:cartographer_rviz::__anon147	file:
kDelay	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^const ::ros::Duration kDelay = ::ros::Duration(1.0);$/;"	m	namespace:cartographer_ros	file:
kDisableTestFilter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kDisableTestFilter[] = "DISABLED_*:*\/DISABLED_*";$/;"	m	namespace:testing	file:
kDoubleMax	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double kDoubleMax = std::numeric_limits<double>::max();$/;"	m	namespace:ceres::examples	file:
kDuration	cartographer/cartographer/cloud/internal/client_server_test.cc	/^constexpr double kDuration = 4.;         \/\/ Seconds.$/;"	m	namespace:cartographer::cloud::__anon48	file:
kDuration	cartographer/cartographer/mapping/imu_tracker_test.cc	/^constexpr double kDuration = 3.f;$/;"	m	namespace:cartographer::mapping::__anon54	file:
kDuration	cartographer/cartographer/mapping/map_builder_test.cc	/^constexpr double kDuration = 4.;         \/\/ Seconds.$/;"	m	namespace:cartographer::mapping::__anon55	file:
kDynamic	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	e	enum:std::tr1::Mutex::MutexType
kE	ceres-solver/internal/ceres/jet_test.cc	/^const double kE = 2.71828182845904523536;$/;"	m	namespace:ceres::internal	file:
kElidedFramesMarker	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static const char* const kElidedFramesMarker;$/;"	m	class:testing::internal::OsStackTraceGetterInterface	file:
kElidedFramesMarker	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* const OsStackTraceGetterInterface::kElidedFramesMarker =$/;"	m	class:testing::internal::OsStackTraceGetterInterface	file:
kEps	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion_test.cc	/^constexpr double kEps = 1e-6;$/;"	m	namespace:cartographer_ros::__anon145	file:
kEpsilon	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^const double kEpsilon = std::numeric_limits<double>::epsilon();$/;"	m	namespace:ceres::internal::__anon178	file:
kEpsilon	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^const double kEpsilon = 1e-14;$/;"	m	namespace:ceres::internal	file:
kEpsilon	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^const double kEpsilon = 1e-14;$/;"	m	namespace:ceres::internal	file:
kEpsilon	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^const double kEpsilon = 1e-14;$/;"	m	namespace:ceres::internal	file:
kEpsilon	ceres-solver/internal/ceres/polynomial_test.cc	/^const double kEpsilon = 1e-13;$/;"	m	namespace:ceres::internal::__anon163	file:
kEpsilonLoose	ceres-solver/internal/ceres/polynomial_test.cc	/^const double kEpsilonLoose = 1e-9;$/;"	m	namespace:ceres::internal::__anon163	file:
kErrorMessageNumericPrecision	ceres-solver/internal/ceres/line_search.cc	/^const int kErrorMessageNumericPrecision = 8;$/;"	m	namespace:ceres::internal::__anon191	file:
kErrorVerbosity	ceres-solver/internal/ceres/gmock/gmock.h	/^const char kErrorVerbosity[] = "error";$/;"	m	namespace:testing::internal
kExponentBitCount	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;$/;"	m	class:testing::internal::FloatingPoint
kExponentBitMask	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);$/;"	m	class:testing::internal::FloatingPoint
kExtrapolateDuration	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^constexpr double kExtrapolateDuration = 0.1f;$/;"	m	namespace:cartographer::mapping::__anon67	file:
kExtrapolatePrecision	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^constexpr double kExtrapolatePrecision = 1e-2;$/;"	m	namespace:cartographer::mapping::__anon67	file:
kFail	ceres-solver/internal/ceres/gmock/gmock.h	/^  kFail,$/;"	e	enum:testing::internal::CallReaction
kFastCorrelativeScanMatcherScoreMetric	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^static auto* kFastCorrelativeScanMatcherScoreMetric =$/;"	m	namespace:cartographer::mapping	file:
kFatalFailure	ceres-solver/internal/ceres/gtest/gtest.h	/^    kFatalFailure      \/\/ Failed and the test should be terminated.$/;"	e	enum:testing::TestPartResult::Type
kFilterFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kFilterFlag[] = "filter";$/;"	m	namespace:testing::internal	file:
kFinishTrajectoryServiceName	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kFinishTrajectoryServiceName[] = "finish_trajectory";$/;"	m	namespace:cartographer_ros
kFinished	cartographer/cartographer/io/points_processor.h	/^    kFinished,$/;"	m	class:cartographer::io::PointsProcessor::FlushResult
kFixedFramePoseDataProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kFixedFramePoseDataProtoString[] = "fixed_frame_pose_data {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kFlagfileFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kFlagfileFlag[] = "flagfile";$/;"	m	namespace:testing::internal	file:
kFloatingPoint	ceres-solver/internal/ceres/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kFractionBitCount	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const size_t kFractionBitCount =$/;"	m	class:testing::internal::FloatingPoint
kFractionBitMask	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const Bits kFractionBitMask =$/;"	m	class:testing::internal::FloatingPoint
kFullRank	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^static const bool kFullRank = true;$/;"	m	namespace:ceres::internal	file:
kGauge	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^static auto* kGauge = ::cartographer::metrics::Gauge::Null();$/;"	m	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
kGlobalConstraintLowResolutionScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kGlobalConstraintLowResolutionScoresMetric =$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintRotationalScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kGlobalConstraintRotationalScoresMetric =$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kGlobalConstraintScoresMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintScoresMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kGlobalConstraintScoresMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintsFoundMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kGlobalConstraintsFoundMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintsFoundMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kGlobalConstraintsFoundMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintsSearchedMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kGlobalConstraintsSearchedMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlobalConstraintsSearchedMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kGlobalConstraintsSearchedMetric = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kGlsl120Directory	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^constexpr char kGlsl120Directory[] = "\/glsl120";$/;"	m	namespace:cartographer_rviz::__anon147	file:
kGravityTimeConstant	cartographer/cartographer/mapping/imu_tracker_test.cc	/^constexpr double kGravityTimeConstant = 0.1 * kDuration;$/;"	m	namespace:cartographer::mapping::__anon54	file:
kGravityTimeConstant	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^constexpr double kGravityTimeConstant = 0.1f;$/;"	m	namespace:cartographer::mapping::__anon67	file:
kHalfSqrt2	ceres-solver/internal/ceres/rotation_test.cc	/^const double kHalfSqrt2 = 0.707106781186547524401;$/;"	m	namespace:ceres::internal	file:
kHexEscape	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  kHexEscape,$/;"	e	enum:testing::internal::CharFormat	file:
kImpossibleValue	ceres-solver/include/ceres/types.h	/^const double kImpossibleValue = 1e302;$/;"	m	namespace:ceres
kImuDataProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kImuDataProtoString[] = "imu_data {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kImuTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kImuTopic[] = "imu";$/;"	m	namespace:cartographer_ros
kInSequence	ceres-solver/internal/ceres/gmock/gmock.h	/^    kInSequence,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kIncomingDataQueueMetric	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^static auto* kIncomingDataQueueMetric = metrics::Gauge::Null();$/;"	m	namespace:cartographer::cloud::__anon36	file:
kInfiniteQueueSize	cartographer/cartographer/common/blocking_queue.h	/^  static constexpr size_t kInfiniteQueueSize = 0;$/;"	m	class:cartographer::common::BlockingQueue
kInfiniteSubscriberQueueSize	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr int kInfiniteSubscriberQueueSize = 0;$/;"	m	namespace:cartographer_ros
kInfo	ceres-solver/internal/ceres/gmock/gmock.h	/^  kInfo = 0,$/;"	e	enum:testing::internal::LogSeverity
kInfoVerbosity	ceres-solver/internal/ceres/gmock/gmock.h	/^const char kInfoVerbosity[] = "info";$/;"	m	namespace:testing::internal
kInitialHue	cartographer/cartographer/io/color.cc	/^constexpr float kInitialHue = 0.69f;$/;"	m	namespace:cartographer::io::__anon12	file:
kInlineElements	ceres-solver/include/ceres/internal/fixed_array.h	/^  static const size_type kInlineElements = S2;$/;"	m	class:ceres::internal::FixedArray
kInteger	ceres-solver/internal/ceres/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kInternalRunDeathTestFlag	ceres-solver/internal/ceres/gtest/gtest.h	/^const char kInternalRunDeathTestFlag[] = "internal_run_death_test";$/;"	m	namespace:testing::internal
kInvalidFileAttributes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const DWORD kInvalidFileAttributes = 0xffffffff;$/;"	m	namespace:testing::internal	file:
kJacobianColDimension	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^constexpr int kJacobianColDimension = kResidualsCount * kPoseDimension;$/;"	m	namespace:cartographer::mapping::optimization::__anon91	file:
kLBFGSSecantConditionHessianUpdateTolerance	ceres-solver/internal/ceres/low_rank_inverse_hessian.cc	/^const double kLBFGSSecantConditionHessianUpdateTolerance = 1e-14;$/;"	m	namespace:ceres::internal	file:
kLabelKey	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^const char kLabelKey[] = "kind";$/;"	m	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
kLabelValue	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^const char kLabelValue[] = "score";$/;"	m	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
kLandmarkDataProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kLandmarkDataProtoString[] = "landmark_data {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kLandmarkMarkerScale	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^constexpr double kLandmarkMarkerScale = 0.3;$/;"	m	namespace:cartographer_ros::__anon140	file:
kLandmarkPosesListTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kLandmarkPosesListTopic[] = "landmark_poses_list";$/;"	m	namespace:cartographer_ros
kLandmarkTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kLandmarkTopic[] = "landmark";$/;"	m	namespace:cartographer_ros
kLaserScanTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kLaserScanTopic[] = "scan";$/;"	m	namespace:cartographer_ros
kLatestOnlyPublisherQueueSize	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr int kLatestOnlyPublisherQueueSize = 1;$/;"	m	namespace:cartographer_ros
kLevelHeightMeters	cartographer/cartographer/mapping/detect_floors.cc	/^constexpr double kLevelHeightMeters = 2.5;$/;"	m	namespace:cartographer::mapping::__anon62	file:
kListTestsFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kListTestsFlag[] = "list_tests";$/;"	m	namespace:testing::internal	file:
kLittleEndian	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  static const long int kLittleEndian = 0x03020100ul;$/;"	m	class:__anon155::EndianAwareFileReader	file:
kLocalSlamInsertionResults	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^static auto* kLocalSlamInsertionResults = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::__anon84	file:
kLocalSlamLatencyMetric	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^static auto* kLocalSlamLatencyMetric = metrics::Gauge::Null();$/;"	m	namespace:cartographer::mapping	file:
kLocalSlamLatencyMetric	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^static auto* kLocalSlamLatencyMetric = metrics::Gauge::Null();$/;"	m	namespace:cartographer::mapping	file:
kLocalSlamMatchingResults	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^static auto* kLocalSlamMatchingResults = metrics::Counter::Null();$/;"	m	namespace:cartographer::mapping::__anon84	file:
kLooseTolerance	ceres-solver/internal/ceres/rotation_test.cc	/^static double const kLooseTolerance = 1e-9;$/;"	m	namespace:ceres::internal	file:
kMagic	cartographer/cartographer/io/proto_stream.cc	/^const uint64 kMagic = 0x7b1d1f7b5bf501db;$/;"	m	namespace:cartographer::io::__anon17	file:
kManualObjectPrefix	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^constexpr char kManualObjectPrefix[] = "ManualObjectSubmap";$/;"	m	namespace:cartographer_rviz::__anon146	file:
kMappingStateSerializationFormatVersion	cartographer/cartographer/io/internal/mapping_state_serialization.h	/^static constexpr int kMappingStateSerializationFormatVersion = 1;$/;"	m	namespace:cartographer::io
kMatch	ceres-solver/internal/ceres/gtest/gtest.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kMaterialsDirectory	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^constexpr char kMaterialsDirectory[] = "\/ogre_media\/materials";$/;"	m	namespace:cartographer_rviz::__anon147	file:
kMaxAlignBytes	ceres-solver/include/ceres/internal/port.h	/^static constexpr size_t kMaxAlignBytes =$/;"	m	namespace:ceres::port_constants
kMaxAverageAcceleration	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kMaxAverageAcceleration = 10.5;$/;"	m	namespace:cartographer_ros::__anon128	file:
kMaxBiggestInt	ceres-solver/internal/ceres/gtest/gtest.h	/^const BiggestInt kMaxBiggestInt =$/;"	m	namespace:std::tr1
kMaxBitsPerDirection	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^constexpr int kMaxBitsPerDirection = 23;$/;"	m	namespace:cartographer::sensor::__anon117	file:
kMaxCodePoint1	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const UInt32 kMaxCodePoint1 = (static_cast<UInt32>(1) <<  7) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint2	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const UInt32 kMaxCodePoint2 = (static_cast<UInt32>(1) << (5 + 6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint3	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const UInt32 kMaxCodePoint3 = (static_cast<UInt32>(1) << (4 + 2*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCodePoint4	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const UInt32 kMaxCodePoint4 = (static_cast<UInt32>(1) << (3 + 3*6)) - 1;$/;"	m	namespace:testing::internal	file:
kMaxCorrespondenceCost	cartographer/cartographer/mapping/probability_values.h	/^constexpr float kMaxCorrespondenceCost = 1.f - kMinProbability;$/;"	m	namespace:cartographer::mapping
kMaxDistance	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^constexpr float kMaxDistance = 0.9f;$/;"	m	namespace:cartographer::mapping::scan_matching::__anon98	file:
kMaxGapImuData	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kMaxGapImuData = 0.05;$/;"	m	namespace:cartographer_ros::__anon128	file:
kMaxGapPointsData	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kMaxGapPointsData = 0.1;$/;"	m	namespace:cartographer_ros::__anon128	file:
kMaxLinearAcceleration	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kMaxLinearAcceleration = 30.;$/;"	m	namespace:cartographer_ros::__anon128	file:
kMaxLogOdds	cartographer/cartographer/mapping/submaps.h	/^const float kMaxLogOdds = Logit(kMaxProbability);$/;"	m	namespace:cartographer::mapping
kMaxMu	ceres-solver/internal/ceres/dogleg_strategy.cc	/^const double kMaxMu = 1.0;$/;"	m	namespace:ceres::internal::__anon181	file:
kMaxOnGoingRequestsPerTrajectory	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^constexpr int kMaxOnGoingRequestsPerTrajectory = 6;$/;"	m	namespace:cartographer_rviz::__anon147	file:
kMaxProbability	cartographer/cartographer/mapping/probability_values.h	/^constexpr float kMaxProbability = 1.f - kMinProbability;$/;"	m	namespace:cartographer::mapping
kMaxQueueSize	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^const int kMaxQueueSize = 500;$/;"	m	namespace:cartographer::sensor::__anon125	file:
kMaxRandomSeed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const int kMaxRandomSeed = 99999;$/;"	m	namespace:testing::internal	file:
kMaxRange	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const UInt32 kMaxRange = 1u << 31;$/;"	m	class:testing::internal::Random
kMaxRowBlocks	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  const int64 kMaxRowBlocks;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrix
kMaxShortSpanLengthMeters	cartographer/cartographer/mapping/detect_floors.cc	/^constexpr double kMaxShortSpanLengthMeters = 25.;$/;"	m	namespace:cartographer::mapping::__anon62	file:
kMaxStackTraceDepth	ceres-solver/internal/ceres/gtest/gtest.h	/^const int kMaxStackTraceDepth = 100;$/;"	m	namespace:testing
kMaxUlps	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const size_t kMaxUlps = 4;$/;"	m	class:testing::internal::FloatingPoint
kMessage	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon38	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon45	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon41	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon43	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon39	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon47	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon44	file:
kMessage	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler_test.cc	/^const std::string kMessage = R"($/;"	m	namespace:cartographer::cloud::handlers::__anon40	file:
kMinAverageAcceleration	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kMinAverageAcceleration = 9.5;$/;"	m	namespace:cartographer_ros::__anon128	file:
kMinCorrespondenceCost	cartographer/cartographer/mapping/probability_values.h	/^constexpr float kMinCorrespondenceCost = 1.f - kMaxProbability;$/;"	m	namespace:cartographer::mapping
kMinDistance	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^constexpr float kMinDistance = 0.2f;$/;"	m	namespace:cartographer::mapping::scan_matching::__anon98	file:
kMinLevelSeparationMeters	cartographer/cartographer/mapping/detect_floors.cc	/^constexpr double kMinLevelSeparationMeters = 1.;$/;"	m	namespace:cartographer::mapping::__anon62	file:
kMinLinearAcceleration	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kMinLinearAcceleration = 3.;$/;"	m	namespace:cartographer_ros::__anon128	file:
kMinLogOdds	cartographer/cartographer/mapping/submaps.h	/^const float kMinLogOdds = Logit(kMinProbability);$/;"	m	namespace:cartographer::mapping
kMinMu	ceres-solver/internal/ceres/dogleg_strategy.cc	/^const double kMinMu = 1e-8;$/;"	m	namespace:ceres::internal::__anon181	file:
kMinProbability	cartographer/cartographer/mapping/probability_values.h	/^constexpr float kMinProbability = 0.1f;$/;"	m	namespace:cartographer::mapping
kMinScore	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^constexpr float kMinScore = 0.1f;$/;"	m	namespace:cartographer::mapping::scan_matching::__anon96	file:
kMultiEchoLaserScanTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kMultiEchoLaserScanTopic[] = "echoes";$/;"	m	namespace:cartographer_ros
kNavSatFixTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kNavSatFixTopic[] = "fix";$/;"	m	namespace:cartographer_ros
kNo	cartographer/cartographer/io/probability_grid_points_processor.h	/^  enum class DrawTrajectories { kNo, kYes };$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor::DrawTrajectories
kNo	cartographer/cartographer/io/xray_points_processor.h	/^  enum class DrawTrajectories { kNo, kYes };$/;"	m	class:cartographer::io::XRayPointsProcessor::DrawTrajectories
kNodeProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kNodeProtoString[] = "node {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kNoiseFactor	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^static const double kNoiseFactor = 0.01;$/;"	m	namespace:ceres::internal
kNonFatalFailure	ceres-solver/internal/ceres/gtest/gtest.h	/^    kNonFatalFailure,  \/\/ Failed but the test can continue.$/;"	e	enum:testing::TestPartResult::Type
kNone	ceres-solver/internal/ceres/gmock/gmock.h	/^    kNone,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kNone	ceres-solver/internal/ceres/gmock/gmock.h	/^    kNone,$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kNumColSamples	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  static const int kNumColSamples = 100;$/;"	m	class:ceres::internal::BiCubicInterpolatorTest	file:
kNumCols	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  static const int kNumCols = 10;$/;"	m	class:ceres::internal::BiCubicInterpolatorTest	file:
kNumObservations	ceres-solver/examples/curve_fitting.cc	/^const int kNumObservations = 67;$/;"	v
kNumObservations	ceres-solver/examples/robust_curve_fitting.cc	/^const int kNumObservations = 67;$/;"	v
kNumOriginalMessages	cartographer/cartographer/io/serialization_format_migration_test.cc	/^  static constexpr int kNumOriginalMessages = 9;$/;"	m	class:cartographer::io::__anon18::MigrationTest	file:
kNumRowSamples	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  static const int kNumRowSamples = 100;$/;"	m	class:ceres::internal::BiCubicInterpolatorTest	file:
kNumRows	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  static const int kNumRows = 10;$/;"	m	class:ceres::internal::BiCubicInterpolatorTest	file:
kNumSamples	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^const int kNumSamples = 10;$/;"	m	namespace:cartographer::mapping::__anon85	file:
kNumSamples	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  static const int kNumSamples = 10;$/;"	m	class:ceres::internal::CubicInterpolatorTest	file:
kNumTestSamples	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  static const int kNumTestSamples = 100;$/;"	m	class:ceres::internal::CubicInterpolatorTest	file:
kNumTrajectories	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^constexpr int kNumTrajectories = 10;$/;"	m	namespace:cartographer::mapping::__anon70	file:
kNumTrials	ceres-solver/internal/ceres/rotation_test.cc	/^static const int kNumTrials = 10000;$/;"	m	namespace:ceres::internal	file:
kNumberOfSlicesPerSubmap	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^constexpr int kNumberOfSlicesPerSubmap = 2;$/;"	m	namespace:cartographer_rviz::__anon148	file:
kObserveScores	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^const std::array<double, 5> kObserveScores = {{-1, 0.11, 0.2, 0.5, 2}};$/;"	m	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
kOccupancyGridTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kOccupancyGridTopic[] = "map";$/;"	m	namespace:cartographer_ros
kOdometryDataProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kOdometryDataProtoString[] = "odometry_data {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kOdometryTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kOdometryTopic[] = "odom";$/;"	m	namespace:cartographer_ros
kOther	ceres-solver/internal/ceres/gmock/gmock.h	/^  kBool, kInteger, kFloatingPoint, kOther$/;"	e	enum:testing::internal::TypeKind
kOtherType	ceres-solver/internal/ceres/gtest/gtest.h	/^  kOtherType              \/\/ anything else$/;"	e	enum:testing::internal2::TypeKind
kOutputFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kOutputFlag[] = "output";$/;"	m	namespace:testing::internal	file:
kPadding	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  static constexpr int kPadding = INT_MAX \/ 4;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
kParameterBlocksCount	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^constexpr int kParameterBlocksCount = 2;$/;"	m	namespace:cartographer::mapping::optimization::__anon91	file:
kPathSeparator	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kPathSeparator = '\\\\';$/;"	m	namespace:testing::internal	file:
kPhase1	cartographer/cartographer/io/outlier_removing_points_processor.h	/^    kPhase1,$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor::State
kPhase2	cartographer/cartographer/io/outlier_removing_points_processor.h	/^    kPhase2,$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor::State
kPhase3	cartographer/cartographer/io/outlier_removing_points_processor.h	/^    kPhase3,$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor::State
kPi	ceres-solver/examples/nist.cc	/^const double kPi = 3.141592653589793238462643383279;$/;"	m	namespace:ceres::examples	file:
kPi	ceres-solver/internal/ceres/rotation_test.cc	/^const double kPi = 3.14159265358979323846;$/;"	m	namespace:ceres::internal	file:
kPointCloud2Topic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kPointCloud2Topic[] = "points2";$/;"	m	namespace:cartographer_ros
kPointCloudComponentFourMagic	cartographer_ros/cartographer_ros/cartographer_ros/msg_conversion.cc	/^constexpr float kPointCloudComponentFourMagic = 1.;$/;"	m	namespace:cartographer_ros::__anon132	file:
kPointDataTypes	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const std::set<std::string> kPointDataTypes = {$/;"	m	namespace:cartographer_ros::__anon128	file:
kPopTimeout	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^const common::Duration kPopTimeout = common::FromMilliseconds(100);$/;"	m	namespace:cartographer::cloud::__anon37	file:
kPopTimeout	cartographer/cartographer/cloud/internal/map_builder_server.cc	/^const common::Duration kPopTimeout = common::FromMilliseconds(100);$/;"	m	namespace:cartographer::cloud::__anon36	file:
kPoseDimension	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^constexpr int kPoseDimension = 3;$/;"	m	namespace:cartographer::mapping::optimization::__anon91	file:
kPoseGraphProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kPoseGraphProtoString[] = "pose_graph {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kPoseQueueDuration	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^constexpr double kPoseQueueDuration = 0.5f;$/;"	m	namespace:cartographer::mapping::__anon67	file:
kPrecision	cartographer/cartographer/mapping/imu_tracker_test.cc	/^constexpr double kPrecision = 1e-8;$/;"	m	namespace:cartographer::mapping::__anon54	file:
kPrecision	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^constexpr double kPrecision = 1e-8;$/;"	m	namespace:cartographer::mapping::scan_matching::__anon101	file:
kPrecision	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^constexpr double kPrecision = 1e-8;$/;"	m	namespace:cartographer::mapping::__anon67	file:
kPrecision	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^constexpr float kPrecision = 0.001f;  \/\/ in meters.$/;"	m	namespace:cartographer::sensor::__anon117	file:
kPrecision	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^constexpr float kPrecision = 0.001f;$/;"	m	namespace:cartographer::sensor::__anon121	file:
kPrintTimeFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kPrintTimeFlag[] = "print_time";$/;"	m	namespace:testing::internal	file:
kProtobuf	ceres-solver/internal/ceres/gtest/gtest.h	/^  kProtobuf,              \/\/ a protobuf type$/;"	e	enum:testing::internal2::TypeKind
kProtobufOneLinerMaxLength	ceres-solver/internal/ceres/gtest/gtest.h	/^const size_t kProtobufOneLinerMaxLength = 50;$/;"	m	namespace:testing::internal2
kQueueLengthMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^static auto* kQueueLengthMetric = metrics::Gauge::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kQueueLengthMetric	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^static auto* kQueueLengthMetric = metrics::Gauge::Null();$/;"	m	namespace:cartographer::mapping::constraints	file:
kQueueSize	cartographer_ros/cartographer_ros/cartographer_ros/dev/rosbag_publisher_main.cc	/^const int kQueueSize = 1;$/;"	v
kRandomSeed	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^static const unsigned int kRandomSeed = 1234;$/;"	m	namespace:ceres::internal
kRandomSeedFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kRandomSeedFlag[] = "random_seed";$/;"	m	namespace:testing::internal	file:
kRankDeficient	ceres-solver/internal/ceres/invert_psd_matrix_test.cc	/^static const bool kRankDeficient = false;$/;"	m	namespace:ceres::internal	file:
kRealTimeCorrelativeScanMatcherScoreMetric	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^static auto* kRealTimeCorrelativeScanMatcherScoreMetric =$/;"	m	namespace:cartographer::mapping	file:
kRemove	ceres-solver/internal/ceres/gtest/gtest.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kRepeatFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kRepeatFlag[] = "repeat";$/;"	m	namespace:testing::internal	file:
kReplace	ceres-solver/internal/ceres/gtest/gtest.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kReservedTestCaseAttributes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char* const kReservedTestCaseAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuiteAttributes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char* const kReservedTestSuiteAttributes[] = {$/;"	m	namespace:testing	file:
kReservedTestSuitesAttributes	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char* const kReservedTestSuitesAttributes[] = {$/;"	m	namespace:testing	file:
kResidualTolerance	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  static double kResidualTolerance;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
kResidualTolerance	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^double BundleAdjustmentProblem::kResidualTolerance = 1e-4;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
kResidualTolerance	ceres-solver/internal/ceres/system_test.cc	/^  static double kResidualTolerance;$/;"	m	class:ceres::internal::PowellsFunction	file:
kResidualTolerance	ceres-solver/internal/ceres/system_test.cc	/^double PowellsFunction::kResidualTolerance = 1e-8;$/;"	m	class:ceres::internal::PowellsFunction	file:
kResidualsCount	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^constexpr int kResidualsCount = 3;$/;"	m	namespace:cartographer::mapping::optimization::__anon91	file:
kRestartStream	cartographer/cartographer/io/points_processor.h	/^    kRestartStream,$/;"	m	class:cartographer::io::PointsProcessor::FlushResult
kRetiresOnSaturation	ceres-solver/internal/ceres/gmock/gmock.h	/^    kRetiresOnSaturation$/;"	e	enum:testing::internal::ExpectationBase::Clause
kSaturation	cartographer/cartographer/io/color.cc	/^constexpr float kSaturation = 0.85f;$/;"	m	namespace:cartographer::io::__anon12	file:
kScanMatchedPointCloudTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kScanMatchedPointCloudTopic[] = "scan_matched_points2";$/;"	m	namespace:cartographer_ros
kScanMatcherResidualAngleMetric	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^static auto* kScanMatcherResidualAngleMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping	file:
kScanMatcherResidualAngleMetric	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^static auto* kScanMatcherResidualAngleMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping	file:
kScanMatcherResidualDistanceMetric	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^static auto* kScanMatcherResidualDistanceMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping	file:
kScanMatcherResidualDistanceMetric	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^static auto* kScanMatcherResidualDistanceMetric = metrics::Histogram::Null();$/;"	m	namespace:cartographer::mapping	file:
kScoresMetric	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^static auto* kScoresMetric = ::cartographer::metrics::Histogram::Null();$/;"	m	namespace:cartographer::cloud::metrics::prometheus::__anon35	file:
kScriptsDirectory	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^constexpr char kScriptsDirectory[] = "\/scripts";$/;"	m	namespace:cartographer_rviz::__anon147	file:
kSensorDataRatesLoggingPeriodSeconds	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^constexpr double kSensorDataRatesLoggingPeriodSeconds = 15.;$/;"	m	namespace:cartographer::mapping::__anon86	file:
kSensorId	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^constexpr char kSensorId[] = "sensor_id";$/;"	m	namespace:cartographer::mapping::__anon104	file:
kSerializationHeaderProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kSerializationHeaderProtoString[] = "format_version: 1";$/;"	m	namespace:cartographer::io::__anon22	file:
kShuffleFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kShuffleFlag[] = "shuffle";$/;"	m	namespace:testing::internal	file:
kSignBitMask	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);$/;"	m	class:testing::internal::FloatingPoint
kSingleLinkageMinSimilarity	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^static const double kSingleLinkageMinSimilarity = 0.9;$/;"	m	namespace:ceres::internal	file:
kSingleThreaded	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^constexpr int kSingleThreaded = 1;$/;"	m	namespace:cartographer_ros	file:
kSliceHeight	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^constexpr float kSliceHeight = 0.2f;$/;"	m	namespace:cartographer::mapping::scan_matching::__anon98	file:
kSmallTinyCutoff	ceres-solver/internal/ceres/rotation_test.cc	/^static const int kSmallTinyCutoff =$/;"	m	namespace:ceres::internal	file:
kSpecialEscape	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  kSpecialEscape$/;"	e	enum:testing::internal::CharFormat	file:
kStackTraceDepthFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kStackTraceDepthFlag[] = "stack_trace_depth";$/;"	m	namespace:testing::internal	file:
kStackTraceMarker	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kStackTraceMarker[] = "\\nStack trace:\\n";$/;"	m	namespace:testing::internal	file:
kStartTrajectoryServiceName	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kStartTrajectoryServiceName[] = "start_trajectory";$/;"	m	namespace:cartographer_ros
kStatic	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	e	enum:std::tr1::Mutex::MutexType
kStaticMutex	ceres-solver/internal/ceres/gtest/gtest.h	/^  enum StaticConstructorSelector { kStaticMutex = 0 };$/;"	e	enum:std::tr1::Mutex::StaticConstructorSelector
kStdErrFileno	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const int kStdErrFileno = 2;$/;"	m	namespace:testing::internal	file:
kStdOutFileno	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const int kStdOutFileno = 1;$/;"	m	namespace:testing::internal	file:
kSteps	cartographer/cartographer/mapping/imu_tracker_test.cc	/^constexpr int kSteps = 10;$/;"	m	namespace:cartographer::mapping::__anon54	file:
kStreamResultToFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kStreamResultToFlag[] = "stream_result_to";$/;"	m	namespace:testing::internal	file:
kStride	ceres-solver/examples/robot_pose_mle.cc	/^static const int kStride = 10;$/;"	v	file:
kSubmapIdCharHeight	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^constexpr float kSubmapIdCharHeight = 0.2f;$/;"	m	namespace:cartographer_rviz::__anon148	file:
kSubmapKidnapedListTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kSubmapKidnapedListTopic[] = "submap_kidnaped_list";$/;"	m	namespace:cartographer_ros
kSubmapListTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kSubmapListTopic[] = "submap_list";$/;"	m	namespace:cartographer_ros
kSubmapMaterialPrefix	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^constexpr char kSubmapMaterialPrefix[] = "SubmapMaterial";$/;"	m	namespace:cartographer_rviz::__anon146	file:
kSubmapProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kSubmapProtoString[] = "submap {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kSubmapQueryServiceName	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kSubmapQueryServiceName[] = "submap_query";$/;"	m	namespace:cartographer_ros
kSubmapSourceMaterialName	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^constexpr char kSubmapSourceMaterialName[] = "cartographer_ros\/Submap";$/;"	m	namespace:cartographer_rviz::__anon146	file:
kSubmapTexturePrefix	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^constexpr char kSubmapTexturePrefix[] = "SubmapTexture";$/;"	m	namespace:cartographer_rviz::__anon146	file:
kSubpixelScale	cartographer/cartographer/mapping/internal/2d/ray_casting.cc	/^constexpr int kSubpixelScale = 1000;$/;"	m	namespace:cartographer::mapping::__anon74	file:
kSuccess	ceres-solver/internal/ceres/gtest/gtest.h	/^    kSuccess,          \/\/ Succeeded.$/;"	e	enum:testing::TestPartResult::Type
kTestCostFunctionSize	ceres-solver/internal/ceres/conditioned_cost_function_test.cc	/^static const int kTestCostFunctionSize = 3;$/;"	m	namespace:ceres::internal	file:
kTestShardIndex	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";$/;"	m	namespace:testing	file:
kTestShardStatusFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";$/;"	m	namespace:testing	file:
kTestTotalShards	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";$/;"	m	namespace:testing	file:
kTestTypeIdInGoogleTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^extern const TypeId kTestTypeIdInGoogleTest = GetTestTypeId();$/;"	m	namespace:testing::internal	file:
kTfStaticTopic	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.cc	/^constexpr char kTfStaticTopic[] = "\/tf_static";$/;"	m	namespace:cartographer_ros::__anon133	file:
kTfStaticTopic	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^constexpr char kTfStaticTopic[] = "\/tf_static";$/;"	m	namespace:cartographer_ros	file:
kTfTopic	cartographer_ros/cartographer_ros/cartographer_ros/offline_node.cc	/^constexpr char kTfTopic[] = "tf";$/;"	m	namespace:cartographer_ros	file:
kThrowOnFailureFlag	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kThrowOnFailureFlag[] = "throw_on_failure";$/;"	m	namespace:testing::internal	file:
kTimeDeltaSerializationSensorError	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kTimeDeltaSerializationSensorError = 0.5;$/;"	m	namespace:cartographer_ros::__anon128	file:
kTimeDeltaSerializationSensorWarning	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^const double kTimeDeltaSerializationSensorWarning = 0.1;$/;"	m	namespace:cartographer_ros::__anon128	file:
kTimeStep	cartographer/cartographer/cloud/internal/client_server_test.cc	/^constexpr double kTimeStep = 0.1;        \/\/ Seconds.$/;"	m	namespace:cartographer::cloud::__anon48	file:
kTimeStep	cartographer/cartographer/mapping/map_builder_test.cc	/^constexpr double kTimeStep = 0.1;        \/\/ Seconds.$/;"	m	namespace:cartographer::mapping::__anon55	file:
kTimes	ceres-solver/internal/ceres/gmock/gmock.h	/^    kTimes,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kTinyZeroLimit	ceres-solver/internal/ceres/rotation_test.cc	/^static const int kTinyZeroLimit   =$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^const double kTolerance = 1e-18;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^static const double kTolerance = 1e-12;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^const double kTolerance = 1e-14;$/;"	m	namespace:ceres::internal::__anon178	file:
kTolerance	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^const double kTolerance = 1e-6;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/gradient_checker_test.cc	/^const double kTolerance = 1e-6;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/is_close_test.cc	/^const double kTolerance = 1e-9;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/jet_test.cc	/^double const kTolerance = 1e-13;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^const double kTolerance = 1e-16;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/rotation_test.cc	/^static double const kTolerance = numeric_limits<double>::epsilon() * 10;$/;"	m	namespace:ceres::internal	file:
kTolerance	ceres-solver/internal/ceres/small_blas_test.cc	/^const double kTolerance = 3.0 * std::numeric_limits<double>::epsilon();$/;"	m	namespace:ceres::internal	file:
kToleranceLoose	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^const double kToleranceLoose = 1e-5;$/;"	m	namespace:ceres::internal::__anon178	file:
kTrajectoryDataProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kTrajectoryDataProtoString[] = "trajectory_data {}";$/;"	m	namespace:cartographer::io::__anon22	file:
kTrajectoryLineStripMarkerScale	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^constexpr double kTrajectoryLineStripMarkerScale = 0.07;$/;"	m	namespace:cartographer_ros::__anon140	file:
kTrajectoryNodeListTopic	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kTrajectoryNodeListTopic[] = "trajectory_node_list";$/;"	m	namespace:cartographer_ros
kTravelDistance	cartographer/cartographer/cloud/internal/client_server_test.cc	/^constexpr double kTravelDistance = 1.2;  \/\/ Meters.$/;"	m	namespace:cartographer::cloud::__anon48	file:
kTravelDistance	cartographer/cartographer/mapping/map_builder_test.cc	/^constexpr double kTravelDistance = 1.2;  \/\/ Meters.$/;"	m	namespace:cartographer::mapping::__anon55	file:
kTypeParamLabel	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kTypeParamLabel[] = "TypeParam";$/;"	m	namespace:testing::internal	file:
kUniversalFilter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kUniversalFilter[] = "*";$/;"	m	namespace:testing	file:
kUnknownCorrespondenceValue	cartographer/cartographer/mapping/probability_values.h	/^constexpr uint16 kUnknownCorrespondenceValue = kUnknownProbabilityValue;$/;"	m	namespace:cartographer::mapping
kUnknownFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char kUnknownFile[] = "unknown file";$/;"	m	namespace:testing::internal	file:
kUnknownProbabilityValue	cartographer/cartographer/mapping/probability_values.h	/^constexpr uint16 kUnknownProbabilityValue = 0;$/;"	m	namespace:cartographer::mapping
kUnsupportedSerializationHeaderProtoString	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^constexpr char kUnsupportedSerializationHeaderProtoString[] =$/;"	m	namespace:cartographer::io::__anon22	file:
kUnused	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static const size_t kUnused = static_cast<size_t>(-1);$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
kUnused	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const size_t MaxBipartiteMatchState::kUnused;$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
kUpdateMarker	cartographer/cartographer/mapping/probability_values.h	/^constexpr uint16 kUpdateMarker = 1u << 15;$/;"	m	namespace:cartographer::mapping
kUserOrdering	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^const bool kUserOrdering = false;$/;"	m	namespace:ceres::internal	file:
kUtsEpochOffsetFromUnixEpochInSeconds	cartographer/cartographer/common/time.h	/^constexpr int64 kUtsEpochOffsetFromUnixEpochInSeconds =$/;"	m	namespace:cartographer::common
kValue	cartographer/cartographer/io/color.cc	/^constexpr float kValue = 0.77f;$/;"	m	namespace:cartographer::io::__anon12	file:
kValueParamLabel	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^static const char kValueParamLabel[] = "GetParam()";$/;"	m	namespace:testing::internal	file:
kValueToCorrespondenceCost	cartographer/cartographer/mapping/probability_values.cc	/^const std::vector<float>* const kValueToCorrespondenceCost =$/;"	m	class:cartographer::mapping::std	file:
kValueToProbability	cartographer/cartographer/mapping/probability_values.cc	/^const std::vector<float>* const kValueToProbability =$/;"	m	class:cartographer::mapping::std	file:
kVertexIds	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^const int kVertexIds[] = {0, 1, 2, 3};$/;"	m	namespace:ceres::internal	file:
kWarn	ceres-solver/internal/ceres/gmock/gmock.h	/^  kWarn,$/;"	e	enum:testing::internal::CallReaction
kWarning	ceres-solver/internal/ceres/gmock/gmock.h	/^  kWarning = 1$/;"	e	enum:testing::internal::LogSeverity
kWarningVerbosity	ceres-solver/internal/ceres/gmock/gmock.h	/^const char kWarningVerbosity[] = "warning";$/;"	m	namespace:testing::internal
kWillByDefault	ceres-solver/internal/ceres/gmock/gmock.h	/^    kWillByDefault$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kWillOnce	ceres-solver/internal/ceres/gmock/gmock.h	/^    kWillOnce,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWillRepeatedly	ceres-solver/internal/ceres/gmock/gmock.h	/^    kWillRepeatedly,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWith	ceres-solver/internal/ceres/gmock/gmock.h	/^    kWith,$/;"	e	enum:testing::internal::ExpectationBase::Clause
kWith	ceres-solver/internal/ceres/gmock/gmock.h	/^    kWith,$/;"	e	enum:testing::internal::UntypedOnCallSpecBase::Clause
kWriteStateServiceName	cartographer_ros/cartographer_ros/cartographer_ros/node_constants.h	/^constexpr char kWriteStateServiceName[] = "write_state";$/;"	m	namespace:cartographer_ros
kYCols	ceres-solver/examples/ellipse_approximation.cc	/^const int kYCols = 2;$/;"	v
kYCols	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^const int kYCols = 2;$/;"	m	namespace:ceres::internal	file:
kYData	ceres-solver/examples/ellipse_approximation.cc	/^const double kYData[kYRows * kYCols] = {$/;"	v
kYData	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^const double kYData[kYRows * kYCols] = {$/;"	m	namespace:ceres::internal	file:
kYRows	ceres-solver/examples/ellipse_approximation.cc	/^const int kYRows = 212;$/;"	v
kYRows	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^const int kYRows = 212;$/;"	m	namespace:ceres::internal	file:
keep_frame_ids_	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^  const std::unordered_set<std::string> keep_frame_ids_;$/;"	m	class:cartographer::io::FrameIdFilteringPointsProcessor
key	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* key() const {$/;"	f	class:testing::TestProperty
key_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string key_;$/;"	m	class:testing::internal::TestPropertyKeyIs	file:
key_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const pthread_key_t key_;$/;"	m	class:std::tr1::ThreadLocal
key_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string key_;$/;"	m	class:testing::TestProperty
kidnapdetection_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  std::unique_ptr<KidnapDetection> kidnapdetection_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
known_cells_box	cartographer/cartographer/mapping/2d/grid_2d.h	/^  const Eigen::AlignedBox2i& known_cells_box() const {$/;"	f	class:cartographer::mapping::Grid2D
known_cells_box_	cartographer/cartographer/mapping/2d/grid_2d.h	/^  Eigen::AlignedBox2i known_cells_box_;$/;"	m	class:cartographer::mapping::Grid2D
landmark_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  std::map<std::string, transform::Rigid3d> landmark_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
landmark_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  std::map<std::string, transform::Rigid3d> landmark_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
landmark_observations	cartographer/cartographer/mapping/pose_graph_interface.h	/^    std::vector<LandmarkObservation> landmark_observations;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode
landmark_observations	cartographer/cartographer/sensor/landmark_data.h	/^  std::vector<LandmarkObservation> landmark_observations;$/;"	m	struct:cartographer::sensor::LandmarkData
landmark_poses_list_publisher_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::Publisher landmark_poses_list_publisher_;$/;"	m	class:cartographer_ros::Node
landmark_sampler	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    ::cartographer::common::FixedRatioSampler landmark_sampler;$/;"	m	struct:cartographer_ros::Node::TrajectorySensorSamplers
landmark_to_index_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  std::unordered_map<std::string \/* landmark ID *\/, int> landmark_to_index_;$/;"	m	class:cartographer_ros::MapBuilderBridge
landmark_to_tracking_transform	cartographer/cartographer/mapping/pose_graph_interface.h	/^      transform::Rigid3d landmark_to_tracking_transform;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode::LandmarkObservation
landmark_to_tracking_transform	cartographer/cartographer/sensor/landmark_data.h	/^  transform::Rigid3d landmark_to_tracking_transform;$/;"	m	struct:cartographer::sensor::LandmarkObservation
landmark_to_tracking_transform_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  const transform::Rigid3d landmark_to_tracking_transform_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction2D
landmark_to_tracking_transform_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  const transform::Rigid3d landmark_to_tracking_transform_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction3D
landmarks_sampling_ratio	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  double landmarks_sampling_ratio;$/;"	m	struct:cartographer_ros::TrajectoryOptions
last_clause_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Clause last_clause_;$/;"	m	class:testing::internal::ExpectationBase
last_clause_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Clause last_clause_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase
last_connection_time_map_	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	/^  std::map<std::pair<int, int>, common::Time> last_connection_time_map_;$/;"	m	class:cartographer::mapping::TrajectoryConnectivityState
last_death_test_case_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int last_death_test_case_;$/;"	m	class:testing::internal::UnitTestImpl	file:
last_death_test_message_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::string DeathTest::last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	file:
last_death_test_message_	ceres-solver/internal/ceres/gtest/gtest.h	/^  static std::string last_death_test_message_;$/;"	m	class:testing::internal::DeathTest
last_dispatched_time_	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  common::Time last_dispatched_time_ = common::Time::min();$/;"	m	class:cartographer::sensor::OrderedMultiQueue
last_event_time_	ceres-solver/internal/ceres/wall_time.h	/^  double last_event_time_;$/;"	m	class:ceres::internal::EventLogger
last_expectation_	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::linked_ptr<Expectation> last_expectation_;$/;"	m	class:testing::Sequence
last_frame_id_	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  std::string last_frame_id_;$/;"	m	class:cartographer_ros::__anon135::Node	file:
last_linear_acceleration_time_	cartographer/cartographer/mapping/imu_tracker.h	/^  common::Time last_linear_acceleration_time_;$/;"	m	class:cartographer::mapping::ImuTracker
last_logging_time_	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^  std::chrono::steady_clock::time_point last_logging_time_;$/;"	m	class:cartographer::mapping::CollatedTrajectoryBuilder
last_pose_	cartographer/cartographer/mapping/internal/motion_filter.h	/^  transform::Rigid3d last_pose_;$/;"	m	class:cartographer::mapping::MotionFilter
last_time_	cartographer/cartographer/mapping/internal/motion_filter.h	/^  common::Time last_time_;$/;"	m	class:cartographer::mapping::MotionFilter
last_timestamp	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  ros::Time last_timestamp;$/;"	m	struct:cartographer_ros::__anon128::FrameProperties	file:
last_timestamp_	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  ros::Time last_timestamp_;$/;"	m	class:cartographer_ros::__anon135::Node	file:
latest_time	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^common::Time TransformInterpolationBuffer::latest_time() const {$/;"	f	class:cartographer::transform::TransformInterpolationBuffer
latex_documents	cartographer/docs/source/conf.py	/^latex_documents = [$/;"	v
latex_documents	cartographer_ros/docs/source/conf.py	/^latex_documents = [('index', 'CartographerROS.tex',$/;"	v
latex_documents	ceres-solver/docs/source/conf.py	/^latex_documents = [$/;"	v
latex_elements	cartographer/docs/source/conf.py	/^latex_elements = {$/;"	v
latex_elements	cartographer_ros/docs/source/conf.py	/^latex_elements = {$/;"	v
latex_elements	ceres-solver/docs/source/conf.py	/^latex_elements = {$/;"	v
layout_	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  std::vector<CellInfo*> layout_;$/;"	m	class:ceres::internal::BlockRandomAccessDiagonalMatrix
layout_	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  LayoutType layout_;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrix
leakable	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool leakable;  \/\/ true iff it's OK to leak the object.$/;"	m	struct:testing::__anon176::MockObjectState	file:
left_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ::std::vector<size_t> left_;$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
left_start_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  size_t left_start_, right_start_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
lhs	ceres-solver/internal/ceres/schur_complement_solver.h	/^  const BlockRandomAccessMatrix* lhs() const { return lhs_.get(); }$/;"	f	class:ceres::internal::SchurComplementSolver
lhs_	ceres-solver/internal/ceres/dense_qr_solver.h	/^  ColMajorMatrix lhs_;$/;"	m	class:ceres::internal::DenseQRSolver
lhs_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  scoped_ptr<BlockRandomAccessMatrix> lhs_;$/;"	m	class:ceres::internal::SchurComplementSolver
lhs_expected	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  Matrix lhs_expected;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
lhs_row_layout_	ceres-solver/internal/ceres/schur_eliminator.h	/^  std::vector<int> lhs_row_layout_;$/;"	m	class:ceres::internal::SchurEliminator
limits	cartographer/cartographer/mapping/2d/grid_2d.h	/^  const MapLimits& limits() const { return limits_; }$/;"	f	class:cartographer::mapping::Grid2D
limits_	cartographer/cartographer/mapping/2d/grid_2d.h	/^  MapLimits limits_;$/;"	m	class:cartographer::mapping::Grid2D
limits_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  MapLimits limits_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
line	ceres-solver/internal/ceres/gmock/gmock.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::ExpectationBase
line	ceres-solver/internal/ceres/gmock/gmock.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::UntypedOnCallSpecBase
line	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int line;$/;"	m	struct:testing::internal::TraceInfo	file:
line	ceres-solver/internal/ceres/gtest/gtest.h	/^      int line;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
line	ceres-solver/internal/ceres/gtest/gtest.h	/^    int const line;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData
line	ceres-solver/internal/ceres/gtest/gtest.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
line	ceres-solver/internal/ceres/gtest/gtest.h	/^  int line() const { return location_.line; }$/;"	f	class:testing::TestInfo
line	ceres-solver/internal/ceres/gtest/gtest.h	/^  int line;$/;"	m	struct:testing::internal::CodeLocation
line_	ceres-solver/internal/ceres/gmock/gmock.h	/^  int line_;                  \/\/ The line number of the expectation.$/;"	m	class:testing::internal::ExpectationBase
line_	ceres-solver/internal/ceres/gmock/gmock.h	/^  int line_;$/;"	m	class:testing::internal::UntypedOnCallSpecBase
line_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const int line_;$/;"	m	class:testing::internal::ExecDeathTest	file:
line_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const int line_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
line_	ceres-solver/internal/ceres/gtest/gtest.h	/^  int line_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
line_	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  int line_;$/;"	m	class:MessageLogger
line_number	ceres-solver/internal/ceres/gtest/gtest.h	/^  int line_number() const { return line_number_; }$/;"	f	class:testing::TestPartResult
line_number_	ceres-solver/internal/ceres/gtest/gtest.h	/^  int line_number_;$/;"	m	class:testing::TestPartResult
line_search_cost_evaluation_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double line_search_cost_evaluation_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
line_search_direction_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LineSearchDirectionType line_search_direction_type;$/;"	m	struct:ceres::GradientProblemSolver::Options
line_search_direction_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LineSearchDirectionType line_search_direction_type;$/;"	m	struct:ceres::GradientProblemSolver::Summary
line_search_direction_type	ceres-solver/include/ceres/solver.h	/^    LineSearchDirectionType line_search_direction_type;$/;"	m	struct:ceres::Solver::Options
line_search_direction_type	ceres-solver/include/ceres/solver.h	/^    LineSearchDirectionType line_search_direction_type;$/;"	m	struct:ceres::Solver::Summary
line_search_direction_type	ceres-solver/internal/ceres/minimizer.h	/^    LineSearchDirectionType line_search_direction_type;$/;"	m	struct:ceres::internal::Minimizer::Options
line_search_function_evaluations	ceres-solver/include/ceres/iteration_callback.h	/^  int line_search_function_evaluations;$/;"	m	struct:ceres::IterationSummary
line_search_gradient_evaluation_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double line_search_gradient_evaluation_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
line_search_gradient_evaluations	ceres-solver/include/ceres/iteration_callback.h	/^  int line_search_gradient_evaluations;$/;"	m	struct:ceres::IterationSummary
line_search_interpolation_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LineSearchInterpolationType line_search_interpolation_type;$/;"	m	struct:ceres::GradientProblemSolver::Options
line_search_interpolation_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LineSearchInterpolationType line_search_interpolation_type;$/;"	m	struct:ceres::GradientProblemSolver::Summary
line_search_interpolation_type	ceres-solver/include/ceres/solver.h	/^    LineSearchInterpolationType line_search_interpolation_type;$/;"	m	struct:ceres::Solver::Options
line_search_interpolation_type	ceres-solver/include/ceres/solver.h	/^    LineSearchInterpolationType line_search_interpolation_type;$/;"	m	struct:ceres::Solver::Summary
line_search_interpolation_type	ceres-solver/internal/ceres/minimizer.h	/^    LineSearchInterpolationType line_search_interpolation_type;$/;"	m	struct:ceres::internal::Minimizer::Options
line_search_iterations	ceres-solver/include/ceres/iteration_callback.h	/^  int line_search_iterations;$/;"	m	struct:ceres::IterationSummary
line_search_polynomial_minimization_time_in_seconds	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double line_search_polynomial_minimization_time_in_seconds;$/;"	m	struct:ceres::GradientProblemSolver::Summary
line_search_polynomial_minimization_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double line_search_polynomial_minimization_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
line_search_sufficient_curvature_decrease	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double line_search_sufficient_curvature_decrease;$/;"	m	struct:ceres::GradientProblemSolver::Options
line_search_sufficient_curvature_decrease	ceres-solver/include/ceres/solver.h	/^    double line_search_sufficient_curvature_decrease;$/;"	m	struct:ceres::Solver::Options
line_search_sufficient_curvature_decrease	ceres-solver/internal/ceres/minimizer.h	/^    double line_search_sufficient_curvature_decrease;$/;"	m	struct:ceres::internal::Minimizer::Options
line_search_sufficient_function_decrease	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double line_search_sufficient_function_decrease;$/;"	m	struct:ceres::GradientProblemSolver::Options
line_search_sufficient_function_decrease	ceres-solver/include/ceres/solver.h	/^    double line_search_sufficient_function_decrease;$/;"	m	struct:ceres::Solver::Options
line_search_sufficient_function_decrease	ceres-solver/internal/ceres/minimizer.h	/^    double line_search_sufficient_function_decrease;$/;"	m	struct:ceres::internal::Minimizer::Options
line_search_total_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double line_search_total_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
line_search_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LineSearchType line_search_type;$/;"	m	struct:ceres::GradientProblemSolver::Options
line_search_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LineSearchType line_search_type;$/;"	m	struct:ceres::GradientProblemSolver::Summary
line_search_type	ceres-solver/include/ceres/solver.h	/^    LineSearchType line_search_type;$/;"	m	struct:ceres::Solver::Options
line_search_type	ceres-solver/include/ceres/solver.h	/^    LineSearchType line_search_type;$/;"	m	struct:ceres::Solver::Summary
line_search_type	ceres-solver/internal/ceres/minimizer.h	/^    LineSearchType line_search_type;$/;"	m	struct:ceres::internal::Minimizer::Options
linear_acceleration	cartographer/cartographer/sensor/imu_data.h	/^  Eigen::Vector3d linear_acceleration;$/;"	m	struct:cartographer::sensor::ImuData
linear_acceleration_	cartographer/cartographer/mapping/imu_tracker_test.cc	/^  Eigen::Vector3d linear_acceleration_;$/;"	m	class:cartographer::mapping::__anon54::ImuTrackerTest	file:
linear_bounds	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  std::vector<LinearBounds> linear_bounds;  \/\/ Per rotated scans.$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters
linear_solver	ceres-solver/internal/ceres/preprocessor.h	/^  scoped_ptr<LinearSolver> linear_solver;$/;"	m	struct:ceres::internal::PreprocessedProblem
linear_solver	ceres-solver/internal/ceres/trust_region_strategy.h	/^    LinearSolver* linear_solver;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
linear_solver_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  LinearSolver* linear_solver_;$/;"	m	class:ceres::internal::DoglegStrategy
linear_solver_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  LinearSolver* linear_solver_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
linear_solver_iterations	ceres-solver/include/ceres/iteration_callback.h	/^  int linear_solver_iterations;$/;"	m	struct:ceres::IterationSummary
linear_solver_options	ceres-solver/internal/ceres/preprocessor.h	/^  LinearSolver::Options linear_solver_options;$/;"	m	struct:ceres::internal::PreprocessedProblem
linear_solver_ordering	ceres-solver/include/ceres/solver.h	/^    shared_ptr<ParameterBlockOrdering> linear_solver_ordering;$/;"	m	struct:ceres::Solver::Options
linear_solver_ordering_given	ceres-solver/include/ceres/solver.h	/^    std::vector<int> linear_solver_ordering_given;$/;"	m	struct:ceres::Solver::Summary
linear_solver_ordering_used	ceres-solver/include/ceres/solver.h	/^    std::vector<int> linear_solver_ordering_used;$/;"	m	struct:ceres::Solver::Summary
linear_solver_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double linear_solver_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
linear_solver_type	ceres-solver/include/ceres/solver.h	/^    LinearSolverType linear_solver_type;$/;"	m	struct:ceres::Solver::Options
linear_solver_type	ceres-solver/internal/ceres/evaluator.h	/^    LinearSolverType linear_solver_type;$/;"	m	struct:ceres::internal::Evaluator::Options
linear_solver_type	ceres-solver/internal/ceres/evaluator_test.cc	/^  LinearSolverType linear_solver_type;$/;"	m	struct:ceres::internal::EvaluatorTestOptions	file:
linear_solver_type	ceres-solver/internal/ceres/test_util.h	/^  LinearSolverType linear_solver_type;$/;"	m	struct:ceres::internal::SolverConfig
linear_solver_type_given	ceres-solver/include/ceres/solver.h	/^    LinearSolverType linear_solver_type_given;$/;"	m	struct:ceres::Solver::Summary
linear_solver_type_used	ceres-solver/include/ceres/solver.h	/^    LinearSolverType linear_solver_type_used;$/;"	m	struct:ceres::Solver::Summary
linear_velocity_from_odometry_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  Eigen::Vector3d linear_velocity_from_odometry_ = Eigen::Vector3d::Zero();$/;"	m	class:cartographer::mapping::PoseExtrapolator
linear_velocity_from_poses_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  Eigen::Vector3d linear_velocity_from_poses_ = Eigen::Vector3d::Zero();$/;"	m	class:cartographer::mapping::PoseExtrapolator
linear_xy_window_size	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    const int linear_xy_window_size;     \/\/ voxels$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::SearchParameters
linear_z_window_size	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    const int linear_z_window_size;      \/\/ voxels$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::SearchParameters
link_	ceres-solver/internal/ceres/gtest/gtest.h	/^  linked_ptr_internal link_;$/;"	m	class:testing::internal::linked_ptr
linked_ptr	ceres-solver/internal/ceres/gtest/gtest.h	/^  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	ceres-solver/internal/ceres/gtest/gtest.h	/^  linked_ptr(linked_ptr const& ptr) {  \/\/ NOLINT$/;"	f	class:testing::internal::linked_ptr
linked_ptr	ceres-solver/internal/ceres/gtest/gtest.h	/^  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }$/;"	f	class:testing::internal::linked_ptr
linked_ptr	ceres-solver/internal/ceres/gtest/gtest.h	/^class linked_ptr {$/;"	c	namespace:testing::internal
linked_ptr_internal	ceres-solver/internal/ceres/gtest/gtest.h	/^class linked_ptr_internal {$/;"	c	namespace:testing::internal
list_tests_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool list_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
listeners	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestEventListeners* listeners() { return &listeners_; }$/;"	f	class:testing::internal::UnitTestImpl
listeners	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventListeners& UnitTest::listeners() {$/;"	f	class:testing::UnitTest
listeners_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestEventListeners listeners_;$/;"	m	class:testing::internal::UnitTestImpl	file:
listeners_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<TestEventListener*> listeners_;$/;"	m	class:testing::internal::TestEventRepeater	file:
lm_diagonal_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector lm_diagonal_;$/;"	m	class:ceres::internal::DoglegStrategy
lm_diagonal_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  Vector lm_diagonal_;  \/\/ lm_diagonal_ = diagonal_ \/ radius_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
local_column_bounds_	ceres-solver/internal/ceres/covariance_test.cc	/^  BoundsMap local_column_bounds_;$/;"	m	class:ceres::internal::CovarianceTest	file:
local_jacobians	ceres-solver/include/ceres/gradient_checker.h	/^    std::vector<Matrix> local_jacobians;$/;"	m	struct:ceres::GradientChecker::ProbeResults
local_numeric_jacobians	ceres-solver/include/ceres/gradient_checker.h	/^    std::vector<Matrix> local_numeric_jacobians;$/;"	m	struct:ceres::GradientChecker::ProbeResults
local_parameterization	ceres-solver/internal/ceres/parameter_block.h	/^  LocalParameterization* local_parameterization() const {$/;"	f	class:ceres::internal::ParameterBlock
local_parameterization_	ceres-solver/internal/ceres/parameter_block.h	/^  LocalParameterization* local_parameterization_;$/;"	m	class:ceres::internal::ParameterBlock
local_parameterization_jacobian_	ceres-solver/internal/ceres/parameter_block.h	/^  mutable scoped_array<double> local_parameterization_jacobian_;$/;"	m	class:ceres::internal::ParameterBlock
local_parameterization_ownership	ceres-solver/include/ceres/problem.h	/^    Ownership local_parameterization_ownership;$/;"	m	struct:ceres::Problem::Options
local_parameterizations_	ceres-solver/include/ceres/gradient_checker.h	/^  std::vector<const LocalParameterization*> local_parameterizations_;$/;"	m	class:ceres::GradientChecker
local_parameterizations_to_delete_	ceres-solver/internal/ceres/problem_impl.h	/^  std::vector<LocalParameterization*> local_parameterizations_to_delete_;$/;"	m	class:ceres::internal::ProblemImpl
local_params_	ceres-solver/include/ceres/local_parameterization.h	/^  std::vector<LocalParameterization*> local_params_;$/;"	m	class:ceres::ProductParameterization
local_pose	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    transform::Rigid3d local_pose;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamResult
local_pose	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^    transform::Rigid3d local_pose;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder2D::MatchingResult
local_pose	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^    transform::Rigid3d local_pose;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder3D::MatchingResult
local_pose	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  transform::Rigid3d local_pose;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec3D
local_pose	cartographer/cartographer/mapping/submaps.h	/^  transform::Rigid3d local_pose() const { return local_pose_; }$/;"	f	class:cartographer::mapping::Submap
local_pose	cartographer/cartographer/mapping/trajectory_node.h	/^    transform::Rigid3d local_pose;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
local_pose	cartographer/cartographer/mapping/trajectory_node.h	/^    transform::Rigid3d local_pose;$/;"	m	struct:cartographer::mapping::TrajectoryNodePose::ConstantPoseData
local_pose	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^      ::cartographer::transform::Rigid3d local_pose;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState::LocalSlamData
local_pose_	cartographer/cartographer/mapping/submaps.h	/^  const transform::Rigid3d local_pose_;$/;"	m	class:cartographer::mapping::Submap
local_pose_2d	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  transform::Rigid2d local_pose_2d;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec2D
local_size_	ceres-solver/include/ceres/local_parameterization.h	/^  const int local_size_;$/;"	m	class:ceres::SubsetParameterization
local_size_	ceres-solver/include/ceres/local_parameterization.h	/^  int local_size_;$/;"	m	class:ceres::ProductParameterization
local_slam_data	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^    std::shared_ptr<const LocalSlamData> local_slam_data;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState
local_slam_result_callback_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^      local_slam_result_callback_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
local_slam_result_callback_	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^  LocalSlamResultCallback local_slam_result_callback_;$/;"	m	class:cartographer::mapping::__anon84::GlobalTrajectoryBuilder	file:
local_slam_result_condition_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::condition_variable local_slam_result_condition_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
local_slam_result_data_	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^  const mapping::proto::LocalSlamResultData local_slam_result_data_;$/;"	m	class:cartographer::mapping::LocalSlamResult2D
local_slam_result_data_	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^  const mapping::proto::LocalSlamResultData local_slam_result_data_;$/;"	m	class:cartographer::mapping::LocalSlamResult3D
local_slam_result_mutex_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::mutex local_slam_result_mutex_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
local_slam_result_poses_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::vector<transform::Rigid3d> local_slam_result_poses_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
local_slam_result_poses_	cartographer/cartographer/mapping/map_builder_test.cc	/^  std::vector<::cartographer::transform::Rigid3d> local_slam_result_poses_;$/;"	m	class:cartographer::mapping::__anon55::MapBuilderTest	file:
local_slam_result_upload_condition_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::condition_variable local_slam_result_upload_condition_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
local_slam_result_upload_mutex_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::mutex local_slam_result_upload_mutex_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
local_to_cloud_trajectory_id_map_	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  std::map<int, int> local_to_cloud_trajectory_id_map_;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
local_to_map	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^    cartographer::transform::Rigid3d local_to_map;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState
local_trajectory_builder_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^  std::unique_ptr<LocalTrajectoryBuilder3D> local_trajectory_builder_;$/;"	m	class:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest	file:
local_trajectory_builder_	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^  std::unique_ptr<LocalTrajectoryBuilder> local_trajectory_builder_;$/;"	m	class:cartographer::mapping::__anon84::GlobalTrajectoryBuilder	file:
local_trajectory_uploader	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^MapBuilderContext<SubmapType>::local_trajectory_uploader() {$/;"	f	class:cartographer::cloud::MapBuilderContext
local_trajectory_uploader_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  std::unique_ptr<LocalTrajectoryUploaderInterface> local_trajectory_uploader_;$/;"	m	class:cartographer::cloud::MapBuilderServer
location_	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::CodeLocation location_;$/;"	m	class:testing::TestInfo
lock_	cartographer/cartographer/mapping/internal/connected_components.h	/^  common::Mutex lock_;$/;"	m	class:cartographer::mapping::ConnectedComponents
log	ceres-solver/include/ceres/jet.h	/^Jet<T, N> log(const Jet<T, N>& f) {$/;"	f	namespace:ceres
log	ceres-solver/include/ceres/jet.h	/^inline double log     (double x) { return std::log(x);      }$/;"	f	namespace:ceres
log_counter_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  int log_counter_;$/;"	m	class:cartographer_ros::PlayableBag
log_sinks_global	ceres-solver/internal/ceres/miniglog/glog/logging.cc	/^std::set<google::LogSink *> log_sinks_global;$/;"	m	namespace:google	file:
log_to_stdout_	ceres-solver/internal/ceres/callbacks.h	/^  const bool log_to_stdout_;$/;"	m	class:ceres::internal::LoggingCallback
logging_callback	ceres-solver/internal/ceres/preprocessor.h	/^  scoped_ptr<IterationCallback> logging_callback;$/;"	m	struct:ceres::internal::PreprocessedProblem
logging_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    LoggingType logging_type;$/;"	m	struct:ceres::GradientProblemSolver::Options
logging_type	ceres-solver/include/ceres/solver.h	/^    LoggingType logging_type;$/;"	m	struct:ceres::Solver::Options
lookup_transform_timeout_sec	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^  double lookup_transform_timeout_sec;$/;"	m	struct:cartographer_ros::NodeOptions
lookup_transform_timeout_sec_	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	/^  const double lookup_transform_timeout_sec_;$/;"	m	class:cartographer_ros::TfBridge
loss_function	ceres-solver/internal/ceres/residual_block.h	/^  const LossFunction* loss_function() const { return loss_function_; }$/;"	f	class:ceres::internal::ResidualBlock
loss_function_	ceres-solver/internal/ceres/c_api.cc	/^  ceres_loss_function_t loss_function_;$/;"	m	class:CallbackLossFunction	file:
loss_function_	ceres-solver/internal/ceres/residual_block.h	/^  const LossFunction* loss_function_;$/;"	m	class:ceres::internal::ResidualBlock
loss_function_ownership	ceres-solver/include/ceres/problem.h	/^    Ownership loss_function_ownership;$/;"	m	struct:ceres::Problem::Options
loss_functions_to_delete_	ceres-solver/internal/ceres/problem_impl.h	/^  std::vector<LossFunction*> loss_functions_to_delete_;$/;"	m	class:ceres::internal::ProblemImpl
low_rank_inverse_hessian_	ceres-solver/internal/ceres/line_search_direction.cc	/^  LowRankInverseHessian low_rank_inverse_hessian_;$/;"	m	class:ceres::internal::LBFGS	file:
low_resolution_hybrid_grid	cartographer/cartographer/mapping/3d/submap_3d.h	/^  const HybridGrid& low_resolution_hybrid_grid() const {$/;"	f	class:cartographer::mapping::Submap3D
low_resolution_hybrid_grid	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^    const HybridGrid* low_resolution_hybrid_grid;$/;"	m	struct:cartographer::mapping::constraints::ConstraintBuilder3D::SubmapScanMatcher
low_resolution_hybrid_grid_	cartographer/cartographer/mapping/3d/submap_3d.h	/^  std::unique_ptr<HybridGrid> low_resolution_hybrid_grid_;$/;"	m	class:cartographer::mapping::Submap3D
low_resolution_hybrid_grid_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  const HybridGrid* const low_resolution_hybrid_grid_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
low_resolution_matcher	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    const MatchingFunction* const low_resolution_matcher;$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::SearchParameters
low_resolution_point_cloud	cartographer/cartographer/mapping/trajectory_node.h	/^    sensor::PointCloud low_resolution_point_cloud;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
low_resolution_score	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  float low_resolution_score = 0.f;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate3D	file:
low_resolution_score	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    float low_resolution_score;$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::Result
lower_bound	cartographer/cartographer/mapping/id.h	/^  ConstIterator lower_bound(const int trajectory_id,$/;"	f	class:cartographer::mapping::MapById
lower_bound	cartographer/cartographer/sensor/map_by_time.h	/^  ConstIterator lower_bound(const int trajectory_id,$/;"	f	class:cartographer::sensor::MapByTime
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem14::lower_bounds[] = {-100.0, -100.0, -100.0, -100.0};$/;"	m	class:ceres::examples::TestProblem14	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem18::lower_bounds[] = {0.0, 0.0, 0.0, 1.0, 0.0, 0.0};$/;"	m	class:ceres::examples::TestProblem18	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem10::lower_bounds[] = {$/;"	m	class:ceres::examples::TestProblem10	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem11::lower_bounds[] = {1e-16, 0.0, 0.0};$/;"	m	class:ceres::examples::TestProblem11	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem12::lower_bounds[] = {0.0, 5.0, 0.0};$/;"	m	class:ceres::examples::TestProblem12	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem13::lower_bounds[] = {$/;"	m	class:ceres::examples::TestProblem13	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem15::lower_bounds[] = {$/;"	m	class:ceres::examples::TestProblem15	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem16::lower_bounds[] = {-10.0, 0.0, -100.0, -20.0};$/;"	m	class:ceres::examples::TestProblem16	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem17::lower_bounds[] = {$/;"	m	class:ceres::examples::TestProblem17	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem19::lower_bounds[] = {$/;"	m	class:ceres::examples::TestProblem19	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem1::lower_bounds[] = {-kDoubleMax, -kDoubleMax};$/;"	m	class:ceres::examples::TestProblem1	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem2::lower_bounds[] = {-kDoubleMax, -kDoubleMax};$/;"	m	class:ceres::examples::TestProblem2	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem3::lower_bounds[] = {0.0, 1.0};$/;"	m	class:ceres::examples::TestProblem3	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem4::lower_bounds[] = {0.0, 0.00003};$/;"	m	class:ceres::examples::TestProblem4	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem5::lower_bounds[] = {0.6, 0.5};$/;"	m	class:ceres::examples::TestProblem5	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem6::lower_bounds[] = {-kDoubleMax, -kDoubleMax};$/;"	m	class:ceres::examples::TestProblem6	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem7::lower_bounds[] = {-100.0, -1.0, -1.0};$/;"	m	class:ceres::examples::TestProblem7	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem8::lower_bounds[] = {$/;"	m	class:ceres::examples::TestProblem8	file:
lower_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem9::lower_bounds[] = {0.398, 1.0, -0.5};$/;"	m	class:ceres::examples::TestProblem9	file:
lower_bounds_	ceres-solver/internal/ceres/parameter_block.h	/^  scoped_array<double> lower_bounds_;$/;"	m	class:ceres::internal::ParameterBlock
m	ceres-solver/internal/ceres/block_random_access_matrix.h	/^  Mutex m;$/;"	m	struct:ceres::internal::CellInfo
m_	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^  scoped_ptr<BlockRandomAccessDiagonalMatrix> m_;$/;"	m	class:ceres::internal::BlockJacobiPreconditioner
m_	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^  scoped_ptr<BlockRandomAccessDiagonalMatrix> m_;$/;"	m	class:ceres::internal::BlockRandomAccessDiagonalMatrixTest	file:
m_	ceres-solver/internal/ceres/block_random_access_sparse_matrix_test.cc	/^  scoped_ptr<BlockRandomAccessSparseMatrix> m_;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrixTest	file:
m_	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^  ColMajorMatrix m_;$/;"	m	class:ceres::internal::DenseSparseMatrix
m_	ceres-solver/internal/ceres/inner_product_computer.h	/^  const BlockSparseMatrix& m_;$/;"	m	class:ceres::internal::InnerProductComputer
m_	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  const BlockRandomAccessDiagonalMatrix& m_;$/;"	m	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter	file:
m_	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  const BlockRandomAccessSparseMatrix& m_;$/;"	m	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter	file:
m_	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	/^  scoped_ptr<BlockRandomAccessDiagonalMatrix> m_;$/;"	m	class:ceres::internal::SchurJacobiPreconditioner
m_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  scoped_ptr<BlockRandomAccessSparseMatrix> m_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
main	cartographer/cartographer/cloud/map_builder_server_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer/cartographer/ground_truth/autogenerate_ground_truth_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer/cartographer/io/migrate_serialization_format_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer/scripts/update_configuration_doc.py	/^def main():$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/cartographer_grpc/node_grpc_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/cartographer_grpc/offline_node_grpc_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/dev/rosbag_publisher_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/dev/trajectory_comparison_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/node_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/offline_node_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/pbstream_map_publisher_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/pbstream_to_ros_map_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/cartographer_ros/start_trajectory_main.cc	/^int main(int argc, char** argv) {$/;"	f
main	cartographer_ros/cartographer_ros/scripts/tf_remove_frames.py	/^def main():$/;"	f
main	cartographer_ros/jenkins/worker.py	/^def main():$/;"	f
main	ceres-solver/examples/bundle_adjuster.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/circle_fit.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/curve_fitting.c	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/curve_fitting.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/denoising.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/ellipse_approximation.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/helloworld.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/helloworld_analytic_diff.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/helloworld_numeric_diff.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/libmv_bundle_adjuster.cc	/^int main(int argc, char **argv) {$/;"	f
main	ceres-solver/examples/libmv_homography.cc	/^int main(int argc, char **argv) {$/;"	f
main	ceres-solver/examples/more_garbow_hillstrom.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/nist.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/powell.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/robot_pose_mle.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/robust_curve_fitting.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/rosenbrock.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/sampled_function/sampled_function.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/simple_bundle_adjuster.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d.cc	/^int main(int argc, char** argv) {$/;"	f
main	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d.cc	/^int main(int argc, char** argv) {$/;"	f
make_linked_ptr	ceres-solver/internal/ceres/gtest/gtest.h	/^linked_ptr<T> make_linked_ptr(T* ptr) {$/;"	f	namespace:testing::internal
make_scoped_ptr	ceres-solver/include/ceres/internal/scoped_ptr.h	/^scoped_ptr<C> make_scoped_ptr(C *p) {$/;"	f	namespace:ceres::internal
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_10_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_1_TUPLE_(T) make_tuple(const T0& f0) {$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_2_TUPLE_(T) make_tuple(const T0& f0, const T1& f1) {$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_3_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2) {$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_4_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_5_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_6_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_7_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_8_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline GTEST_9_TUPLE_(T) make_tuple(const T0& f0, const T1& f1, const T2& f2,$/;"	f	namespace:std::tr1
make_tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^inline tuple<> make_tuple() { return tuple<>(); }$/;"	f	namespace:std::tr1
make_unique	cartographer/cartographer/common/make_unique.h	/^typename _Unique_if<T>::_Single_object make_unique(Args&&... args) {$/;"	f	namespace:cartographer::common
make_unique	cartographer/cartographer/common/make_unique.h	/^typename _Unique_if<T>::_Unknown_bound make_unique(size_t n) {$/;"	f	namespace:cartographer::common
man_pages	cartographer/docs/source/conf.py	/^man_pages = [$/;"	v
man_pages	cartographer_ros/docs/source/conf.py	/^man_pages = [('index', 'cartographer', u'Cartographer ROS Documentation',$/;"	v
man_pages	ceres-solver/docs/source/conf.py	/^man_pages = [$/;"	v
manual_object_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  Ogre::ManualObject* const manual_object_;$/;"	m	class:cartographer_rviz::OgreSlice::Ogre
map_builder	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^mapping::MapBuilderInterface& MapBuilderContext<SubmapType>::map_builder() {$/;"	f	class:cartographer::cloud::MapBuilderContext
map_builder_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  std::unique_ptr<mapping::MapBuilderInterface> map_builder_;$/;"	m	class:cartographer::cloud::MapBuilderServer
map_builder_	cartographer/cartographer/mapping/map_builder_test.cc	/^  std::unique_ptr<MapBuilderInterface> map_builder_;$/;"	m	class:cartographer::mapping::__anon55::MapBuilderTest	file:
map_builder_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  std::unique_ptr<cartographer::mapping::MapBuilderInterface> map_builder_;$/;"	m	class:cartographer_ros::MapBuilderBridge
map_builder_options	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^  ::cartographer::mapping::proto::MapBuilderOptions map_builder_options;$/;"	m	struct:cartographer_ros::NodeOptions
map_builder_options_	cartographer/cartographer/mapping/map_builder_test.cc	/^  proto::MapBuilderOptions map_builder_options_;$/;"	m	class:cartographer::mapping::__anon55::MapBuilderTest	file:
map_builder_server_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  MapBuilderServer* map_builder_server_;$/;"	m	class:cartographer::cloud::MapBuilderContext
map_builder_server_options_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  proto::MapBuilderServerOptions map_builder_server_options_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
map_frame	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^  std::string map_frame;$/;"	m	struct:cartographer_ros::NodeOptions
map_frame_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  std::unique_ptr<std::string> map_frame_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
map_node_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  Ogre::SceneNode* map_node_ = nullptr;  \/\/ Represents the map frame.$/;"	m	class:cartographer_rviz::SubmapsDisplay
mapping	cartographer/cartographer/mapping/2d/grid_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/grid_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/2d/map_limits.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/2d/map_limits_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/probability_grid.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/probability_grid.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/2d/probability_grid_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/submap_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/submap_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/2d/submap_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/2d/xy_index.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/2d/xy_index_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/3d/range_data_inserter_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/3d/submap_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/3d/submap_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/3d/submap_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/detect_floors.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/detect_floors.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/grid_interface.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/id.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/id_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/imu_tracker.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/imu_tracker.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/imu_tracker_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_options_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_options_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/ray_casting.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/ray_casting.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/imu_integration.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_options_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_options_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/connected_components.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/connected_components.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/connected_components_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/global_trajectory_builder.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/kidnap_detection.cc	/^namespace mapping{$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/kidnap_detection.h	/^namespace mapping{$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/motion_filter.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/motion_filter.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/ceres_pose.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/range_data_collator.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/range_data_collator.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/range_data_collator_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/submap_controller.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/submap_controller.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/testing/mock_map_builder.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/testing/mock_pose_graph.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/testing/mock_trajectory_builder.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/testing/test_helpers.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/internal/trajectory_connectivity_state.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/internal/trajectory_connectivity_state_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/local_slam_result_data.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/map_builder.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/map_builder.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/map_builder_interface.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/map_builder_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/pose_extrapolator.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/pose_extrapolator.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/pose_extrapolator_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/pose_graph.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/pose_graph.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/pose_graph_interface.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/pose_graph_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/pose_graph_trimmer.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/pose_graph_trimmer_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/probability_values.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/probability_values.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/probability_values_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/range_data_inserter_interface.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/range_data_inserter_interface.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/submaps.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/submaps_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/trajectory_builder_interface.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/trajectory_node.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/mapping/trajectory_node.h	/^namespace mapping {$/;"	n	namespace:cartographer
mapping	cartographer/cartographer/mapping/trajectory_node_test.cc	/^namespace mapping {$/;"	n	namespace:cartographer	file:
mapping	cartographer/cartographer/sensor/data.h	/^namespace mapping {$/;"	n	namespace:cartographer
master_doc	cartographer/docs/source/conf.py	/^master_doc = 'index'$/;"	v
master_doc	cartographer_ros/docs/source/conf.py	/^master_doc = 'index'$/;"	v
master_doc	ceres-solver/docs/source/conf.py	/^master_doc = 'index'$/;"	v
matched_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::std::vector<char> matched_;$/;"	m	class:testing::internal::MatchMatrix
matcher1_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher1 matcher1_;$/;"	m	class:testing::internal::BothOfMatcher
matcher1_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher1 matcher1_;$/;"	m	class:testing::internal::EitherOfMatcher
matcher1_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<T> matcher1_;$/;"	m	class:testing::internal::BothOfMatcherImpl
matcher1_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<T> matcher1_;$/;"	m	class:testing::internal::EitherOfMatcherImpl
matcher2_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher2 matcher2_;$/;"	m	class:testing::internal::BothOfMatcher
matcher2_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher2 matcher2_;$/;"	m	class:testing::internal::EitherOfMatcher
matcher2_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<T> matcher2_;$/;"	m	class:testing::internal::BothOfMatcherImpl
matcher2_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<T> matcher2_;$/;"	m	class:testing::internal::EitherOfMatcherImpl
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^      : property_(property), matcher_(matcher) {}$/;"	f	class:testing::internal::PropertyMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<ResultType> matcher_;$/;"	m	class:testing::internal::ResultOfMatcher::Impl
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<const ::std::vector<LhsValue>&> matcher_;$/;"	m	class:testing::internal::WhenSortedByMatcher::Impl
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<const Pointee&> matcher_;$/;"	m	class:testing::internal::PointeeMatcher::Impl
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  InnerMatcher matcher_;$/;"	m	class:testing::internal::NotMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  M matcher_;$/;"	m	class:testing::internal::MatcherAsPredicate
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const ContainerMatcher matcher_;$/;"	m	class:testing::internal::WhenSortedByMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const InnerMatcher matcher_;$/;"	m	class:testing::internal::PointeeMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const M matcher_;$/;"	m	class:testing::internal::PredicateFormatterFromMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<RefToConstProperty> matcher_;$/;"	m	class:testing::internal::PropertyMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<ResultType> matcher_;$/;"	m	class:testing::internal::ResultOfMatcher
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<T> matcher_;$/;"	m	class:testing::internal::NotMatcherImpl
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<To> matcher_;$/;"	m	class:testing::internal::WhenDynamicCastToMatcherBase
matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<const FieldType&> matcher_;$/;"	m	class:testing::internal::FieldMatcher
matcher_describers	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatcherDescriberVec& matcher_describers() {$/;"	f	class:testing::internal::UnorderedElementsAreMatcherImplBase
matcher_describers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatcherDescriberVec matcher_describers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcherImplBase
matcher_for_key_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const M matcher_for_key_;$/;"	m	class:testing::internal::KeyMatcher
matchers	ceres-solver/internal/ceres/gmock/gmock.h	/^  const ArgumentMatcherTuple& matchers() const {$/;"	f	class:testing::internal::TypedExpectation
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::std::vector<Matcher<const Element&> > matchers_;$/;"	m	class:testing::internal::ElementsAreMatcherImpl
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::std::vector<T> matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreArrayMatcher
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::MockSpec
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::OnCallSpec
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ArgumentMatcherTuple matchers_;$/;"	m	class:testing::internal::TypedExpectation
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatcherVec matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcherImpl
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const ::std::vector<T> matchers_;$/;"	m	class:testing::internal::ElementsAreArrayMatcher
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const MatcherTuple matchers_;$/;"	m	class:testing::internal::ElementsAreMatcher
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const MatcherTuple matchers_;$/;"	m	class:testing::internal::UnorderedElementsAreMatcher
matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const typename MatcherListType::ListType matchers_;$/;"	m	class:testing::internal::VariadicMatcher
matches_filter_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool matches_filter_;             \/\/ True if this test matches the$/;"	m	class:testing::TestInfo
matching_index	cartographer/cartographer/mapping/2d/submap_2d.cc	/^int ActiveSubmaps2D::matching_index() const { return matching_submap_index_; }$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
matching_index	cartographer/cartographer/mapping/3d/submap_3d.cc	/^int ActiveSubmaps3D::matching_index() const { return matching_submap_index_; }$/;"	f	class:cartographer::mapping::ActiveSubmaps3D
matching_submap_index_	cartographer/cartographer/mapping/2d/submap_2d.h	/^  int matching_submap_index_ = 0;$/;"	m	class:cartographer::mapping::ActiveSubmaps2D
matching_submap_index_	cartographer/cartographer/mapping/3d/submap_3d.h	/^  int matching_submap_index_ = 0;$/;"	m	class:cartographer::mapping::ActiveSubmaps3D
material_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  Ogre::MaterialPtr material_;$/;"	m	class:cartographer_rviz::OgreSlice
matrix	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^  const BlockRandomAccessDiagonalMatrix& matrix() const { return *m_; }$/;"	f	class:ceres::internal::BlockJacobiPreconditioner
matrix	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  const TripletSparseMatrix* matrix() const { return tsm_.get(); }$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
matrix	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  const TripletSparseMatrix* matrix() const { return tsm_.get(); }$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
matrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^ConstColMajorMatrixRef DenseSparseMatrix::matrix() const {$/;"	f	class:ceres::internal::DenseSparseMatrix
matrix_	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  const BlockSparseMatrix& matrix_;$/;"	m	class:ceres::internal::PartitionedMatrixView
matrix_	ceres-solver/internal/ceres/preconditioner.h	/^  const SparseMatrix* matrix_;$/;"	m	class:ceres::internal::SparseMatrixPreconditionerWrapper
max	cartographer/cartographer/mapping/2d/map_limits.h	/^  const Eigen::Vector2d& max() const { return max_; }$/;"	f	class:cartographer::mapping::MapLimits
max_	cartographer/cartographer/mapping/2d/map_limits.h	/^  Eigen::Vector2d max_;$/;"	m	class:cartographer::mapping::MapLimits
max_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const int max_;$/;"	m	class:testing::__anon175::BetweenCardinalityImpl	file:
max_abs_error_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const FloatType max_abs_error_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl
max_abs_error_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const FloatType max_abs_error_;$/;"	m	class:testing::internal::FloatingEqMatcher
max_col_block_size	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    int max_col_block_size;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
max_col_block_size	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    int max_col_block_size;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
max_consecutive_nonmonotonic_steps	ceres-solver/include/ceres/solver.h	/^    int max_consecutive_nonmonotonic_steps;$/;"	m	struct:ceres::Solver::Options
max_consecutive_nonmonotonic_steps	ceres-solver/internal/ceres/minimizer.h	/^    int max_consecutive_nonmonotonic_steps;$/;"	m	struct:ceres::internal::Minimizer::Options
max_consecutive_nonmonotonic_steps_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  const int max_consecutive_nonmonotonic_steps_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
max_correspondence_cost_	cartographer/cartographer/mapping/2d/grid_2d.h	/^  float max_correspondence_cost_;$/;"	m	class:cartographer::mapping::Grid2D
max_depth	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  int max_depth() const { return precomputation_grids_.size() - 1; }$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGridStack2D
max_depth	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  int max_depth() const { return precomputation_grids_.size() - 1; }$/;"	f	class:cartographer::mapping::scan_matching::PrecomputationGridStack3D
max_diagonal_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double max_diagonal_;$/;"	m	class:ceres::internal::DoglegStrategy
max_diagonal_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  const double max_diagonal_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
max_final_cost	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^static double max_final_cost = 0;$/;"	m	namespace:cartographer::mapping	file:
max_intensity_	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  const float max_intensity_;$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
max_lbfgs_rank	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int max_lbfgs_rank;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_lbfgs_rank	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int max_lbfgs_rank;$/;"	m	struct:ceres::GradientProblemSolver::Summary
max_lbfgs_rank	ceres-solver/include/ceres/solver.h	/^    int max_lbfgs_rank;$/;"	m	struct:ceres::Solver::Options
max_lbfgs_rank	ceres-solver/include/ceres/solver.h	/^    int max_lbfgs_rank;$/;"	m	struct:ceres::Solver::Summary
max_lbfgs_rank	ceres-solver/internal/ceres/line_search_direction.h	/^    int max_lbfgs_rank;$/;"	m	struct:ceres::internal::LineSearchDirection::Options
max_lbfgs_rank	ceres-solver/internal/ceres/minimizer.h	/^    int max_lbfgs_rank;$/;"	m	struct:ceres::internal::Minimizer::Options
max_line_search_step_contraction	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double max_line_search_step_contraction;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_line_search_step_contraction	ceres-solver/include/ceres/solver.h	/^    double max_line_search_step_contraction;$/;"	m	struct:ceres::Solver::Options
max_line_search_step_contraction	ceres-solver/internal/ceres/minimizer.h	/^    double max_line_search_step_contraction;$/;"	m	struct:ceres::internal::Minimizer::Options
max_line_search_step_expansion	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double max_line_search_step_expansion;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_line_search_step_expansion	ceres-solver/include/ceres/solver.h	/^    double max_line_search_step_expansion;$/;"	m	struct:ceres::Solver::Options
max_line_search_step_expansion	ceres-solver/internal/ceres/minimizer.h	/^    double max_line_search_step_expansion;$/;"	m	struct:ceres::internal::Minimizer::Options
max_linear_solver_iterations	ceres-solver/include/ceres/solver.h	/^    int max_linear_solver_iterations;$/;"	m	struct:ceres::Solver::Options
max_lm_diagonal	ceres-solver/include/ceres/solver.h	/^    double max_lm_diagonal;$/;"	m	struct:ceres::Solver::Options
max_lm_diagonal	ceres-solver/internal/ceres/trust_region_strategy.h	/^    double max_lm_diagonal;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
max_mu_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double max_mu_;$/;"	m	class:ceres::internal::DoglegStrategy
max_num_consecutive_invalid_steps	ceres-solver/include/ceres/solver.h	/^    int max_num_consecutive_invalid_steps;$/;"	m	struct:ceres::Solver::Options
max_num_consecutive_invalid_steps	ceres-solver/internal/ceres/minimizer.h	/^    int max_num_consecutive_invalid_steps;$/;"	m	struct:ceres::internal::Minimizer::Options
max_num_corrections_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  const int max_num_corrections_;$/;"	m	class:ceres::internal::LowRankInverseHessian
max_num_iterations	ceres-solver/examples/libmv_homography.cc	/^  int max_num_iterations;$/;"	m	struct:__anon158::EstimateHomographyOptions	file:
max_num_iterations	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int max_num_iterations;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_num_iterations	ceres-solver/include/ceres/solver.h	/^    int max_num_iterations;$/;"	m	struct:ceres::Solver::Options
max_num_iterations	ceres-solver/internal/ceres/line_search.h	/^    int max_num_iterations;$/;"	m	struct:ceres::internal::LineSearch::Options
max_num_iterations	ceres-solver/internal/ceres/linear_solver.h	/^    int max_num_iterations;$/;"	m	struct:ceres::internal::LinearSolver::Options
max_num_iterations	ceres-solver/internal/ceres/minimizer.h	/^    int max_num_iterations;$/;"	m	struct:ceres::internal::Minimizer::Options
max_num_line_search_direction_restarts	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int max_num_line_search_direction_restarts;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_num_line_search_direction_restarts	ceres-solver/include/ceres/solver.h	/^    int max_num_line_search_direction_restarts;$/;"	m	struct:ceres::Solver::Options
max_num_line_search_direction_restarts	ceres-solver/internal/ceres/minimizer.h	/^    int max_num_line_search_direction_restarts;$/;"	m	struct:ceres::internal::Minimizer::Options
max_num_line_search_step_size_iterations	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int max_num_line_search_step_size_iterations;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_num_line_search_step_size_iterations	ceres-solver/include/ceres/solver.h	/^    int max_num_line_search_step_size_iterations;$/;"	m	struct:ceres::Solver::Options
max_num_line_search_step_size_iterations	ceres-solver/internal/ceres/minimizer.h	/^    int max_num_line_search_step_size_iterations;$/;"	m	struct:ceres::internal::Minimizer::Options
max_num_nonzeros	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int max_num_nonzeros() const { return max_num_nonzeros_; }$/;"	f	class:ceres::internal::TripletSparseMatrix
max_num_nonzeros_	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  int max_num_nonzeros_;$/;"	m	class:ceres::internal::BlockSparseMatrix
max_num_nonzeros_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int max_num_nonzeros_;$/;"	m	class:ceres::internal::TripletSparseMatrix
max_num_ridders_extrapolations	ceres-solver/include/ceres/numeric_diff_options.h	/^  int max_num_ridders_extrapolations;$/;"	m	struct:ceres::NumericDiffOptions
max_probability	cartographer/cartographer/mapping/3d/submap_3d.cc	/^  float max_probability = 0.5f;$/;"	m	struct:cartographer::mapping::__anon106::PixelData	file:
max_radius	ceres-solver/internal/ceres/trust_region_strategy.h	/^    double max_radius;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
max_radius_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double max_radius_;$/;"	m	class:ceres::internal::DoglegStrategy
max_radius_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  double max_radius_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
max_range_	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^  const double max_range_;$/;"	m	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
max_row_block_size	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    int max_row_block_size;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
max_row_block_size	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    int max_row_block_size;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
max_score_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  const float max_score_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
max_solver_time_in_seconds	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double max_solver_time_in_seconds;$/;"	m	struct:ceres::GradientProblemSolver::Options
max_solver_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double max_solver_time_in_seconds;$/;"	m	struct:ceres::Solver::Options
max_solver_time_in_seconds	ceres-solver/internal/ceres/minimizer.h	/^    double max_solver_time_in_seconds;$/;"	m	struct:ceres::internal::Minimizer::Options
max_step_contraction	ceres-solver/internal/ceres/line_search.h	/^    double max_step_contraction;$/;"	m	struct:ceres::internal::LineSearch::Options
max_step_expansion	ceres-solver/internal/ceres/line_search.h	/^    double max_step_expansion;$/;"	m	struct:ceres::internal::LineSearch::Options
max_step_solver_retries	ceres-solver/internal/ceres/minimizer.h	/^    int max_step_solver_retries;$/;"	m	struct:ceres::internal::Minimizer::Options
max_trust_region_radius	ceres-solver/include/ceres/solver.h	/^    double max_trust_region_radius;$/;"	m	struct:ceres::Solver::Options
max_x	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^    int max_x;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters::LinearBounds
max_xy_index_	cartographer/cartographer/mapping/2d/xy_index.h	/^  Eigen::Array2i max_xy_index_;$/;"	m	class:cartographer::mapping::XYIndexRangeIterator
max_y	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^    int max_y;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters::LinearBounds
max_z	cartographer/cartographer/mapping/3d/submap_3d.cc	/^  int max_z = INT_MIN;$/;"	m	struct:cartographer::mapping::__anon106::PixelData	file:
maximum_relative_error	ceres-solver/include/ceres/gradient_checker.h	/^    double maximum_relative_error;$/;"	m	struct:ceres::GradientChecker::ProbeResults
mean_b	cartographer/cartographer/io/xray_points_processor.cc	/^  float mean_b = 0.;$/;"	m	struct:cartographer::io::__anon25::PixelData	file:
mean_g	cartographer/cartographer/io/xray_points_processor.cc	/^  float mean_g = 0.;$/;"	m	struct:cartographer::io::__anon25::PixelData	file:
mean_r	cartographer/cartographer/io/xray_points_processor.cc	/^  float mean_r = 0.;$/;"	m	struct:cartographer::io::__anon25::PixelData	file:
membership_	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^  HashMap<int, int> membership_;$/;"	m	class:ceres::internal::CanonicalViewsTest	file:
memsize	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline size_t memsize() const { return size_ * sizeof(T); }$/;"	f	class:ceres::internal::FixedArray
message	ceres-solver/include/ceres/gradient_problem_solver.h	/^    std::string message;$/;"	m	struct:ceres::GradientProblemSolver::Summary
message	ceres-solver/include/ceres/solver.h	/^    std::string message;$/;"	m	struct:ceres::Solver::Summary
message	ceres-solver/internal/ceres/gmock/mock-log.h	/^    std::string message;$/;"	m	struct:testing::ScopedMockLog::MessageInfo
message	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string message;$/;"	m	struct:testing::internal::TraceInfo	file:
message	ceres-solver/internal/ceres/gtest/gtest.h	/^    std::string const message;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::std
message	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* message() const { return message_.c_str(); }$/;"	f	class:testing::TestPartResult
message	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* message() const {$/;"	f	class:testing::AssertionResult
message	ceres-solver/internal/ceres/linear_solver.h	/^    std::string message;$/;"	m	struct:ceres::internal::LinearSolver::Summary
message_	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::scoped_ptr< ::std::string> message_;$/;"	m	class:testing::AssertionResult
message_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string message_;  \/\/ The test failure message.$/;"	m	class:testing::TestPartResult
message_info_	ceres-solver/internal/ceres/gmock/mock-log.h	/^  MessageInfo message_info_;$/;"	m	class:testing::ScopedMockLog
message_timestamp	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^    ros::Time message_timestamp;$/;"	m	struct:cartographer_ros::PlayableBagMultiplexer::BagMessageItem
metadata_version	cartographer/cartographer/io/submap_painter.h	/^  int metadata_version = -1;$/;"	m	struct:cartographer::io::SubmapSlice
method_ptr_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const MethodPtr method_ptr_;$/;"	m	class:testing::internal::InvokeMethodAction
method_ptr_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const MethodPtr method_ptr_;$/;"	m	class:testing::internal::InvokeMethodWithoutArgsAction
metrics	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^namespace metrics {$/;"	n	namespace:cartographer::cloud	file:
metrics	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^namespace metrics {$/;"	n	namespace:cartographer::cloud
metrics	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^namespace metrics {$/;"	n	namespace:cartographer::cloud	file:
metrics	cartographer/cartographer/metrics/counter.cc	/^namespace metrics {$/;"	n	namespace:cartographer	file:
metrics	cartographer/cartographer/metrics/counter.h	/^namespace metrics {$/;"	n	namespace:cartographer
metrics	cartographer/cartographer/metrics/family_factory.h	/^namespace metrics {$/;"	n	namespace:cartographer
metrics	cartographer/cartographer/metrics/gauge.cc	/^namespace metrics {$/;"	n	namespace:cartographer	file:
metrics	cartographer/cartographer/metrics/gauge.h	/^namespace metrics {$/;"	n	namespace:cartographer
metrics	cartographer/cartographer/metrics/histogram.cc	/^namespace metrics {$/;"	n	namespace:cartographer	file:
metrics	cartographer/cartographer/metrics/histogram.h	/^namespace metrics {$/;"	n	namespace:cartographer
metrics	cartographer/cartographer/metrics/register.cc	/^namespace metrics {$/;"	n	namespace:cartographer	file:
metrics	cartographer/cartographer/metrics/register.h	/^namespace metrics {$/;"	n	namespace:cartographer
min_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const int min_;$/;"	m	class:testing::__anon175::BetweenCardinalityImpl	file:
min_added_submaps_count_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  const uint16 min_added_submaps_count_;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
min_col_block_size	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    int min_col_block_size;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
min_col_block_size	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    int min_col_block_size;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
min_correspondence_cost_	cartographer/cartographer/mapping/2d/grid_2d.h	/^  float min_correspondence_cost_;$/;"	m	class:cartographer::mapping::Grid2D
min_covered_cells_count_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  const uint16 min_covered_cells_count_;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
min_diagonal_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double min_diagonal_;$/;"	m	class:ceres::internal::DoglegStrategy
min_diagonal_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  const double min_diagonal_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
min_intensity_	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  const float min_intensity_;$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
min_line_search_step_contraction	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double min_line_search_step_contraction;$/;"	m	struct:ceres::GradientProblemSolver::Options
min_line_search_step_contraction	ceres-solver/include/ceres/solver.h	/^    double min_line_search_step_contraction;$/;"	m	struct:ceres::Solver::Options
min_line_search_step_contraction	ceres-solver/internal/ceres/minimizer.h	/^    double min_line_search_step_contraction;$/;"	m	struct:ceres::internal::Minimizer::Options
min_line_search_step_size	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double min_line_search_step_size;$/;"	m	struct:ceres::GradientProblemSolver::Options
min_line_search_step_size	ceres-solver/include/ceres/solver.h	/^    double min_line_search_step_size;$/;"	m	struct:ceres::Solver::Options
min_line_search_step_size	ceres-solver/internal/ceres/minimizer.h	/^    double min_line_search_step_size;$/;"	m	struct:ceres::internal::Minimizer::Options
min_linear_solver_iterations	ceres-solver/include/ceres/solver.h	/^    int min_linear_solver_iterations;$/;"	m	struct:ceres::Solver::Options
min_lm_diagonal	ceres-solver/include/ceres/solver.h	/^    double min_lm_diagonal;$/;"	m	struct:ceres::Solver::Options
min_lm_diagonal	ceres-solver/internal/ceres/trust_region_strategy.h	/^    double min_lm_diagonal;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
min_mu_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double min_mu_;$/;"	m	class:ceres::internal::DoglegStrategy
min_num_iterations	ceres-solver/internal/ceres/linear_solver.h	/^    int min_num_iterations;$/;"	m	struct:ceres::internal::LinearSolver::Options
min_range_	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^  const double min_range_;$/;"	m	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
min_reciprocal_condition_number	ceres-solver/include/ceres/covariance.h	/^    double min_reciprocal_condition_number;$/;"	m	struct:ceres::Covariance::Options
min_relative_decrease	ceres-solver/include/ceres/solver.h	/^    double min_relative_decrease;$/;"	m	struct:ceres::Solver::Options
min_relative_decrease	ceres-solver/internal/ceres/minimizer.h	/^    double min_relative_decrease;$/;"	m	struct:ceres::internal::Minimizer::Options
min_row_block_size	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    int min_row_block_size;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
min_row_block_size	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    int min_row_block_size;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
min_score_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  const float min_score_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
min_similarity	ceres-solver/internal/ceres/single_linkage_clustering.h	/^  double min_similarity;$/;"	m	struct:ceres::internal::SingleLinkageClusteringOptions
min_step_contraction	ceres-solver/internal/ceres/line_search.h	/^    double min_step_contraction;$/;"	m	struct:ceres::internal::LineSearch::Options
min_step_size	ceres-solver/internal/ceres/line_search.h	/^    double min_step_size;$/;"	m	struct:ceres::internal::LineSearch::Options
min_trust_region_radius	ceres-solver/include/ceres/solver.h	/^    double min_trust_region_radius;$/;"	m	struct:ceres::Solver::Options
min_trust_region_radius	ceres-solver/internal/ceres/minimizer.h	/^    double min_trust_region_radius;$/;"	m	struct:ceres::internal::Minimizer::Options
min_views	ceres-solver/internal/ceres/canonical_views_clustering.h	/^  int min_views;$/;"	m	struct:ceres::internal::CanonicalViewsClusteringOptions
min_x	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^    int min_x;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters::LinearBounds
min_xy_index_	cartographer/cartographer/mapping/2d/xy_index.h	/^  Eigen::Array2i min_xy_index_;$/;"	m	class:cartographer::mapping::XYIndexRangeIterator
min_y	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^    int min_y;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters::LinearBounds
min_z	cartographer/cartographer/mapping/3d/submap_3d.cc	/^  int min_z = INT_MAX;$/;"	m	struct:cartographer::mapping::__anon106::PixelData	file:
minimizer_options	ceres-solver/internal/ceres/preprocessor.h	/^  Minimizer::Options minimizer_options;$/;"	m	struct:ceres::internal::PreprocessedProblem
minimizer_progress_to_stdout	ceres-solver/include/ceres/gradient_problem_solver.h	/^    bool minimizer_progress_to_stdout;$/;"	m	struct:ceres::GradientProblemSolver::Options
minimizer_progress_to_stdout	ceres-solver/include/ceres/solver.h	/^    bool minimizer_progress_to_stdout;$/;"	m	struct:ceres::Solver::Options
minimizer_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double minimizer_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
minimizer_type	ceres-solver/include/ceres/solver.h	/^    MinimizerType minimizer_type;$/;"	m	struct:ceres::Solver::Options
minimizer_type	ceres-solver/include/ceres/solver.h	/^    MinimizerType minimizer_type;$/;"	m	struct:ceres::Solver::Summary
minimizer_type	ceres-solver/internal/ceres/callbacks.h	/^  const MinimizerType minimizer_type;$/;"	m	class:ceres::internal::LoggingCallback
minimum_cost_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double minimum_cost_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
minimum_cost_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  double minimum_cost_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
miss_table_	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^  const std::vector<uint16> miss_table_;$/;"	m	class:cartographer::mapping::ProbabilityGridRangeDataInserter2D
miss_table_	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	/^  const std::vector<uint16> miss_table_;$/;"	m	class:cartographer::mapping::RangeDataInserter3D
misses	cartographer/cartographer/sensor/range_data.h	/^  PointCloud misses;$/;"	m	struct:cartographer::sensor::RangeData
misses	cartographer/cartographer/sensor/range_data.h	/^  TimedPointCloud misses;$/;"	m	struct:cartographer::sensor::TimedRangeData
misses_	cartographer/cartographer/sensor/range_data_test.cc	/^  std::vector<Eigen::Vector3f> misses_;$/;"	m	class:cartographer::sensor::__anon120::RangeDataTest	file:
mock_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^  MockCallback mock_;$/;"	m	class:cartographer::mapping::constraints::__anon71::ConstraintBuilder2DTest	file:
mock_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^  MockCallback mock_;$/;"	m	class:cartographer::mapping::constraints::__anon72::ConstraintBuilder3DTest	file:
mock_local_trajectory_uploader_	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^  std::unique_ptr<MockLocalTrajectoryUploader> mock_local_trajectory_uploader_;$/;"	m	class:cartographer::cloud::testing::HandlerTest
mock_map_builder_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  MockMapBuilder* mock_map_builder_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
mock_map_builder_	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler_test.cc	/^  std::unique_ptr<mapping::testing::MockMapBuilder> mock_map_builder_;$/;"	m	class:cartographer::cloud::handlers::__anon47::AddTrajectoryHandlerTest	file:
mock_map_builder_	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^  std::unique_ptr<mapping::testing::MockMapBuilder> mock_map_builder_;$/;"	m	class:cartographer::cloud::testing::HandlerTest
mock_map_builder_context_	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^  MockMapBuilderContext *mock_map_builder_context_;$/;"	m	class:cartographer::cloud::testing::HandlerTest
mock_obj_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const void* mock_obj_;  \/\/ Protected by g_gmock_mutex.$/;"	m	class:testing::internal::UntypedFunctionMockerBase
mock_pose_graph_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::unique_ptr<MockPoseGraph> mock_pose_graph_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
mock_pose_graph_	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^  std::unique_ptr<mapping::testing::MockPoseGraph> mock_pose_graph_;$/;"	m	class:cartographer::cloud::testing::HandlerTest
mock_trajectory_builder_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::unique_ptr<MockTrajectoryBuilder> mock_trajectory_builder_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
model_cost_change_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double model_cost_change_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
model_residuals_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector model_residuals_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
mono_tuple2_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<const ArgTuple&> mono_tuple2_matcher_;$/;"	m	class:testing::internal::BoundSecondMatcher::Impl
mono_tuple_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<InnerMatcherArg> mono_tuple_matcher_;$/;"	m	class:testing::internal::PointwiseMatcher::Impl
motion_filter_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  MotionFilter motion_filter_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
motion_filter_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  mapping::MotionFilter motion_filter_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
mu_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  double mu_;$/;"	m	class:ceres::internal::DoglegStrategy
mu_	ceres-solver/internal/ceres/mutex.h	/^  Mutex * const mu_;$/;"	m	class:ceres::internal::CeresMutexLock
mu_	ceres-solver/internal/ceres/mutex.h	/^  Mutex * const mu_;$/;"	m	class:ceres::internal::CeresReaderMutexLock
mu_	ceres-solver/internal/ceres/mutex.h	/^  Mutex * const mu_;$/;"	m	class:ceres::internal::CeresWriterMutexLock
mu_increase_factor_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  const double mu_increase_factor_;$/;"	m	class:ceres::internal::DoglegStrategy
mutable_camera_for_observation	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double* mutable_camera_for_observation(int i) {$/;"	f	class:BALProblem
mutable_cameras	ceres-solver/examples/bal_problem.h	/^  double* mutable_cameras()          { return parameters_;               }$/;"	f	class:ceres::examples::BALProblem
mutable_cameras	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double* mutable_cameras()          { return parameters_;                     }$/;"	f	class:BALProblem
mutable_cameras	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  double* mutable_cameras() { return parameters_; }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
mutable_cc	ceres-solver/internal/ceres/suitesparse.h	/^  cholmod_common* mutable_cc() { return &cc_; }$/;"	f	class:ceres::internal::SuiteSparse
mutable_col_blocks	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<int>* mutable_col_blocks() { return &col_blocks_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
mutable_cols	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  int* mutable_cols() { return &cols_[0]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
mutable_cols	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int* mutable_cols()          { return cols_.get();       }$/;"	f	class:ceres::internal::TripletSparseMatrix
mutable_constraints	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  std::vector<PoseGraphInterface::Constraint>* mutable_constraints() {$/;"	f	class:cartographer::mapping::testing::FakeTrimmable
mutable_correspondence_cost_cells	cartographer/cartographer/mapping/2d/grid_2d.h	/^  std::vector<uint16>* mutable_correspondence_cost_cells() {$/;"	f	class:cartographer::mapping::Grid2D
mutable_impl	ceres-solver/internal/ceres/gmock/gmock.h	/^  Impl& mutable_impl() { return impl_; }$/;"	f	class:testing::PolymorphicMatcher
mutable_known_cells_box	cartographer/cartographer/mapping/2d/grid_2d.h	/^  Eigen::AlignedBox2i* mutable_known_cells_box() { return &known_cells_box_; }$/;"	f	class:cartographer::mapping::Grid2D
mutable_local_parameterization	ceres-solver/internal/ceres/parameter_block.h	/^  LocalParameterization* mutable_local_parameterization() {$/;"	f	class:ceres::internal::ParameterBlock
mutable_matrix	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  TripletSparseMatrix* mutable_matrix() { return tsm_.get(); }$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
mutable_matrix	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  TripletSparseMatrix* mutable_matrix() { return tsm_.get(); }$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
mutable_matrix	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^ColMajorMatrixRef DenseSparseMatrix::mutable_matrix() {$/;"	f	class:ceres::internal::DenseSparseMatrix
mutable_parameter_block_sizes	ceres-solver/include/ceres/cost_function.h	/^  std::vector<int32>* mutable_parameter_block_sizes() {$/;"	f	class:ceres::CostFunction
mutable_parameter_blocks	ceres-solver/internal/ceres/program.cc	/^vector<ParameterBlock*>* Program::mutable_parameter_blocks() {$/;"	f	class:ceres::internal::Program
mutable_point_for_observation	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double* mutable_point_for_observation(int i) {$/;"	f	class:BALProblem
mutable_points	ceres-solver/examples/bal_problem.h	/^  double* mutable_points() {$/;"	f	class:ceres::examples::BALProblem
mutable_points	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double* mutable_points()           { return parameters_  + 9 * num_cameras_; }$/;"	f	class:BALProblem
mutable_points	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  double* mutable_points() { return parameters_  + 9 * num_cameras_; }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
mutable_problem	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  Problem* mutable_problem() { return &problem_; }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
mutable_problem	ceres-solver/internal/ceres/system_test.cc	/^  Problem* mutable_problem() { return &problem_; }$/;"	f	class:ceres::internal::PowellsFunction
mutable_program	ceres-solver/internal/ceres/problem_impl.h	/^  Program* mutable_program() { return program_.get(); }$/;"	f	class:ceres::internal::ProblemImpl
mutable_residual_blocks	ceres-solver/internal/ceres/parameter_block.h	/^  ResidualBlockSet* mutable_residual_blocks() {$/;"	f	class:ceres::internal::ParameterBlock
mutable_residual_blocks	ceres-solver/internal/ceres/program.cc	/^vector<ResidualBlock*>* Program::mutable_residual_blocks() {$/;"	f	class:ceres::internal::Program
mutable_result	ceres-solver/internal/ceres/inner_product_computer.h	/^  CompressedRowSparseMatrix* mutable_result() const { return result_.get(); }$/;"	f	class:ceres::internal::InnerProductComputer
mutable_row_blocks	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<int>* mutable_row_blocks() { return &row_blocks_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
mutable_rows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  int* mutable_rows() { return &rows_[0]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
mutable_rows	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int* mutable_rows()          { return rows_.get();       }$/;"	f	class:ceres::internal::TripletSparseMatrix
mutable_solver_options	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  Solver::Options* mutable_solver_options() { return &options_; }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
mutable_solver_options	ceres-solver/internal/ceres/system_test.cc	/^  Solver::Options* mutable_solver_options() { return &options_; }$/;"	f	class:ceres::internal::PowellsFunction
mutable_submap_data	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  MapById<SubmapId, PoseGraphInterface::SubmapData>* mutable_submap_data() {$/;"	f	class:cartographer::mapping::testing::FakeTrimmable
mutable_trajectory_nodes	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  MapById<NodeId, TrajectoryNode>* mutable_trajectory_nodes() {$/;"	f	class:cartographer::mapping::testing::FakeTrimmable
mutable_update_indices	cartographer/cartographer/mapping/2d/grid_2d.h	/^  std::vector<int>* mutable_update_indices() { return &update_indices_; }$/;"	f	class:cartographer::mapping::Grid2D
mutable_user_state	ceres-solver/internal/ceres/parameter_block.h	/^  double* mutable_user_state() { return user_state_; }$/;"	f	class:ceres::internal::ParameterBlock
mutable_value	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^  ValueType* mutable_value(const Eigen::Array3i& index) {$/;"	f	class:cartographer::mapping::FlatGrid
mutable_values	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  double* mutable_values() { return values_.get(); }$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
mutable_values	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  virtual double* mutable_values()     { return values_.get(); }$/;"	f	class:ceres::internal::BlockSparseMatrix
mutable_values	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  virtual double* mutable_values() { return &values_[0]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
mutable_values	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^  virtual double* mutable_values() { return m_.data(); }$/;"	f	class:ceres::internal::DenseSparseMatrix
mutable_values	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  virtual double* mutable_values()      { return values_.get(); }$/;"	f	class:ceres::internal::TripletSparseMatrix
mutex_	cartographer/cartographer/common/blocking_queue.h	/^  Mutex mutex_;$/;"	m	class:cartographer::common::BlockingQueue
mutex_	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^  Mutex mutex_;$/;"	m	class:cartographer::common::testing::ThreadPoolForTesting
mutex_	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^  bool idle_ GUARDED_BY(mutex_) = true;$/;"	m	class:cartographer::common::testing::ThreadPoolForTesting
mutex_	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^  bool running_ GUARDED_BY(mutex_) = true;$/;"	m	class:cartographer::common::testing::ThreadPoolForTesting
mutex_	cartographer/cartographer/common/task.h	/^  Mutex mutex_;$/;"	m	class:cartographer::common::Task
mutex_	cartographer/cartographer/common/task.h	/^  State state_ GUARDED_BY(mutex_) = NEW;$/;"	m	class:cartographer::common::Task
mutex_	cartographer/cartographer/common/task.h	/^  ThreadPoolInterface* thread_pool_to_notify_ GUARDED_BY(mutex_) = nullptr;$/;"	m	class:cartographer::common::Task
mutex_	cartographer/cartographer/common/task.h	/^  unsigned int uncompleted_dependencies_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::common::Task
mutex_	cartographer/cartographer/common/thread_pool.h	/^  Mutex mutex_;$/;"	m	class:cartographer::common::ThreadPool
mutex_	cartographer/cartographer/common/thread_pool.h	/^  bool running_ GUARDED_BY(mutex_) = true;$/;"	m	class:cartographer::common::ThreadPool
mutex_	cartographer/cartographer/common/thread_pool_test.cc	/^  Mutex mutex_;$/;"	m	class:cartographer::common::__anon5::Receiver	file:
mutex_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  bool run_loop_closure_ GUARDED_BY(mutex_) = false;$/;"	m	class:cartographer::mapping::PoseGraph2D
mutex_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  int num_nodes_since_last_loop_closure_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::PoseGraph2D
mutex_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  int num_trajectory_nodes_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::PoseGraph2D
mutex_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  mutable common::Mutex mutex_;$/;"	m	class:cartographer::mapping::PoseGraph2D
mutex_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  bool run_loop_closure_ GUARDED_BY(mutex_) = false;$/;"	m	class:cartographer::mapping::PoseGraph3D
mutex_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  int num_nodes_since_last_loop_closure_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::PoseGraph3D
mutex_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  int num_trajectory_nodes_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::PoseGraph3D
mutex_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  mutable common::Mutex mutex_;$/;"	m	class:cartographer::mapping::PoseGraph3D
mutex_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  common::Mutex mutex_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
mutex_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  int num_finished_nodes_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
mutex_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  int num_started_nodes_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
mutex_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  common::Mutex mutex_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
mutex_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  int num_finished_nodes_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
mutex_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  int num_started_nodes_ GUARDED_BY(mutex_) = 0;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
mutex_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  cartographer::common::Mutex mutex_;$/;"	m	class:cartographer_ros::MapBuilderBridge
mutex_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  cartographer::common::Mutex mutex_;$/;"	m	class:cartographer_ros::Node
mutex_	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  ::cartographer::common::Mutex mutex_;$/;"	m	class:cartographer_ros::__anon135::Node	file:
mutex_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  ::cartographer::common::Mutex mutex_;$/;"	m	class:cartographer_rviz::DrawableSubmap
mutex_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  bool query_in_progress_ GUARDED_BY(mutex_) = false;$/;"	m	class:cartographer_rviz::DrawableSubmap
mutex_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  int metadata_version_ GUARDED_BY(mutex_) = -1;$/;"	m	class:cartographer_rviz::DrawableSubmap
mutex_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::cartographer::common::Mutex mutex_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
mutex_	ceres-solver/internal/ceres/gmock/gmock.h	/^  mutable Mutex mutex_;  \/\/ Protects action_count_checked_.$/;"	m	class:testing::internal::ExpectationBase
mutex_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static Mutex mutex_;$/;"	m	class:testing::internal::ThreadLocalRegistryImpl	file:
mutex_	ceres-solver/internal/ceres/gradient_checking_cost_function.h	/^  ceres::internal::Mutex mutex_;$/;"	m	class:ceres::internal::GradientCheckingIterationCallback
mutex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  Mutex* const mutex_;$/;"	m	class:std::tr1::GTestMutexLock
mutex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  MutexBase* const mutex_;$/;"	m	class:std::tr1::GTestMutexLock
mutex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  mutable internal::Mutex mutex_;$/;"	m	class:testing::UnitTest
mutex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  pthread_mutex_t mutex_;  \/\/ The underlying pthread mutex.$/;"	m	class:std::tr1::MutexBase
mutex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  pthread_mutex_t mutex_;$/;"	m	class:std::tr1::Notification
mutex_	ceres-solver/internal/ceres/mutex.h	/^  MutexType mutex_;$/;"	m	class:ceres::internal::Mutex
name	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  static std::string name() {$/;"	f	struct:ceres::examples::Constraint2d
name	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  static std::string name() {$/;"	f	struct:ceres::examples::Pose2d
name	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  static std::string name() {$/;"	f	struct:ceres::examples::Constraint3d
name	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  static std::string name() {$/;"	f	struct:ceres::examples::Pose3d
name	ceres-solver/internal/ceres/gtest/gtest.h	/^      std::string name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
name	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestCase
name	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestInfo
name_	ceres-solver/internal/ceres/execution_summary.h	/^  const std::string name_;$/;"	m	class:ceres::internal::ScopedExecutionTimer
name_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const char* name_;  \/\/ Protected by g_gmock_mutex.$/;"	m	class:testing::internal::UntypedFunctionMockerBase
name_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string name_;$/;"	m	class:testing::__anon170::TestNameIs	file:
name_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string name_;$/;"	m	class:testing::internal::TestCaseNameIs	file:
name_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::string name_;               \/\/ Test name$/;"	m	class:testing::TestInfo
name_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string name_;$/;"	m	class:testing::TestCase
name_func	ceres-solver/internal/ceres/gtest/gtest.h	/^      ParamNameGeneratorFunc* name_func;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::InstantiationInfo
nan_eq_nan_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const bool nan_eq_nan_;$/;"	m	class:testing::internal::FloatingEqMatcher::Impl
nan_eq_nan_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const bool nan_eq_nan_;$/;"	m	class:testing::internal::FloatingEqMatcher
negative_gradient_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector negative_gradient_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
next	cartographer/cartographer/common/lockless_queue.h	/^    std::atomic<Node*> next;$/;"	m	struct:cartographer::common::LocklessQueue::Node
next_	cartographer/cartographer/io/coloring_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::ColoringPointsProcessor
next_	cartographer/cartographer/io/counting_points_processor.h	/^  PointsProcessor* next_;$/;"	m	class:cartographer::io::CountingPointsProcessor
next_	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::FixedRatioSamplingPointsProcessor
next_	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::FrameIdFilteringPointsProcessor
next_	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::HybridGridPointsProcessor
next_	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
next_	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
next_	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
next_	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
next_	cartographer/cartographer/io/ply_writing_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
next_	cartographer/cartographer/io/probability_grid_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
next_	cartographer/cartographer/io/xray_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::XRayPointsProcessor
next_	cartographer/cartographer/io/xyz_writing_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer::io::XyzWriterPointsProcessor
next_	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  PointsProcessor* const next_;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
next_	ceres-solver/internal/ceres/gtest/gtest.h	/^  mutable linked_ptr_internal const* next_;$/;"	m	class:testing::internal::linked_ptr_internal
next_message_queue_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^      next_message_queue_;$/;"	m	class:cartographer_ros::PlayableBagMultiplexer
next_node_gravity_alignment_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  const Eigen::Quaterniond next_node_gravity_alignment_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction2D
node_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  MapById<NodeId, NodeSpec2D> node_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
node_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  MapById<NodeId, NodeSpec3D> node_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
node_handle	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^::ros::NodeHandle* Node::node_handle() { return &node_handle_; }$/;"	f	class:cartographer_ros::Node
node_handle_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::NodeHandle node_handle_;$/;"	m	class:cartographer_ros::Node
node_handle_	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  ::ros::NodeHandle node_handle_;$/;"	m	class:cartographer_ros::__anon135::Node	file:
node_id	cartographer/cartographer/mapping/pose_graph_interface.h	/^    NodeId node_id;      \/\/ 'j' in the paper.$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint
node_id	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    NodeId node_id;$/;"	m	struct:cartographer::mapping::TrajectoryBuilderInterface::InsertionResult
node_ids	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^    std::set<NodeId> node_ids;$/;"	m	struct:cartographer::mapping::PoseGraph2D::InternalSubmapData
node_ids	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^    std::set<NodeId> node_ids;$/;"	m	struct:cartographer::mapping::PoseGraph3D::InternalSubmapData
node_index	cartographer/cartographer/mapping/id.h	/^  int node_index;$/;"	m	struct:cartographer::mapping::NodeId
node_options_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  const NodeOptions node_options_;$/;"	m	class:cartographer_ros::MapBuilderBridge
node_options_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  const NodeOptions node_options_;$/;"	m	class:cartographer_ros::Node
noise_factor_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  double noise_factor_;$/;"	m	class:ceres::internal::RandomizedFunctor
non_ascending_maxima_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^  std::deque<float> non_ascending_maxima_;$/;"	m	class:cartographer::mapping::scan_matching::__anon78::SlidingWindowMaximum	file:
nonfatally_failed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }$/;"	f	class:testing::TestPartResult
nonlinear_conjugate_gradient_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    NonlinearConjugateGradientType nonlinear_conjugate_gradient_type;$/;"	m	struct:ceres::GradientProblemSolver::Options
nonlinear_conjugate_gradient_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    NonlinearConjugateGradientType nonlinear_conjugate_gradient_type;$/;"	m	struct:ceres::GradientProblemSolver::Summary
nonlinear_conjugate_gradient_type	ceres-solver/include/ceres/solver.h	/^    NonlinearConjugateGradientType nonlinear_conjugate_gradient_type;$/;"	m	struct:ceres::Solver::Options
nonlinear_conjugate_gradient_type	ceres-solver/include/ceres/solver.h	/^    NonlinearConjugateGradientType nonlinear_conjugate_gradient_type;$/;"	m	struct:ceres::Solver::Summary
nonlinear_conjugate_gradient_type	ceres-solver/internal/ceres/line_search_direction.h	/^    NonlinearConjugateGradientType nonlinear_conjugate_gradient_type;$/;"	m	struct:ceres::internal::LineSearchDirection::Options
nonlinear_conjugate_gradient_type	ceres-solver/internal/ceres/minimizer.h	/^    NonlinearConjugateGradientType nonlinear_conjugate_gradient_type;$/;"	m	struct:ceres::internal::Minimizer::Options
normalized_angle	cartographer/cartographer/transform/rigid_transform.h	/^  double normalized_angle() const {$/;"	f	class:cartographer::transform::Rigid2
notified_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool notified_;$/;"	m	class:std::tr1::Notification
null_space_rank	ceres-solver/include/ceres/covariance.h	/^    int null_space_rank;$/;"	m	struct:ceres::Covariance::Options
num_accumulated_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  int num_accumulated_ = 0;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
num_accumulated_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  int num_accumulated_ = 0;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
num_active_cols_	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  const int num_active_cols_;$/;"	m	class:ceres::internal::PowellEvaluator2	file:
num_additional_elements	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  int num_additional_elements;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
num_angular_perturbations	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  int num_angular_perturbations;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters
num_blocks_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  int num_blocks_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
num_cameras	ceres-solver/examples/bal_problem.h	/^  int num_cameras()            const { return num_cameras_;              }$/;"	f	class:ceres::examples::BALProblem
num_cameras	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_cameras()            const { return num_cameras_;        }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
num_cameras_	ceres-solver/examples/bal_problem.h	/^  int num_cameras_;$/;"	m	class:ceres::examples::BALProblem
num_cameras_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int num_cameras_;$/;"	m	class:BALProblem	file:
num_cameras_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_cameras_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
num_clusters_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  int num_clusters_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
num_col_blocks	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    int num_col_blocks;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
num_col_blocks	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    int num_col_blocks;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
num_col_blocks_e	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual int num_col_blocks_e() const { return num_col_blocks_e_;  }$/;"	f	class:ceres::internal::PartitionedMatrixView
num_col_blocks_e_	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  int num_col_blocks_e_;$/;"	m	class:ceres::internal::PartitionedMatrixView
num_col_blocks_f	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual int num_col_blocks_f() const { return num_col_blocks_f_;  }$/;"	f	class:ceres::internal::PartitionedMatrixView
num_col_blocks_f_	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  int num_col_blocks_f_;$/;"	m	class:ceres::internal::PartitionedMatrixView
num_cols	ceres-solver/include/ceres/crs_matrix.h	/^  int num_cols;$/;"	m	struct:ceres::CRSMatrix
num_cols	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^  virtual int num_cols() const { return m_->num_rows(); }$/;"	f	class:ceres::internal::BlockJacobiPreconditioner
num_cols	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  virtual int num_cols() const { return num_rows_; }$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
num_cols	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  virtual int num_cols() const { return tsm_->num_cols(); }$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
num_cols	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  virtual int num_cols() const { return tsm_->num_cols(); }$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
num_cols	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  virtual int num_cols()         const { return num_cols_;     }$/;"	f	class:ceres::internal::BlockSparseMatrix
num_cols	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  virtual int num_cols() const { return A_.num_cols(); }$/;"	f	class:ceres::internal::CgnrLinearOperator
num_cols	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  virtual int num_cols() const { return num_cols_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
num_cols	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^  int num_cols;$/;"	m	class:ceres::internal::CompressedRowSparseMatrixTest	file:
num_cols	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^int DenseSparseMatrix::num_cols() const {$/;"	f	class:ceres::internal::DenseSparseMatrix
num_cols	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^  int num_cols;$/;"	m	class:ceres::internal::DenseSparseMatrixTest	file:
num_cols	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  int num_cols;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
num_cols	ceres-solver/internal/ceres/evaluator_test_utils.h	/^  int num_cols;$/;"	m	struct:ceres::internal::ExpectedEvaluation
num_cols	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  virtual int num_cols() const { return A_->num_cols_f(); }$/;"	f	class:ceres::internal::ImplicitSchurComplement
num_cols	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  virtual int num_cols() const { return num_parameters_; }$/;"	f	class:ceres::internal::LowRankInverseHessian
num_cols	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual int num_cols()         const { return matrix_.num_cols(); }$/;"	f	class:ceres::internal::PartitionedMatrixView
num_cols	ceres-solver/internal/ceres/preconditioner.h	/^  virtual int num_cols() const {$/;"	f	class:ceres::internal::Preconditioner
num_cols	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual int num_cols() const { return m_.num_rows(); }$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter
num_cols	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual int num_cols() const { return m_.num_rows(); }$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter
num_cols	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  int num_cols;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
num_cols	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^    int num_cols;$/;"	m	struct:ceres::internal::TripletSparseMatrix::RandomMatrixOptions
num_cols	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  virtual int num_cols()        const { return num_cols_;     }$/;"	f	class:ceres::internal::TripletSparseMatrix
num_cols_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int num_cols_;$/;"	m	struct:ceres::Grid2D
num_cols_	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  int num_cols_;$/;"	m	class:ceres::internal::BlockSparseMatrix
num_cols_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  int num_cols_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
num_cols_	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  int num_cols_;$/;"	m	class:ceres::internal::ImplicitSchurComplementTest	file:
num_cols_	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  int num_cols_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolverTest	file:
num_cols_	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^  const int num_cols_;$/;"	m	class:ceres::internal::RegularizationCheckingLinearSolver	file:
num_cols_	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^  int num_cols_;$/;"	m	class:ceres::internal::PartitionedMatrixViewTest	file:
num_cols_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int num_cols_;$/;"	m	class:ceres::internal::TripletSparseMatrix
num_cols_e	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual int num_cols_e()       const { return num_cols_e_;        }$/;"	f	class:ceres::internal::PartitionedMatrixView
num_cols_e_	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  int num_cols_e_;$/;"	m	class:ceres::internal::PartitionedMatrixView
num_cols_f	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual int num_cols_f()       const { return num_cols_f_;        }$/;"	f	class:ceres::internal::PartitionedMatrixView
num_cols_f_	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  int num_cols_f_;$/;"	m	class:ceres::internal::PartitionedMatrixView
num_consecutive_invalid_steps_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  int num_consecutive_invalid_steps_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
num_consecutive_nonmonotonic_steps_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  int num_consecutive_nonmonotonic_steps_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
num_cost_evaluations	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int num_cost_evaluations;$/;"	m	struct:ceres::GradientProblemSolver::Summary
num_destructions_	ceres-solver/internal/ceres/problem_test.cc	/^  int* num_destructions_;$/;"	m	class:ceres::internal::DestructorCountingCostFunction	file:
num_different_	cartographer/cartographer/mapping/internal/motion_filter.h	/^  int num_different_ = 0;$/;"	m	class:cartographer::mapping::MotionFilter
num_effective_parameters	ceres-solver/include/ceres/solver.h	/^    int num_effective_parameters;$/;"	m	struct:ceres::Solver::Summary
num_effective_parameters_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  int num_effective_parameters_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
num_effective_parameters_reduced	ceres-solver/include/ceres/solver.h	/^    int num_effective_parameters_reduced;$/;"	m	struct:ceres::Solver::Summary
num_elements_	ceres-solver/internal/ceres/gmock/gmock.h	/^  size_t num_elements_;$/;"	m	class:testing::internal::MatchMatrix
num_eliminate_blocks	ceres-solver/internal/ceres/evaluator.h	/^    int num_eliminate_blocks;$/;"	m	struct:ceres::internal::Evaluator::Options
num_eliminate_blocks	ceres-solver/internal/ceres/evaluator_test.cc	/^  int num_eliminate_blocks;$/;"	m	struct:ceres::internal::EvaluatorTestOptions	file:
num_eliminate_blocks	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  int num_eliminate_blocks;$/;"	m	struct:ceres::internal::LinearLeastSquaresProblem
num_eliminate_blocks	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  int num_eliminate_blocks;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
num_eliminate_blocks	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  int num_eliminate_blocks;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
num_eliminate_blocks_	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  int num_eliminate_blocks_;$/;"	m	class:ceres::internal::ImplicitSchurComplementTest	file:
num_eliminate_blocks_	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  int num_eliminate_blocks_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolverTest	file:
num_eliminate_blocks_	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^  int num_eliminate_blocks_;$/;"	m	class:ceres::internal::PartitionedMatrixViewTest	file:
num_eliminate_blocks_	ceres-solver/internal/ceres/schur_eliminator.h	/^  int num_eliminate_blocks_;$/;"	m	class:ceres::internal::SchurEliminator
num_eliminate_cols	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  int num_eliminate_cols;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
num_filters_	ceres-solver/examples/fields_of_experts.h	/^  int num_filters_;$/;"	m	class:ceres::examples::FieldsOfExperts
num_function_evaluations	ceres-solver/internal/ceres/line_search.h	/^    int num_function_evaluations;$/;"	m	struct:ceres::internal::LineSearch::Summary
num_gradient_evaluations	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int num_gradient_evaluations;$/;"	m	struct:ceres::GradientProblemSolver::Summary
num_gradient_evaluations	ceres-solver/internal/ceres/line_search.h	/^    int num_gradient_evaluations;$/;"	m	struct:ceres::internal::LineSearch::Summary
num_inner_iteration_steps	ceres-solver/include/ceres/solver.h	/^    int num_inner_iteration_steps;$/;"	m	struct:ceres::Solver::Summary
num_iterations	ceres-solver/internal/ceres/line_search.h	/^    int num_iterations;$/;"	m	struct:ceres::internal::LineSearch::Summary
num_iterations	ceres-solver/internal/ceres/linear_solver.h	/^    int num_iterations;$/;"	m	struct:ceres::internal::LinearSolver::Summary
num_iterations	ceres-solver/internal/ceres/trust_region_strategy.h	/^    int num_iterations;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Summary
num_laser_scans	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  int num_laser_scans;$/;"	m	struct:cartographer_ros::TrajectoryOptions
num_line_search_steps	ceres-solver/include/ceres/solver.h	/^    int num_line_search_steps;$/;"	m	struct:ceres::Solver::Summary
num_linear_solver_threads	ceres-solver/include/ceres/solver.h	/^    int num_linear_solver_threads;$/;"	m	struct:ceres::Solver::Options
num_linear_solver_threads_given	ceres-solver/include/ceres/solver.h	/^    int num_linear_solver_threads_given;$/;"	m	struct:ceres::Solver::Summary
num_linear_solver_threads_used	ceres-solver/include/ceres/solver.h	/^    int num_linear_solver_threads_used;$/;"	m	struct:ceres::Solver::Summary
num_local_parameters	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int num_local_parameters;$/;"	m	struct:ceres::GradientProblemSolver::Summary
num_matchers_	ceres-solver/internal/ceres/gmock/gmock.h	/^  size_t num_matchers_;$/;"	m	class:testing::internal::MatchMatrix
num_multi_echo_laser_scans	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  int num_multi_echo_laser_scans;$/;"	m	struct:cartographer_ros::TrajectoryOptions
num_nonzeros	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  virtual int num_nonzeros()     const { return num_nonzeros_; }$/;"	f	class:ceres::internal::BlockSparseMatrix
num_nonzeros	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  virtual int num_nonzeros() const { return rows_[num_rows_]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
num_nonzeros	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^int DenseSparseMatrix::num_nonzeros() const {$/;"	f	class:ceres::internal::DenseSparseMatrix
num_nonzeros	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  virtual int num_nonzeros()    const { return num_nonzeros_; }$/;"	f	class:ceres::internal::TripletSparseMatrix
num_nonzeros_	ceres-solver/internal/ceres/block_random_access_diagonal_matrix_test.cc	/^  int num_nonzeros_;$/;"	m	class:ceres::internal::BlockRandomAccessDiagonalMatrixTest	file:
num_nonzeros_	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  int num_nonzeros_;$/;"	m	class:ceres::internal::BlockSparseMatrix
num_nonzeros_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int num_nonzeros_;$/;"	m	class:ceres::internal::TripletSparseMatrix
num_observations	ceres-solver/examples/bal_problem.h	/^  int num_observations()       const { return num_observations_;         }$/;"	f	class:ceres::examples::BALProblem
num_observations	ceres-solver/examples/curve_fitting.c	/^int num_observations = 67;$/;"	v
num_observations	ceres-solver/examples/nist.cc	/^  int num_observations()    const { return predictor_.rows();  }$/;"	f	class:ceres::examples::NISTProblem
num_observations	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int num_observations()       const { return num_observations_;               }$/;"	f	class:BALProblem
num_observations	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_observations()       const { return num_observations_;   }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
num_observations	ceres-solver/internal/ceres/c_api_test.cc	/^int num_observations = 67;$/;"	v
num_observations_	ceres-solver/examples/bal_problem.h	/^  int num_observations_;$/;"	m	class:ceres::examples::BALProblem
num_observations_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int num_observations_;$/;"	m	class:BALProblem	file:
num_observations_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_observations_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
num_occupied_cells_in_column	cartographer/cartographer/io/xray_points_processor.cc	/^  size_t num_occupied_cells_in_column = 0;$/;"	m	struct:cartographer::io::__anon25::PixelData	file:
num_parameter_blocks	ceres-solver/include/ceres/solver.h	/^    int num_parameter_blocks;$/;"	m	struct:ceres::Solver::Summary
num_parameter_blocks_	ceres-solver/internal/ceres/covariance_test.cc	/^  int num_parameter_blocks_;$/;"	m	class:ceres::internal::LargeScaleCovarianceTest	file:
num_parameter_blocks_reduced	ceres-solver/include/ceres/solver.h	/^    int num_parameter_blocks_reduced;$/;"	m	struct:ceres::Solver::Summary
num_parameters	ceres-solver/examples/bal_problem.h	/^  int num_parameters()         const { return num_parameters_;           }$/;"	f	class:ceres::examples::BALProblem
num_parameters	ceres-solver/examples/nist.cc	/^  int num_parameters()      const { return initial_parameters_.cols(); }$/;"	f	class:ceres::examples::NISTProblem
num_parameters	ceres-solver/include/ceres/gradient_problem_solver.h	/^    int num_parameters;$/;"	m	struct:ceres::GradientProblemSolver::Summary
num_parameters	ceres-solver/include/ceres/solver.h	/^    int num_parameters;$/;"	m	struct:ceres::Solver::Summary
num_parameters	ceres-solver/internal/ceres/line_search_direction.h	/^    int num_parameters;$/;"	m	struct:ceres::internal::LineSearchDirection::Options
num_parameters_	ceres-solver/examples/bal_problem.h	/^  int num_parameters_;$/;"	m	class:ceres::examples::BALProblem
num_parameters_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int num_parameters_;$/;"	m	class:BALProblem	file:
num_parameters_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_parameters_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
num_parameters_	ceres-solver/internal/ceres/line_search_direction.cc	/^  const int num_parameters_;$/;"	m	class:ceres::internal::BFGS	file:
num_parameters_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  const int num_parameters_;$/;"	m	class:ceres::internal::LowRankInverseHessian
num_parameters_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  int num_parameters_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
num_parameters_reduced	ceres-solver/include/ceres/solver.h	/^    int num_parameters_reduced;$/;"	m	struct:ceres::Solver::Summary
num_point_clouds	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  int num_point_clouds;$/;"	m	struct:cartographer_ros::TrajectoryOptions
num_points	ceres-solver/examples/bal_problem.h	/^  int num_points()             const { return num_points_;               }$/;"	f	class:ceres::examples::BALProblem
num_points	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_points()             const { return num_points_;         }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
num_points_	cartographer/cartographer/io/counting_points_processor.h	/^  int64 num_points_;$/;"	m	class:cartographer::io::CountingPointsProcessor
num_points_	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  int64 num_points_;$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
num_points_	cartographer/cartographer/io/ply_writing_points_processor.h	/^  int64 num_points_;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
num_points_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  size_t num_points_;$/;"	m	class:cartographer::sensor::CompressedPointCloud
num_points_	ceres-solver/examples/bal_problem.h	/^  int num_points_;$/;"	m	class:ceres::examples::BALProblem
num_points_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int num_points_;$/;"	m	class:BALProblem	file:
num_points_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int num_points_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
num_pulses_	cartographer/cartographer/common/fixed_ratio_sampler.h	/^  int64 num_pulses_ = 0;$/;"	m	class:cartographer::common::FixedRatioSampler
num_range_data	cartographer/cartographer/mapping/submaps.h	/^  int num_range_data() const { return num_range_data_; }$/;"	f	class:cartographer::mapping::Submap
num_range_data_	cartographer/cartographer/mapping/submaps.h	/^  int num_range_data_ = 0;$/;"	m	class:cartographer::mapping::Submap
num_residual_blocks	ceres-solver/include/ceres/solver.h	/^    int num_residual_blocks;$/;"	m	struct:ceres::Solver::Summary
num_residual_blocks_reduced	ceres-solver/include/ceres/solver.h	/^    int num_residual_blocks_reduced;$/;"	m	struct:ceres::Solver::Summary
num_residuals	ceres-solver/include/ceres/cost_function.h	/^  int num_residuals() const {$/;"	f	class:ceres::CostFunction
num_residuals	ceres-solver/include/ceres/solver.h	/^    int num_residuals;$/;"	m	struct:ceres::Solver::Summary
num_residuals	ceres-solver/internal/ceres/autodiff_test.cc	/^  int num_residuals;$/;"	m	struct:ceres::internal::VaryingResidualFunctor	file:
num_residuals_	ceres-solver/include/ceres/cost_function.h	/^  int num_residuals_;$/;"	m	class:ceres::CostFunction
num_residuals_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  int num_residuals_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
num_residuals_reduced	ceres-solver/include/ceres/solver.h	/^    int num_residuals_reduced;$/;"	m	struct:ceres::Solver::Summary
num_row_blocks	ceres-solver/internal/ceres/block_sparse_matrix.h	/^    int num_row_blocks;$/;"	m	struct:ceres::internal::BlockSparseMatrix::RandomMatrixOptions
num_row_blocks	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^    int num_row_blocks;$/;"	m	struct:ceres::internal::CompressedRowSparseMatrix::RandomMatrixOptions
num_row_blocks_e_	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  int num_row_blocks_e_;$/;"	m	class:ceres::internal::PartitionedMatrixView
num_rows	ceres-solver/include/ceres/crs_matrix.h	/^  int num_rows;$/;"	m	struct:ceres::CRSMatrix
num_rows	ceres-solver/internal/ceres/block_jacobi_preconditioner.h	/^  virtual int num_rows() const { return m_->num_rows(); }$/;"	f	class:ceres::internal::BlockJacobiPreconditioner
num_rows	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  virtual int num_rows() const { return num_rows_; }$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
num_rows	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  virtual int num_rows() const { return tsm_->num_rows(); }$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
num_rows	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  virtual int num_rows() const { return tsm_->num_rows(); }$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
num_rows	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  virtual int num_rows()         const { return num_rows_;     }$/;"	f	class:ceres::internal::BlockSparseMatrix
num_rows	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  virtual int num_rows() const { return A_.num_cols(); }$/;"	f	class:ceres::internal::CgnrLinearOperator
num_rows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  virtual int num_rows() const { return num_rows_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
num_rows	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^  int num_rows;$/;"	m	class:ceres::internal::CompressedRowSparseMatrixTest	file:
num_rows	ceres-solver/internal/ceres/dense_sparse_matrix.cc	/^int DenseSparseMatrix::num_rows() const {$/;"	f	class:ceres::internal::DenseSparseMatrix
num_rows	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^  int num_rows;$/;"	m	class:ceres::internal::DenseSparseMatrixTest	file:
num_rows	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  int num_rows;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
num_rows	ceres-solver/internal/ceres/evaluator_test_utils.h	/^  int num_rows;$/;"	m	struct:ceres::internal::ExpectedEvaluation
num_rows	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  virtual int num_rows() const { return A_->num_cols_f(); }$/;"	f	class:ceres::internal::ImplicitSchurComplement
num_rows	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  virtual int num_rows() const { return num_parameters_; }$/;"	f	class:ceres::internal::LowRankInverseHessian
num_rows	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual int num_rows()         const { return matrix_.num_rows(); }$/;"	f	class:ceres::internal::PartitionedMatrixView
num_rows	ceres-solver/internal/ceres/preconditioner.cc	/^int  SparseMatrixPreconditionerWrapper::num_rows() const {$/;"	f	class:ceres::internal::SparseMatrixPreconditionerWrapper
num_rows	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual int num_rows() const { return m_.num_rows(); }$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter
num_rows	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual int num_rows() const { return m_.num_rows(); }$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter
num_rows	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  int num_rows;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
num_rows	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^int SchurJacobiPreconditioner::num_rows() const {$/;"	f	class:ceres::internal::SchurJacobiPreconditioner
num_rows	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^    int num_rows;$/;"	m	struct:ceres::internal::TripletSparseMatrix::RandomMatrixOptions
num_rows	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  virtual int num_rows()        const { return num_rows_;     }$/;"	f	class:ceres::internal::TripletSparseMatrix
num_rows	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^int VisibilityBasedPreconditioner::num_rows() const { return m_->num_rows(); }$/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
num_rows_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int num_rows_;$/;"	m	struct:ceres::Grid2D
num_rows_	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  int num_rows_;$/;"	m	class:ceres::internal::BlockRandomAccessDenseMatrix
num_rows_	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  int num_rows_;$/;"	m	class:ceres::internal::BlockSparseMatrix
num_rows_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  int num_rows_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
num_rows_	ceres-solver/internal/ceres/implicit_schur_complement_test.cc	/^  int num_rows_;$/;"	m	class:ceres::internal::ImplicitSchurComplementTest	file:
num_rows_	ceres-solver/internal/ceres/iterative_schur_complement_solver_test.cc	/^  int num_rows_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolverTest	file:
num_rows_	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^  int num_rows_;$/;"	m	class:ceres::internal::PartitionedMatrixViewTest	file:
num_rows_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  int num_rows_;$/;"	m	class:ceres::internal::TripletSparseMatrix
num_samples_	cartographer/cartographer/common/fixed_ratio_sampler.h	/^  int64 num_samples_ = 0;$/;"	m	class:cartographer::common::FixedRatioSampler
num_scans	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  int num_scans;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters
num_segments_	ceres-solver/examples/ellipse_approximation.cc	/^  const int num_segments_;$/;"	m	class:PointToLineSegmentContourCostFunction	file:
num_segments_	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  const int num_segments_;$/;"	m	class:ceres::internal::PointToLineSegmentContourCostFunction	file:
num_starts	ceres-solver/examples/nist.cc	/^  int num_starts()          const { return initial_parameters_.rows(); }$/;"	f	class:ceres::examples::NISTProblem
num_subdivisions_per_laser_scan	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  int num_subdivisions_per_laser_scan;$/;"	m	struct:cartographer_ros::TrajectoryOptions
num_subdivisions_per_laser_scan_	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^  const int num_subdivisions_per_laser_scan_;$/;"	m	class:cartographer_ros::SensorBridge
num_submaps	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^int PoseGraph2D::TrimmingHandle::num_submaps(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
num_submaps	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^int PoseGraph3D::TrimmingHandle::num_submaps(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
num_submaps_to_keep_	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  int num_submaps_to_keep_;$/;"	m	class:cartographer::mapping::PureLocalizationTrimmer
num_successful_steps	ceres-solver/include/ceres/solver.h	/^    int num_successful_steps;$/;"	m	struct:ceres::Solver::Summary
num_threads	ceres-solver/include/ceres/covariance.h	/^    int num_threads;$/;"	m	struct:ceres::Covariance::Options
num_threads	ceres-solver/include/ceres/problem.h	/^    int num_threads;$/;"	m	struct:ceres::Problem::EvaluateOptions
num_threads	ceres-solver/include/ceres/solver.h	/^    int num_threads;$/;"	m	struct:ceres::Solver::Options
num_threads	ceres-solver/internal/ceres/evaluator.h	/^    int num_threads;$/;"	m	struct:ceres::internal::Evaluator::Options
num_threads	ceres-solver/internal/ceres/linear_solver.h	/^    int num_threads;$/;"	m	struct:ceres::internal::LinearSolver::Options
num_threads	ceres-solver/internal/ceres/minimizer.h	/^    int num_threads;$/;"	m	struct:ceres::internal::Minimizer::Options
num_threads	ceres-solver/internal/ceres/preconditioner.h	/^    int num_threads;$/;"	m	struct:ceres::internal::Preconditioner::Options
num_threads	ceres-solver/internal/ceres/test_util.h	/^  int num_threads;$/;"	m	struct:ceres::internal::SolverConfig
num_threads_	ceres-solver/internal/ceres/schur_eliminator.h	/^  int num_threads_;$/;"	m	class:ceres::internal::SchurEliminator
num_threads_given	ceres-solver/include/ceres/solver.h	/^    int num_threads_given;$/;"	m	struct:ceres::Solver::Summary
num_threads_used	ceres-solver/include/ceres/solver.h	/^    int num_threads_used;$/;"	m	struct:ceres::Solver::Summary
num_total_	cartographer/cartographer/mapping/internal/motion_filter.h	/^  int num_total_ = 0;$/;"	m	class:cartographer::mapping::MotionFilter
num_trajectory_builders	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^int MapBuilderStub::num_trajectory_builders() const {$/;"	f	class:cartographer::cloud::MapBuilderStub
num_unsuccessful_steps	ceres-solver/include/ceres/solver.h	/^    int num_unsuccessful_steps;$/;"	m	struct:ceres::Solver::Summary
num_values_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int num_values_;$/;"	m	struct:ceres::Grid1D
num_values_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int num_values_;$/;"	m	struct:ceres::Grid2D
num_vertices_	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  int     num_vertices_;$/;"	m	class:ceres::internal::CurveCostFunction	file:
num_x_cells	cartographer/cartographer/mapping/2d/xy_index.h	/^  int num_x_cells = 0;$/;"	m	struct:cartographer::mapping::CellLimits
num_y_cells	cartographer/cartographer/mapping/2d/xy_index.h	/^  int num_y_cells = 0;$/;"	m	struct:cartographer::mapping::CellLimits
number_of_insertion_results_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  int number_of_insertion_results_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
numeric_factor_	ceres-solver/internal/ceres/cxsparse.h	/^  csn* numeric_factor_;$/;"	m	class:ceres::internal::CXSparseCholesky
numeric_jacobians	ceres-solver/include/ceres/gradient_checker.h	/^    std::vector<Matrix> numeric_jacobians;$/;"	m	struct:ceres::GradientChecker::ProbeResults
obj_ptr_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Class* const obj_ptr_;$/;"	m	class:testing::internal::InvokeMethodAction
obj_ptr_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Class* const obj_ptr_;$/;"	m	class:testing::internal::InvokeMethodWithoutArgsAction
object_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Super& object_;$/;"	m	class:testing::internal::RefMatcher::Impl
object_	ceres-solver/internal/ceres/gmock/gmock.h	/^  T& object_;$/;"	m	class:testing::internal::RefMatcher
observations	ceres-solver/examples/bal_problem.h	/^  const double* observations() const { return observations_;             }$/;"	f	class:ceres::examples::BALProblem
observations	ceres-solver/examples/simple_bundle_adjuster.cc	/^  const double* observations() const { return observations_;                   }$/;"	f	class:BALProblem
observations	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  const double* observations() const { return observations_; }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
observations_	cartographer/cartographer/sensor/landmark_data_test.cc	/^  std::vector<LandmarkObservation> observations_;$/;"	m	class:cartographer::sensor::__anon116::LandmarkDataTest	file:
observations_	ceres-solver/examples/bal_problem.h	/^  double* observations_;$/;"	m	class:ceres::examples::BALProblem
observations_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double* observations_;$/;"	m	class:BALProblem	file:
observations_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  double* observations_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
observed_relative_pose_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  const PoseGraphInterface::Constraint::Pose observed_relative_pose_;$/;"	m	class:cartographer::mapping::optimization::__anon90::SpaCostFunction2D	file:
observed_relative_pose_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  const transform::Rigid2d observed_relative_pose_;$/;"	m	class:cartographer::mapping::optimization::__anon90::AnalyticalSpaCostFunction2D	file:
observed_x	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  const double observed_x;$/;"	m	struct:__anon155::OpenCVReprojectionError	file:
observed_x	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double observed_x;$/;"	m	struct:SnavelyReprojectionError	file:
observed_x	ceres-solver/examples/snavely_reprojection_error.h	/^  double observed_x;$/;"	m	struct:ceres::examples::SnavelyReprojectionError
observed_x	ceres-solver/examples/snavely_reprojection_error.h	/^  double observed_x;$/;"	m	struct:ceres::examples::SnavelyReprojectionErrorWithQuaternions
observed_y	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  const double observed_y;$/;"	m	struct:__anon155::OpenCVReprojectionError	file:
observed_y	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double observed_y;$/;"	m	struct:SnavelyReprojectionError	file:
observed_y	ceres-solver/examples/snavely_reprojection_error.h	/^  double observed_y;$/;"	m	struct:ceres::examples::SnavelyReprojectionError
observed_y	ceres-solver/examples/snavely_reprojection_error.h	/^  double observed_y;$/;"	m	struct:ceres::examples::SnavelyReprojectionErrorWithQuaternions
occupancy_grid_publisher_timer_	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  ::ros::WallTimer occupancy_grid_publisher_timer_;$/;"	m	class:cartographer_ros::__anon135::Node	file:
odom_frame	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  std::string odom_frame;$/;"	m	struct:cartographer_ros::TrajectoryOptions
odometry_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  sensor::MapByTime<sensor::OdometryData> odometry_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
odometry_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  sensor::MapByTime<sensor::OdometryData> odometry_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
odometry_data_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  std::deque<sensor::OdometryData> odometry_data_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
odometry_imu_tracker_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  std::unique_ptr<ImuTracker> odometry_imu_tracker_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
odometry_mean	ceres-solver/examples/robot_pose_mle.cc	/^  const double odometry_mean;$/;"	m	struct:OdometryConstraint	file:
odometry_sampler	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    ::cartographer::common::FixedRatioSampler odometry_sampler;$/;"	m	struct:cartographer_ros::Node::TrajectorySensorSamplers
odometry_sampling_ratio	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  double odometry_sampling_ratio;$/;"	m	struct:cartographer_ros::TrajectoryOptions
odometry_stddev	ceres-solver/examples/robot_pose_mle.cc	/^  const double odometry_stddev;$/;"	m	struct:OdometryConstraint	file:
offset	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  Eigen::Array3i offset;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate3D	file:
offset_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^  Eigen::Vector2d offset_;$/;"	m	class:cartographer::mapping::__anon82::SubmapCoverageGrid2D	file:
offset_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  const Eigen::Array2i offset_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
ogre_slices_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  std::vector<std::unique_ptr<OgreSlice>> ogre_slices_;$/;"	m	class:cartographer_rviz::DrawableSubmap
old_reporter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestPartResultReporterInterface* old_reporter_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
old_value_	ceres-solver/internal/ceres/c_api_test.cc	/^  T old_value_;$/;"	m	class:ceres::internal::ScopedSetValue	file:
onInitialize	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::onInitialize() {$/;"	f	class:cartographer_rviz::SubmapsDisplay
on_error	cartographer_ros/scripts/check_access_token.sh	/^function on_error {$/;"	f
open	ceres-solver/examples/libmv_bundle_adjuster.cc	98;"	d	file:
operator !	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertionResult AssertionResult::operator!() const {$/;"	f	class:testing::AssertionResult
operator !=	cartographer/cartographer/mapping/2d/xy_index.h	/^  bool operator!=(const XYIndexRangeIterator& other) const {$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
operator !=	cartographer/cartographer/mapping/id.h	/^    bool operator!=(const ConstIterator& it) const { return !operator==(it); }$/;"	f	class:cartographer::mapping::MapById::ConstIterator
operator !=	cartographer/cartographer/mapping/id.h	/^    bool operator!=(const ConstTrajectoryIterator& it) const {$/;"	f	class:cartographer::mapping::MapById::ConstTrajectoryIterator
operator !=	cartographer/cartographer/mapping/id.h	/^  bool operator!=(const NodeId& other) const { return !operator==(other); }$/;"	f	struct:cartographer::mapping::NodeId
operator !=	cartographer/cartographer/mapping/id.h	/^  bool operator!=(const SubmapId& other) const { return !operator==(other); }$/;"	f	struct:cartographer::mapping::SubmapId
operator !=	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^bool CompressedPointCloud::ConstIterator::operator!=($/;"	f	class:cartographer::sensor::CompressedPointCloud::ConstIterator
operator !=	cartographer/cartographer/sensor/map_by_time.h	/^    bool operator!=(const ConstIterator& it) const { return !operator==(it); }$/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
operator !=	cartographer/cartographer/sensor/map_by_time.h	/^    bool operator!=(const ConstTrajectoryIterator& it) const {$/;"	f	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
operator !=	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  bool operator!=(const C* p) const { return array_ != p; }$/;"	f	class:ceres::internal::scoped_array
operator !=	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  bool operator!=(const C* p) const { return ptr_ != p; }$/;"	f	class:ceres::internal::scoped_ptr
operator !=	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator!=(const C* p1, const scoped_array<C>& p2) {$/;"	f	namespace:ceres::internal
operator !=	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator!=(const C* p1, const scoped_array<const C>& p2) {$/;"	f	namespace:ceres::internal
operator !=	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator!=(const C* p1, const scoped_ptr<C>& p2) {$/;"	f	namespace:ceres::internal
operator !=	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator!=(const C* p1, const scoped_ptr<const C>& p2) {$/;"	f	namespace:ceres::internal
operator !=	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator!=(const Expectation& rhs) const { return !(*this == rhs); }$/;"	f	class:testing::Expectation
operator !=	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator!=(const ExpectationSet& rhs) const { return !(*this == rhs); }$/;"	f	class:testing::ExpectationSet
operator !=	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator!=(T* p) const { return value_ != p; }$/;"	f	class:testing::internal::linked_ptr
operator !=	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator!=(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator !=	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator!=(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator !=	ceres-solver/internal/ceres/gtest/gtest.h	/^bool operator!=(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator &	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  void operator&(const std::ostream &s) { }$/;"	f	class:LoggerVoidify
operator ()	cartographer/cartographer/mapping/3d/hybrid_grid_test.cc	/^  bool operator()(const Eigen::Vector3i& lhs,$/;"	f	struct:cartographer::mapping::__anon110::EigenComparator
operator ()	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  bool operator()(const T* const pose, T* residual) const {$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
operator ()	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^  bool operator()(const T* const pose, T* residual) const {$/;"	f	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor2D
operator ()	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^  bool operator()(const T* const pose, T* residual) const {$/;"	f	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor2D
operator ()	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:cartographer::mapping::ConstantYawQuaternionPlus
operator ()	cartographer/cartographer/mapping/internal/3d/rotation_parameterization.h	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:cartographer::mapping::YawOnlyQuaternionPlus
operator ()	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  bool operator()(const T* const translation, const T* const rotation,$/;"	f	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
operator ()	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^  bool operator()(const T* const rotation_quaternion, T* residual) const {$/;"	f	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor3D
operator ()	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  bool operator()(const T* const translation, T* residual) const {$/;"	f	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
operator ()	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  bool operator()(const T* const middle_rotation, const T* const start_position,$/;"	f	class:cartographer::mapping::AccelerationCostFunction3D
operator ()	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  bool operator()(const T* const prev_node_pose, const T* const next_node_pose,$/;"	f	class:cartographer::mapping::optimization::LandmarkCostFunction2D
operator ()	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  bool operator()(const T* const prev_node_rotation,$/;"	f	class:cartographer::mapping::optimization::LandmarkCostFunction3D
operator ()	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^  bool operator()(const T* const start_rotation, const T* const end_rotation,$/;"	f	class:cartographer::mapping::RotationCostFunction3D
operator ()	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  bool operator()(const T* const start_pose, const T* const end_pose,$/;"	f	class:cartographer::mapping::optimization::__anon90::SpaCostFunction2D
operator ()	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^  bool operator()(const T* const c_i_rotation, const T* const c_i_translation,$/;"	f	class:cartographer::mapping::optimization::SpaCostFunction3D
operator ()	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^      bool operator()(const BagMessageItem& l, const BagMessageItem& r) {$/;"	f	struct:cartographer_ros::PlayableBagMultiplexer::BagMessageItem::TimestampIsGreater
operator ()	ceres-solver/examples/circle_fit.cc	/^  template <typename T> bool operator()(const T* const x,$/;"	f	class:DistanceFromCircleCost
operator ()	ceres-solver/examples/curve_fitting.cc	/^  template <typename T> bool operator()(const T* const m,$/;"	f	struct:ExponentialResidual
operator ()	ceres-solver/examples/ellipse_approximation.cc	/^  bool operator()(const T* x0, const T* x1, T* residuals) const {$/;"	f	class:EuclideanDistanceFunctor
operator ()	ceres-solver/examples/helloworld.cc	/^  template <typename T> bool operator()(const T* const x, T* residual) const {$/;"	f	struct:CostFunctor
operator ()	ceres-solver/examples/helloworld_numeric_diff.cc	/^  bool operator()(const double* const x, double* residual) const {$/;"	f	struct:CostFunctor
operator ()	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  bool operator()(const T* const intrinsics,$/;"	f	struct:__anon155::OpenCVReprojectionError
operator ()	ceres-solver/examples/libmv_homography.cc	/^  bool operator()(const T* homography_parameters, T* residuals) const {$/;"	f	class:__anon158::HomographySymmetricGeometricCostFunctor
operator ()	ceres-solver/examples/libmv_homography.cc	/^  virtual ceres::CallbackReturnType operator()($/;"	f	class:__anon158::TerminationCheckingCallback
operator ()	ceres-solver/examples/nist.cc	/^  bool operator()(const T* const b, T* residual) const {$/;"	f	struct:ceres::examples::Nelson
operator ()	ceres-solver/examples/powell.cc	/^  template <typename T> bool operator()(const T* const x1,$/;"	f	struct:F1
operator ()	ceres-solver/examples/powell.cc	/^  template <typename T> bool operator()(const T* const x1,$/;"	f	struct:F4
operator ()	ceres-solver/examples/powell.cc	/^  template <typename T> bool operator()(const T* const x2,$/;"	f	struct:F3
operator ()	ceres-solver/examples/powell.cc	/^  template <typename T> bool operator()(const T* const x3,$/;"	f	struct:F2
operator ()	ceres-solver/examples/robot_pose_mle.cc	/^  bool operator()(T const* const* relative_poses, T* residuals) const {$/;"	f	struct:RangeConstraint
operator ()	ceres-solver/examples/robot_pose_mle.cc	/^  bool operator()(const T* const odometry, T* residual) const {$/;"	f	struct:OdometryConstraint
operator ()	ceres-solver/examples/robust_curve_fitting.cc	/^  template <typename T> bool operator()(const T* const m,$/;"	f	struct:ExponentialResidual
operator ()	ceres-solver/examples/sampled_function/sampled_function.cc	/^  template<typename T> bool operator()(const T* x, T* residuals) const {$/;"	f	struct:InterpolatedCostFunctor
operator ()	ceres-solver/examples/simple_bundle_adjuster.cc	/^  bool operator()(const T* const camera,$/;"	f	struct:SnavelyReprojectionError
operator ()	ceres-solver/examples/slam/pose_graph_2d/angle_local_parameterization.h	/^  bool operator()(const T* theta_radians, const T* delta_theta_radians,$/;"	f	class:ceres::examples::AngleLocalParameterization
operator ()	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^  bool operator()(const T* const x_a, const T* const y_a, const T* const yaw_a,$/;"	f	class:ceres::examples::PoseGraph2dErrorTerm
operator ()	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^  bool operator()(const T* const p_a_ptr, const T* const q_a_ptr,$/;"	f	class:ceres::examples::PoseGraph3dErrorTerm
operator ()	ceres-solver/examples/snavely_reprojection_error.h	/^  bool operator()(const T* const camera,$/;"	f	struct:ceres::examples::SnavelyReprojectionError
operator ()	ceres-solver/examples/snavely_reprojection_error.h	/^  bool operator()(const T* const camera,$/;"	f	struct:ceres::examples::SnavelyReprojectionErrorWithQuaternions
operator ()	ceres-solver/include/ceres/cost_function_to_functor.h	/^  bool operator()(const JetT* x0, JetT* residuals) const {$/;"	f	class:ceres::CostFunctionToFunctor
operator ()	ceres-solver/include/ceres/cost_function_to_functor.h	/^  bool operator()(const JetT* x0,$/;"	f	class:ceres::CostFunctionToFunctor
operator ()	ceres-solver/include/ceres/cost_function_to_functor.h	/^  bool operator()(const double* x0, double* residuals) const {$/;"	f	class:ceres::CostFunctionToFunctor
operator ()	ceres-solver/include/ceres/cost_function_to_functor.h	/^  bool operator()(const double* x0,$/;"	f	class:ceres::CostFunctionToFunctor
operator ()	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	/^  bool operator()(JetT const* const* inputs, JetT* output) const {$/;"	f	class:ceres::DynamicCostFunctionToFunctor
operator ()	ceres-solver/include/ceres/dynamic_cost_function_to_functor.h	/^  bool operator()(double const* const* parameters, double* residuals) const {$/;"	f	class:ceres::DynamicCostFunctionToFunctor
operator ()	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  inline void operator()(void* x) const {$/;"	f	class:ceres::internal::ScopedPtrMallocFree
operator ()	ceres-solver/include/ceres/rotation.h	/^  T& operator()(int r, int c) const {$/;"	f	struct:ceres::MatrixAdapter
operator ()	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^  bool operator()(const T* const x, const T* const y,$/;"	f	class:ceres::internal::BinaryScalarCost
operator ()	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^  bool operator()(const T* const x0,$/;"	f	struct:ceres::internal::TenParameterCost
operator ()	ceres-solver/internal/ceres/autodiff_cost_function_test.cc	/^  bool operator()(const T* x, T* output) const {$/;"	f	struct:ceres::internal::OnlyFillsOneOutputFunctor
operator ()	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:ceres::internal::IdentityPlus
operator ()	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:ceres::internal::QuaternionPlus
operator ()	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:ceres::internal::ScaledPlus
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(A const P[12], A const X[4], A x[2]) const {$/;"	f	struct:ceres::internal::Projective
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(A const P_X[12 + 4], A x[2]) const {$/;"	f	struct:ceres::internal::Projective
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(A const q[4], A const c[3], A const X[3], A x[2]) const {$/;"	f	struct:ceres::internal::Metric
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(A const q_c_X[4 + 3 + 3], A x[2]) const {$/;"	f	struct:ceres::internal::Metric
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T x[2], T* y) const {$/;"	f	struct:ceres::internal::VaryingResidualFunctor
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0, T* y) const {$/;"	f	struct:ceres::internal::Residual1Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0, const T* x1, T* y) const {$/;"	f	struct:ceres::internal::Residual2Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0, const T* x1, const T* x2, T* y) const {$/;"	f	struct:ceres::internal::Residual3Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual10Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual4Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual5Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual6Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual7Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual8Param
operator ()	ceres-solver/internal/ceres/autodiff_test.cc	/^  bool operator()(const T* x0,$/;"	f	struct:ceres::internal::Residual9Param
operator ()	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^    bool operator()(const T* const camera,$/;"	f	struct:ceres::internal::BundleAdjustmentProblem::BundlerResidual
operator ()	ceres-solver/internal/ceres/callbacks.cc	/^CallbackReturnType LoggingCallback::operator()($/;"	f	class:ceres::internal::LoggingCallback
operator ()	ceres-solver/internal/ceres/callbacks.cc	/^CallbackReturnType StateUpdatingCallback::operator()($/;"	f	class:ceres::internal::StateUpdatingCallback
operator ()	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^  bool operator()(const int x, const int y) const {$/;"	f	struct:ceres::internal::__anon189::RowColLessThan
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(T const* const* parameters, T* residuals) const {$/;"	f	class:ceres::internal::DynamicTwoParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, T* residuals) const {$/;"	f	struct:ceres::internal::OneParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, T* residuals) const {$/;"	f	struct:ceres::internal::TwoParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, T* residuals) const {$/;"	f	struct:ceres::internal::ThreeParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::EightParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::FiveParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::FourParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::NineParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::SevenParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::SixParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/cost_function_to_functor_test.cc	/^  bool operator()(const T* x1, const T* x2, const T* x3, const T* x4,$/;"	f	struct:ceres::internal::TenParameterBlockFunctor
operator ()	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  bool operator()(T const* const* parameters, T* residuals) const {$/;"	f	class:ceres::internal::MyCostFunctor
operator ()	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  bool operator()(T const* const* parameters, T* residuals) const {$/;"	f	class:ceres::internal::MySixParameterCostFunctor
operator ()	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  bool operator()(T const* const* parameters, T* residuals) const {$/;"	f	class:ceres::internal::MyThreeParameterCostFunctor
operator ()	ceres-solver/internal/ceres/dynamic_compressed_row_finalizer.h	/^  void operator()(SparseMatrix* base_jacobian, int num_parameters) {$/;"	f	struct:ceres::internal::DynamicCompressedRowJacobianFinalizer
operator ()	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  bool operator()(T const* const* parameters, T* residuals) const {$/;"	f	class:ceres::internal::MyThreeParameterCostFunctor
operator ()	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  bool operator()(double const* const* parameters, double* residuals) const {$/;"	f	class:ceres::internal::MyCostFunctor
operator ()	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  bool operator()(const T* x0, const T* x1, T* residuals) const {$/;"	f	class:ceres::internal::EuclideanDistanceFunctor
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^    OutIter operator() (Func \/* f *\/, const Tup& \/* t *\/, OutIter out) const {$/;"	f	struct:testing::internal::TransformTupleValuesHelper::IterateOverTuple
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^    OutIter operator() (Func f, const Tup& t, OutIter out) const {$/;"	f	struct:testing::internal::TransformTupleValuesHelper::IterateOverTuple
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^    bool operator()(const Expectation& lhs, const Expectation& rhs) const {$/;"	f	class:testing::Expectation::Less
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  AssertionResult operator()(const char* value_text, const T& x) const {$/;"	f	class:testing::internal::PredicateFormatterFromMatcher
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  Matcher<Target> operator()(const Arg& a) const {$/;"	f	struct:testing::internal::CastAndAppendTransform
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const ::testing::internal::linked_ptr<T>& lhs,$/;"	f	struct:testing::internal::LinkedPtrLessThan
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const A& a, const B& b) const { return a != b; }$/;"	f	struct:testing::internal::AnyNe
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const A& a, const B& b) const { return a < b; }$/;"	f	struct:testing::internal::AnyLt
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const A& a, const B& b) const { return a <= b; }$/;"	f	struct:testing::internal::AnyLe
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const A& a, const B& b) const { return a == b; }$/;"	f	struct:testing::internal::AnyEq
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const A& a, const B& b) const { return a > b; }$/;"	f	struct:testing::internal::AnyGt
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const A& a, const B& b) const { return a >= b; }$/;"	f	struct:testing::internal::AnyGe
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const T& lhs, const U& rhs) const { return lhs < rhs; }$/;"	f	struct:testing::internal::LessComparator
operator ()	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator()(const T& x) const {$/;"	f	class:testing::internal::MatcherAsPredicate
operator ()	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool operator()(const TestCase* test_case) const {$/;"	f	class:testing::internal::TestCaseNameIs
operator ()	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool operator()(const TestInfo * test_info) const {$/;"	f	class:testing::__anon170::TestNameIs
operator ()	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool operator()(const TestProperty& test_property) const {$/;"	f	class:testing::internal::TestPropertyKeyIs
operator ()	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool ExitedWithCode::operator()(int exit_status) const {$/;"	f	class:testing::ExitedWithCode
operator ()	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^bool KilledBySignal::operator()(int exit_status) const {$/;"	f	class:testing::KilledBySignal
operator ()	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^CallbackReturnType GradientCheckingIterationCallback::operator()($/;"	f	class:ceres::internal::GradientCheckingIterationCallback
operator ()	ceres-solver/internal/ceres/graph_algorithms.h	/^  bool operator()(const Vertex& lhs, const Vertex& rhs) const {$/;"	f	class:ceres::internal::VertexDegreeLessThan
operator ()	ceres-solver/internal/ceres/graph_algorithms.h	/^  bool operator()(const Vertex& lhs, const Vertex& rhs) const {$/;"	f	class:ceres::internal::VertexTotalOrdering
operator ()	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string operator()(const TestParamInfo<ParamType>& info) const {$/;"	f	struct:testing::PrintToStringParamName
operator ()	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  bool operator()(const Scalar* p_x, const Scalar* p_delta,$/;"	f	struct:ceres::internal::HomogeneousVectorParameterizationPlus
operator ()	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:ceres::internal::EigenQuaternionPlus
operator ()	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  bool operator()(const T* x, const T* delta, T* x_plus_delta) const {$/;"	f	struct:ceres::internal::QuaternionPlus
operator ()	ceres-solver/internal/ceres/minimizer_test.cc	/^  virtual CallbackReturnType operator()(const IterationSummary& summary) {$/;"	f	class:ceres::internal::AbortingIterationCallback
operator ()	ceres-solver/internal/ceres/minimizer_test.cc	/^  virtual CallbackReturnType operator()(const IterationSummary& summary) {$/;"	f	class:ceres::internal::FakeIterationCallback
operator ()	ceres-solver/internal/ceres/minimizer_test.cc	/^  virtual CallbackReturnType operator()(const IterationSummary& summary) {$/;"	f	class:ceres::internal::SucceedingIterationCallback
operator ()	ceres-solver/internal/ceres/numeric_diff_cost_function_test.cc	/^  bool operator()(const double* x, double* output) const {$/;"	f	struct:ceres::internal::OnlyFillsOneOutputFunctor
operator ()	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^bool EasyFunctor::operator()(const double* x1,$/;"	f	class:ceres::internal::EasyFunctor
operator ()	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^bool ExponentialFunctor::operator()(const double* x1,$/;"	f	class:ceres::internal::ExponentialFunctor
operator ()	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^bool RandomizedFunctor::operator()(const double* x1,$/;"	f	class:ceres::internal::RandomizedFunctor
operator ()	ceres-solver/internal/ceres/numeric_diff_test_utils.cc	/^bool TranscendentalFunctor::operator()(const double* x1,$/;"	f	class:ceres::internal::TranscendentalFunctor
operator ()	ceres-solver/internal/ceres/program_evaluator.h	/^  void operator()(SparseMatrix* jacobian, int num_parameters) {}$/;"	f	struct:ceres::internal::NullJacobianFinalizer
operator ()	ceres-solver/internal/ceres/solver_test.cc	/^  template <typename T> bool operator()(const T* const x,$/;"	f	struct:ceres::internal::Quadratic4DCostFunction
operator ()	ceres-solver/internal/ceres/solver_test.cc	/^  template <typename T> bool operator()(const T* const x,$/;"	f	struct:ceres::internal::QuadraticCostFunctor
operator ()	ceres-solver/internal/ceres/solver_test.cc	/^  virtual CallbackReturnType operator()(const IterationSummary& summary) {$/;"	f	struct:ceres::internal::RememberingCallback
operator ()	ceres-solver/internal/ceres/system_test.cc	/^    template <typename T> bool operator()(const T* const x1,$/;"	f	class:ceres::internal::PowellsFunction::F1
operator ()	ceres-solver/internal/ceres/system_test.cc	/^    template <typename T> bool operator()(const T* const x1,$/;"	f	class:ceres::internal::PowellsFunction::F4
operator ()	ceres-solver/internal/ceres/system_test.cc	/^    template <typename T> bool operator()(const T* const x2,$/;"	f	class:ceres::internal::PowellsFunction::F3
operator ()	ceres-solver/internal/ceres/system_test.cc	/^    template <typename T> bool operator()(const T* const x3,$/;"	f	class:ceres::internal::PowellsFunction::F2
operator ()	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  bool operator()(const T* const x, T* residual) const {$/;"	f	struct:ceres::internal::ExpCostFunctor
operator *	cartographer/cartographer/mapping/2d/xy_index.h	/^  Eigen::Array2i& operator*() { return xy_index_; }$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
operator *	cartographer/cartographer/mapping/id.h	/^    IdDataReference operator*() const {$/;"	f	class:cartographer::mapping::MapById::ConstIterator
operator *	cartographer/cartographer/mapping/id.h	/^    int operator*() const { return current_trajectory_->first; }$/;"	f	class:cartographer::mapping::MapById::ConstTrajectoryIterator
operator *	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^Eigen::Vector3f CompressedPointCloud::ConstIterator::operator*() const {$/;"	f	class:cartographer::sensor::CompressedPointCloud::ConstIterator
operator *	cartographer/cartographer/sensor/map_by_time.h	/^    const DataType& operator*() const { return iterator_->second; }$/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
operator *	cartographer/cartographer/sensor/map_by_time.h	/^    int operator*() const { return current_trajectory_->first; }$/;"	f	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
operator *	cartographer/cartographer/transform/rigid_transform.h	/^Rigid2<FloatType> operator*(const Rigid2<FloatType>& lhs,$/;"	f	namespace:cartographer::transform
operator *	cartographer/cartographer/transform/rigid_transform.h	/^Rigid3<FloatType> operator*(const Rigid3<FloatType>& lhs,$/;"	f	namespace:cartographer::transform
operator *	cartographer/cartographer/transform/rigid_transform.h	/^typename Rigid2<FloatType>::Vector operator*($/;"	f	namespace:cartographer::transform
operator *	cartographer/cartographer/transform/rigid_transform.h	/^typename Rigid3<FloatType>::Vector operator*($/;"	f	namespace:cartographer::transform
operator *	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline Type& operator*() { return *get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator *	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline const Type& operator*() const { return *get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator *	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C& operator*() const {$/;"	f	class:ceres::internal::scoped_ptr
operator *	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator*(T s, const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator *	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator*(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator *	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator*(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator *	ceres-solver/internal/ceres/gtest/gtest.h	/^  T& operator*() const { return *value_; }$/;"	f	class:testing::internal::linked_ptr
operator *	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T& operator*() const { return *impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator *=	ceres-solver/examples/pgm_image.h	/^void PGMImage<Real>::operator*= (Real a) {$/;"	f	class:ceres::examples::PGMImage
operator *=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator*=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator *=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator*=(const T& s) {$/;"	f	struct:ceres::Jet
operator +	ceres-solver/include/ceres/jet.h	/^Jet<T, N> const& operator+(const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator +	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator+(T s, const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator +	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator+(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator +	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator+(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator ++	cartographer/cartographer/mapping/2d/xy_index.h	/^  XYIndexRangeIterator& operator++() {$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
operator ++	cartographer/cartographer/mapping/id.h	/^    ConstIterator& operator++() {$/;"	f	class:cartographer::mapping::MapById::ConstIterator
operator ++	cartographer/cartographer/mapping/id.h	/^    ConstTrajectoryIterator& operator++() {$/;"	f	class:cartographer::mapping::MapById::ConstTrajectoryIterator
operator ++	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^operator++() {$/;"	f	class:cartographer::sensor::CompressedPointCloud::ConstIterator
operator ++	cartographer/cartographer/sensor/map_by_time.h	/^    ConstIterator& operator++() {$/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
operator ++	cartographer/cartographer/sensor/map_by_time.h	/^    ConstTrajectoryIterator& operator++() {$/;"	f	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
operator ++	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamIterator operator++(int \/*unused*\/) {$/;"	f	class:testing::internal::ParamIterator
operator ++	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamIterator& operator++() {$/;"	f	class:testing::internal::ParamIterator
operator +=	ceres-solver/examples/pgm_image.h	/^void PGMImage<Real>::operator+= (Real a) {$/;"	f	class:ceres::examples::PGMImage
operator +=	ceres-solver/examples/pgm_image.h	/^void PGMImage<Real>::operator+= (const PGMImage<Real>& image) {$/;"	f	class:ceres::examples::PGMImage
operator +=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator+=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator +=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator+=(const T& s) {$/;"	f	struct:ceres::Jet
operator +=	ceres-solver/internal/ceres/gmock/gmock.h	/^  ExpectationSet& operator+=(const Expectation& e) {$/;"	f	class:testing::ExpectationSet
operator -	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator-(T s, const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator -	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator-(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator -	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator-(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator -	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator-(const Jet<T, N>&f) {$/;"	f	namespace:ceres
operator --	cartographer/cartographer/mapping/id.h	/^    ConstIterator& operator--() {$/;"	f	class:cartographer::mapping::MapById::ConstIterator
operator --	cartographer/cartographer/mapping/id.h	/^    ConstTrajectoryIterator& operator--() {$/;"	f	class:cartographer::mapping::MapById::ConstTrajectoryIterator
operator --	cartographer/cartographer/sensor/map_by_time.h	/^    ConstIterator& operator--() {$/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
operator --	cartographer/cartographer/sensor/map_by_time.h	/^    ConstTrajectoryIterator& operator--() {$/;"	f	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
operator -=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator-=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator -=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator-=(const T& s) {$/;"	f	struct:ceres::Jet
operator ->	cartographer/cartographer/mapping/id.h	/^    std::unique_ptr<const IdDataReference> operator->() const {$/;"	f	class:cartographer::mapping::MapById::ConstIterator
operator ->	cartographer/cartographer/sensor/map_by_time.h	/^    const DataType* operator->() const { return &iterator_->second; }$/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
operator ->	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline Type* operator->() { return get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator ->	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline const Type* operator->() const { return get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator ->	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* operator->() const  {$/;"	f	class:ceres::internal::scoped_ptr
operator ->	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* operator->() const { return value_; }$/;"	f	class:testing::internal::linked_ptr
operator ->	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T* operator->() const { return impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator
operator /	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator\/(T s, const Jet<T, N>& g) {$/;"	f	namespace:ceres
operator /	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator\/(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator /	ceres-solver/include/ceres/jet.h	/^Jet<T, N> operator\/(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator /=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator\/=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator /=	ceres-solver/include/ceres/jet.h	/^  Jet<T, N>& operator\/=(const T& s) {$/;"	f	struct:ceres::Jet
operator <	cartographer/cartographer/mapping/detect_floors.cc	/^  bool operator<(const Span& other) const {$/;"	f	struct:cartographer::mapping::__anon62::Span
operator <	cartographer/cartographer/mapping/id.h	/^  bool operator<(const NodeId& other) const {$/;"	f	struct:cartographer::mapping::NodeId
operator <	cartographer/cartographer/mapping/id.h	/^  bool operator<(const SubmapId& other) const {$/;"	f	struct:cartographer::mapping::SubmapId
operator <	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  bool operator<(const Candidate2D& other) const { return score < other.score; }$/;"	f	struct:cartographer::mapping::scan_matching::Candidate2D
operator <	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  bool operator<(const Candidate3D& other) const { return score < other.score; }$/;"	f	struct:cartographer::mapping::scan_matching::Candidate3D
operator <	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    bool operator<(const SensorId& other) const {$/;"	f	struct:cartographer::mapping::TrajectoryBuilderInterface::SensorId
operator <	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  bool operator<(const QueueKey& other) const {$/;"	f	struct:cartographer::sensor::QueueKey
operator <	ceres-solver/internal/ceres/inner_product_computer.h	/^    bool operator<(const ProductTerm& right) const {$/;"	f	struct:ceres::internal::InnerProductComputer::ProductTerm
operator <<	cartographer/cartographer/common/time.cc	/^std::ostream& operator<<(std::ostream& os, const Time time) {$/;"	f	namespace:cartographer::common
operator <<	cartographer/cartographer/mapping/id.h	/^inline std::ostream& operator<<(std::ostream& os, const NodeId& v) {$/;"	f	namespace:cartographer::mapping
operator <<	cartographer/cartographer/mapping/id.h	/^inline std::ostream& operator<<(std::ostream& os, const SubmapId& v) {$/;"	f	namespace:cartographer::mapping
operator <<	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^inline std::ostream& operator<<(std::ostream& out, const QueueKey& key) {$/;"	f	namespace:cartographer::sensor
operator <<	cartographer/cartographer/transform/rigid_transform.h	/^std::ostream& operator<<(std::ostream& os,$/;"	f	namespace:cartographer::transform
operator <<	ceres-solver/include/ceres/jet.h	/^inline std::ostream &operator<<(std::ostream &s, const Jet<T, N>& z) {$/;"	f	namespace:ceres
operator <<	ceres-solver/internal/ceres/gmock/gmock.h	/^  MatchResultListener& operator<<(const T& x) {$/;"	f	class:testing::MatchResultListener
operator <<	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Message& Message::operator <<(const ::std::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Message& Message::operator <<(const ::wstring& wstr) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Message& Message::operator <<(const wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Message& Message::operator <<(wchar_t* wide_c_str) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {$/;"	f	namespace:testing
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^  Message& operator <<(BasicNarrowIoManip val) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^  Message& operator <<(bool b) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^  inline Message& operator <<(T* const& pointer) {  \/\/ NOLINT$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^  inline Message& operator <<(const T& val) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^  inline Message& operator <<(const T& value) {$/;"	f	class:testing::Message
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^  template <typename T> AssertionResult& operator<<(const T& value) {$/;"	f	class:testing::AssertionResult
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^::std::basic_ostream<Char, CharTraits>& operator<<($/;"	f	namespace:testing::internal2
operator <<	ceres-solver/internal/ceres/gtest/gtest.h	/^inline std::ostream& operator <<(std::ostream& os, const Message& sb) {$/;"	f	namespace:testing
operator <<	ceres-solver/internal/ceres/line_search.cc	/^ostream& operator<<(ostream &os, const FunctionSample& sample) {$/;"	f	namespace:ceres::internal
operator =	cartographer/cartographer/common/optional.h	/^  optional<T>& operator=(const T& other_value) {$/;"	f	class:cartographer::common::optional
operator =	cartographer/cartographer/common/optional.h	/^  optional<T>& operator=(const optional<T>& other) {$/;"	f	class:cartographer::common::optional
operator =	ceres-solver/internal/ceres/gmock/gmock.h	/^  void operator=(const BoundSecondMatcher& \/*rhs*\/) {$/;"	f	class:testing::internal::BoundSecondMatcher
operator =	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void AssertHelper::operator=(const Message& message) const {$/;"	f	class:testing::internal::AssertHelper
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  AssertionResult& operator=(AssertionResult other) {$/;"	f	class:testing::AssertionResult
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  FilePath& operator=(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamGenerator& operator=(const ParamGenerator& other) {$/;"	f	class:testing::internal::ParamGenerator
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamIterator& operator=(const ParamIterator& other) {$/;"	f	class:testing::internal::ParamIterator
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  linked_ptr& operator=(linked_ptr const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {$/;"	f	class:testing::internal::linked_ptr
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  tuple& operator=(const tuple& \/* t *\/) { return *this; }$/;"	f	class:std::tr1::tuple
operator =	ceres-solver/internal/ceres/gtest/gtest.h	/^  tuple& operator=(const tuple& t) { return CopyFrom(t); }$/;"	f	class:std::tr1::tuple
operator =	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix& TripletSparseMatrix::operator=($/;"	f	class:ceres::internal::TripletSparseMatrix
operator ==	cartographer/cartographer/mapping/2d/xy_index.h	/^  bool operator==(const XYIndexRangeIterator& other) const {$/;"	f	class:cartographer::mapping::XYIndexRangeIterator
operator ==	cartographer/cartographer/mapping/id.h	/^    bool operator==(const ConstIterator& it) const {$/;"	f	class:cartographer::mapping::MapById::ConstIterator
operator ==	cartographer/cartographer/mapping/id.h	/^    bool operator==(const ConstTrajectoryIterator& it) const {$/;"	f	class:cartographer::mapping::MapById::ConstTrajectoryIterator
operator ==	cartographer/cartographer/mapping/id.h	/^  bool operator==(const NodeId& other) const {$/;"	f	struct:cartographer::mapping::NodeId
operator ==	cartographer/cartographer/mapping/id.h	/^  bool operator==(const SubmapId& other) const {$/;"	f	struct:cartographer::mapping::SubmapId
operator ==	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    bool operator==(const SensorId& other) const {$/;"	f	struct:cartographer::mapping::TrajectoryBuilderInterface::SensorId
operator ==	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^bool sensor::CompressedPointCloud::operator==($/;"	f	class:cartographer::sensor::sensor::CompressedPointCloud
operator ==	cartographer/cartographer/sensor/map_by_time.h	/^    bool operator==(const ConstIterator& it) const {$/;"	f	class:cartographer::sensor::MapByTime::ConstIterator
operator ==	cartographer/cartographer/sensor/map_by_time.h	/^    bool operator==(const ConstTrajectoryIterator& it) const {$/;"	f	class:cartographer::sensor::MapByTime::ConstTrajectoryIterator
operator ==	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  bool operator==(const C* p) const { return array_ == p; }$/;"	f	class:ceres::internal::scoped_array
operator ==	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  bool operator==(const C* p) const { return ptr_ == p; }$/;"	f	class:ceres::internal::scoped_ptr
operator ==	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator==(const C* p1, const scoped_array<C>& p2) {$/;"	f	namespace:ceres::internal
operator ==	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator==(const C* p1, const scoped_array<const C>& p2) {$/;"	f	namespace:ceres::internal
operator ==	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator==(const C* p1, const scoped_ptr<C>& p2) {$/;"	f	namespace:ceres::internal
operator ==	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline bool operator==(const C* p1, const scoped_ptr<const C>& p2) {$/;"	f	namespace:ceres::internal
operator ==	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator==(const Expectation& rhs) const {$/;"	f	class:testing::Expectation
operator ==	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool operator==(const ExpectationSet& rhs) const {$/;"	f	class:testing::ExpectationSet
operator ==	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator==(T* p) const { return value_ == p; }$/;"	f	class:testing::internal::linked_ptr
operator ==	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator==(const NativeArray& rhs) const {$/;"	f	class:testing::internal::NativeArray
operator ==	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator==(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator
operator ==	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool operator==(linked_ptr<U> const& ptr) const {$/;"	f	class:testing::internal::linked_ptr
operator ==	ceres-solver/internal/ceres/gtest/gtest.h	/^bool operator==(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:testing::internal
operator >	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  bool operator>(const Candidate2D& other) const { return score > other.score; }$/;"	f	struct:cartographer::mapping::scan_matching::Candidate2D
operator >	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  bool operator>(const Candidate3D& other) const { return score > other.score; }$/;"	f	struct:cartographer::mapping::scan_matching::Candidate3D
operator >>	ceres-solver/examples/slam/pose_graph_2d/types.h	/^std::istream& operator>>(std::istream& input, Constraint2d& constraint) {$/;"	f	namespace:ceres::examples
operator >>	ceres-solver/examples/slam/pose_graph_2d/types.h	/^std::istream& operator>>(std::istream& input, Pose2d& pose) {$/;"	f	namespace:ceres::examples
operator >>	ceres-solver/examples/slam/pose_graph_3d/types.h	/^std::istream& operator>>(std::istream& input, Constraint3d& constraint) {$/;"	f	namespace:ceres::examples
operator >>	ceres-solver/examples/slam/pose_graph_3d/types.h	/^std::istream& operator>>(std::istream& input, Pose3d& pose) {$/;"	f	namespace:ceres::examples
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const { return Action<F>(NULL); }$/;"	f	class:testing::internal::DoDefaultAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const { return MakeAction(new Impl<F>(action_)); }$/;"	f	class:testing::internal::WithArgsAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::PolymorphicAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::DoBothAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::IgnoreResultAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnRefAction
operator Action<F>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Action<F>() const {$/;"	f	class:testing::internal::ReturnRefOfCopyAction
operator Matcher< ::testing::tuple<T1, T2> >	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher< ::testing::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::PairMatchBase
operator Matcher<ArgsTuple>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<ArgsTuple>() const {$/;"	f	class:testing::internal::ArgsMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::BeginEndDistanceIsMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ContainsMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::EachMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ElementsAreArrayMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::ElementsAreMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::SizeIsMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::UnorderedElementsAreArrayMatcher
operator Matcher<Container>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Container>() const {$/;"	f	class:testing::internal::UnorderedElementsAreMatcher
operator Matcher<FloatType&>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<FloatType&>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<FloatType>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<FloatType>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator Matcher<Lhs>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Lhs>() const {$/;"	f	class:testing::internal::ComparisonBase
operator Matcher<LhsContainer>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<LhsContainer>() const {$/;"	f	class:testing::internal::PointwiseMatcher
operator Matcher<LhsContainer>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<LhsContainer>() const {$/;"	f	class:testing::internal::WhenSortedByMatcher
operator Matcher<PairType>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<PairType> () const {$/;"	f	class:testing::internal::PairMatcher
operator Matcher<PairType>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<PairType>() const {$/;"	f	class:testing::internal::KeyMatcher
operator Matcher<Pointer>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Pointer>() const {$/;"	f	class:testing::internal::PointeeMatcher
operator Matcher<Super&>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<Super&>() const {$/;"	f	class:testing::internal::RefMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const { return A<T>(); }$/;"	f	class:testing::internal::AnythingMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::PolymorphicMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::BothOfMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::BoundSecondMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::EitherOfMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::NotMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::ResultOfMatcher
operator Matcher<T>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::internal::VariadicMatcher
operator Matcher<const ::testing::tuple<T1, T2>&>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<const ::testing::tuple<T1, T2>&>() const {$/;"	f	class:testing::internal::PairMatchBase
operator Matcher<const FloatType&>	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator Matcher<const FloatType&>() const {$/;"	f	class:testing::internal::FloatingEqMatcher
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9,$/;"	f	class:testing::internal::CartesianProductHolder10
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8,$/;"	f	class:testing::internal::CartesianProductHolder9
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7,$/;"	f	class:testing::internal::CartesianProductHolder8
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6,$/;"	f	class:testing::internal::CartesianProductHolder7
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6> >() const {$/;"	f	class:testing::internal::CartesianProductHolder6
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5> >() const {$/;"	f	class:testing::internal::CartesianProductHolder5
operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3, T4> >() const {$/;"	f	class:testing::internal::CartesianProductHolder4
operator ParamGenerator< ::testing::tuple<T1, T2, T3> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2, T3> >() const {$/;"	f	class:testing::internal::CartesianProductHolder3
operator ParamGenerator< ::testing::tuple<T1, T2> >	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator< ::testing::tuple<T1, T2> >() const {$/;"	f	class:testing::internal::CartesianProductHolder2
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray1
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray10
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray11
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray12
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray13
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray14
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray15
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray16
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray17
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray18
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray19
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray2
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray20
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray21
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray22
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray23
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray24
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray25
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray26
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray27
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray28
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray29
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray3
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray30
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray31
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray32
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray33
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray34
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray35
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray36
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray37
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray38
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray39
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray4
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray40
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray41
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray42
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray43
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray44
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray45
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray46
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray47
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray48
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray49
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray5
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray50
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray6
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray7
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray8
operator ParamGenerator<T>	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator ParamGenerator<T>() const {$/;"	f	class:testing::internal::ValueArray9
operator T&	ceres-solver/internal/ceres/gmock/gmock.h	/^  operator T&() const { return *pointer_; }$/;"	f	class:testing::internal::ReferenceWrapper
operator []	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline T& operator[](size_type i) {$/;"	f	class:ceres::internal::FixedArray
operator []	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline const T& operator[](size_type i) const {$/;"	f	class:ceres::internal::FixedArray
operator []	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C& operator[](std::ptrdiff_t i) const {$/;"	f	class:ceres::internal::scoped_array
operator bool	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator bool() const { return success_; }  \/\/ NOLINT$/;"	f	class:testing::AssertionResult
operator bool	ceres-solver/internal/ceres/gtest/gtest.h	/^  operator bool() const { return true; }$/;"	f	struct:testing::internal::ConstCharPtr
optimal_point	ceres-solver/internal/ceres/line_search.h	/^    FunctionSample optimal_point;$/;"	m	struct:ceres::internal::LineSearch::Summary
optimization	cartographer/cartographer/mapping/internal/optimization/ceres_pose.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/cost_helpers_impl.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d_test.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d_test.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.cc	/^namespace optimization {$/;"	n	namespace:cartographer::mapping	file:
optimization	cartographer/cartographer/mapping/internal/optimization/optimization_problem_options.h	/^namespace optimization {$/;"	n	namespace:cartographer::mapping
optimization_problem_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  std::unique_ptr<optimization::OptimizationProblem2D> optimization_problem_;$/;"	m	class:cartographer::mapping::PoseGraph2D
optimization_problem_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  std::unique_ptr<optimization::OptimizationProblem3D> optimization_problem_;$/;"	m	class:cartographer::mapping::PoseGraph3D
optimization_problem_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^  OptimizationProblem3D optimization_problem_;$/;"	m	class:cartographer::mapping::optimization::__anon87::OptimizationProblem3DTest	file:
optional	cartographer/cartographer/common/optional.h	/^  explicit optional(const T& value) { value_ = common::make_unique<T>(value); }$/;"	f	class:cartographer::common::optional
optional	cartographer/cartographer/common/optional.h	/^  optional() {}$/;"	f	class:cartographer::common::optional
optional	cartographer/cartographer/common/optional.h	/^  optional(const optional& other) {$/;"	f	class:cartographer::common::optional
optional	cartographer/cartographer/common/optional.h	/^class optional {$/;"	c	namespace:cartographer::common
options	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  const proto::RangeDataInserterOptions3D& options() const { return options_; }$/;"	f	class:cartographer::mapping::__anon109::RangeDataInserter3DTest
options	ceres-solver/internal/ceres/line_search.h	/^  const LineSearch::Options& options() const { return options_; }$/;"	f	class:ceres::internal::LineSearch
options	ceres-solver/internal/ceres/preprocessor.h	/^  Solver::Options options;$/;"	m	struct:ceres::internal::PreprocessedProblem
options	ceres-solver/internal/ceres/schur_complement_solver.h	/^  const LinearSolver::Options& options() const { return options_; }$/;"	f	class:ceres::internal::SchurComplementSolver
options_	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^  const proto::ProbabilityGridRangeDataInserterOptions2D options_;$/;"	m	class:cartographer::mapping::ProbabilityGridRangeDataInserter2D
options_	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^  proto::ProbabilityGridRangeDataInserterOptions2D options_;$/;"	m	class:cartographer::mapping::__anon61::RangeDataInserterTest2D	file:
options_	cartographer/cartographer/mapping/2d/submap_2d.h	/^  const proto::SubmapsOptions2D options_;$/;"	m	class:cartographer::mapping::ActiveSubmaps2D
options_	cartographer/cartographer/mapping/3d/range_data_inserter_3d.h	/^  const proto::RangeDataInserterOptions3D options_;$/;"	m	class:cartographer::mapping::RangeDataInserter3D
options_	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  proto::RangeDataInserterOptions3D options_;$/;"	m	class:cartographer::mapping::__anon109::RangeDataInserter3DTest	file:
options_	cartographer/cartographer/mapping/3d/submap_3d.h	/^  const proto::SubmapsOptions3D options_;$/;"	m	class:cartographer::mapping::ActiveSubmaps3D
options_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  const proto::LocalTrajectoryBuilderOptions2D options_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
options_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  const proto::PoseGraphOptions options_;$/;"	m	class:cartographer::mapping::PoseGraph2D
options_	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	/^  const proto::CeresScanMatcherOptions2D options_;$/;"	m	class:cartographer::mapping::scan_matching::CeresScanMatcher2D
options_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  const proto::FastCorrelativeScanMatcherOptions2D options_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
options_	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.h	/^  const proto::RealTimeCorrelativeScanMatcherOptions options_;$/;"	m	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher2D
options_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  const mapping::proto::LocalTrajectoryBuilderOptions3D options_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
options_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  const proto::PoseGraphOptions options_;$/;"	m	class:cartographer::mapping::PoseGraph3D
options_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	/^  const proto::CeresScanMatcherOptions3D options_;$/;"	m	class:cartographer::mapping::scan_matching::CeresScanMatcher3D
options_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  proto::CeresScanMatcherOptions3D options_;$/;"	m	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest	file:
options_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  const proto::FastCorrelativeScanMatcherOptions3D options_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
options_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  const proto::FastCorrelativeScanMatcherOptions3D options_;$/;"	m	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest	file:
options_	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.h	/^  const proto::RealTimeCorrelativeScanMatcherOptions options_;$/;"	m	class:cartographer::mapping::scan_matching::RealTimeCorrelativeScanMatcher3D
options_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  const constraints::proto::ConstraintBuilderOptions options_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
options_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  const proto::ConstraintBuilderOptions options_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
options_	cartographer/cartographer/mapping/internal/motion_filter.h	/^  const proto::MotionFilterOptions options_;$/;"	m	class:cartographer::mapping::MotionFilter
options_	cartographer/cartographer/mapping/internal/motion_filter_test.cc	/^  proto::MotionFilterOptions options_;$/;"	m	class:cartographer::mapping::__anon73::MotionFilterTest	file:
options_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  optimization::proto::OptimizationProblemOptions options_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
options_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  optimization::proto::OptimizationProblemOptions options_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
options_	cartographer/cartographer/mapping/map_builder.h	/^  const proto::MapBuilderOptions options_;$/;"	m	class:cartographer::mapping::MapBuilder
options_	cartographer/cartographer/sensor/internal/voxel_filter.h	/^  const proto::AdaptiveVoxelFilterOptions options_;$/;"	m	class:cartographer::sensor::AdaptiveVoxelFilter
options_	ceres-solver/examples/libmv_homography.cc	/^  const EstimateHomographyOptions &options_;$/;"	m	class:__anon158::TerminationCheckingCallback	file:
options_	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  NumericDiffOptions options_;$/;"	m	class:ceres::DynamicNumericDiffCostFunction
options_	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^  NumericDiffOptions options_;$/;"	m	class:ceres::NumericDiffCostFunction
options_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  Solver::Options options_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
options_	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^  CanonicalViewsClusteringOptions options_;$/;"	m	class:ceres::internal::CanonicalViewsClustering	file:
options_	ceres-solver/internal/ceres/canonical_views_clustering_test.cc	/^  CanonicalViewsClusteringOptions options_;$/;"	m	class:ceres::internal::CanonicalViewsTest	file:
options_	ceres-solver/internal/ceres/cgnr_solver.h	/^  const LinearSolver::Options options_;$/;"	m	class:ceres::internal::CgnrSolver
options_	ceres-solver/internal/ceres/conjugate_gradients_solver.h	/^  const LinearSolver::Options options_;$/;"	m	class:ceres::internal::ConjugateGradientsSolver
options_	ceres-solver/internal/ceres/covariance_impl.h	/^  Covariance::Options options_;$/;"	m	class:ceres::internal::CovarianceImpl
options_	ceres-solver/internal/ceres/dense_normal_cholesky_solver.h	/^  const LinearSolver::Options options_;$/;"	m	class:ceres::internal::DenseNormalCholeskySolver
options_	ceres-solver/internal/ceres/dense_qr_solver.h	/^  const LinearSolver::Options options_;$/;"	m	class:ceres::internal::DenseQRSolver
options_	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^  TrustRegionStrategy::Options options_;$/;"	m	class:ceres::internal::__anon178::Fixture	file:
options_	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.h	/^  const LinearSolver::Options options_;$/;"	m	class:ceres::internal::DynamicSparseNormalCholeskySolver
options_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  const LinearSolver::Options& options_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
options_	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^  LinearSolver::Options options_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolver
options_	ceres-solver/internal/ceres/line_search.h	/^  LineSearch::Options options_;$/;"	m	class:ceres::internal::LineSearch
options_	ceres-solver/internal/ceres/problem_impl.h	/^  const Problem::Options options_;$/;"	m	class:ceres::internal::ProblemImpl
options_	ceres-solver/internal/ceres/program_evaluator.h	/^  Evaluator::Options options_;$/;"	m	class:ceres::internal::ProgramEvaluator
options_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  LinearSolver::Options options_;$/;"	m	class:ceres::internal::SchurComplementSolver
options_	ceres-solver/internal/ceres/schur_jacobi_preconditioner.h	/^  Preconditioner::Options options_;$/;"	m	class:ceres::internal::SchurJacobiPreconditioner
options_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	/^  const LinearSolver::Options options_;$/;"	m	class:ceres::internal::SparseNormalCholeskySolver
options_	ceres-solver/internal/ceres/system_test.cc	/^  Solver::Options options_;$/;"	m	class:ceres::internal::PowellsFunction	file:
options_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Minimizer::Options options_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
options_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  Preconditioner::Options options_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
ordering_type_	ceres-solver/internal/ceres/cxsparse.h	/^  const OrderingType ordering_type_;$/;"	m	class:ceres::internal::CXSparseCholesky
ordering_type_	ceres-solver/internal/ceres/suitesparse.h	/^  const OrderingType ordering_type_;$/;"	m	class:ceres::internal::SuiteSparseCholesky
orientation	cartographer/cartographer/mapping/imu_tracker.h	/^  Eigen::Quaterniond orientation() const { return orientation_; }$/;"	f	class:cartographer::mapping::ImuTracker
orientation	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  double orientation = 0.;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
orientation_	cartographer/cartographer/mapping/imu_tracker.h	/^  Eigen::Quaterniond orientation_;$/;"	m	class:cartographer::mapping::ImuTracker
origin	cartographer/cartographer/io/points_batch.h	/^  Eigen::Vector3f origin;$/;"	m	struct:cartographer::io::PointsBatch
origin	cartographer/cartographer/io/submap_painter.h	/^  Eigen::Array2f origin;$/;"	m	struct:cartographer::io::PaintSubmapSlicesResult
origin	cartographer/cartographer/sensor/range_data.h	/^  Eigen::Vector3f origin;$/;"	m	struct:cartographer::sensor::RangeData
origin	cartographer/cartographer/sensor/range_data.h	/^  Eigen::Vector3f origin;$/;"	m	struct:cartographer::sensor::TimedRangeData
origin	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  Eigen::Vector3f origin;$/;"	m	struct:cartographer::sensor::TimedPointCloudData
origin_	cartographer/cartographer/sensor/range_data_test.cc	/^  Eigen::Vector3f origin_;$/;"	m	class:cartographer::sensor::__anon120::RangeDataTest	file:
origin_index	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^    size_t origin_index;$/;"	m	struct:cartographer::sensor::TimedPointCloudOriginData::RangeMeasurement
original_reporter_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestPartResultReporterInterface* original_reporter_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper
original_working_dir	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^const char* UnitTest::original_working_dir() const {$/;"	f	class:testing::UnitTest
original_working_dir_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::FilePath original_working_dir_;$/;"	m	class:testing::internal::UnitTestImpl	file:
origins	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  std::vector<Eigen::Vector3f> origins;$/;"	m	struct:cartographer::sensor::TimedPointCloudOriginData
os_stack_trace_getter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {$/;"	f	class:testing::internal::UnitTestImpl
os_stack_trace_getter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  OsStackTraceGetterInterface* os_stack_trace_getter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
out	ceres-solver/scripts/make_docs.py	/^    out = fptr.read()$/;"	v
out	ceres-solver/scripts/make_docs.py	/^    out = out.replace(input_pattern, output_pattern)$/;"	v
out	ceres-solver/scripts/make_docs.py	/^    out = pre_breadcrumb_start + post_breadcrumb_end$/;"	v
out_	cartographer/cartographer/io/file_writer.h	/^  std::ofstream out_;$/;"	m	class:cartographer::io::StreamFileWriter
out_	cartographer/cartographer/io/proto_stream.h	/^  std::ofstream out_;$/;"	m	class:cartographer::io::ProtoStreamWriter
outcome	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  DeathTestOutcome outcome() const { return outcome_; }$/;"	f	class:testing::internal::DeathTestImpl
outcome_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  DeathTestOutcome outcome_;$/;"	m	class:testing::internal::DeathTestImpl	file:
output_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string output_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
output_file_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::XmlUnitTestResultPrinter	file:
output_filename_	cartographer/cartographer/io/xray_points_processor.h	/^  const std::string output_filename_;$/;"	m	class:cartographer::io::XRayPointsProcessor
output_messages_	cartographer/cartographer/io/serialization_format_migration_test.cc	/^  std::vector<std::string> output_messages_;$/;"	m	class:cartographer::io::__anon18::MigrationTest	file:
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^                 bool load_frozen_state) override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^          options_with_sensor_ids_proto) override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^      LocalSlamResultCallback local_slam_result_callback) override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^      int trajectory_id) const override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^      mapping::proto::SubmapQuery::Response* response) override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  GetAllTrajectoryBuilderOptions() const override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  int num_trajectory_builders() const override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  mapping::PoseGraphInterface* pose_graph() override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  void FinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  void SerializeState(io::ProtoStreamWriterInterface* writer) override;$/;"	m	class:cartographer::cloud::MapBuilderStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^                       const transform::Rigid3d& global_pose) override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^      GlobalSlamOptimizationCallback callback) override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^      const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^      int trajectory_id) const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  GetTrajectoryNodePoses() const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  GetTrajectoryNodes() const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  bool IsTrajectoryFinished(int trajectory_id) const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  bool IsTrajectoryFrozen(int trajectory_id) const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  mapping::proto::PoseGraph ToProto() const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  std::map<std::string, transform::Rigid3d> GetLandmarkPoses() const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  std::vector<Constraint> constraints() const override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/pose_graph_stub.h	/^  void RunFinalOptimization() override;$/;"	m	class:cartographer::cloud::PoseGraphStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^                                  local_slam_result_data) override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^                     const sensor::ImuData& imu_data) override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^                     const sensor::LandmarkData& landmark_data) override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^                     const sensor::OdometryData& odometry_data) override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      const sensor::FixedFramePoseData& fixed_frame_pose) override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      const sensor::TimedPointCloudData& timed_point_cloud_data) override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^  ~TrajectoryBuilderStub() override;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
override	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	/^  void OnReadsDone() override;$/;"	m	class:cartographer::cloud::handlers::AddFixedFramePoseDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_fixed_frame_pose_data_handler.h	/^  void OnRequest(const proto::AddFixedFramePoseDataRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::AddFixedFramePoseDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	/^  void OnReadsDone() override;$/;"	m	class:cartographer::cloud::handlers::AddImuDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_imu_data_handler.h	/^  void OnRequest(const proto::AddImuDataRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::AddImuDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	/^  void OnReadsDone() override;$/;"	m	class:cartographer::cloud::handlers::AddLandmarkDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_landmark_data_handler.h	/^  void OnRequest(const proto::AddLandmarkDataRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::AddLandmarkDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	/^  void OnReadsDone() override;$/;"	m	class:cartographer::cloud::handlers::AddOdometryDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_odometry_data_handler.h	/^  void OnRequest(const proto::AddOdometryDataRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::AddOdometryDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	/^  void OnReadsDone() override;$/;"	m	class:cartographer::cloud::handlers::AddRangefinderDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_rangefinder_data_handler.h	/^  void OnRequest(const proto::AddRangefinderDataRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::AddRangefinderDataHandler
override	cartographer/cartographer/cloud/internal/handlers/add_sensor_data_batch_handler.h	/^  void OnRequest(const proto::AddSensorDataBatchRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::AddSensorDataBatchHandler
override	cartographer/cartographer/cloud/internal/handlers/add_trajectory_handler.h	/^  void OnRequest(const proto::AddTrajectoryRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::AddTrajectoryHandler
override	cartographer/cartographer/cloud/internal/handlers/finish_trajectory_handler.h	/^  void OnRequest(const proto::FinishTrajectoryRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::FinishTrajectoryHandler
override	cartographer/cartographer/cloud/internal/handlers/get_all_submap_poses.h	/^  void OnRequest(const google::protobuf::Empty& request) override;$/;"	m	class:cartographer::cloud::handlers::GetAllSubmapPosesHandler
override	cartographer/cartographer/cloud/internal/handlers/get_constraints_handler.h	/^  void OnRequest(const google::protobuf::Empty& request) override;$/;"	m	class:cartographer::cloud::handlers::GetConstraintsHandler
override	cartographer/cartographer/cloud/internal/handlers/get_landmark_poses_handler.h	/^  void OnRequest(const google::protobuf::Empty& request) override;$/;"	m	class:cartographer::cloud::handlers::GetLandmarkPosesHandler
override	cartographer/cartographer/cloud/internal/handlers/get_local_to_global_transform_handler.h	/^      const proto::GetLocalToGlobalTransformRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::GetLocalToGlobalTransformHandler
override	cartographer/cartographer/cloud/internal/handlers/get_submap_handler.h	/^  void OnRequest(const proto::GetSubmapRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::GetSubmapHandler
override	cartographer/cartographer/cloud/internal/handlers/get_trajectory_node_poses_handler.h	/^  void OnRequest(const google::protobuf::Empty& request) override;$/;"	m	class:cartographer::cloud::handlers::GetTrajectoryNodePosesHandler
override	cartographer/cartographer/cloud/internal/handlers/is_trajectory_finished_handler.h	/^  void OnRequest(const proto::IsTrajectoryFinishedRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::IsTrajectoryFinishedHandler
override	cartographer/cartographer/cloud/internal/handlers/is_trajectory_frozen_handler.h	/^  void OnRequest(const proto::IsTrajectoryFrozenRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::IsTrajectoryFrozenHandler
override	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^  void OnReadsDone() override;$/;"	m	class:cartographer::cloud::handlers::LoadStateHandler
override	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^  void OnRequest(const proto::LoadStateRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::LoadStateHandler
override	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^  void OnFinish() override;$/;"	m	class:cartographer::cloud::handlers::ReceiveGlobalSlamOptimizationsHandler
override	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^  void OnRequest(const google::protobuf::Empty &request) override;$/;"	m	class:cartographer::cloud::handlers::ReceiveGlobalSlamOptimizationsHandler
override	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^  void OnFinish() override;$/;"	m	class:cartographer::cloud::handlers::ReceiveLocalSlamResultsHandler
override	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^  void OnRequest(const proto::ReceiveLocalSlamResultsRequest& request) override;$/;"	m	class:cartographer::cloud::handlers::ReceiveLocalSlamResultsHandler
override	cartographer/cartographer/cloud/internal/handlers/run_final_optimization_handler.h	/^  void OnRequest(const google::protobuf::Empty& request) override;$/;"	m	class:cartographer::cloud::handlers::RunFinalOptimizationHandler
override	cartographer/cartographer/cloud/internal/handlers/set_landmark_pose_handler.h	/^  void OnRequest(const proto::SetLandmarkPoseRequest &request) override;$/;"	m	class:cartographer::cloud::handlers::SetLandmarkPoseHandler
override	cartographer/cartographer/cloud/internal/handlers/write_state_handler.h	/^  void OnRequest(const google::protobuf::Empty& request) override;$/;"	m	class:cartographer::cloud::handlers::WriteStateHandler
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^                                      local_slam_result_data) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^                         std::unique_ptr<sensor::Data> data) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^      GlobalSlamOptimizationCallback callback) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^      const LocalSlamSubscriptionId& subscription_id) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^      int trajectory_id, LocalSlamSubscriptionCallback callback) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  GetLocalSlamResultCallbackForSubscriptions() override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  LocalTrajectoryUploaderInterface* local_trajectory_uploader() override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  mapping::MapBuilderInterface& map_builder() override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  sensor_data_queue() override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void AddSensorDataToTrajectory(const Data& sensor_data) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void NotifyFinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  void UnsubscribeGlobalSlamOptimizations(int subscription_index) override;$/;"	m	class:cartographer::cloud::MapBuilderContext
override	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^                         boundaries) override;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
override	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^                   const std::string& description) override;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
override	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^                 const std::string& description) override;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
override	cartographer/cartographer/common/configuration_file_resolver.h	/^  std::string GetFileContentOrDie(const std::string& basename) override;$/;"	m	class:cartographer::common::ConfigurationFileResolver
override	cartographer/cartographer/common/configuration_file_resolver.h	/^  std::string GetFullPathOrDie(const std::string& basename) override;$/;"	m	class:cartographer::common::ConfigurationFileResolver
override	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^      EXCLUDES(mutex_) override;$/;"	m	class:cartographer::common::testing::ThreadPoolForTesting
override	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^  void NotifyDependenciesCompleted(Task* task) EXCLUDES(mutex_) override;$/;"	m	class:cartographer::common::testing::ThreadPoolForTesting
override	cartographer/cartographer/common/thread_pool.h	/^      EXCLUDES(mutex_) override;$/;"	m	class:cartographer::common::ThreadPool
override	cartographer/cartographer/common/thread_pool.h	/^  void NotifyDependenciesCompleted(Task* task) EXCLUDES(mutex_) override;$/;"	m	class:cartographer::common::ThreadPool
override	cartographer/cartographer/io/coloring_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::ColoringPointsProcessor
override	cartographer/cartographer/io/coloring_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::ColoringPointsProcessor
override	cartographer/cartographer/io/counting_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::CountingPointsProcessor
override	cartographer/cartographer/io/counting_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> points) override;$/;"	m	class:cartographer::io::CountingPointsProcessor
override	cartographer/cartographer/io/fake_file_writer.h	/^  bool Close() override;$/;"	m	class:cartographer::io::FakeFileWriter
override	cartographer/cartographer/io/fake_file_writer.h	/^  bool Write(const char* data, size_t len) override;$/;"	m	class:cartographer::io::FakeFileWriter
override	cartographer/cartographer/io/fake_file_writer.h	/^  bool WriteHeader(const char* data, size_t len) override;$/;"	m	class:cartographer::io::FakeFileWriter
override	cartographer/cartographer/io/fake_file_writer.h	/^  std::string GetFilename() override;$/;"	m	class:cartographer::io::FakeFileWriter
override	cartographer/cartographer/io/fake_file_writer.h	/^  ~FakeFileWriter() override = default;$/;"	m	class:cartographer::io::FakeFileWriter
override	cartographer/cartographer/io/file_writer.h	/^  bool Close() override;$/;"	m	class:cartographer::io::StreamFileWriter
override	cartographer/cartographer/io/file_writer.h	/^  bool Write(const char* data, size_t len) override;$/;"	m	class:cartographer::io::StreamFileWriter
override	cartographer/cartographer/io/file_writer.h	/^  bool WriteHeader(const char* data, size_t len) override;$/;"	m	class:cartographer::io::StreamFileWriter
override	cartographer/cartographer/io/file_writer.h	/^  std::string GetFilename() override;$/;"	m	class:cartographer::io::StreamFileWriter
override	cartographer/cartographer/io/file_writer.h	/^  ~StreamFileWriter() override;$/;"	m	class:cartographer::io::StreamFileWriter
override	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::FixedRatioSamplingPointsProcessor
override	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::FixedRatioSamplingPointsProcessor
override	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::FrameIdFilteringPointsProcessor
override	cartographer/cartographer/io/frame_id_filtering_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::FrameIdFilteringPointsProcessor
override	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::HybridGridPointsProcessor
override	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::HybridGridPointsProcessor
override	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
override	cartographer/cartographer/io/intensity_to_color_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::IntensityToColorPointsProcessor
override	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  bool Close() override;$/;"	m	class:cartographer::io::ForwardingProtoStreamWriter
override	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  bool ReadProto(google::protobuf::Message* proto) override;$/;"	m	class:cartographer::io::InMemoryProtoStreamReader
override	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  void WriteProto(const google::protobuf::Message& proto) override;$/;"	m	class:cartographer::io::ForwardingProtoStreamWriter
override	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
override	cartographer/cartographer/io/min_max_range_filtering_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::MinMaxRangeFiteringPointsProcessor
override	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
override	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
override	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
override	cartographer/cartographer/io/pcd_writing_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::PcdWritingPointsProcessor
override	cartographer/cartographer/io/ply_writing_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
override	cartographer/cartographer/io/ply_writing_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::PlyWritingPointsProcessor
override	cartographer/cartographer/io/probability_grid_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
override	cartographer/cartographer/io/probability_grid_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
override	cartographer/cartographer/io/proto_stream.h	/^  bool Close() override;$/;"	m	class:cartographer::io::ProtoStreamWriter
override	cartographer/cartographer/io/proto_stream.h	/^  bool ReadProto(google::protobuf::Message* proto) override;$/;"	m	class:cartographer::io::ProtoStreamReader
override	cartographer/cartographer/io/proto_stream.h	/^  bool eof() const override;$/;"	m	class:cartographer::io::ProtoStreamReader
override	cartographer/cartographer/io/proto_stream.h	/^  void WriteProto(const google::protobuf::Message& proto) override;$/;"	m	class:cartographer::io::ProtoStreamWriter
override	cartographer/cartographer/io/xray_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::XRayPointsProcessor
override	cartographer/cartographer/io/xray_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::XRayPointsProcessor
override	cartographer/cartographer/io/xyz_writing_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer::io::XyzWriterPointsProcessor
override	cartographer/cartographer/io/xyz_writing_points_processor.h	/^  void Process(std::unique_ptr<PointsBatch> batch) override;$/;"	m	class:cartographer::io::XyzWriterPointsProcessor
override	cartographer/cartographer/mapping/2d/probability_grid.h	/^      transform::Rigid3d local_pose) const override;$/;"	m	class:cartographer::mapping::ProbabilityGrid
override	cartographer/cartographer/mapping/2d/probability_grid.h	/^  virtual proto::Grid2D ToProto() const override;$/;"	m	class:cartographer::mapping::ProbabilityGrid
override	cartographer/cartographer/mapping/2d/probability_grid.h	/^  virtual std::unique_ptr<Grid2D> ComputeCroppedGrid() const override;$/;"	m	class:cartographer::mapping::ProbabilityGrid
override	cartographer/cartographer/mapping/2d/probability_grid_range_data_inserter_2d.h	/^                      GridInterface* grid) const override;$/;"	m	class:cartographer::mapping::ProbabilityGridRangeDataInserter2D
override	cartographer/cartographer/mapping/2d/submap_2d.h	/^                       proto::SubmapQuery::Response* response) const override;$/;"	m	class:cartographer::mapping::Submap2D
override	cartographer/cartographer/mapping/2d/submap_2d.h	/^               bool include_probability_grid_data) const override;$/;"	m	class:cartographer::mapping::Submap2D
override	cartographer/cartographer/mapping/2d/submap_2d.h	/^  void UpdateFromProto(const proto::Submap& proto) override;$/;"	m	class:cartographer::mapping::Submap2D
override	cartographer/cartographer/mapping/3d/submap_3d.h	/^                       proto::SubmapQuery::Response* response) const override;$/;"	m	class:cartographer::mapping::Submap3D
override	cartographer/cartographer/mapping/3d/submap_3d.h	/^               bool include_probability_grid_data) const override;$/;"	m	class:cartographer::mapping::Submap3D
override	cartographer/cartographer/mapping/3d/submap_3d.h	/^  void UpdateFromProto(const proto::Submap& proto) override;$/;"	m	class:cartographer::mapping::Submap3D
override	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^      TrajectoryBuilderInterface* const trajectory_builder) override;$/;"	m	class:cartographer::mapping::LocalSlamResult2D
override	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^  void AddToPoseGraph(int trajectory_id, PoseGraph* pose_graph) const override;$/;"	m	class:cartographer::mapping::LocalSlamResult2D
override	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  void Trim(Trimmable* pose_graph) override;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
override	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.h	/^  ~OverlappingSubmapsTrimmer2D() override = default;$/;"	m	class:cartographer::mapping::OverlappingSubmapsTrimmer2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^                          const proto::Submap& submap) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^                        const proto::Node& node) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^                       const SubmapId& submap_id) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^        REQUIRES(parent_->mutex_) override;$/;"	m	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^      EXCLUDES(mutex_) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^      PoseGraphInterface::GlobalSlamOptimizationCallback callback) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^      const std::vector<Constraint>& constraints) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^    int num_submaps(int trajectory_id) const override;$/;"	m	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^    std::vector<SubmapId> GetSubmapIds(int trajectory_id) const override;$/;"	m	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  std::vector<std::vector<int>> GetConnectedTrajectories() const override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  void AddTrimmer(std::unique_ptr<PoseGraphTrimmer> trimmer) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  void FinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  void FreezeTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  void RunFinalOptimization() override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  void SetTrajectoryDataFromProto(const proto::TrajectoryData& data) override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  ~PoseGraph2D() override;$/;"	m	class:cartographer::mapping::PoseGraph2D
override	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^      TrajectoryBuilderInterface* const trajectory_builder) override;$/;"	m	class:cartographer::mapping::LocalSlamResult3D
override	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^  void AddToPoseGraph(int trajectory_id, PoseGraph* pose_graph) const override;$/;"	m	class:cartographer::mapping::LocalSlamResult3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^                          const proto::Submap& submap) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^                        const proto::Node& node) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^                       const SubmapId& submap_id) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^        REQUIRES(parent_->mutex_) override;$/;"	m	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^      EXCLUDES(mutex_) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^      PoseGraphInterface::GlobalSlamOptimizationCallback callback) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^      const std::vector<Constraint>& constraints) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^    int num_submaps(int trajectory_id) const override;$/;"	m	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^    std::vector<SubmapId> GetSubmapIds(int trajectory_id) const override;$/;"	m	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  std::map<int, TrajectoryData> GetTrajectoryData() const override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  std::vector<std::vector<int>> GetConnectedTrajectories() const override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  void AddTrimmer(std::unique_ptr<PoseGraphTrimmer> trimmer) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  void FinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  void FreezeTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  void RunFinalOptimization() override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  void SetTrajectoryDataFromProto(const proto::TrajectoryData& data) override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  ~PoseGraph3D() override;$/;"	m	class:cartographer::mapping::PoseGraph3D
override	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  ~MockOptimizationProblem3D() override = default;$/;"	m	class:cartographer::mapping::__anon105::MockOptimizationProblem3D	file:
override	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^  ~CollatedTrajectoryBuilder() override;$/;"	m	class:cartographer::mapping::CollatedTrajectoryBuilder
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^                            const NodeSpec2D& node_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^                         const NodeSpec2D& node_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^                       const sensor::OdometryData& odometry_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^                    const transform::Rigid2d& global_submap_pose) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^                 const transform::Rigid2d& global_submap_pose) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^      const std::map<std::string, LandmarkNode>& landmark_nodes) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  void AddImuData(int trajectory_id, const sensor::ImuData& imu_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  void SetMaxNumIterations(int32 max_num_iterations) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  void TrimSubmap(const SubmapId& submap_id) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  void TrimTrajectoryNode(const NodeId& node_id) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^                            const NodeSpec3D& node_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^                         const NodeSpec3D& node_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^                       const sensor::OdometryData& odometry_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^                    const transform::Rigid3d& global_submap_pose) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^                 const transform::Rigid3d& global_submap_pose) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^      const std::map<std::string, LandmarkNode>& landmark_nodes) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  void AddImuData(int trajectory_id, const sensor::ImuData& imu_data) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  void SetMaxNumIterations(int32 max_num_iterations) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  void TrimSubmap(const SubmapId& submap_id) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  void TrimTrajectoryNode(const NodeId& node_id) override;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
override	cartographer/cartographer/mapping/internal/testing/mock_pose_graph.h	/^  ~MockPoseGraph() override = default;$/;"	m	class:cartographer::mapping::testing::MockPoseGraph
override	cartographer/cartographer/mapping/internal/testing/mock_trajectory_builder.h	/^  ~MockTrajectoryBuilder() override = default;$/;"	m	class:cartographer::mapping::testing::MockTrajectoryBuilder
override	cartographer/cartographer/mapping/map_builder.h	/^                            proto::SubmapQuery::Response *response) override;$/;"	m	class:cartographer::mapping::MapBuilder
override	cartographer/cartographer/mapping/map_builder.h	/^                 bool load_frozen_state) override;$/;"	m	class:cartographer::mapping::MapBuilder
override	cartographer/cartographer/mapping/map_builder.h	/^          &options_with_sensor_ids_proto) override;$/;"	m	class:cartographer::mapping::MapBuilder
override	cartographer/cartographer/mapping/map_builder.h	/^      LocalSlamResultCallback local_slam_result_callback) override;$/;"	m	class:cartographer::mapping::MapBuilder
override	cartographer/cartographer/mapping/map_builder.h	/^  void FinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::mapping::MapBuilder
override	cartographer/cartographer/mapping/map_builder.h	/^  void SerializeState(io::ProtoStreamWriterInterface *writer) override;$/;"	m	class:cartographer::mapping::MapBuilder
override	cartographer/cartographer/mapping/pose_graph.h	/^  proto::PoseGraph ToProto() const override;$/;"	m	class:cartographer::mapping::PoseGraph
override	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  bool IsFinished() override;$/;"	m	class:cartographer::mapping::PureLocalizationTrimmer
override	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  void Trim(Trimmable* pose_graph) override;$/;"	m	class:cartographer::mapping::PureLocalizationTrimmer
override	cartographer/cartographer/sensor/internal/collator.h	/^                     const Callback& callback) override;$/;"	m	class:cartographer::sensor::Collator
override	cartographer/cartographer/sensor/internal/collator.h	/^  common::optional<int> GetBlockingTrajectoryId() const override;$/;"	m	class:cartographer::sensor::Collator
override	cartographer/cartographer/sensor/internal/collator.h	/^  void AddSensorData(int trajectory_id, std::unique_ptr<Data> data) override;$/;"	m	class:cartographer::sensor::Collator
override	cartographer/cartographer/sensor/internal/collator.h	/^  void FinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::sensor::Collator
override	cartographer/cartographer/sensor/internal/collator.h	/^  void Flush() override;$/;"	m	class:cartographer::sensor::Collator
override	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^                     const Callback& callback) override;$/;"	m	class:cartographer::sensor::TrajectoryCollator
override	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  common::optional<int> GetBlockingTrajectoryId() const override;$/;"	m	class:cartographer::sensor::TrajectoryCollator
override	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  void AddSensorData(int trajectory_id, std::unique_ptr<Data> data) override;$/;"	m	class:cartographer::sensor::TrajectoryCollator
override	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  void FinishTrajectory(int trajectory_id) override;$/;"	m	class:cartographer::sensor::TrajectoryCollator
override	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  void Flush() override;$/;"	m	class:cartographer::sensor::TrajectoryCollator
override	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	/^            const char* message, size_t message_len) override;$/;"	m	class:cartographer_ros::ScopedRosLogSink
override	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	/^  void WaitTillSent() override;$/;"	m	class:cartographer_ros::ScopedRosLogSink
override	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	/^  ~ScopedRosLogSink() override;$/;"	m	class:cartographer_ros::ScopedRosLogSink
override	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  FlushResult Flush() override;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
override	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  void Process(std::unique_ptr<::cartographer::io::PointsBatch> batch) override;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
override	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  ~DrawableSubmap() override;$/;"	m	class:cartographer_rviz::DrawableSubmap
override	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^      const ::cartographer_ros_msgs::SubmapList::ConstPtr& msg) override;$/;"	m	class:cartographer_rviz::SubmapsDisplay
override	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  void onInitialize() override;$/;"	m	class:cartographer_rviz::SubmapsDisplay
override	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  void reset() override;$/;"	m	class:cartographer_rviz::SubmapsDisplay
override	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  void update(float wall_dt, float ros_dt) override;$/;"	m	class:cartographer_rviz::SubmapsDisplay
override	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ~SubmapsDisplay() override;$/;"	m	class:cartographer_rviz::SubmapsDisplay
owner_	ceres-solver/internal/ceres/gmock/gmock.h	/^  FunctionMockerBase<F>* const owner_;$/;"	m	class:testing::internal::TypedExpectation
owner_	ceres-solver/internal/ceres/gtest/gtest.h	/^  pthread_t owner_;  \/\/ The thread holding the mutex.$/;"	m	class:std::tr1::MutexBase
owner_thread_id_	ceres-solver/internal/ceres/gtest/gtest.h	/^  unsigned int owner_thread_id_;$/;"	m	class:std::tr1::Mutex
ownership_	ceres-solver/include/ceres/conditioned_cost_function.h	/^  Ownership ownership_;$/;"	m	class:ceres::ConditionedCostFunction
ownership_	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  Ownership ownership_;$/;"	m	class:ceres::DynamicNumericDiffCostFunction
ownership_	ceres-solver/include/ceres/loss_function.h	/^  Ownership ownership_;$/;"	m	class:ceres::LossFunctionWrapper
ownership_	ceres-solver/include/ceres/loss_function.h	/^  const Ownership ownership_;$/;"	m	class:ceres::ScaledLoss
ownership_	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^  Ownership ownership_;$/;"	m	class:ceres::NumericDiffCostFunction
ownership_f_	ceres-solver/include/ceres/loss_function.h	/^  const Ownership ownership_f_, ownership_g_;$/;"	m	class:ceres::ComposedLoss
ownership_g_	ceres-solver/include/ceres/loss_function.h	/^  const Ownership ownership_f_, ownership_g_;$/;"	m	class:ceres::ComposedLoss
p	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  Eigen::Vector3d p;$/;"	m	struct:ceres::examples::Pose3d
p_ab_	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^  const Eigen::Vector2d p_ab_;$/;"	m	class:ceres::examples::PoseGraph2dErrorTerm
param	ceres-solver/internal/ceres/gtest/gtest.h	/^  ParamType param;$/;"	m	struct:testing::TestParamInfo
param1_	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  scoped_ptr<LocalParameterization> param1_;$/;"	m	class:ceres::internal::ProductParameterizationTest	file:
param2_	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  scoped_ptr<LocalParameterization> param2_;$/;"	m	class:ceres::internal::ProductParameterizationTest	file:
param3_	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  scoped_ptr<LocalParameterization> param3_;$/;"	m	class:ceres::internal::ProductParameterizationTest	file:
param4_	ceres-solver/internal/ceres/local_parameterization_test.cc	/^  scoped_ptr<LocalParameterization> param4_;$/;"	m	class:ceres::internal::ProductParameterizationTest	file:
param_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const T param_;$/;"	m	class:std::tr1::ThreadWithParam::RunnableImpl
param_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T param_;  \/\/ User-supplied parameter to the thread function.$/;"	m	class:std::tr1::ThreadWithParam
parameter_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const ParamType parameter_;$/;"	m	class:testing::internal::ParameterizedTestFactory
parameter_	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const ParamType* parameter_;$/;"	m	class:testing::WithParamInterface
parameter_	ceres-solver/internal/ceres/gtest/gtest.h	/^const T* WithParamInterface<T>::parameter_ = NULL;$/;"	m	class:testing::WithParamInterface
parameter_block_map_	ceres-solver/internal/ceres/problem_impl.h	/^  std::map<double*, ParameterBlock*> parameter_block_map_;$/;"	m	class:ceres::internal::ProblemImpl
parameter_block_size_	ceres-solver/internal/ceres/covariance_test.cc	/^  int parameter_block_size_;$/;"	m	class:ceres::internal::LargeScaleCovarianceTest	file:
parameter_block_sizes	ceres-solver/include/ceres/cost_function.h	/^  const std::vector<int32>& parameter_block_sizes() const {$/;"	f	class:ceres::CostFunction
parameter_block_sizes_	ceres-solver/include/ceres/cost_function.h	/^  std::vector<int32> parameter_block_sizes_;$/;"	m	class:ceres::CostFunction
parameter_block_to_row_index_	ceres-solver/internal/ceres/covariance_impl.h	/^  std::map<const double*, int> parameter_block_to_row_index_;$/;"	m	class:ceres::internal::CovarianceImpl
parameter_blocks	ceres-solver/include/ceres/problem.h	/^    std::vector<double*> parameter_blocks;$/;"	m	struct:ceres::Problem::EvaluateOptions
parameter_blocks	ceres-solver/internal/ceres/program.cc	/^const vector<ParameterBlock*>& Program::parameter_blocks() const {$/;"	f	class:ceres::internal::Program
parameter_blocks	ceres-solver/internal/ceres/residual_block.h	/^  ParameterBlock* const* parameter_blocks() const {$/;"	f	class:ceres::internal::ResidualBlock
parameter_blocks_	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^  std::vector<ParameterBlock*> parameter_blocks_;$/;"	m	class:ceres::internal::CoordinateDescentMinimizer
parameter_blocks_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double*> parameter_blocks_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
parameter_blocks_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double*> parameter_blocks_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
parameter_blocks_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double*> parameter_blocks_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
parameter_blocks_	ceres-solver/internal/ceres/problem_test.cc	/^  vector<double*> parameter_blocks_;$/;"	m	class:ceres::internal::ProblemEvaluateTest	file:
parameter_blocks_	ceres-solver/internal/ceres/program.h	/^  std::vector<ParameterBlock*> parameter_blocks_;$/;"	m	class:ceres::internal::Program
parameter_blocks_	ceres-solver/internal/ceres/residual_block.h	/^  scoped_array<ParameterBlock*> parameter_blocks_;$/;"	m	class:ceres::internal::ResidualBlock
parameter_map	ceres-solver/internal/ceres/problem_impl.h	/^  const ParameterMap& parameter_map() const { return parameter_block_map_; }$/;"	f	class:ceres::internal::ProblemImpl
parameter_tolerance	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double parameter_tolerance;$/;"	m	struct:ceres::GradientProblemSolver::Options
parameter_tolerance	ceres-solver/include/ceres/solver.h	/^    double parameter_tolerance;$/;"	m	struct:ceres::Solver::Options
parameter_tolerance	ceres-solver/internal/ceres/minimizer.h	/^    double parameter_tolerance;$/;"	m	struct:ceres::internal::Minimizer::Options
parameterization_	ceres-solver/include/ceres/gradient_problem.h	/^  internal::scoped_ptr<LocalParameterization> parameterization_;$/;"	m	class:ceres::GradientProblem
parameterized_test_registry	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::ParameterizedTestCaseRegistry& parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl
parameterized_test_registry_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::ParameterizedTestCaseRegistry parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parameterized_tests_registered_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool parameterized_tests_registered_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parameters	ceres-solver/examples/bal_problem.h	/^  const double* parameters()   const { return parameters_;               }$/;"	f	class:ceres::examples::BALProblem
parameters_	ceres-solver/examples/bal_problem.h	/^  double* parameters_;$/;"	m	class:ceres::examples::BALProblem
parameters_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  double* parameters_;$/;"	m	class:BALProblem	file:
parameters_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  double* parameters_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
parameters_	ceres-solver/internal/ceres/callbacks.h	/^  double* parameters_;$/;"	m	class:ceres::internal::StateUpdatingCallback
parameters_	ceres-solver/internal/ceres/covariance_test.cc	/^  double parameters_[6];$/;"	m	class:ceres::internal::CovarianceTest	file:
parameters_	ceres-solver/internal/ceres/covariance_test.cc	/^  scoped_array<double> parameters_;$/;"	m	class:ceres::internal::LargeScaleCovarianceTest	file:
parameters_	ceres-solver/internal/ceres/problem_test.cc	/^  double parameters_[6];$/;"	m	class:ceres::internal::ProblemEvaluateTest	file:
parameters_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double* parameters_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
parent_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^    PoseGraph2D* const parent_;$/;"	m	class:cartographer::mapping::PoseGraph2D::TrimmingHandle
parent_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^    PoseGraph3D* const parent_;$/;"	m	class:cartographer::mapping::PoseGraph3D::TrimmingHandle
parent_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  UnitTest* const parent_;$/;"	m	class:testing::internal::UnitTestImpl	file:
parse_arguments	cartographer_ros/jenkins/worker.py	/^def parse_arguments():$/;"	f
parser	ceres-solver/examples/slam/pose_graph_2d/plot_results.py	/^parser = OptionParser()$/;"	v
parser	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^parser = OptionParser()$/;"	v
partial_regex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  regex_t partial_regex_;  \/\/ For PartialMatch().$/;"	m	class:std::tr1::RE
passed	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool passed() const { return type_ == kSuccess; }$/;"	f	class:testing::TestPartResult
pathname_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string pathname_;$/;"	m	class:testing::internal::FilePath
pattern	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* pattern() const { return pattern_; }$/;"	f	class:std::tr1::RE
pattern_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* pattern_;$/;"	m	class:std::tr1::RE
payload	ceres-solver/internal/ceres/gmock/gmock.h	/^  T payload;$/;"	m	struct:testing::internal::ByMoveWrapper
per_thread_test_part_result_reporter_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^      per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	file:
performed_	ceres-solver/internal/ceres/gmock/gmock.h	/^    bool performed_;$/;"	m	class:testing::internal::ReturnAction::Impl
pixels	cartographer/cartographer/io/submap_painter.h	/^  Pixels pixels;$/;"	m	struct:cartographer::io::SubmapTexture
pixels_	cartographer/cartographer/io/image.h	/^  std::vector<uint32> pixels_;$/;"	m	class:cartographer::io::Image
playable_bags_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  std::vector<PlayableBag> playable_bags_;$/;"	m	class:cartographer_ros::PlayableBagMultiplexer
pmv_	ceres-solver/internal/ceres/partitioned_matrix_view_test.cc	/^  scoped_ptr<PartitionedMatrixViewBase> pmv_;$/;"	m	class:ceres::internal::PartitionedMatrixViewTest	file:
point_block_size	ceres-solver/examples/bal_problem.h	/^  int point_block_size()       const { return 3;                         }$/;"	f	class:ceres::examples::BALProblem
point_cloud_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  sensor::PointCloud point_cloud_;$/;"	m	class:cartographer::mapping::__anon75::PoseGraph2DTest	file:
point_cloud_	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^  sensor::PointCloud point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::__anon81::CeresScanMatcherTest	file:
point_cloud_	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  const sensor::PointCloud& point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
point_cloud_	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^  sensor::PointCloud point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::__anon76::RealTimeCorrelativeScanMatcherTest	file:
point_cloud_	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^  sensor::PointCloud point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::__anon94::CeresScanMatcher3DTest	file:
point_cloud_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  sensor::PointCloud point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest	file:
point_cloud_	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  const sensor::PointCloud& point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
point_cloud_	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^  sensor::PointCloud point_cloud_;$/;"	m	class:cartographer::mapping::scan_matching::__anon103::RealTimeCorrelativeScanMatcher3DTest	file:
point_data_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  std::vector<int32> point_data_;$/;"	m	class:cartographer::sensor::CompressedPointCloud
point_index	ceres-solver/examples/bal_problem.h	/^  const int* point_index()     const { return point_index_;              }$/;"	f	class:ceres::examples::BALProblem
point_index	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  const int* point_index()     const { return point_index_;  }$/;"	f	class:ceres::internal::BundleAdjustmentProblem
point_index_	ceres-solver/examples/bal_problem.h	/^  int* point_index_;$/;"	m	class:ceres::examples::BALProblem
point_index_	ceres-solver/examples/simple_bundle_adjuster.cc	/^  int* point_index_;$/;"	m	class:BALProblem	file:
point_index_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  int* point_index_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
point_pipeline_builder_	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	/^      point_pipeline_builder_;$/;"	m	class:cartographer_ros::AssetsWriter
point_time	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^    Eigen::Vector4f point_time;$/;"	m	struct:cartographer::sensor::TimedPointCloudOriginData::RangeMeasurement
pointer	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef T* pointer;$/;"	t	class:ceres::internal::FixedArray
pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^    T* pointer() { return &value_; }$/;"	f	class:std::tr1::ThreadLocal::ValueHolder
pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* pointer() { return &value_; }$/;"	f	class:std::tr1::ThreadLocal
pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* pointer() { return GetOrCreateValue(); }$/;"	f	class:std::tr1::ThreadLocal
pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T* pointer() const { return &value_; }$/;"	f	class:std::tr1::ThreadLocal
pointer	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T* pointer() const { return GetOrCreateValue(); }$/;"	f	class:std::tr1::ThreadLocal
pointer_	ceres-solver/include/ceres/rotation.h	/^  T* pointer_;$/;"	m	struct:ceres::MatrixAdapter
pointer_	ceres-solver/internal/ceres/gmock/gmock.h	/^  T* pointer_;$/;"	m	class:testing::internal::ReferenceWrapper
points	cartographer/cartographer/io/points_batch.h	/^  std::vector<Eigen::Vector3f> points;$/;"	m	struct:cartographer::io::PointsBatch
points	cartographer/cartographer/sensor/point_cloud.h	/^  TimedPointCloud points;$/;"	m	struct:cartographer::sensor::PointCloudWithIntensities
polynomial_minimization_time_in_seconds	ceres-solver/internal/ceres/line_search.h	/^    double polynomial_minimization_time_in_seconds;$/;"	m	struct:ceres::internal::LineSearch::Summary
port_constants	ceres-solver/include/ceres/internal/port.h	/^namespace port_constants {$/;"	n	namespace:ceres
port_num_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    const string port_num_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
pose	cartographer/cartographer/io/submap_painter.h	/^  ::cartographer::transform::Rigid3d pose;$/;"	m	struct:cartographer::io::SubmapSlice
pose	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^    transform::Rigid3d pose;$/;"	m	struct:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest::TrajectoryNode	file:
pose	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  transform::Rigid3f pose;$/;"	m	struct:cartographer::mapping::scan_matching::DiscreteScan3D	file:
pose	cartographer/cartographer/mapping/pose_extrapolator.h	/^    transform::Rigid3d pose;$/;"	m	struct:cartographer::mapping::PoseExtrapolator::TimedPose
pose	cartographer/cartographer/mapping/pose_graph_interface.h	/^    Pose pose;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint
pose	cartographer/cartographer/mapping/pose_graph_interface.h	/^    transform::Rigid3d pose;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::SubmapData
pose	cartographer/cartographer/mapping/pose_graph_interface.h	/^    transform::Rigid3d pose;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::SubmapPose
pose	cartographer/cartographer/sensor/fixed_frame_pose_data.h	/^  common::optional<transform::Rigid3d> pose;$/;"	m	struct:cartographer::sensor::FixedFramePoseData
pose	cartographer/cartographer/sensor/odometry_data.h	/^  transform::Rigid3d pose;$/;"	m	struct:cartographer::sensor::OdometryData
pose_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_3d.h	/^  const PoseGraph::Constraint::Pose pose_;$/;"	m	class:cartographer::mapping::optimization::SpaCostFunction3D
pose_axes_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  ::rviz::Axes pose_axes_;$/;"	m	class:cartographer_rviz::DrawableSubmap
pose_estimate	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    transform::Rigid3d pose_estimate;$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::Result
pose_graph	cartographer/cartographer/cloud/client/map_builder_stub.cc	/^mapping::PoseGraphInterface* MapBuilderStub::pose_graph() {$/;"	f	class:cartographer::cloud::MapBuilderStub
pose_graph	cartographer/cartographer/io/proto_stream_deserializer.h	/^  const mapping::proto::PoseGraph& pose_graph() const {$/;"	f	class:cartographer::io::ProtoStreamDeserializer
pose_graph	cartographer/cartographer/io/proto_stream_deserializer.h	/^  mapping::proto::PoseGraph& pose_graph() {$/;"	f	class:cartographer::io::ProtoStreamDeserializer
pose_graph_	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^  PoseGraph pose_graph_;$/;"	m	class:cartographer::io::__anon27::InMemoryProtoStreamTest	file:
pose_graph_	cartographer/cartographer/io/proto_stream_deserializer.h	/^  mapping::proto::SerializedData pose_graph_;$/;"	m	class:cartographer::io::ProtoStreamDeserializer
pose_graph_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  std::unique_ptr<PoseGraph2D> pose_graph_;$/;"	m	class:cartographer::mapping::__anon75::PoseGraph2DTest	file:
pose_graph_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  std::unique_ptr<PoseGraph3DForTesting> pose_graph_;$/;"	m	class:cartographer::mapping::__anon105::PoseGraph3DTest	file:
pose_graph_	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^  PoseGraph* const pose_graph_;$/;"	m	class:cartographer::mapping::__anon84::GlobalTrajectoryBuilder	file:
pose_graph_	cartographer/cartographer/mapping/map_builder.h	/^  std::unique_ptr<PoseGraph> pose_graph_;$/;"	m	class:cartographer::mapping::MapBuilder
pose_graph_	cartographer_ros/cartographer_ros/cartographer_ros/assets_writer.h	/^  ::cartographer::mapping::proto::PoseGraph pose_graph_;$/;"	m	class:cartographer_ros::AssetsWriter
pose_graph_options_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  proto::PoseGraphOptions pose_graph_options_;$/;"	m	class:cartographer::mapping::__anon105::PoseGraph3DTest	file:
pose_graph_stub_	cartographer/cartographer/cloud/client/map_builder_stub.h	/^  std::unique_ptr<mapping::PoseGraphInterface> pose_graph_stub_;$/;"	m	class:cartographer::cloud::MapBuilderStub
pose_index	ceres-solver/examples/robot_pose_mle.cc	/^  const int pose_index;$/;"	m	struct:RangeConstraint	file:
pose_publish_period_sec	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^  double pose_publish_period_sec;$/;"	m	struct:cartographer_ros::NodeOptions
pose_queue_duration_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  const common::Duration pose_queue_duration_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
poses_optimized	ceres-solver/examples/slam/pose_graph_2d/plot_results.py	/^  poses_optimized = numpy.genfromtxt(options.optimized_poses, usecols = (1, 2))$/;"	v
poses_optimized	ceres-solver/examples/slam/pose_graph_2d/plot_results.py	/^poses_optimized = None$/;"	v
poses_optimized	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^  poses_optimized = numpy.genfromtxt(options.optimized_poses,$/;"	v
poses_optimized	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^poses_optimized = None$/;"	v
poses_original	ceres-solver/examples/slam/pose_graph_2d/plot_results.py	/^  poses_original = numpy.genfromtxt(options.initial_poses, usecols = (1, 2))$/;"	v
poses_original	ceres-solver/examples/slam/pose_graph_2d/plot_results.py	/^poses_original = None$/;"	v
poses_original	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^  poses_original = numpy.genfromtxt(options.initial_poses,$/;"	v
poses_original	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^poses_original = None$/;"	v
position	ceres-solver/internal/ceres/block_structure.h	/^  int position;  \/\/ Position along the row\/column.$/;"	m	struct:ceres::internal::Block
position	ceres-solver/internal/ceres/block_structure.h	/^  int position;$/;"	m	struct:ceres::internal::Cell
position	ceres-solver/internal/ceres/line_search.h	/^  const Vector& position() const { return position_; }$/;"	f	class:ceres::internal::LineSearchFunction
position_	ceres-solver/internal/ceres/line_search.h	/^  Vector position_;$/;"	m	class:ceres::internal::LineSearchFunction
posix	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^namespace posix {$/;"	n	namespace:testing::internal	file:
posix	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace posix {$/;"	n	namespace:std::tr1
post_flag_parse_init_performed_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool post_flag_parse_init_performed_;$/;"	m	class:testing::internal::UnitTestImpl	file:
postprocessor_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double postprocessor_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
pow	ceres-solver/include/ceres/jet.h	/^Jet<T, N> pow(const Jet<T, N>& f, const Jet<T, N>& g) {$/;"	f	namespace:ceres
pow	ceres-solver/include/ceres/jet.h	/^Jet<T, N> pow(const Jet<T, N>& f, double g) {$/;"	f	namespace:ceres
pow	ceres-solver/include/ceres/jet.h	/^Jet<T, N> pow(double f, const Jet<T, N>& g) {$/;"	f	namespace:ceres
pow	ceres-solver/include/ceres/jet.h	/^inline double pow  (double x, double y) { return std::pow(x, y);   }$/;"	f	namespace:ceres
precomputation_grid_stack_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  std::unique_ptr<PrecomputationGridStack2D> precomputation_grid_stack_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
precomputation_grid_stack_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  std::unique_ptr<PrecomputationGridStack3D> precomputation_grid_stack_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
precomputation_grids_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  std::vector<PrecomputationGrid2D> precomputation_grids_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGridStack2D
precomputation_grids_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  std::vector<PrecomputationGrid3D> precomputation_grids_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGridStack3D
preconditioner	ceres-solver/internal/ceres/linear_solver.h	/^    LinearOperator* preconditioner;$/;"	m	struct:ceres::internal::LinearSolver::PerSolveOptions
preconditioner_	ceres-solver/internal/ceres/cgnr_solver.h	/^  scoped_ptr<Preconditioner> preconditioner_;$/;"	m	class:ceres::internal::CgnrSolver
preconditioner_	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^  scoped_ptr<Preconditioner> preconditioner_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolver
preconditioner_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  scoped_ptr<BlockRandomAccessDiagonalMatrix> preconditioner_;$/;"	m	class:ceres::internal::SparseSchurComplementSolver
preconditioner_type	ceres-solver/include/ceres/solver.h	/^    PreconditionerType preconditioner_type;$/;"	m	struct:ceres::Solver::Options
preconditioner_type	ceres-solver/internal/ceres/linear_solver.h	/^    PreconditionerType preconditioner_type;$/;"	m	struct:ceres::internal::LinearSolver::Options
preconditioner_type	ceres-solver/internal/ceres/test_util.h	/^  PreconditionerType preconditioner_type;$/;"	m	struct:ceres::internal::SolverConfig
preconditioner_type_given	ceres-solver/include/ceres/solver.h	/^    PreconditionerType preconditioner_type_given;$/;"	m	struct:ceres::Solver::Summary
preconditioner_type_used	ceres-solver/include/ceres/solver.h	/^    PreconditionerType preconditioner_type_used;$/;"	m	struct:ceres::Solver::Summary
predicate_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Predicate predicate_;$/;"	m	class:testing::internal::TrulyMatcher
predictor	ceres-solver/examples/nist.cc	/^  Matrix predictor()        const { return predictor_;         }$/;"	f	class:ceres::examples::NISTProblem
predictor_	ceres-solver/examples/nist.cc	/^  Matrix predictor_;$/;"	m	class:ceres::examples::NISTProblem	file:
predictor_size	ceres-solver/examples/nist.cc	/^  int predictor_size()      const { return predictor_.cols();  }$/;"	f	class:ceres::examples::NISTProblem
prefix_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const StringType prefix_;$/;"	m	class:testing::internal::StartsWithMatcher
premature_exit_filepath_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* const premature_exit_filepath_;$/;"	m	class:testing::internal::ScopedPrematureExitFile	file:
preprocessor_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double preprocessor_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
prev_node_gravity_alignment_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  const Eigen::Quaterniond prev_node_gravity_alignment_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction2D
print_time_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool print_time_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
prng_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  std::mt19937 prng_ = std::mt19937(42);$/;"	m	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest	file:
prng_	cartographer/cartographer/transform/rigid_transform_test.cc	/^  std::mt19937 prng_ = std::mt19937(42);$/;"	m	class:cartographer::transform::__anon112::RigidTransformTest	file:
probability_grid_	cartographer/cartographer/io/probability_grid_points_processor.h	/^  mapping::ProbabilityGrid probability_grid_;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
probability_grid_	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^  ProbabilityGrid probability_grid_;$/;"	m	class:cartographer::mapping::__anon61::RangeDataInserterTest2D	file:
probability_grid_	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^  ProbabilityGrid probability_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon81::CeresScanMatcherTest	file:
probability_grid_	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^  ProbabilityGrid probability_grid_;$/;"	m	class:cartographer::mapping::scan_matching::__anon76::RealTimeCorrelativeScanMatcherTest	file:
probability_grid_	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^  ::cartographer::mapping::ProbabilityGrid probability_grid_;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
probability_sum	cartographer/cartographer/mapping/3d/submap_3d.cc	/^  float probability_sum = 0.f;$/;"	m	struct:cartographer::mapping::__anon106::PixelData	file:
problem	ceres-solver/internal/ceres/evaluator_test.cc	/^  ProblemImpl problem;$/;"	m	struct:ceres::internal::EvaluatorTest	file:
problem	ceres-solver/internal/ceres/preprocessor.h	/^  ProblemImpl* problem;$/;"	m	struct:ceres::internal::PreprocessedProblem
problem	ceres-solver/internal/ceres/problem_test.cc	/^  scoped_ptr<ProblemImpl> problem;$/;"	m	struct:ceres::internal::DynamicProblem	file:
problem_	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  Problem problem_;$/;"	m	class:ceres::internal::BundleAdjustmentProblem	file:
problem_	ceres-solver/internal/ceres/covariance_impl.h	/^  ProblemImpl* problem_;$/;"	m	class:ceres::internal::CovarianceImpl
problem_	ceres-solver/internal/ceres/covariance_test.cc	/^  Problem problem_;$/;"	m	class:ceres::internal::CovarianceTest	file:
problem_	ceres-solver/internal/ceres/covariance_test.cc	/^  Problem problem_;$/;"	m	class:ceres::internal::LargeScaleCovarianceTest	file:
problem_	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  const GradientProblem& problem_;$/;"	m	class:ceres::internal::GradientProblemEvaluator
problem_	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  ProblemImpl problem_;$/;"	m	class:ceres::internal::SchurOrderingTest	file:
problem_	ceres-solver/internal/ceres/problem_test.cc	/^  ProblemImpl problem_;$/;"	m	class:ceres::internal::ProblemEvaluateTest	file:
problem_	ceres-solver/internal/ceres/reorder_program_test.cc	/^  ProblemImpl problem_;$/;"	m	class:ceres::internal::ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest	file:
problem_	ceres-solver/internal/ceres/system_test.cc	/^  Problem problem_;$/;"	m	class:ceres::internal::PowellsFunction	file:
problem_	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  ProblemImpl problem_;$/;"	m	class:ceres::internal::LinearSolverAndEvaluatorCreationTest	file:
problem_impl_	ceres-solver/include/ceres/problem.h	/^  internal::scoped_ptr<internal::ProblemImpl> problem_impl_;$/;"	m	class:ceres::Problem
process	cartographer_ros/jenkins/worker.py	/^  def process(line):$/;"	f	function:run_cmd
processMessage	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::processMessage($/;"	f	class:cartographer_rviz::SubmapsDisplay
producer_	ceres-solver/internal/ceres/gmock/gmock.h	/^  static ValueProducer* producer_;$/;"	m	class:testing::DefaultValue
producer_	ceres-solver/internal/ceres/gmock/gmock.h	/^typename DefaultValue<T>::ValueProducer* DefaultValue<T>::producer_ = NULL;$/;"	m	class:testing::DefaultValue
program	ceres-solver/internal/ceres/problem_impl.h	/^  const Program& program() const { return *program_; }$/;"	f	class:ceres::internal::ProblemImpl
program_	ceres-solver/internal/ceres/block_jacobian_writer.h	/^  Program* program_;$/;"	m	class:ceres::internal::BlockJacobianWriter
program_	ceres-solver/internal/ceres/callbacks.h	/^  Program* program_;$/;"	m	class:ceres::internal::StateUpdatingCallback
program_	ceres-solver/internal/ceres/compressed_row_jacobian_writer.h	/^  Program* program_;$/;"	m	class:ceres::internal::CompressedRowJacobianWriter
program_	ceres-solver/internal/ceres/dense_jacobian_writer.h	/^  Program* program_;$/;"	m	class:ceres::internal::DenseJacobianWriter
program_	ceres-solver/internal/ceres/dynamic_compressed_row_jacobian_writer.h	/^  Program* program_;$/;"	m	class:ceres::internal::DynamicCompressedRowJacobianWriter
program_	ceres-solver/internal/ceres/problem_impl.h	/^  internal::scoped_ptr<internal::Program> program_;$/;"	m	class:ceres::internal::ProblemImpl
program_	ceres-solver/internal/ceres/program_evaluator.h	/^  Program* program_;$/;"	m	class:ceres::internal::ProgramEvaluator
project	cartographer/docs/source/conf.py	/^project = u'Cartographer'$/;"	v
project	cartographer_ros/docs/source/conf.py	/^project = u'Cartographer ROS'$/;"	v
project	ceres-solver/docs/source/conf.py	/^project = u'Ceres Solver'$/;"	v
projected_gradient_step_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector projected_gradient_step_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
prometheus	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^namespace prometheus {$/;"	n	namespace:cartographer::cloud::metrics	file:
prometheus	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^namespace prometheus {$/;"	n	namespace:cartographer::cloud::metrics
prometheus	cartographer/cartographer/cloud/metrics/prometheus/metrics_test.cc	/^namespace prometheus {$/;"	n	namespace:cartographer::cloud::metrics	file:
prometheus_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  ::prometheus::Counter* prometheus_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::Counter	file:
prometheus_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  ::prometheus::Family<::prometheus::Counter>* prometheus_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::CounterFamily	file:
prometheus_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  ::prometheus::Family<::prometheus::Gauge>* prometheus_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::GaugeFamily	file:
prometheus_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  ::prometheus::Family<::prometheus::Histogram>* prometheus_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::HistogramFamily	file:
prometheus_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  ::prometheus::Gauge* prometheus_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::Gauge	file:
prometheus_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  ::prometheus::Histogram* prometheus_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::Histogram	file:
property_	ceres-solver/internal/ceres/gmock/gmock.h	/^  PropertyType (Class::*property_)() const;$/;"	m	class:testing::internal::PropertyMatcher
proto2	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace proto2 { class Message; }$/;"	n
proto_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const internal::linked_ptr<Proto> proto_;$/;"	m	class:testing::internal::SetArgumentPointeeAction
provide_odom_frame	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  bool provide_odom_frame;$/;"	m	struct:cartographer_ros::TrajectoryOptions
ptr_	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* ptr_;$/;"	m	class:ceres::internal::scoped_ptr
ptr_	ceres-solver/internal/ceres/gmock/gmock.h	/^  T1* const ptr_;$/;"	m	class:testing::internal::AssignAction
ptr_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* ptr_;$/;"	m	struct:std::tr1::tuple_element
publish_frame_projected_to_2d	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  bool publish_frame_projected_to_2d;$/;"	m	struct:cartographer_ros::TrajectoryOptions
publish_stats_to_big_query	cartographer_ros/jenkins/worker.py	/^def publish_stats_to_big_query(stats_dict, now, head_sha1):$/;"	f
published_frame	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  std::string published_frame;$/;"	m	struct:cartographer_ros::TrajectoryOptions
published_to_tracking	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^    std::unique_ptr<cartographer::transform::Rigid3d> published_to_tracking;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState
pygments_style	cartographer/docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	v
pygments_style	cartographer_ros/docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	v
pygments_style	ceres-solver/docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	v
q	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  Eigen::Quaterniond q;$/;"	m	struct:ceres::examples::Pose3d
q_tolerance	ceres-solver/internal/ceres/linear_solver.h	/^    double q_tolerance;$/;"	m	struct:ceres::internal::LinearSolver::PerSolveOptions
queue	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^    common::BlockingQueue<std::unique_ptr<Data>> queue;$/;"	m	struct:cartographer::sensor::OrderedMultiQueue::Queue
queue_	cartographer/cartographer/sensor/internal/collator.h	/^  OrderedMultiQueue queue_;$/;"	m	class:cartographer::sensor::Collator
queue_	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^  OrderedMultiQueue queue_;$/;"	m	class:cartographer::sensor::__anon123::OrderedMultiQueueTest	file:
queue_keys_	cartographer/cartographer/sensor/internal/collator.h	/^  std::unordered_map<int, std::vector<QueueKey>> queue_keys_;$/;"	m	class:cartographer::sensor::Collator
queues_	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  std::map<QueueKey, Queue> queues_;$/;"	m	class:cartographer::sensor::OrderedMultiQueue
r_tolerance	ceres-solver/internal/ceres/linear_solver.h	/^    double r_tolerance;$/;"	m	struct:ceres::internal::LinearSolver::PerSolveOptions
radius_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  double radius_;$/;"	m	class:ceres::internal::DoglegStrategy
radius_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  double radius_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
random	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::Random* random() { return &random_; }$/;"	f	class:testing::internal::UnitTestImpl
random_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::Random random_;$/;"	m	class:testing::internal::UnitTestImpl	file:
random_seed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int random_seed() const { return random_seed_; }$/;"	f	class:testing::internal::UnitTestImpl
random_seed	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::random_seed() const { return impl_->random_seed(); }$/;"	f	class:testing::UnitTest
random_seed_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int random_seed_;$/;"	m	class:testing::internal::UnitTestImpl	file:
random_seed_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::Int32 random_seed_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
random_seed_	ceres-solver/internal/ceres/numeric_diff_test_utils.h	/^  unsigned int random_seed_;$/;"	m	class:ceres::internal::RandomizedFunctor
range_data	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    std::shared_ptr<const sensor::RangeData> range_data;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamResult
range_data_collator_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^  RangeDataCollator range_data_collator_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
range_data_collator_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^      range_data_collator_(expected_range_sensor_ids) {}$/;"	f	namespace:cartographer::mapping
range_data_collator_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^  RangeDataCollator range_data_collator_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
range_data_in_local	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^    sensor::RangeData range_data_in_local;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder2D::MatchingResult
range_data_in_local	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^    sensor::RangeData range_data_in_local;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder3D::MatchingResult
range_data_in_local	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^      ::cartographer::sensor::RangeData range_data_in_local;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState::LocalSlamData
range_data_inserter_	cartographer/cartographer/io/hybrid_grid_points_processor.h	/^  mapping::RangeDataInserter3D range_data_inserter_;$/;"	m	class:cartographer::io::HybridGridPointsProcessor
range_data_inserter_	cartographer/cartographer/io/probability_grid_points_processor.h	/^  mapping::ProbabilityGridRangeDataInserter2D range_data_inserter_;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
range_data_inserter_	cartographer/cartographer/mapping/2d/range_data_inserter_2d_test.cc	/^  std::unique_ptr<ProbabilityGridRangeDataInserter2D> range_data_inserter_;$/;"	m	class:cartographer::mapping::__anon61::RangeDataInserterTest2D	file:
range_data_inserter_	cartographer/cartographer/mapping/2d/submap_2d.h	/^  std::unique_ptr<RangeDataInserterInterface> range_data_inserter_;$/;"	m	class:cartographer::mapping::ActiveSubmaps2D
range_data_inserter_	cartographer/cartographer/mapping/3d/range_data_inserter_3d_test.cc	/^  std::unique_ptr<RangeDataInserter3D> range_data_inserter_;$/;"	m	class:cartographer::mapping::__anon109::RangeDataInserter3DTest	file:
range_data_inserter_	cartographer/cartographer/mapping/3d/submap_3d.h	/^  RangeDataInserter3D range_data_inserter_;$/;"	m	class:cartographer::mapping::ActiveSubmaps3D
range_data_inserter_	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^  std::unique_ptr<ProbabilityGridRangeDataInserter2D> range_data_inserter_;$/;"	m	class:cartographer::mapping::scan_matching::__anon76::RealTimeCorrelativeScanMatcherTest	file:
range_data_inserter_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^  RangeDataInserter3D range_data_inserter_;$/;"	m	class:cartographer::mapping::scan_matching::__anon96::FastCorrelativeScanMatcher3DTest	file:
range_data_inserter_	cartographer_ros/cartographer_ros/cartographer_ros/ros_map_writing_points_processor.h	/^      range_data_inserter_;$/;"	m	class:cartographer_ros::RosMapWritingPointsProcessor
range_reading	ceres-solver/examples/robot_pose_mle.cc	/^  const double range_reading;$/;"	m	struct:RangeConstraint	file:
range_stddev	ceres-solver/examples/robot_pose_mle.cc	/^  const double range_stddev;$/;"	m	struct:RangeConstraint	file:
rangefinder_sampler	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    ::cartographer::common::FixedRatioSampler rangefinder_sampler;$/;"	m	struct:cartographer_ros::Node::TrajectorySensorSamplers
rangefinder_sampling_ratio	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  double rangefinder_sampling_ratio;$/;"	m	struct:cartographer_ros::TrajectoryOptions
ranges	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  sensor::TimedPointCloud ranges;$/;"	m	struct:cartographer::sensor::TimedPointCloudData
ranges	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  std::vector<RangeMeasurement> ranges;$/;"	m	struct:cartographer::sensor::TimedPointCloudOriginData
rate_timers_	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^  std::map<std::string, common::RateTimer<>> rate_timers_;$/;"	m	class:cartographer::mapping::CollatedTrajectoryBuilder
ratio_	cartographer/cartographer/common/fixed_ratio_sampler.h	/^  const double ratio_;$/;"	m	class:cartographer::common::FixedRatioSampler
rays	cartographer/cartographer/io/outlier_removing_points_processor.h	/^    int rays = 0;$/;"	m	struct:cartographer::io::OutlierRemovingPointsProcessor::VoxelData
read_fd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int read_fd() const { return read_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
read_fd_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int read_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
reader_	cartographer/cartographer/cloud/internal/handlers/load_state_handler.h	/^  io::InMemoryProtoStreamReader reader_;$/;"	m	class:cartographer::cloud::handlers::LoadStateHandler
reader_	cartographer/cartographer/io/proto_stream_deserializer.h	/^  ProtoStreamReaderInterface* reader_;$/;"	m	class:cartographer::io::ProtoStreamDeserializer
reader_	cartographer/cartographer/io/proto_stream_deserializer_test.cc	/^  std::unique_ptr<InMemoryProtoStreamReader> reader_;$/;"	m	class:cartographer::io::__anon22::ProtoStreamDeserializerTest	file:
reader_	cartographer/cartographer/io/serialization_format_migration_test.cc	/^  InMemoryProtoStreamReader reader_;$/;"	m	class:cartographer::io::__anon18::MigrationTest	file:
real_time_correlative_scan_matcher_	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^      real_time_correlative_scan_matcher_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder2D
real_time_correlative_scan_matcher_	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^      real_time_correlative_scan_matcher_;$/;"	m	class:cartographer::mapping::scan_matching::__anon76::RealTimeCorrelativeScanMatcherTest	file:
real_time_correlative_scan_matcher_	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^      real_time_correlative_scan_matcher_;$/;"	m	class:cartographer::mapping::LocalTrajectoryBuilder3D
real_time_correlative_scan_matcher_	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^      real_time_correlative_scan_matcher_;$/;"	m	class:cartographer::mapping::scan_matching::__anon103::RealTimeCorrelativeScanMatcher3DTest	file:
receive_local_slam_results_client_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^      receive_local_slam_results_client_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
receive_local_slam_results_thread_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^  std::unique_ptr<std::thread> receive_local_slam_results_thread_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
reduced_linear_system_solution_	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^  Vector reduced_linear_system_solution_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolver
reduced_parameters	ceres-solver/internal/ceres/preprocessor.h	/^  Vector reduced_parameters;$/;"	m	struct:ceres::internal::PreprocessedProblem
reduced_program	ceres-solver/internal/ceres/preprocessor.h	/^  scoped_ptr<Program> reduced_program;$/;"	m	struct:ceres::internal::PreprocessedProblem
ref_	ceres-solver/internal/ceres/gmock/gmock.h	/^    T& ref_;$/;"	m	class:testing::internal::ReturnRefAction::Impl
ref_	ceres-solver/internal/ceres/gmock/gmock.h	/^  T& ref_;$/;"	m	class:testing::internal::ReturnRefAction
reference	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef T& reference;$/;"	t	class:ceres::internal::FixedArray
reference	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef T& reference;$/;"	t	class:testing::internal::ReferenceOrValueWrapper
reference	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef const T& reference;$/;"	t	class:testing::internal::ParamIterator
reference_cost_	ceres-solver/internal/ceres/trust_region_step_evaluator.h	/^  double reference_cost_;$/;"	m	class:ceres::internal::TrustRegionStepEvaluator
reference_count_	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  const ReferenceCount reference_count_;$/;"	m	class:cartographer::common::LuaParameterDictionary
reference_counts_	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  std::map<std::string, int> reference_counts_;$/;"	m	class:cartographer::common::LuaParameterDictionary
regex	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const RE* regex() const { return regex_; }$/;"	f	class:testing::internal::DeathTestImpl
regex_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const internal::linked_ptr<const RE> regex_;$/;"	m	class:testing::internal::MatchesRegexMatcher
regex_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const RE* const regex_;$/;"	m	class:testing::internal::DeathTestImpl	file:
registered_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool registered_;$/;"	m	class:testing::internal::TypedTestCasePState
registered_tests_	ceres-solver/internal/ceres/gtest/gtest.h	/^  RegisteredTestsMap registered_tests_;$/;"	m	class:testing::internal::TypedTestCasePState
registry_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.h	/^  std::shared_ptr<::prometheus::Registry> registry_;$/;"	m	class:cartographer::cloud::metrics::prometheus::FamilyFactory
relative_decrease	ceres-solver/include/ceres/iteration_callback.h	/^  double relative_decrease;$/;"	m	struct:ceres::IterationSummary
relative_pose	cartographer/cartographer/mapping/pose_graph.h	/^    transform::Rigid3d relative_pose;$/;"	m	struct:cartographer::mapping::PoseGraph::InitialTrajectoryPose
relative_precision_	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  double relative_precision_;$/;"	m	class:ceres::internal::__anon179::GradientCheckingCostFunction	file:
relative_step_size	ceres-solver/include/ceres/numeric_diff_options.h	/^  double relative_step_size;$/;"	m	struct:ceres::NumericDiffOptions
release	cartographer/docs/source/conf.py	/^release = '1.0.0'$/;"	v
release	cartographer_ros/docs/source/conf.py	/^release = '1.0.0'$/;"	v
release	ceres-solver/docs/source/conf.py	/^release = '1.13.0'$/;"	v
release	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* release() {$/;"	f	class:ceres::internal::scoped_array
release	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  C* release() {$/;"	f	class:ceres::internal::scoped_ptr
release	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* release() {$/;"	f	struct:std::tr1::tuple_element
remaining_points_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  size_t remaining_points_;$/;"	m	class:cartographer::sensor::CompressedPointCloud::ConstIterator
remaining_points_in_current_block_	cartographer/cartographer/sensor/compressed_point_cloud.h	/^  int32 remaining_points_in_current_block_;$/;"	m	class:cartographer::sensor::CompressedPointCloud::ConstIterator
remove_reference	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct remove_reference { typedef T type; };  \/\/ NOLINT$/;"	s	namespace:testing::internal
remove_reference	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct remove_reference<T&> { typedef T type; }; \/\/ NOLINT$/;"	s	namespace:testing::internal
removed_parameter_blocks	ceres-solver/internal/ceres/preprocessor.h	/^  std::vector<double*> removed_parameter_blocks;$/;"	m	struct:ceres::internal::PreprocessedProblem
removes_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
repeat_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::Int32 repeat_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
repeated_action	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Action<F>& repeated_action() const { return repeated_action_; }$/;"	f	class:testing::internal::TypedExpectation
repeated_action_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Action<F> repeated_action_;$/;"	m	class:testing::internal::TypedExpectation
repeated_action_specified_	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool repeated_action_specified_;  \/\/ True if a WillRepeatedly() was specified.$/;"	m	class:testing::internal::ExpectationBase
repeater	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventListener* TestEventListeners::repeater() { return repeater_; }$/;"	f	class:testing::TestEventListeners
repeater_	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::TestEventRepeater* repeater_;$/;"	m	class:testing::TestEventListeners
replacements	ceres-solver/scripts/make_docs.py	/^replacements = [$/;"	v
reportable_disabled_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::reportable_disabled_test_count() const {$/;"	f	class:testing::TestCase
reportable_disabled_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::reportable_disabled_test_count() const {$/;"	f	class:testing::UnitTest
reportable_disabled_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::reportable_disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reportable_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::reportable_test_count() const {$/;"	f	class:testing::TestCase
reportable_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::reportable_test_count() const {$/;"	f	class:testing::UnitTest
reportable_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::reportable_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
reset	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::reset() {$/;"	f	class:cartographer_rviz::SubmapsDisplay
reset	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  void reset(C* p = NULL) {$/;"	f	class:ceres::internal::scoped_array
reset	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  void reset(C* p = NULL) {$/;"	f	class:ceres::internal::scoped_ptr
reset	ceres-solver/internal/ceres/gtest/gtest.h	/^  void reset(T* p = NULL) {$/;"	f	struct:std::tr1::tuple_element
reset	ceres-solver/internal/ceres/gtest/gtest.h	/^  void reset(T* ptr = NULL) {$/;"	f	class:testing::internal::linked_ptr
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = -13.0 + x1 + ((5.0 - x2) * x2 - 2.0) * x2;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = 1.5 - x1 * (1.0 - x2);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = 10.0 * (x2 - x1 * x1);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = 10.0 * (x3 - 10.0 * theta);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = 10000.0 * x1 * x2 - 1.0;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = exp(-t1 * x1) - exp(-t1 * x2) - x3 * (exp(-t1) - exp(-10.0 * t1));$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = x1  - 1000000.0;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[0] = x1 + 10.0 * x2;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = -29.0 + x1 + ((x2 + 1.0) * x2 - 14.0) * x2;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = 1.0 - x1;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = 10.0 * (sqrt(x1 * x1 + x2 * x2) - 1.0);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = 2.25 - x1 * (1.0 - x2 * x2);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = exp(-t2 * x1) - exp(-t2 * x2) - x3 * (exp(-t2) - exp(-10.0 * t2));$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = exp(-x1) + exp(-x2) - 1.0001;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = sqrt(5.0) * (x3 - x4);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[1] = x2 - 0.000002;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[2] = (x2 - 2.0 * x3) * (x2 - 2.0 * x3);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[2] = 2.625 - x1 * (1.0 - x2 * x2 * x2);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[2] = exp(-t3 * x1) - exp(-t3 * x2) - x3 * (exp(-t3) - exp(-10.0 * t3));$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[2] = sqrt(90.0) * (x4 - x3 * x3);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[2] = x1 * x2 - 2.0;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[2] = x3;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[3] = 1.0 - x3;$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[3] = sqrt(10.0) * (x1 - x4) * (x1 - x4);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[4] = sqrt(10.0) * (x2 + x4 - 2.0);$/;"	m	namespace:ceres::examples	file:
residual	ceres-solver/examples/more_garbow_hillstrom.cc	/^  residual[5] = 1.0 \/ sqrt(10.0) * (x2 - x4);$/;"	m	namespace:ceres::examples	file:
residual_	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^  Vector residual_;$/;"	m	class:ceres::internal::__anon178::Fixture	file:
residual_J_params_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  std::vector<Matrix> residual_J_params_;$/;"	m	class:ceres::internal::LinearCostFunction	file:
residual_block_evaluate_scratch	ceres-solver/internal/ceres/program_evaluator.h	/^    scoped_array<double> residual_block_evaluate_scratch;$/;"	m	struct:ceres::internal::ProgramEvaluator::EvaluateScratch
residual_block_residuals	ceres-solver/internal/ceres/program_evaluator.h	/^    scoped_array<double> residual_block_residuals;$/;"	m	struct:ceres::internal::ProgramEvaluator::EvaluateScratch
residual_block_set	ceres-solver/internal/ceres/problem_impl.h	/^  const ResidualBlockSet& residual_block_set() const {$/;"	f	class:ceres::internal::ProblemImpl
residual_block_set_	ceres-solver/internal/ceres/problem_impl.h	/^  ResidualBlockSet residual_block_set_;$/;"	m	class:ceres::internal::ProblemImpl
residual_blocks	ceres-solver/include/ceres/problem.h	/^    std::vector<ResidualBlockId> residual_blocks;$/;"	m	struct:ceres::Problem::EvaluateOptions
residual_blocks	ceres-solver/internal/ceres/program.cc	/^const vector<ResidualBlock*>& Program::residual_blocks() const {$/;"	f	class:ceres::internal::Program
residual_blocks_	ceres-solver/internal/ceres/coordinate_descent_minimizer.h	/^  std::vector<std::vector<ResidualBlock*> > residual_blocks_;$/;"	m	class:ceres::internal::CoordinateDescentMinimizer
residual_blocks_	ceres-solver/internal/ceres/parameter_block.h	/^  scoped_ptr<ResidualBlockSet> residual_blocks_;$/;"	m	class:ceres::internal::ParameterBlock
residual_blocks_	ceres-solver/internal/ceres/problem_test.cc	/^  vector<ResidualBlockId> residual_blocks_;$/;"	m	class:ceres::internal::ProblemEvaluateTest	file:
residual_blocks_	ceres-solver/internal/ceres/program.h	/^  std::vector<ResidualBlock*> residual_blocks_;$/;"	m	class:ceres::internal::Program
residual_evaluation_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double residual_evaluation_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
residual_layout_	ceres-solver/internal/ceres/program_evaluator.h	/^  std::vector<int> residual_layout_;$/;"	m	class:ceres::internal::ProgramEvaluator
residual_norm	ceres-solver/internal/ceres/linear_solver.h	/^    double residual_norm;$/;"	m	struct:ceres::internal::LinearSolver::Summary
residual_norm	ceres-solver/internal/ceres/trust_region_strategy.h	/^    double residual_norm;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Summary
residual_reset_period	ceres-solver/internal/ceres/linear_solver.h	/^    int residual_reset_period;$/;"	m	struct:ceres::internal::LinearSolver::Options
residual_scaling_	ceres-solver/internal/ceres/corrector.h	/^  double residual_scaling_;$/;"	m	class:ceres::internal::Corrector
residuals	ceres-solver/include/ceres/gradient_checker.h	/^    Vector residuals;$/;"	m	struct:ceres::GradientChecker::ProbeResults
residuals	ceres-solver/internal/ceres/evaluator_test_utils.h	/^  const double residuals[50];$/;"	m	struct:ceres::internal::ExpectedEvaluation
residuals_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d_test.cc	/^  ResidualType residuals_;$/;"	m	class:cartographer::mapping::optimization::__anon91::SpaCostFunction2DTest	file:
residuals_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector residuals_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
residuals_offset_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  Vector residuals_offset_;$/;"	m	class:ceres::internal::LinearCostFunction	file:
resolution	cartographer/cartographer/io/submap_painter.h	/^  double resolution;$/;"	m	struct:cartographer::io::SubmapSlice
resolution	cartographer/cartographer/io/submap_painter.h	/^  double resolution;$/;"	m	struct:cartographer::io::SubmapTexture
resolution	cartographer/cartographer/mapping/2d/map_limits.h	/^  double resolution() const { return resolution_; }$/;"	f	class:cartographer::mapping::MapLimits
resolution	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  double resolution;$/;"	m	struct:cartographer::mapping::scan_matching::SearchParameters
resolution_	cartographer/cartographer/mapping/2d/map_limits.h	/^  double resolution_;$/;"	m	class:cartographer::mapping::MapLimits
resolution_	cartographer/cartographer/mapping/internal/2d/overlapping_submaps_trimmer_2d.cc	/^  double resolution_;$/;"	m	class:cartographer::mapping::__anon82::SubmapCoverageGrid2D	file:
resolution_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  const float resolution_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
resolution_	cartographer/cartographer/sensor/internal/voxel_filter.h	/^  float resolution_;$/;"	m	class:cartographer::sensor::VoxelFilter
resolution_	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  const double resolution_;$/;"	m	class:cartographer_ros::__anon135::Node	file:
response	ceres-solver/examples/nist.cc	/^  Matrix response()         const { return response_;          }$/;"	f	class:ceres::examples::NISTProblem
response_	ceres-solver/examples/nist.cc	/^  Matrix response_;$/;"	m	class:ceres::examples::NISTProblem	file:
response_size	ceres-solver/examples/nist.cc	/^  int response_size()       const { return response_.cols();   }$/;"	f	class:ceres::examples::NISTProblem
result	ceres-solver/include/ceres/internal/manual_constructor.h	/^template<int size> struct AlignType<0, size> { typedef char result[size]; };$/;"	t	struct:ceres::internal::AlignType
result	ceres-solver/internal/ceres/gtest/gtest.h	/^  const TestResult* result() const { return &result_; }$/;"	f	class:testing::TestInfo
result	ceres-solver/internal/ceres/inner_product_computer.h	/^  const CompressedRowSparseMatrix& result() const { return *result_; }$/;"	f	class:ceres::internal::InnerProductComputer
result_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Wrapper result_;$/;"	m	class:testing::internal::ActionResultHolder
result_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const T result_;$/;"	m	class:testing::internal::SetErrnoAndReturnAction
result_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TestPartResultArray* const result_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	file:
result_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestResult result_;$/;"	m	class:testing::TestInfo
result_	ceres-solver/internal/ceres/inner_product_computer.h	/^  scoped_ptr<CompressedRowSparseMatrix> result_;$/;"	m	class:ceres::internal::InnerProductComputer
result_offsets_	ceres-solver/internal/ceres/inner_product_computer.h	/^  std::vector<int> result_offsets_;$/;"	m	class:ceres::internal::InnerProductComputer
results_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const TestPartResultArray* const results_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
retired_	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool retired_;    \/\/ True iff this expectation has retired.$/;"	m	class:testing::internal::ExpectationBase
retires_on_saturation_	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool retires_on_saturation_;$/;"	m	class:testing::internal::ExpectationBase
retrieve_entity	cartographer_ros/jenkins/worker.py	/^def retrieve_entity(datastore_client, kind, identifier):$/;"	f
return_value	ceres-solver/include/ceres/gradient_checker.h	/^    bool return_value;$/;"	m	struct:ceres::GradientChecker::ProbeResults
return_value_	ceres-solver/internal/ceres/gradient_checker_test.cc	/^  bool return_value_;$/;"	m	class:ceres::internal::GoodTestTerm	file:
returns	cartographer/cartographer/sensor/range_data.h	/^  PointCloud returns;$/;"	m	struct:cartographer::sensor::RangeData
returns	cartographer/cartographer/sensor/range_data.h	/^  TimedPointCloud returns;$/;"	m	struct:cartographer::sensor::TimedRangeData
returns_	cartographer/cartographer/sensor/range_data_test.cc	/^  std::vector<Eigen::Vector3f> returns_;$/;"	m	class:cartographer::sensor::__anon120::RangeDataTest	file:
reuse_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  bool reuse_;$/;"	m	class:ceres::internal::DoglegStrategy
reuse_diagonal_	ceres-solver/internal/ceres/levenberg_marquardt_strategy.h	/^  bool reuse_diagonal_;$/;"	m	class:ceres::internal::LevenbergMarquardtStrategy
rho_	ceres-solver/include/ceres/loss_function.h	/^  internal::scoped_ptr<const LossFunction> rho_;$/;"	m	class:ceres::LossFunctionWrapper
rho_	ceres-solver/include/ceres/loss_function.h	/^  internal::scoped_ptr<const LossFunction> rho_;$/;"	m	class:ceres::ScaledLoss
rhs	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  const Vector& rhs()    const { return rhs_;             }$/;"	f	class:ceres::internal::ImplicitSchurComplement
rhs	ceres-solver/internal/ceres/schur_complement_solver.h	/^  const double* rhs() const { return rhs_.get(); }$/;"	f	class:ceres::internal::SchurComplementSolver
rhs_	ceres-solver/internal/ceres/dense_qr_solver.h	/^  Vector rhs_;$/;"	m	class:ceres::internal::DenseQRSolver
rhs_	ceres-solver/internal/ceres/gmock/gmock.h	/^    Rhs rhs_;$/;"	m	class:testing::internal::ComparisonBase::Impl
rhs_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const RhsStlContainer rhs_;$/;"	m	class:testing::internal::PointwiseMatcher::Impl
rhs_	ceres-solver/internal/ceres/gmock/gmock.h	/^  Rhs rhs_;$/;"	m	class:testing::internal::ComparisonBase
rhs_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const RhsStlContainer rhs_;$/;"	m	class:testing::internal::PointwiseMatcher
rhs_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  Vector rhs_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
rhs_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  scoped_array<double> rhs_;$/;"	m	class:ceres::internal::SchurComplementSolver
rhs_expected	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  Vector rhs_expected;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
rhs_locks_	ceres-solver/internal/ceres/schur_eliminator.h	/^  std::vector<Mutex*> rhs_locks_;$/;"	m	class:ceres::internal::SchurEliminator
ridders_epsilon	ceres-solver/include/ceres/numeric_diff_options.h	/^  double ridders_epsilon;$/;"	m	struct:ceres::NumericDiffOptions
ridders_relative_initial_step_size	ceres-solver/include/ceres/numeric_diff_options.h	/^  double ridders_relative_initial_step_size;$/;"	m	struct:ceres::NumericDiffOptions
ridders_step_shrink_factor	ceres-solver/include/ceres/numeric_diff_options.h	/^  double ridders_step_shrink_factor;$/;"	m	struct:ceres::NumericDiffOptions
right_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ::std::vector<size_t> right_;$/;"	m	class:testing::internal::MaxBipartiteMatchState	file:
right_start_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  size_t left_start_, right_start_;$/;"	m	class:testing::internal::edit_distance::__anon166::Hunk	file:
rng_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d_test.cc	/^  std::mt19937 rng_;$/;"	m	class:cartographer::mapping::optimization::__anon87::OptimizationProblem3DTest	file:
rotation	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^    std::array<double, 4> rotation;$/;"	m	struct:cartographer::mapping::optimization::CeresPose::Data
rotation	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  const double* rotation() const { return data_->rotation.data(); }$/;"	f	class:cartographer::mapping::optimization::CeresPose
rotation	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  double* rotation() { return data_->rotation.data(); }$/;"	f	class:cartographer::mapping::optimization::CeresPose
rotation	cartographer/cartographer/transform/rigid_transform.h	/^  Rotation2D rotation() const { return rotation_; }$/;"	f	class:cartographer::transform::Rigid2
rotation	cartographer/cartographer/transform/rigid_transform.h	/^  const Quaternion& rotation() const { return rotation_; }$/;"	f	class:cartographer::transform::Rigid3
rotation_	cartographer/cartographer/transform/rigid_transform.h	/^  Quaternion rotation_;$/;"	m	class:cartographer::transform::Rigid3
rotation_	cartographer/cartographer/transform/rigid_transform.h	/^  Rotation2D rotation_;$/;"	m	class:cartographer::transform::Rigid2
rotation_weight	cartographer/cartographer/mapping/pose_graph_interface.h	/^      double rotation_weight;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint::Pose
rotation_weight	cartographer/cartographer/mapping/pose_graph_interface.h	/^      double rotation_weight;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode::LandmarkObservation
rotation_weight	cartographer/cartographer/sensor/landmark_data.h	/^  double rotation_weight;$/;"	m	struct:cartographer::sensor::LandmarkObservation
rotation_weight_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  const double rotation_weight_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction2D
rotation_weight_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  const double rotation_weight_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction3D
rotation_weight_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  const double rotation_weight_;$/;"	m	class:cartographer::mapping::optimization::__anon90::AnalyticalSpaCostFunction2D	file:
rotational_scan_matcher_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  RotationalScanMatcher rotational_scan_matcher_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
rotational_scan_matcher_histogram	cartographer/cartographer/mapping/trajectory_node.h	/^    Eigen::VectorXf rotational_scan_matcher_histogram;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
rotational_score	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  float rotational_score;$/;"	m	struct:cartographer::mapping::scan_matching::DiscreteScan3D	file:
rotational_score	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    float rotational_score;$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::Result
rotational_squared	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^  double rotational_squared;$/;"	m	struct:cartographer::ground_truth::__anon49::Error	file:
row	ceres-solver/internal/ceres/inner_product_computer.h	/^    int row;$/;"	m	struct:ceres::internal::InnerProductComputer::ProductTerm
row_begin_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int row_begin_;$/;"	m	struct:ceres::Grid2D
row_block_size	ceres-solver/internal/ceres/linear_solver.h	/^    int row_block_size;$/;"	m	struct:ceres::internal::LinearSolver::Options
row_block_size	ceres-solver/internal/ceres/preconditioner.h	/^    int row_block_size;$/;"	m	struct:ceres::internal::Preconditioner::Options
row_blocks	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  const std::vector<int>& row_blocks() const { return row_blocks_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
row_blocks_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<int> row_blocks_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
row_end_	ceres-solver/include/ceres/cubic_interpolation.h	/^  const int row_end_;$/;"	m	struct:ceres::Grid2D
rows	ceres-solver/include/ceres/crs_matrix.h	/^  std::vector<int> rows;$/;"	m	struct:ceres::CRSMatrix
rows	ceres-solver/internal/ceres/block_structure.h	/^  std::vector<Block> rows;$/;"	m	struct:ceres::internal::CompressedColumnBlockStructure
rows	ceres-solver/internal/ceres/block_structure.h	/^  std::vector<CompressedRow> rows;$/;"	m	struct:ceres::internal::CompressedRowBlockStructure
rows	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^  vector<int> rows;$/;"	m	class:ceres::internal::SolveUpperTriangularTest	file:
rows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^  const int* rows;$/;"	m	struct:ceres::internal::__anon189::RowColLessThan	file:
rows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  const int* rows() const { return &rows_[0]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
rows	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  const int* rows()      const { return rows_.get();       }$/;"	f	class:ceres::internal::TripletSparseMatrix
rows_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<int> rows_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
rows_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  scoped_array<int> rows_;$/;"	m	class:ceres::internal::TripletSparseMatrix
rpc_request_future_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  std::future<void> rpc_request_future_;$/;"	m	class:cartographer_rviz::DrawableSubmap
run	cartographer_ros/jenkins/worker.py	/^  def run(self, ros_distro, run_id):$/;"	m	class:Job
run_cmd	cartographer_ros/jenkins/worker.py	/^def run_cmd(cmd):$/;"	f
run_jobs	cartographer_ros/jenkins/worker.py	/^  def run_jobs(self, selector):$/;"	m	class:Worker
run_ros_cmd	cartographer_ros/jenkins/worker.py	/^def run_ros_cmd(ros_distro, ros_cmd):$/;"	f
runnable_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    scoped_ptr<Runnable> runnable_;$/;"	m	struct:testing::internal::__anon173::ThreadWithParamSupport::ThreadMainParam	file:
sampler_	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^  std::unique_ptr<common::FixedRatioSampler> sampler_;$/;"	m	class:cartographer::io::FixedRatioSamplingPointsProcessor
sampler_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  common::FixedRatioSampler sampler_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
sampler_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  common::FixedRatioSampler sampler_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
sampling_ratio_	cartographer/cartographer/io/fixed_ratio_sampling_points_processor.h	/^  const double sampling_ratio_;$/;"	m	class:cartographer::io::FixedRatioSamplingPointsProcessor
scale_factor_	ceres-solver/internal/ceres/autodiff_local_parameterization_test.cc	/^  const double scale_factor_;$/;"	m	struct:ceres::internal::ScaledPlus	file:
scaled_direction_	ceres-solver/internal/ceres/line_search.h	/^  Vector scaled_direction_;$/;"	m	class:ceres::internal::LineSearchFunction
scaling_factor_	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction2D
scaling_factor_	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor2D
scaling_factor_	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor2D
scaling_factor_	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::scan_matching::OccupiedSpaceCostFunction3D
scaling_factor_	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor3D
scaling_factor_	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
scaling_factor_	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::AccelerationCostFunction3D
scaling_factor_	cartographer/cartographer/mapping/internal/optimization/cost_functions/rotation_cost_function_3d.h	/^  const double scaling_factor_;$/;"	m	class:cartographer::mapping::RotationCostFunction3D
scan_index	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  int scan_index = 0;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
scan_index	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  int scan_index;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate3D	file:
scan_matched_point_cloud_publisher_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::Publisher scan_matched_point_cloud_publisher_;$/;"	m	class:cartographer_ros::Node
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/occupied_space_cost_function_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/real_time_correlative_scan_matcher_2d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/rotation_delta_cost_functor_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/ceres_scan_matcher_3d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/interpolated_grid_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/low_resolution_matcher.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/occupied_space_cost_function_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/precomputation_grid_3d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/real_time_correlative_scan_matcher_3d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/rotational_scan_matcher_test.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scan_matching	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.cc	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping	file:
scan_matching	cartographer/cartographer/mapping/internal/scan_matching/real_time_correlative_scan_matcher.h	/^namespace scan_matching {$/;"	n	namespace:cartographer::mapping
scene_manager_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  Ogre::SceneManager* const scene_manager_;$/;"	m	class:cartographer_rviz::OgreSlice::Ogre
schur_complement_	ceres-solver/internal/ceres/iterative_schur_complement_solver.h	/^  scoped_ptr<internal::ImplicitSchurComplement> schur_complement_;$/;"	m	class:ceres::internal::IterativeSchurComplementSolver
schur_structure_given	ceres-solver/include/ceres/solver.h	/^    std::string schur_structure_given;$/;"	m	struct:ceres::Solver::Summary
schur_structure_used	ceres-solver/include/ceres/solver.h	/^    std::string schur_structure_used;$/;"	m	struct:ceres::Solver::Summary
scoped_array	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  explicit scoped_array(C* p = NULL) : array_(p) { }$/;"	f	class:ceres::internal::scoped_array
scoped_array	ceres-solver/include/ceres/internal/scoped_ptr.h	/^class scoped_array {$/;"	c	namespace:ceres::internal
scoped_ptr	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  explicit scoped_ptr(C* p = NULL) : ptr_(p) { }$/;"	f	class:ceres::internal::scoped_ptr
scoped_ptr	ceres-solver/include/ceres/internal/scoped_ptr.h	/^class scoped_ptr {$/;"	c	namespace:ceres::internal
score	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  float score = 0.f;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
score	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^  float score = -std::numeric_limits<float>::infinity();$/;"	m	struct:cartographer::mapping::scan_matching::Candidate3D	file:
score	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^    float score;$/;"	m	struct:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D::Result
scratch_	ceres-solver/include/ceres/gradient_problem.h	/^  internal::scoped_array<double> scratch_;$/;"	m	class:ceres::GradientProblem
scratch_	ceres-solver/internal/ceres/cxsparse.h	/^  CS_ENTRY* scratch_;$/;"	m	class:ceres::internal::CXSparse
scratch_evaluate_preparer_	ceres-solver/internal/ceres/block_evaluate_preparer.h	/^  ScratchEvaluatePreparer scratch_evaluate_preparer_;$/;"	m	class:ceres::internal::BlockEvaluatePreparer
scratch_size_	ceres-solver/internal/ceres/cxsparse.h	/^  int scratch_size_;$/;"	m	class:ceres::internal::CXSparse
search_direction	ceres-solver/internal/ceres/line_search_minimizer.h	/^    Vector search_direction;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
second_delta_time_seconds_	cartographer/cartographer/mapping/internal/optimization/cost_functions/acceleration_cost_function_3d.h	/^  const double second_delta_time_seconds_;$/;"	m	class:cartographer::mapping::AccelerationCostFunction3D
second_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Matcher<const SecondType&> second_matcher_;$/;"	m	class:testing::internal::PairMatcherImpl
second_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const SecondMatcher second_matcher_;$/;"	m	class:testing::internal::PairMatcher
second_value_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Second second_value_;$/;"	m	class:testing::internal::BoundSecondMatcher::Impl
second_value_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Second second_value_;$/;"	m	class:testing::internal::BoundSecondMatcher
send	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.cc	/^void ScopedRosLogSink::send(const ::google::LogSeverity severity,$/;"	f	class:cartographer_ros::ScopedRosLogSink
send	ceres-solver/internal/ceres/gmock/mock-log.h	/^  virtual void send(google::LogSeverity severity,$/;"	f	class:testing::ScopedMockLog
send_queue_	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  common::BlockingQueue<std::unique_ptr<proto::SensorData>> send_queue_;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
sensor	cartographer/cartographer/sensor/collator_interface.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/compressed_point_cloud.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/compressed_point_cloud_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/fixed_frame_pose_data.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/fixed_frame_pose_data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/imu_data.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/imu_data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/collator.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/collator.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/collator_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/dispatchable.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/test_helpers.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/trajectory_collator.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/trajectory_collator_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/voxel_filter.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/internal/voxel_filter.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/internal/voxel_filter_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/landmark_data.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/landmark_data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/landmark_data_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/map_by_time.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/map_by_time_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/odometry_data.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/odometry_data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/point_cloud.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/point_cloud.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/point_cloud_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/range_data.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/range_data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor	cartographer/cartographer/sensor/range_data_test.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/timed_point_cloud_data.cc	/^namespace sensor {$/;"	n	namespace:cartographer	file:
sensor	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^namespace sensor {$/;"	n	namespace:cartographer
sensor_bridge	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.cc	/^SensorBridge* MapBuilderBridge::sensor_bridge(const int trajectory_id) {$/;"	f	class:cartographer_ros::MapBuilderBridge
sensor_bridges_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  std::unordered_map<int, std::unique_ptr<SensorBridge>> sensor_bridges_;$/;"	m	class:cartographer_ros::MapBuilderBridge
sensor_collator_	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^  sensor::CollatorInterface* const sensor_collator_;$/;"	m	class:cartographer::mapping::CollatedTrajectoryBuilder::sensor
sensor_collator_	cartographer/cartographer/mapping/map_builder.h	/^  std::unique_ptr<sensor::CollatorInterface> sensor_collator_;$/;"	m	class:cartographer::mapping::MapBuilder
sensor_data_queue	cartographer/cartographer/cloud/internal/map_builder_context_impl.h	/^MapBuilderContext<SubmapType>::sensor_data_queue() {$/;"	f	class:cartographer::cloud::MapBuilderContext
sensor_id	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  std::string sensor_id;$/;"	m	struct:cartographer::sensor::QueueKey
sensor_id_	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^  const std::string sensor_id_;$/;"	m	class:cartographer::mapping::LocalSlamResult2D
sensor_id_	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^  const std::string sensor_id_;$/;"	m	class:cartographer::mapping::LocalSlamResult3D
sensor_id_	cartographer/cartographer/sensor/data.h	/^  const std::string sensor_id_;$/;"	m	class:cartographer::sensor::Data
sensor_samplers_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  std::unordered_map<int, TrajectorySensorSamplers> sensor_samplers_;$/;"	m	class:cartographer_ros::Node
sensor_to_previous_subdivision_time_	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^      sensor_to_previous_subdivision_time_;$/;"	m	class:cartographer_ros::SensorBridge
sequence_created_	ceres-solver/internal/ceres/gmock/gmock.h	/^  bool sequence_created_;$/;"	m	class:testing::InSequence
serialized_data_	cartographer/cartographer/io/internal/in_memory_proto_stream_test.cc	/^  SerializedData serialized_data_;$/;"	m	class:cartographer::io::__anon27::InMemoryProtoStreamTest	file:
server_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::unique_ptr<MapBuilderServer> server_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
service_servers_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  std::vector<::ros::ServiceServer> service_servers_;$/;"	m	class:cartographer_ros::Node
set	ceres-solver/internal/ceres/gtest/gtest.h	/^  void set(const T& value) { *pointer() = value; }$/;"	f	class:std::tr1::ThreadLocal
set	ceres-solver/internal/ceres/gtest/gtest.h	/^  void set(const T& value) { value_ = value; }$/;"	f	class:std::tr1::ThreadLocal
set_axes_equal	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^def set_axes_equal(axes):$/;"	f
set_cardinality	ceres-solver/internal/ceres/gmock/gmock.h	/^  void set_cardinality(const Cardinality& a_cardinality) {$/;"	f	class:testing::internal::ExpectationBase
set_catch_exceptions	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }$/;"	f	class:testing::internal::UnitTestImpl	file:
set_child_pid	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }$/;"	f	class:testing::internal::ForkingDeathTest
set_constraints	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  void set_constraints($/;"	f	class:cartographer::mapping::testing::FakeTrimmable
set_current_test_case	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_current_test_case(TestCase* a_current_test_case) {$/;"	f	class:testing::internal::UnitTestImpl
set_current_test_info	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_current_test_info(TestInfo* a_current_test_info) {$/;"	f	class:testing::internal::UnitTestImpl
set_delta_offset	ceres-solver/internal/ceres/parameter_block.h	/^  void set_delta_offset(int delta_offset) { delta_offset_ = delta_offset; }$/;"	f	class:ceres::internal::ParameterBlock
set_elapsed_time	ceres-solver/internal/ceres/gtest/gtest.h	/^  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }$/;"	f	class:testing::TestResult
set_finished	cartographer/cartographer/mapping/submaps.h	/^  void set_finished(bool finished) { finished_ = finished; }$/;"	f	class:cartographer::mapping::Submap
set_forwarding_enabled	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }$/;"	f	class:testing::internal::TestEventRepeater
set_index	ceres-solver/internal/ceres/parameter_block.h	/^  void set_index(int index) { index_ = index; }$/;"	f	class:ceres::internal::ParameterBlock
set_index	ceres-solver/internal/ceres/residual_block.h	/^  void set_index(int index) { index_ = index; }$/;"	f	class:ceres::internal::ResidualBlock
set_last_death_test_message	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void DeathTest::set_last_death_test_message(const std::string& message) {$/;"	f	class:testing::internal::DeathTest
set_lhs	ceres-solver/internal/ceres/schur_complement_solver.h	/^  void set_lhs(BlockRandomAccessMatrix* lhs) { lhs_.reset(lhs); }$/;"	f	class:ceres::internal::SchurComplementSolver
set_num_cols	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  void set_num_cols(const int num_cols) { num_cols_ = num_cols; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
set_num_nonzeros	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^void TripletSparseMatrix::set_num_nonzeros(int num_nonzeros) {$/;"	f	class:ceres::internal::TripletSparseMatrix
set_num_range_data	cartographer/cartographer/mapping/submaps.h	/^  void set_num_range_data(const int num_range_data) {$/;"	f	class:cartographer::mapping::Submap
set_num_residuals	ceres-solver/include/ceres/cost_function.h	/^  void set_num_residuals(int num_residuals) {$/;"	f	class:ceres::CostFunction
set_num_rows	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  void set_num_rows(const int num_rows) { num_rows_ = num_rows; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
set_os_stack_trace_getter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void UnitTestImpl::set_os_stack_trace_getter($/;"	f	class:testing::internal::UnitTestImpl
set_outcome	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }$/;"	f	class:testing::internal::DeathTestImpl
set_read_fd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_read_fd(int fd) { read_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
set_rhs	ceres-solver/internal/ceres/schur_complement_solver.h	/^  void set_rhs(double* rhs) { rhs_.reset(rhs); }$/;"	f	class:ceres::internal::SchurComplementSolver
set_should_run	ceres-solver/internal/ceres/gtest/gtest.h	/^  void set_should_run(bool should) { should_run_ = should; }$/;"	f	class:testing::TestCase
set_spawned	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }$/;"	f	class:testing::internal::DeathTestImpl
set_state_offset	ceres-solver/internal/ceres/parameter_block.h	/^  void set_state_offset(int state_offset) { state_offset_ = state_offset; }$/;"	f	class:ceres::internal::ParameterBlock
set_status	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_status(int a_status) { status_ = a_status; }$/;"	f	class:testing::internal::DeathTestImpl
set_storage_type	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  void set_storage_type(const StorageType storage_type) {$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
set_submap_data	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  void set_submap_data($/;"	f	class:cartographer::mapping::testing::FakeTrimmable
set_trajectory_nodes	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  void set_trajectory_nodes($/;"	f	class:cartographer::mapping::testing::FakeTrimmable
set_up_tc_	ceres-solver/internal/ceres/gtest/gtest.h	/^  Test::SetUpTestCaseFunc set_up_tc_;$/;"	m	class:testing::TestCase
set_visibility	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  void set_visibility(const bool visibility) {$/;"	f	class:cartographer_rviz::DrawableSubmap
set_write_fd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  void set_write_fd(int fd) { write_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl
severity	ceres-solver/internal/ceres/gmock/mock-log.h	/^    google::LogSeverity severity;$/;"	m	struct:testing::ScopedMockLog::MessageInfo
severity_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const GTestLogSeverity severity_;$/;"	m	class:std::tr1::GTestLog
severity_	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  int severity_;$/;"	m	class:MessageLogger
should_run	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestCase
should_run	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestInfo
should_run_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool should_run_;                 \/\/ True iff this test should run$/;"	m	class:testing::TestInfo
should_run_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool should_run_;$/;"	m	class:testing::TestCase
show_authors	cartographer/docs/source/conf.py	/^show_authors = False$/;"	v
show_authors	cartographer_ros/docs/source/conf.py	/^show_authors = False$/;"	v
shuffle_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool shuffle_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
shutting_down_	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  bool shutting_down_ = false;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
shutting_down_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  bool shutting_down_ = false;$/;"	m	class:cartographer::cloud::MapBuilderServer
sign_bit	ceres-solver/internal/ceres/gtest/gtest.h	/^  Bits sign_bit() const { return kSignBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint
signum_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const int signum_;$/;"	m	class:testing::KilledBySignal
similarity_penalty_weight	ceres-solver/internal/ceres/canonical_views_clustering.h	/^  double similarity_penalty_weight;$/;"	m	struct:ceres::internal::CanonicalViewsClusteringOptions
sin	ceres-solver/include/ceres/jet.h	/^Jet<T, N> sin(const Jet<T, N>& f) {$/;"	f	namespace:ceres
sin	ceres-solver/include/ceres/jet.h	/^inline double sin     (double x) { return std::sin(x);      }$/;"	f	namespace:ceres
sinh	ceres-solver/include/ceres/jet.h	/^Jet<T, N> sinh(const Jet<T, N>& f) {$/;"	f	namespace:ceres
sinh	ceres-solver/include/ceres/jet.h	/^inline double sinh    (double x) { return std::sinh(x);     }$/;"	f	namespace:ceres
size	cartographer/cartographer/mapping/id.h	/^  size_t size() const {$/;"	f	class:cartographer::mapping::MapById
size	cartographer/cartographer/sensor/compressed_point_cloud.cc	/^size_t CompressedPointCloud::size() const { return num_points_; }$/;"	f	class:cartographer::sensor::CompressedPointCloud
size	ceres-solver/include/ceres/internal/fixed_array.h	/^  inline size_type size() const { return size_; }$/;"	f	class:ceres::internal::FixedArray
size	ceres-solver/internal/ceres/block_structure.h	/^  BlockSize size;$/;"	m	struct:ceres::internal::Block
size	ceres-solver/internal/ceres/gmock/gmock.h	/^  int size() const { return static_cast<int>(expectations_.size()); }$/;"	f	class:testing::ExpectationSet
size	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestPartResultArray::size() const {$/;"	f	class:testing::TestPartResultArray
size	ceres-solver/internal/ceres/gtest/gtest.h	/^  size_t size() const { return size_; }$/;"	f	class:testing::internal::NativeArray
size	ceres-solver/internal/ceres/schur_eliminator.h	/^    int size;$/;"	m	struct:ceres::internal::SchurEliminator::Chunk
size_	ceres-solver/examples/fields_of_experts.h	/^  int size_;$/;"	m	class:ceres::examples::FieldsOfExperts
size_	ceres-solver/include/ceres/internal/fixed_array.h	/^  size_type const       size_;$/;"	m	class:ceres::internal::FixedArray
size_	ceres-solver/include/ceres/local_parameterization.h	/^  const int size_;$/;"	m	class:ceres::HomogeneousVectorParameterization
size_	ceres-solver/include/ceres/local_parameterization.h	/^  const int size_;$/;"	m	class:ceres::IdentityParameterization
size_	ceres-solver/internal/ceres/gtest/gtest.h	/^  size_t size_;$/;"	m	class:testing::internal::NativeArray
size_	ceres-solver/internal/ceres/parameter_block.h	/^  int size_;$/;"	m	class:ceres::internal::ParameterBlock
size_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<SizeType> size_matcher_;$/;"	m	class:testing::internal::SizeIsMatcher::Impl
size_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const SizeMatcher size_matcher_;$/;"	m	class:testing::internal::SizeIsMatcher
size_penalty_weight	ceres-solver/internal/ceres/canonical_views_clustering.h	/^  double size_penalty_weight;$/;"	m	struct:ceres::internal::CanonicalViewsClusteringOptions
size_type	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef size_t size_type;$/;"	t	class:ceres::internal::FixedArray
slam_thread_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  std::unique_ptr<std::thread> slam_thread_;$/;"	m	class:cartographer::cloud::MapBuilderServer
slice_high_resolution_enabled_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::BoolProperty* slice_high_resolution_enabled_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
slice_id_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  const int slice_id_;$/;"	m	class:cartographer_rviz::OgreSlice
slice_low_resolution_enabled_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::BoolProperty* slice_low_resolution_enabled_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
slice_node_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  Ogre::SceneNode* const slice_node_;$/;"	m	class:cartographer_rviz::OgreSlice::Ogre
slice_pose	cartographer/cartographer/io/submap_painter.h	/^  ::cartographer::transform::Rigid3d slice_pose;$/;"	m	struct:cartographer::io::SubmapSlice
slice_pose	cartographer/cartographer/io/submap_painter.h	/^  ::cartographer::transform::Rigid3d slice_pose;$/;"	m	struct:cartographer::io::SubmapTexture
socket_writer_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const scoped_ptr<AbstractSocketWriter> socket_writer_;$/;"	m	class:testing::internal::StreamingListener	file:
sockfd_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    int sockfd_;  \/\/ socket file descriptor$/;"	m	class:testing::internal::StreamingListener::SocketWriter	file:
sol	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  Vector sol;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
sol_d	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  Vector sol_d;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
sol_expected	ceres-solver/internal/ceres/schur_eliminator_test.cc	/^  Vector sol_expected;$/;"	m	class:ceres::internal::SchurEliminatorTest	file:
solver_	ceres-solver/internal/ceres/eigensparse.cc	/^  Solver solver_;$/;"	m	class:ceres::internal::EigenSparseCholeskyTemplate	file:
solver_summary_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Solver::Summary* solver_summary_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
source_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const Matcher<U> source_matcher_;$/;"	m	class:testing::internal::MatcherCastImpl::Impl
source_suffix	cartographer/docs/source/conf.py	/^source_suffix = '.rst'$/;"	v
source_suffix	cartographer_ros/docs/source/conf.py	/^source_suffix = '.rst'$/;"	v
source_suffix	ceres-solver/docs/source/conf.py	/^source_suffix = '.rst'$/;"	v
source_text	ceres-solver/internal/ceres/gmock/gmock.h	/^  const char* source_text() const { return source_text_.c_str(); }$/;"	f	class:testing::internal::ExpectationBase
source_text_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const string source_text_;  \/\/ The EXPECT_CALL(...) source text.$/;"	m	class:testing::internal::ExpectationBase
space	ceres-solver/include/ceres/internal/manual_constructor.h	/^  inline void* space() {$/;"	f	class:ceres::internal::ManualConstructor
space_	ceres-solver/include/ceres/internal/manual_constructor.h	/^  CERES_ALIGNED_CHAR_ARRAY(Type, 1) space_;$/;"	m	class:ceres::internal::ManualConstructor
sparse_cholesky_	ceres-solver/internal/ceres/schur_complement_solver.h	/^  scoped_ptr<SparseCholesky> sparse_cholesky_;$/;"	m	class:ceres::internal::SparseSchurComplementSolver
sparse_cholesky_	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.h	/^  scoped_ptr<SparseCholesky> sparse_cholesky_;$/;"	m	class:ceres::internal::SparseNormalCholeskySolver
sparse_cholesky_	ceres-solver/internal/ceres/visibility_based_preconditioner.h	/^  scoped_ptr<SparseCholesky> sparse_cholesky_;$/;"	m	class:ceres::internal::VisibilityBasedPreconditioner
sparse_linear_algebra_library_type	ceres-solver/include/ceres/covariance.h	/^    SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type;$/;"	m	struct:ceres::Covariance::Options
sparse_linear_algebra_library_type	ceres-solver/include/ceres/solver.h	/^    SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type;$/;"	m	struct:ceres::Solver::Options
sparse_linear_algebra_library_type	ceres-solver/include/ceres/solver.h	/^    SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type;$/;"	m	struct:ceres::Solver::Summary
sparse_linear_algebra_library_type	ceres-solver/internal/ceres/linear_solver.h	/^    SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type;$/;"	m	struct:ceres::internal::LinearSolver::Options
sparse_linear_algebra_library_type	ceres-solver/internal/ceres/preconditioner.h	/^    SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type;$/;"	m	struct:ceres::internal::Preconditioner::Options
sparse_linear_algebra_library_type	ceres-solver/internal/ceres/test_util.h	/^  SparseLinearAlgebraLibraryType sparse_linear_algebra_library_type;$/;"	m	struct:ceres::internal::SolverConfig
spawned	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool spawned() const { return spawned_; }$/;"	f	class:testing::internal::DeathTestImpl
spawned_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool spawned_;$/;"	m	class:testing::internal::DeathTestImpl	file:
sphinx_exe	ceres-solver/scripts/make_docs.py	/^  sphinx_exe = 'sphinx-build'$/;"	v
sphinx_exe	ceres-solver/scripts/make_docs.py	/^  sphinx_exe = sys.argv[3]$/;"	v
sqrt	ceres-solver/include/ceres/jet.h	/^Jet<T, N> sqrt(const Jet<T, N>& f) {$/;"	f	namespace:ceres
sqrt	ceres-solver/include/ceres/jet.h	/^inline double sqrt    (double x) { return std::sqrt(x);     }$/;"	f	namespace:ceres
sqrt_information_	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^  const Eigen::Matrix3d sqrt_information_;$/;"	m	class:ceres::examples::PoseGraph2dErrorTerm
sqrt_information_	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^  const Eigen::Matrix<double, 6, 6> sqrt_information_;$/;"	m	class:ceres::examples::PoseGraph3dErrorTerm
sqrt_rho1_	ceres-solver/internal/ceres/corrector.h	/^  double sqrt_rho1_;$/;"	m	class:ceres::internal::Corrector
sqrt_weight_	ceres-solver/examples/ellipse_approximation.cc	/^  const double sqrt_weight_;$/;"	m	class:EuclideanDistanceFunctor	file:
sqrt_weight_	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  const double sqrt_weight_;$/;"	m	class:ceres::internal::EuclideanDistanceFunctor	file:
sqrta_	ceres-solver/examples/denoising.cc	/^  double sqrta_, b_;$/;"	m	class:ceres::examples::QuadraticCostFunction	file:
src_dir	ceres-solver/scripts/make_docs.py	/^src_dir    = sys.argv[1] + '\/docs\/source'$/;"	v
ss_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::std::stringstream ss_;$/;"	m	class:testing::StringMatchResultListener
ss_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::scoped_ptr< ::std::stringstream> ss_;$/;"	m	class:testing::Message
ss_	ceres-solver/internal/ceres/suitesparse.h	/^  SuiteSparse ss_;$/;"	m	class:ceres::internal::SuiteSparseCholesky
ssize_t	ceres-solver/include/ceres/internal/fixed_array.h	/^   typedef __int64      ssize_t;$/;"	t	namespace:ceres::internal
stack_trace_depth_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  internal::Int32 stack_trace_depth_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
start	cartographer/cartographer/mapping/detect_floors.h	/^  common::Time start;$/;"	m	struct:cartographer::mapping::Timespan
start	ceres-solver/internal/ceres/schur_eliminator.h	/^    int start;$/;"	m	struct:ceres::internal::SchurEliminator::Chunk
start_index	cartographer/cartographer/mapping/detect_floors.cc	/^  int start_index;$/;"	m	struct:cartographer::mapping::__anon62::Span	file:
start_row_block_	ceres-solver/internal/ceres/inner_product_computer.h	/^  const int start_row_block_;$/;"	m	class:ceres::internal::InnerProductComputer
start_time	cartographer/cartographer/io/points_batch.h	/^  common::Time start_time;$/;"	m	struct:cartographer::io::PointsBatch
start_time_	ceres-solver/internal/ceres/execution_summary.h	/^  const double start_time_;$/;"	m	class:ceres::internal::ScopedExecutionTimer
start_time_	ceres-solver/internal/ceres/wall_time.h	/^  const double start_time_;$/;"	m	class:ceres::internal::EventLogger
start_time_in_secs_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double start_time_in_secs_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
start_timestamp	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::internal::UnitTestImpl
start_timestamp	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^internal::TimeInMillis UnitTest::start_timestamp() const {$/;"	f	class:testing::UnitTest
start_timestamp_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::internal::UnitTestImpl	file:
starting_submap_index_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  int starting_submap_index_ = 0;$/;"	m	class:cartographer::cloud::MapBuilderServer
state	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^    SubmapState state = SubmapState::kActive;$/;"	m	struct:cartographer::mapping::PoseGraph2D::InternalSubmapData
state	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^    SubmapState state = SubmapState::kActive;$/;"	m	struct:cartographer::mapping::PoseGraph3D::InternalSubmapData
state	ceres-solver/internal/ceres/parameter_block.h	/^  const double* state() const { return state_; }$/;"	f	class:ceres::internal::ParameterBlock
state_	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  State state_;$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
state_	ceres-solver/internal/ceres/gtest/gtest.h	/^  UInt32 state_;$/;"	m	class:testing::internal::Random
state_	ceres-solver/internal/ceres/parameter_block.h	/^  mutable const double* state_;$/;"	m	class:ceres::internal::ParameterBlock
state_chunks_	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  std::queue<std::unique_ptr<google::protobuf::Message>> state_chunks_;$/;"	m	class:cartographer::io::InMemoryProtoStreamReader
state_offset	ceres-solver/internal/ceres/parameter_block.h	/^  int state_offset() const { return state_offset_; }$/;"	f	class:ceres::internal::ParameterBlock
state_offset_	ceres-solver/internal/ceres/parameter_block.h	/^  int32 state_offset_;$/;"	m	class:ceres::internal::ParameterBlock
state_updating_callback	ceres-solver/internal/ceres/preprocessor.h	/^  scoped_ptr<IterationCallback> state_updating_callback;$/;"	m	struct:ceres::internal::PreprocessedProblem
statement	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* statement() const { return statement_; }$/;"	f	class:testing::internal::DeathTestImpl
statement_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const char* const statement_;$/;"	m	class:testing::internal::DeathTestImpl	file:
states	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  StateMap& states() { return states_; }$/;"	f	class:testing::__anon176::MockObjectRegistry
states_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  StateMap states_;$/;"	m	class:testing::__anon176::MockObjectRegistry	file:
status	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int status() const { return status_; }$/;"	f	class:testing::internal::DeathTestImpl
status_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int status_;$/;"	m	class:testing::internal::DeathTestImpl	file:
std	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace std {$/;"	n
step_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
step_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator
step_evaluator_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  scoped_ptr<TrustRegionStepEvaluator> step_evaluator_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
step_is_nonmonotonic	ceres-solver/include/ceres/iteration_callback.h	/^  bool step_is_nonmonotonic;$/;"	m	struct:ceres::IterationSummary
step_is_successful	ceres-solver/include/ceres/iteration_callback.h	/^  bool step_is_successful;$/;"	m	struct:ceres::IterationSummary
step_is_valid	ceres-solver/include/ceres/iteration_callback.h	/^  bool step_is_valid;$/;"	m	struct:ceres::IterationSummary
step_norm	ceres-solver/include/ceres/iteration_callback.h	/^  double step_norm;$/;"	m	struct:ceres::IterationSummary
step_size	ceres-solver/include/ceres/iteration_callback.h	/^  double step_size;$/;"	m	struct:ceres::IterationSummary
step_size	ceres-solver/internal/ceres/line_search_minimizer.h	/^    double step_size;$/;"	m	struct:ceres::internal::LineSearchMinimizer::State
step_solver_time_in_seconds	ceres-solver/include/ceres/iteration_callback.h	/^  double step_solver_time_in_seconds;$/;"	m	struct:ceres::IterationSummary
storage_type	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  const StorageType storage_type() const { return storage_type_; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
storage_type_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  StorageType storage_type_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
str	ceres-solver/internal/ceres/gmock/gmock.h	/^  internal::string str() const { return ss_.str(); }$/;"	f	class:testing::StringMatchResultListener
strategy_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  TrustRegionStrategy* strategy_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
stream	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::std::ostream* stream() { return stream_; }$/;"	f	class:testing::MatchResultListener
stream	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  std::stringstream &stream() { return stream_; }$/;"	f	class:MessageLogger
stream_	ceres-solver/internal/ceres/gmock/gmock.h	/^  ::std::ostream* const stream_;$/;"	m	class:testing::MatchResultListener::std
stream_	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  std::stringstream stream_;$/;"	m	class:MessageLogger
stream_result_to_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::string stream_result_to_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
string	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::string& string() const { return pathname_; }$/;"	f	class:testing::internal::FilePath
string_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const StringType string_;$/;"	m	class:testing::internal::StrEqualityMatcher
stub_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::unique_ptr<MapBuilderStub> stub_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
stub_for_uploading_server_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::unique_ptr<MapBuilderStub> stub_for_uploading_server_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
submap	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^    std::shared_ptr<const Submap2D> submap;$/;"	m	struct:cartographer::mapping::PoseGraph2D::InternalSubmapData
submap	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^    std::shared_ptr<const Submap3D> submap;$/;"	m	struct:cartographer::mapping::PoseGraph3D::InternalSubmapData
submap	cartographer/cartographer/mapping/pose_graph_interface.h	/^    std::shared_ptr<const Submap> submap;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::SubmapData
submap_controller_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  mapping::SubmapController<SubmapType> submap_controller_;$/;"	m	class:cartographer::cloud::MapBuilderContext
submap_controller_	cartographer/cartographer/mapping/internal/2d/local_slam_result_2d.h	/^  SubmapController<mapping::Submap2D>* submap_controller_;$/;"	m	class:cartographer::mapping::LocalSlamResult2D
submap_controller_	cartographer/cartographer/mapping/internal/3d/local_slam_result_3d.h	/^  SubmapController<mapping::Submap3D>* submap_controller_;$/;"	m	class:cartographer::mapping::LocalSlamResult3D
submap_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  MapById<SubmapId, SubmapSpec2D> submap_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem2D
submap_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  MapById<SubmapId, SubmapSpec3D> submap_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
submap_data_	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  MapById<SubmapId, PoseGraphInterface::SubmapData> submap_data_;$/;"	m	class:cartographer::mapping::testing::FakeTrimmable
submap_id	cartographer/cartographer/mapping/pose_graph_interface.h	/^    SubmapId submap_id;  \/\/ 'i' in the paper.$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint
submap_id_text_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  ::rviz::MovableText submap_id_text_;$/;"	m	class:cartographer_rviz::DrawableSubmap
submap_id_text_node_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  Ogre::SceneNode* const submap_id_text_node_;$/;"	m	class:cartographer_rviz::DrawableSubmap::Ogre
submap_index	cartographer/cartographer/mapping/id.h	/^  int submap_index;$/;"	m	struct:cartographer::mapping::SubmapId
submap_kidnaped_list_publisher_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::Publisher submap_kidnaped_list_publisher_;$/;"	m	class:cartographer_ros::Node
submap_list_publisher_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::Publisher submap_list_publisher_;$/;"	m	class:cartographer_ros::Node
submap_node_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  Ogre::SceneNode* const submap_node_;$/;"	m	class:cartographer_rviz::DrawableSubmap::Ogre
submap_node_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  Ogre::SceneNode* const submap_node_;$/;"	m	class:cartographer_rviz::OgreSlice::Ogre
submap_publish_period_sec	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^  double submap_publish_period_sec;$/;"	m	struct:cartographer_ros::NodeOptions
submap_query_service_property_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::StringProperty* submap_query_service_property_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
submaps	cartographer/cartographer/mapping/2d/submap_2d.cc	/^std::vector<std::shared_ptr<Submap2D>> ActiveSubmaps2D::submaps() const {$/;"	f	class:cartographer::mapping::ActiveSubmaps2D
submaps	cartographer/cartographer/mapping/3d/submap_3d.cc	/^std::vector<std::shared_ptr<Submap3D>> ActiveSubmaps3D::submaps() const {$/;"	f	class:cartographer::mapping::ActiveSubmaps3D
submaps	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  std::map<int, std::unique_ptr<DrawableSubmap>> submaps;$/;"	m	struct:cartographer_rviz::Trajectory
submaps_	cartographer/cartographer/mapping/2d/submap_2d.h	/^  std::vector<std::shared_ptr<Submap2D>> submaps_;$/;"	m	class:cartographer::mapping::ActiveSubmaps2D
submaps_	cartographer/cartographer/mapping/3d/submap_3d.h	/^  std::vector<std::shared_ptr<Submap3D>> submaps_;$/;"	m	class:cartographer::mapping::ActiveSubmaps3D
subscribed_topics_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  std::unordered_set<std::string> subscribed_topics_;$/;"	m	class:cartographer_ros::Node
subscriber	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    ::ros::Subscriber subscriber;$/;"	m	struct:cartographer_ros::Node::Subscriber
subscribers_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  std::unordered_map<int, std::vector<Subscriber>> subscribers_;$/;"	m	class:cartographer_ros::Node
subscription_id_	cartographer/cartographer/cloud/internal/handlers/receive_local_slam_results_handler.h	/^      subscription_id_;$/;"	m	class:cartographer::cloud::handlers::ReceiveLocalSlamResultsHandler
subscription_index	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    const int subscription_index;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamSubscriptionId
subscription_index_	cartographer/cartographer/cloud/internal/handlers/receive_global_slam_optimizations_handler.h	/^  common::optional<int> subscription_index_;$/;"	m	class:cartographer::cloud::handlers::ReceiveGlobalSlamOptimizationsHandler
subscriptions_lock_	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  common::Mutex subscriptions_lock_;$/;"	m	class:cartographer::cloud::MapBuilderServer
subspace_B	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Matrix subspace_B() const { return subspace_B_; }$/;"	f	class:ceres::internal::DoglegStrategy
subspace_B_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Matrix2d subspace_B_;$/;"	m	class:ceres::internal::DoglegStrategy
subspace_basis	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Matrix subspace_basis() const { return subspace_basis_; }$/;"	f	class:ceres::internal::DoglegStrategy
subspace_basis_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Matrix subspace_basis_;$/;"	m	class:ceres::internal::DoglegStrategy
subspace_g	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector subspace_g() const { return subspace_g_; }$/;"	f	class:ceres::internal::DoglegStrategy
subspace_g_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  Vector2d subspace_g_;$/;"	m	class:ceres::internal::DoglegStrategy
subspace_is_one_dimensional_	ceres-solver/internal/ceres/dogleg_strategy.h	/^  bool subspace_is_one_dimensional_;$/;"	m	class:ceres::internal::DoglegStrategy
substr_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const string substr_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
substring_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const StringType substring_;$/;"	m	class:testing::internal::HasSubstrMatcher
success	ceres-solver/internal/ceres/line_search.h	/^    bool success;$/;"	m	struct:ceres::internal::LineSearch::Summary
success_	ceres-solver/internal/ceres/gtest/gtest.h	/^  bool success_;$/;"	m	class:testing::AssertionResult
successful_test_case_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::successful_test_case_count() const {$/;"	f	class:testing::UnitTest
successful_test_case_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::successful_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
successful_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::successful_test_count() const {$/;"	f	class:testing::TestCase
successful_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::successful_test_count() const {$/;"	f	class:testing::UnitTest
successful_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::successful_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
sufficient_curvature_decrease	ceres-solver/internal/ceres/line_search.h	/^    double sufficient_curvature_decrease;$/;"	m	struct:ceres::internal::LineSearch::Options
sufficient_decrease	ceres-solver/internal/ceres/line_search.h	/^    double sufficient_decrease;$/;"	m	struct:ceres::internal::LineSearch::Options
suffix_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const StringType suffix_;$/;"	m	class:testing::internal::EndsWithMatcher
sum_b	cartographer/cartographer/io/xray_points_processor.h	/^    float sum_b = 0.;$/;"	m	struct:cartographer::io::XRayPointsProcessor::ColumnData
sum_g	cartographer/cartographer/io/xray_points_processor.h	/^    float sum_g = 0.;$/;"	m	struct:cartographer::io::XRayPointsProcessor::ColumnData
sum_r	cartographer/cartographer/io/xray_points_processor.h	/^    float sum_r = 0.;$/;"	m	struct:cartographer::io::XRayPointsProcessor::ColumnData
summary	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* summary() const { return summary_.c_str(); }$/;"	f	class:testing::TestPartResult
summary_	ceres-solver/internal/ceres/execution_summary.h	/^  ExecutionSummary* summary_;$/;"	m	class:ceres::internal::ScopedExecutionTimer
summary_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string summary_;  \/\/ The test failure summary.$/;"	m	class:testing::TestPartResult
surface	cartographer/cartographer/io/submap_painter.h	/^  ::cartographer::io::UniqueCairoSurfacePtr surface;$/;"	m	struct:cartographer::io::PaintSubmapSlicesResult
surface	cartographer/cartographer/io/submap_painter.h	/^  ::cartographer::io::UniqueCairoSurfacePtr surface;$/;"	m	struct:cartographer::io::SubmapSlice
swap	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  void swap(scoped_array& p2) {$/;"	f	class:ceres::internal::scoped_array
swap	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  void swap(scoped_ptr& p2) {$/;"	f	class:ceres::internal::scoped_ptr
swap	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline void swap(scoped_array<C>& p1, scoped_array<C>& p2) {$/;"	f	namespace:ceres::internal
swap	ceres-solver/include/ceres/internal/scoped_ptr.h	/^inline void swap(scoped_ptr<C>& p1, scoped_ptr<C>& p2) {$/;"	f	namespace:ceres::internal
swap	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^void AssertionResult::swap(AssertionResult& other) {$/;"	f	class:testing::AssertionResult
swap	ceres-solver/internal/ceres/gtest/gtest.h	/^  friend void swap(scoped_ptr& a, scoped_ptr& b) {$/;"	f	struct:std::tr1::tuple_element
symbolic_factor_	ceres-solver/internal/ceres/cxsparse.h	/^  cs_dis* symbolic_factor_;$/;"	m	class:ceres::internal::CXSparseCholesky
t	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  Vec3 t;$/;"	m	struct:__anon155::EuclideanCamera	file:
t1	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double t1 = 0.1;$/;"	m	namespace:ceres::examples	file:
t2	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double t2 = 0.2;$/;"	m	namespace:ceres::examples	file:
t3	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double t3 = 0.3;$/;"	m	namespace:ceres::examples	file:
t_ab_measured_	ceres-solver/examples/slam/pose_graph_3d/pose_graph_3d_error_term.h	/^  const Pose3d t_ab_measured_;$/;"	m	class:ceres::examples::PoseGraph3dErrorTerm
t_be	ceres-solver/examples/slam/pose_graph_3d/types.h	/^  Pose3d t_be;$/;"	m	struct:ceres::examples::Constraint3d
tag	cartographer/cartographer/mapping/pose_graph_interface.h	/^    enum Tag { INTRA_SUBMAP, INTER_SUBMAP } tag;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint	typeref:enum:cartographer::mapping::PoseGraphInterface::Constraint::Tag
tag_	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  std::string tag_;$/;"	m	class:MessageLogger
tan	ceres-solver/include/ceres/jet.h	/^Jet<T, N> tan(const Jet<T, N>& f) {$/;"	f	namespace:ceres
tan	ceres-solver/include/ceres/jet.h	/^inline double tan     (double x) { return std::tan(x);      }$/;"	f	namespace:ceres
tanh	ceres-solver/include/ceres/jet.h	/^Jet<T, N> tanh(const Jet<T, N>& f) {$/;"	f	namespace:ceres
tanh	ceres-solver/include/ceres/jet.h	/^inline double tanh    (double x) { return std::tanh(x);     }$/;"	f	namespace:ceres
target_length_	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  double  target_length_;$/;"	m	class:ceres::internal::CurveCostFunction	file:
target_rotation_inverse_	cartographer/cartographer/mapping/internal/3d/scan_matching/rotation_delta_cost_functor_3d.h	/^  double target_rotation_inverse_[4];$/;"	m	class:cartographer::mapping::scan_matching::RotationDeltaCostFunctor3D
task_queue_	cartographer/cartographer/common/task_test.cc	/^  std::deque<std::shared_ptr<Task>> task_queue_;$/;"	m	class:cartographer::common::__anon10::FakeThreadPool	file:
tasks_not_ready_	cartographer/cartographer/common/task_test.cc	/^  std::map<Task*, std::shared_ptr<Task>> tasks_not_ready_;$/;"	m	class:cartographer::common::__anon10::FakeThreadPool	file:
tear_down_tc_	ceres-solver/internal/ceres/gtest/gtest.h	/^  Test::TearDownTestCaseFunc tear_down_tc_;$/;"	m	class:testing::TestCase
templates_path	cartographer/docs/source/conf.py	/^templates_path = ['_templates']$/;"	v
templates_path	cartographer_ros/docs/source/conf.py	/^templates_path = ['_templates']$/;"	v
templates_path	ceres-solver/docs/source/conf.py	/^templates_path = ['_templates']$/;"	v
termination_type	ceres-solver/include/ceres/gradient_problem_solver.h	/^    TerminationType termination_type;$/;"	m	struct:ceres::GradientProblemSolver::Summary
termination_type	ceres-solver/include/ceres/solver.h	/^    TerminationType termination_type;$/;"	m	struct:ceres::Solver::Summary
termination_type	ceres-solver/internal/ceres/linear_solver.h	/^    LinearSolverTerminationType termination_type;$/;"	m	struct:ceres::internal::LinearSolver::Summary
termination_type	ceres-solver/internal/ceres/trust_region_strategy.h	/^    LinearSolverTerminationType termination_type;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Summary
test	cartographer/cartographer/mapping/internal/testing/test_helpers.cc	/^namespace test {$/;"	n	namespace:cartographer::mapping	file:
test	cartographer/cartographer/mapping/internal/testing/test_helpers.h	/^namespace test {$/;"	n	namespace:cartographer::mapping
test	cartographer/cartographer/sensor/internal/test_helpers.h	/^namespace test {$/;"	n	namespace:cartographer::sensor
test_	ceres-solver/internal/ceres/gtest/gtest.h	/^    DeathTest* const test_;$/;"	m	class:testing::internal::DeathTest::ReturnSentinel
test_base_name	ceres-solver/internal/ceres/gtest/gtest.h	/^    const string test_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_case_base_name	ceres-solver/internal/ceres/gtest/gtest.h	/^    const string test_case_base_name;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_case_indices_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<int> test_case_indices_;$/;"	m	class:testing::internal::UnitTestImpl	file:
test_case_infos_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestCaseInfoContainer test_case_infos_;$/;"	m	class:testing::internal::ParameterizedTestCaseRegistry
test_case_name	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* test_case_name() const { return test_case_name_.c_str(); }$/;"	f	class:testing::TestInfo
test_case_name_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::string test_case_name_;     \/\/ Test case name$/;"	m	class:testing::TestInfo
test_case_name_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const string test_case_name_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
test_case_to_run_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::test_case_to_run_count() const {$/;"	f	class:testing::UnitTest
test_case_to_run_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::test_case_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
test_cases_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  std::vector<TestCase*> test_cases_;$/;"	m	class:testing::internal::UnitTestImpl	file:
test_directory_	cartographer/cartographer/io/proto_stream_test.cc	/^  std::string test_directory_;$/;"	m	class:cartographer::io::__anon16::ProtoStreamTest	file:
test_indices_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::vector<int> test_indices_;$/;"	m	class:testing::TestCase
test_info_list	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::vector<TestInfo*>& test_info_list() const {$/;"	f	class:testing::TestCase
test_info_list	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }$/;"	f	class:testing::TestCase
test_info_list_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::vector<TestInfo*> test_info_list_;$/;"	m	class:testing::TestCase
test_meta_factory	ceres-solver/internal/ceres/gtest/gtest.h	/^    const scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;$/;"	m	struct:testing::internal::ParameterizedTestCaseInfo::TestInfo
test_part_results	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static const std::vector<testing::TestPartResult>& test_part_results($/;"	f	class:testing::internal::TestResultAccessor
test_part_results	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::vector<TestPartResult>& test_part_results() const {$/;"	f	class:testing::TestResult
test_part_results_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::vector<TestPartResult> test_part_results_;$/;"	m	class:testing::TestResult
test_properites_mutex_	ceres-solver/internal/ceres/gtest/gtest.h	/^  internal::Mutex test_properites_mutex_;$/;"	m	class:testing::TestResult
test_properties	ceres-solver/internal/ceres/gtest/gtest.h	/^  const std::vector<TestProperty>& test_properties() const {$/;"	f	class:testing::TestResult
test_properties_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::vector<TestProperty> test_properties_;$/;"	m	class:testing::TestResult
test_property_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestResult::test_property_count() const {$/;"	f	class:testing::TestResult
test_server_	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^      test_server_;$/;"	m	class:cartographer::cloud::testing::HandlerTest
test_srcdir	ceres-solver/internal/ceres/test_util.cc	/^DECLARE_string(test_srcdir);$/;"	v
test_to_run_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::test_to_run_count() const {$/;"	f	class:testing::TestCase
test_to_run_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }$/;"	f	class:testing::UnitTest
test_to_run_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::test_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl
testing	cartographer/cartographer/cloud/internal/testing/handler_test.h	/^namespace testing {$/;"	n	namespace:cartographer::cloud
testing	cartographer/cartographer/cloud/internal/testing/mock_local_trajectory_uploader.h	/^namespace testing {$/;"	n	namespace:cartographer::cloud
testing	cartographer/cartographer/cloud/internal/testing/mock_map_builder_context.h	/^namespace testing {$/;"	n	namespace:cartographer::cloud
testing	cartographer/cartographer/cloud/internal/testing/test_helpers.cc	/^namespace testing {$/;"	n	namespace:cartographer::cloud	file:
testing	cartographer/cartographer/cloud/internal/testing/test_helpers.h	/^namespace testing {$/;"	n	namespace:cartographer::cloud
testing	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^namespace testing {$/;"	n	namespace:cartographer::common	file:
testing	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.h	/^namespace testing {$/;"	n	namespace:cartographer::common
testing	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^namespace testing {$/;"	n	namespace:cartographer::mapping
testing	cartographer/cartographer/mapping/internal/testing/mock_map_builder.h	/^namespace testing {$/;"	n	namespace:cartographer::mapping
testing	cartographer/cartographer/mapping/internal/testing/mock_pose_graph.h	/^namespace testing {$/;"	n	namespace:cartographer::mapping
testing	cartographer/cartographer/mapping/internal/testing/mock_trajectory_builder.h	/^namespace testing {$/;"	n	namespace:cartographer::mapping
testing	ceres-solver/internal/ceres/gmock/gmock.h	/^namespace testing {$/;"	n
testing	ceres-solver/internal/ceres/gmock/mock-log.h	/^namespace testing {$/;"	n
testing	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^namespace testing {$/;"	n	file:
testing	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace testing {$/;"	n
testing_internal	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace testing_internal {$/;"	n
tests_	ceres-solver/internal/ceres/gtest/gtest.h	/^  TestInfoContainer tests_;$/;"	m	class:testing::internal::ParameterizedTestCaseInfo
texinfo_documents	cartographer/docs/source/conf.py	/^texinfo_documents = [$/;"	v
texinfo_documents	cartographer_ros/docs/source/conf.py	/^texinfo_documents = [$/;"	v
texinfo_documents	ceres-solver/docs/source/conf.py	/^texinfo_documents = [$/;"	v
texture_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  Ogre::TexturePtr texture_;$/;"	m	class:cartographer_rviz::OgreSlice
textures	cartographer/cartographer/io/submap_painter.h	/^  std::vector<SubmapTexture> textures;$/;"	m	struct:cartographer::io::SubmapTextures
tf_bridge	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.cc	/^const TfBridge& SensorBridge::tf_bridge() const { return tf_bridge_; }$/;"	f	class:cartographer_ros::SensorBridge
tf_bridge_	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^  const TfBridge tf_bridge_;$/;"	m	class:cartographer_ros::SensorBridge
tf_broadcaster_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  tf2_ros::TransformBroadcaster tf_broadcaster_;$/;"	m	class:cartographer_ros::Node
tf_buffer_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  tf2_ros::Buffer* const tf_buffer_;$/;"	m	class:cartographer_ros::MapBuilderBridge::tf2_ros
tf_buffer_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::tf2_ros::Buffer tf_buffer_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
tf_listener_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::tf2_ros::TransformListener tf_listener_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
theta	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T theta = (0.5 \/ M_PI)  * atan(x2 \/ x1) + (x1 > 0.0 ? 0.0 : 0.5);$/;"	m	namespace:ceres::examples	file:
thread_	ceres-solver/internal/ceres/gtest/gtest.h	/^  AutoHandle thread_;$/;"	m	class:std::tr1::ThreadWithParamBase
thread_	ceres-solver/internal/ceres/gtest/gtest.h	/^  pthread_t thread_;  \/\/ The native thread object.$/;"	m	class:std::tr1::ThreadWithParam
thread_can_start_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    Notification* thread_can_start_;$/;"	m	struct:testing::internal::__anon173::ThreadWithParamSupport::ThreadMainParam	file:
thread_can_start_	ceres-solver/internal/ceres/gtest/gtest.h	/^  Notification* const thread_can_start_;$/;"	m	class:std::tr1::ThreadWithParam
thread_map_mutex_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  static Mutex thread_map_mutex_;$/;"	m	class:testing::internal::ThreadLocalRegistryImpl	file:
thread_pool	cartographer/cartographer/common/task_test.cc	/^  FakeThreadPool* thread_pool() { return &thread_pool_; }$/;"	f	class:cartographer::common::__anon10::TaskTest
thread_pool_	cartographer/cartographer/common/task_test.cc	/^  FakeThreadPool thread_pool_;$/;"	m	class:cartographer::common::__anon10::TaskTest	file:
thread_pool_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d_test.cc	/^  common::ThreadPool thread_pool_;$/;"	m	class:cartographer::mapping::__anon75::PoseGraph2DTest	file:
thread_pool_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  std::unique_ptr<common::ThreadPool> thread_pool_;$/;"	m	class:cartographer::mapping::__anon105::PoseGraph3DTest	file:
thread_pool_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.h	/^  common::ThreadPoolInterface* thread_pool_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder2D
thread_pool_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d_test.cc	/^  common::testing::ThreadPoolForTesting thread_pool_;$/;"	m	class:cartographer::mapping::constraints::__anon71::ConstraintBuilder2DTest	file:
thread_pool_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.h	/^  common::ThreadPoolInterface* thread_pool_;$/;"	m	class:cartographer::mapping::constraints::ConstraintBuilder3D
thread_pool_	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d_test.cc	/^  common::testing::ThreadPoolForTesting thread_pool_;$/;"	m	class:cartographer::mapping::constraints::__anon72::ConstraintBuilder3DTest	file:
thread_pool_	cartographer/cartographer/mapping/map_builder.h	/^  common::ThreadPool thread_pool_;$/;"	m	class:cartographer::mapping::MapBuilder
throw_on_failure_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  bool throw_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	file:
time	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    common::Time time;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamResult
time	cartographer/cartographer/common/rate_timer.h	/^    common::Time time;$/;"	m	struct:cartographer::common::RateTimer::Event
time	cartographer/cartographer/common/rate_timer_test.cc	/^  static time_point time;$/;"	m	struct:cartographer::common::__anon8::SimulatedClock	file:
time	cartographer/cartographer/common/rate_timer_test.cc	/^SimulatedClock::time_point SimulatedClock::time;$/;"	m	class:cartographer::common::__anon8::SimulatedClock	file:
time	cartographer/cartographer/mapping/id_test.cc	/^  const common::Time time;$/;"	m	struct:cartographer::mapping::__anon65::DataStruct	file:
time	cartographer/cartographer/mapping/id_test.cc	/^  const common::Time& time() const { return time_; }$/;"	f	class:cartographer::mapping::__anon65::Data
time	cartographer/cartographer/mapping/imu_tracker.h	/^  common::Time time() const { return time_; }$/;"	f	class:cartographer::mapping::ImuTracker
time	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.h	/^    common::Time time;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder2D::MatchingResult
time	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.h	/^    common::Time time;$/;"	m	struct:cartographer::mapping::LocalTrajectoryBuilder3D::MatchingResult
time	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d_test.cc	/^    common::Time time;$/;"	m	struct:cartographer::mapping::__anon104::LocalTrajectoryBuilderTest::TrajectoryNode	file:
time	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.h	/^  common::Time time;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec2D
time	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  common::Time time;$/;"	m	struct:cartographer::mapping::optimization::NodeSpec3D
time	cartographer/cartographer/mapping/pose_extrapolator.h	/^    common::Time time;$/;"	m	struct:cartographer::mapping::PoseExtrapolator::TimedPose
time	cartographer/cartographer/mapping/pose_graph.h	/^    common::Time time;$/;"	m	struct:cartographer::mapping::PoseGraph::InitialTrajectoryPose
time	cartographer/cartographer/mapping/pose_graph_interface.h	/^      common::Time time;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode::LandmarkObservation
time	cartographer/cartographer/mapping/trajectory_node.h	/^    common::Time time;$/;"	m	struct:cartographer::mapping::TrajectoryNode::Data
time	cartographer/cartographer/mapping/trajectory_node.h	/^    common::Time time;$/;"	m	struct:cartographer::mapping::TrajectoryNodePose::ConstantPoseData
time	cartographer/cartographer/mapping/trajectory_node.h	/^  common::Time time() const { return constant_data->time; }$/;"	f	struct:cartographer::mapping::TrajectoryNode
time	cartographer/cartographer/sensor/fixed_frame_pose_data.h	/^  common::Time time;$/;"	m	struct:cartographer::sensor::FixedFramePoseData
time	cartographer/cartographer/sensor/imu_data.h	/^  common::Time time;$/;"	m	struct:cartographer::sensor::ImuData
time	cartographer/cartographer/sensor/landmark_data.h	/^  common::Time time;$/;"	m	struct:cartographer::sensor::LandmarkData
time	cartographer/cartographer/sensor/map_by_time_test.cc	/^  common::Time time;$/;"	m	struct:cartographer::sensor::__anon118::Data	file:
time	cartographer/cartographer/sensor/map_by_time_test.cc	/^  common::Time time;$/;"	m	struct:cartographer::sensor::__anon118::NodeData	file:
time	cartographer/cartographer/sensor/odometry_data.h	/^  common::Time time;$/;"	m	struct:cartographer::sensor::OdometryData
time	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  common::Time time;$/;"	m	struct:cartographer::sensor::TimedPointCloudData
time	cartographer/cartographer/sensor/timed_point_cloud_data.h	/^  common::Time time;$/;"	m	struct:cartographer::sensor::TimedPointCloudOriginData
time	cartographer/cartographer/transform/timestamped_transform.h	/^  common::Time time;$/;"	m	struct:cartographer::transform::TimestampedTransform
time	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^      ::cartographer::common::Time time;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState::LocalSlamData
time_	cartographer/cartographer/mapping/id_test.cc	/^  const common::Time time_;$/;"	m	class:cartographer::mapping::__anon65::Data	file:
time_	cartographer/cartographer/mapping/imu_tracker.h	/^  common::Time time_;$/;"	m	class:cartographer::mapping::ImuTracker
time_	cartographer/cartographer/mapping/imu_tracker_test.cc	/^  common::Time time_ = common::FromUniversal(12345678);$/;"	m	class:cartographer::mapping::__anon54::ImuTrackerTest	file:
time_	cartographer/cartographer/mapping/local_slam_result_data.h	/^  common::Time time_;$/;"	m	class:cartographer::mapping::LocalSlamResultData
time_deltas	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  std::vector<float> time_deltas;$/;"	m	struct:cartographer_ros::__anon128::FrameProperties	file:
timed_pose_queue_	cartographer/cartographer/mapping/pose_extrapolator.h	/^  std::deque<TimedPose> timed_pose_queue_;$/;"	m	class:cartographer::mapping::PoseExtrapolator
times	ceres-solver/internal/ceres/execution_summary.h	/^  const std::map<std::string, double>& times() const { return times_; }$/;"	f	class:ceres::internal::ExecutionSummary
times_	ceres-solver/internal/ceres/execution_summary.h	/^  std::map<std::string, double> times_;$/;"	m	class:ceres::internal::ExecutionSummary
times_mutex_	ceres-solver/internal/ceres/execution_summary.h	/^  Mutex times_mutex_;$/;"	m	class:ceres::internal::ExecutionSummary
timespans	cartographer/cartographer/mapping/detect_floors.h	/^  std::vector<Timespan> timespans;$/;"	m	struct:cartographer::mapping::Floor
timestamped_transforms_	cartographer/cartographer/transform/transform_interpolation_buffer.h	/^  std::vector<TimestampedTransform> timestamped_transforms_;$/;"	m	class:cartographer::transform::TransformInterpolationBuffer
timing_file	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  std::unique_ptr<std::ofstream> timing_file;$/;"	m	struct:cartographer_ros::__anon128::FrameProperties	file:
tmp_e_cols_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  mutable Vector tmp_e_cols_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
tmp_e_cols_2_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  mutable Vector tmp_e_cols_2_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
tmp_f_cols_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  mutable Vector tmp_f_cols_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
tmp_rows_	ceres-solver/internal/ceres/implicit_schur_complement.h	/^  mutable Vector tmp_rows_;$/;"	m	class:ceres::internal::ImplicitSchurComplement
toString	cartographer/cartographer/io/fake_file_writer_test.cc	/^std::string toString(const std::vector<char>& data) {$/;"	f	namespace:cartographer::io::__anon21
to_trajectory_id	cartographer/cartographer/mapping/pose_graph.h	/^    int to_trajectory_id;$/;"	m	struct:cartographer::mapping::PoseGraph::InitialTrajectoryPose
topic	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^    std::string topic;$/;"	m	struct:cartographer_ros::Node::Subscriber
topic	cartographer_ros/cartographer_ros/cartographer_ros/rosbag_validate_main.cc	/^  std::string topic;$/;"	m	struct:cartographer_ros::__anon128::FrameProperties	file:
total_part_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestResult::total_part_count() const {$/;"	f	class:testing::TestResult
total_test_case_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::total_test_case_count() const {$/;"	f	class:testing::UnitTest
total_test_case_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::total_test_case_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int TestCase::total_test_count() const {$/;"	f	class:testing::TestCase
total_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTest::total_test_count() const { return impl()->total_test_count(); }$/;"	f	class:testing::UnitTest
total_test_count	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^int UnitTestImpl::total_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl
total_time_in_seconds	ceres-solver/include/ceres/gradient_problem_solver.h	/^    double total_time_in_seconds;$/;"	m	struct:ceres::GradientProblemSolver::Summary
total_time_in_seconds	ceres-solver/include/ceres/solver.h	/^    double total_time_in_seconds;$/;"	m	struct:ceres::Solver::Summary
total_time_in_seconds	ceres-solver/internal/ceres/line_search.h	/^    double total_time_in_seconds;$/;"	m	struct:ceres::internal::LineSearch::Summary
tr1	ceres-solver/internal/ceres/gtest/gtest.h	/^namespace tr1 {$/;"	n	namespace:std
track	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int track;$/;"	m	struct:__anon155::EuclideanPoint	file:
track	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  int track;$/;"	m	struct:__anon155::Marker	file:
tracking_frame	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  std::string tracking_frame;$/;"	m	struct:cartographer_ros::TrajectoryOptions
tracking_frame_	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	/^  const std::string tracking_frame_;$/;"	m	class:cartographer_ros::TfBridge
tracking_frame_property_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::StringProperty* tracking_frame_property_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
trajectories_	cartographer/cartographer/io/probability_grid_points_processor.h	/^  const std::vector<mapping::proto::Trajectory> trajectories_;$/;"	m	class:cartographer::io::ProbabilityGridPointsProcessor
trajectories_	cartographer/cartographer/io/xray_points_processor.h	/^  const std::vector<mapping::proto::Trajectory> trajectories_;$/;"	m	class:cartographer::io::XRayPointsProcessor
trajectories_	cartographer/cartographer/mapping/id.h	/^  std::map<int, MapByIndex> trajectories_;$/;"	m	class:cartographer::mapping::MapById
trajectories_category_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::Property* trajectories_category_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
trajectory	cartographer/cartographer/mapping/id.h	/^  Range<ConstIterator> trajectory(const int trajectory_id) const {$/;"	f	class:cartographer::mapping::MapById
trajectory	cartographer/cartographer/sensor/map_by_time.h	/^  mapping::Range<ConstIterator> trajectory(const int trajectory_id) const {$/;"	f	class:cartographer::sensor::MapByTime
trajectory_builder_	cartographer_ros/cartographer_ros/cartographer_ros/sensor_bridge.h	/^      trajectory_builder_;$/;"	m	class:cartographer_ros::SensorBridge::cartographer::mapping
trajectory_builder_options	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^      trajectory_builder_options;$/;"	m	struct:cartographer_ros::TrajectoryOptions
trajectory_builder_options_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^      trajectory_builder_options_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
trajectory_builder_options_	cartographer/cartographer/mapping/map_builder_test.cc	/^  proto::TrajectoryBuilderOptions trajectory_builder_options_;$/;"	m	class:cartographer::mapping::__anon55::MapBuilderTest	file:
trajectory_builder_stubs_	cartographer/cartographer/cloud/client/map_builder_stub.h	/^      trajectory_builder_stubs_;$/;"	m	class:cartographer::cloud::MapBuilderStub
trajectory_builders_	cartographer/cartographer/mapping/map_builder.h	/^      trajectory_builders_;$/;"	m	class:cartographer::mapping::MapBuilder
trajectory_connectivity_state_	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.h	/^  TrajectoryConnectivityState trajectory_connectivity_state_;$/;"	m	class:cartographer::mapping::PoseGraph2D
trajectory_connectivity_state_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.h	/^  TrajectoryConnectivityState trajectory_connectivity_state_;$/;"	m	class:cartographer::mapping::PoseGraph3D
trajectory_data	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  const std::map<int, PoseGraphInterface::TrajectoryData>& trajectory_data()$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
trajectory_data_	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.h	/^  std::map<int, PoseGraphInterface::TrajectoryData> trajectory_data_;$/;"	m	class:cartographer::mapping::optimization::OptimizationProblem3D
trajectory_id	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    const int trajectory_id;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamSubscriptionId
trajectory_id	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    int trajectory_id;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::Data
trajectory_id	cartographer/cartographer/cloud/internal/map_builder_context_interface.h	/^    int trajectory_id;$/;"	m	struct:cartographer::cloud::MapBuilderContextInterface::LocalSlamResult
trajectory_id	cartographer/cartographer/io/points_batch.h	/^  int trajectory_id;$/;"	m	struct:cartographer::io::PointsBatch
trajectory_id	cartographer/cartographer/mapping/id.h	/^  int trajectory_id;$/;"	m	struct:cartographer::mapping::NodeId
trajectory_id	cartographer/cartographer/mapping/id.h	/^  int trajectory_id;$/;"	m	struct:cartographer::mapping::SubmapId
trajectory_id	cartographer/cartographer/mapping/pose_graph_interface.h	/^      int trajectory_id;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode::LandmarkObservation
trajectory_id	cartographer/cartographer/sensor/internal/ordered_multi_queue.h	/^  int trajectory_id;$/;"	m	struct:cartographer::sensor::QueueKey
trajectory_id	cartographer/cartographer/sensor/internal/test_helpers.h	/^  const int trajectory_id;$/;"	m	struct:cartographer::sensor::test::CollatorInput
trajectory_id_	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.h	/^  const int trajectory_id_;$/;"	m	class:cartographer::cloud::TrajectoryBuilderStub
trajectory_id_	cartographer/cartographer/mapping/internal/3d/pose_graph_3d_test.cc	/^  int trajectory_id_;$/;"	m	class:cartographer::mapping::__anon105::EvenSubmapTrimmer	file:
trajectory_id_	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^  const int trajectory_id_;$/;"	m	class:cartographer::mapping::CollatedTrajectoryBuilder
trajectory_id_	cartographer/cartographer/mapping/internal/global_trajectory_builder.cc	/^  const int trajectory_id_;$/;"	m	class:cartographer::mapping::__anon84::GlobalTrajectoryBuilder	file:
trajectory_id_	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  const int trajectory_id_;$/;"	m	class:cartographer::mapping::PureLocalizationTrimmer
trajectory_ids	cartographer/cartographer/mapping/id.h	/^  Range<ConstTrajectoryIterator> trajectory_ids() const {$/;"	f	class:cartographer::mapping::MapById
trajectory_ids	cartographer/cartographer/sensor/map_by_time.h	/^  mapping::Range<ConstTrajectoryIterator> trajectory_ids() const {$/;"	f	class:cartographer::sensor::MapByTime
trajectory_node_list_publisher_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  ::ros::Publisher trajectory_node_list_publisher_;$/;"	m	class:cartographer_ros::Node
trajectory_nodes_	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  MapById<NodeId, TrajectoryNode> trajectory_nodes_;$/;"	m	class:cartographer::mapping::testing::FakeTrimmable
trajectory_options	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^    TrajectoryOptions trajectory_options;$/;"	m	struct:cartographer_ros::MapBuilderBridge::TrajectoryState
trajectory_options_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  std::unordered_map<int, TrajectoryOptions> trajectory_options_;$/;"	m	class:cartographer_ros::MapBuilderBridge
trajectory_publish_period_sec	cartographer_ros/cartographer_ros/cartographer_ros/node_options.h	/^  double trajectory_publish_period_sec;$/;"	m	struct:cartographer_ros::NodeOptions
trajectory_to_highest_marker_id_	cartographer_ros/cartographer_ros/cartographer_ros/map_builder_bridge.h	/^  std::unordered_map<int, size_t> trajectory_to_highest_marker_id_;$/;"	m	class:cartographer_ros::MapBuilderBridge
trajectory_to_queue_	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  std::unordered_map<int, OrderedMultiQueue> trajectory_to_queue_;$/;"	m	class:cartographer::sensor::TrajectoryCollator
trajectory_to_queue_keys_	cartographer/cartographer/sensor/internal/trajectory_collator.h	/^  std::unordered_map<int, std::vector<QueueKey>> trajectory_to_queue_keys_;$/;"	m	class:cartographer::sensor::TrajectoryCollator
transform	cartographer/cartographer/transform/rigid_transform.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform	cartographer/cartographer/transform/rigid_transform.h	/^namespace transform {$/;"	n	namespace:cartographer
transform	cartographer/cartographer/transform/rigid_transform_test.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform	cartographer/cartographer/transform/rigid_transform_test_helpers.h	/^namespace transform {$/;"	n	namespace:cartographer
transform	cartographer/cartographer/transform/timestamped_transform.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform	cartographer/cartographer/transform/timestamped_transform.h	/^  transform::Rigid3d transform;$/;"	m	struct:cartographer::transform::TimestampedTransform
transform	cartographer/cartographer/transform/timestamped_transform.h	/^namespace transform {$/;"	n	namespace:cartographer
transform	cartographer/cartographer/transform/transform.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform	cartographer/cartographer/transform/transform.h	/^namespace transform {$/;"	n	namespace:cartographer
transform	cartographer/cartographer/transform/transform_interpolation_buffer.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform	cartographer/cartographer/transform/transform_interpolation_buffer.h	/^namespace transform {$/;"	n	namespace:cartographer
transform	cartographer/cartographer/transform/transform_interpolation_buffer_test.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform	cartographer/cartographer/transform/transform_test.cc	/^namespace transform {$/;"	n	namespace:cartographer	file:
transform_	cartographer/cartographer/io/xray_points_processor.h	/^  const transform::Rigid3f transform_;$/;"	m	class:cartographer::io::XRayPointsProcessor
translation	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^    std::array<double, 3> translation;$/;"	m	struct:cartographer::mapping::optimization::CeresPose::Data
translation	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  const double* translation() const { return data_->translation.data(); }$/;"	f	class:cartographer::mapping::optimization::CeresPose
translation	cartographer/cartographer/mapping/internal/optimization/ceres_pose.h	/^  double* translation() { return data_->translation.data(); }$/;"	f	class:cartographer::mapping::optimization::CeresPose
translation	cartographer/cartographer/transform/rigid_transform.h	/^  const Vector& translation() const { return translation_; }$/;"	f	class:cartographer::transform::Rigid2
translation	cartographer/cartographer/transform/rigid_transform.h	/^  const Vector& translation() const { return translation_; }$/;"	f	class:cartographer::transform::Rigid3
translation_	cartographer/cartographer/transform/rigid_transform.h	/^  Vector translation_;$/;"	m	class:cartographer::transform::Rigid2
translation_	cartographer/cartographer/transform/rigid_transform.h	/^  Vector translation_;$/;"	m	class:cartographer::transform::Rigid3
translation_weight	cartographer/cartographer/mapping/pose_graph_interface.h	/^      double translation_weight;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint::Pose
translation_weight	cartographer/cartographer/mapping/pose_graph_interface.h	/^      double translation_weight;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::LandmarkNode::LandmarkObservation
translation_weight	cartographer/cartographer/sensor/landmark_data.h	/^  double translation_weight;$/;"	m	struct:cartographer::sensor::LandmarkObservation
translation_weight_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_2d.h	/^  const double translation_weight_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction2D
translation_weight_	cartographer/cartographer/mapping/internal/optimization/cost_functions/landmark_cost_function_3d.h	/^  const double translation_weight_;$/;"	m	class:cartographer::mapping::optimization::LandmarkCostFunction3D
translation_weight_	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  const double translation_weight_;$/;"	m	class:cartographer::mapping::optimization::__anon90::AnalyticalSpaCostFunction2D	file:
translational_squared	cartographer/cartographer/ground_truth/compute_relations_metrics_main.cc	/^  double translational_squared;$/;"	m	struct:cartographer::ground_truth::__anon49::Error	file:
trimmed_submaps	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  std::vector<SubmapId> trimmed_submaps() { return trimmed_submaps_; }$/;"	f	class:cartographer::mapping::testing::FakeTrimmable
trimmed_submaps_	cartographer/cartographer/mapping/internal/testing/fake_trimmable.h	/^  std::vector<SubmapId> trimmed_submaps_;$/;"	m	class:cartographer::mapping::testing::FakeTrimmable
true_type	ceres-solver/internal/ceres/gtest/gtest.h	/^typedef bool_constant<true> true_type;$/;"	t	namespace:std::tr1
trust_region_minimizer_iterations_to_dump	ceres-solver/include/ceres/solver.h	/^    std::vector<int> trust_region_minimizer_iterations_to_dump;$/;"	m	struct:ceres::Solver::Options
trust_region_minimizer_iterations_to_dump	ceres-solver/internal/ceres/minimizer.h	/^    std::vector<int> trust_region_minimizer_iterations_to_dump;$/;"	m	struct:ceres::internal::Minimizer::Options
trust_region_problem_dump_directory	ceres-solver/include/ceres/solver.h	/^    std::string trust_region_problem_dump_directory;$/;"	m	struct:ceres::Solver::Options
trust_region_problem_dump_directory	ceres-solver/internal/ceres/minimizer.h	/^    std::string trust_region_problem_dump_directory;$/;"	m	struct:ceres::internal::Minimizer::Options
trust_region_problem_dump_format_type	ceres-solver/include/ceres/solver.h	/^    DumpFormatType trust_region_problem_dump_format_type;$/;"	m	struct:ceres::Solver::Options
trust_region_problem_dump_format_type	ceres-solver/internal/ceres/minimizer.h	/^    DumpFormatType trust_region_problem_dump_format_type;$/;"	m	struct:ceres::internal::Minimizer::Options
trust_region_radius	ceres-solver/include/ceres/iteration_callback.h	/^  double trust_region_radius;$/;"	m	struct:ceres::IterationSummary
trust_region_step_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector trust_region_step_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
trust_region_strategy	ceres-solver/internal/ceres/minimizer.h	/^    shared_ptr<TrustRegionStrategy> trust_region_strategy;$/;"	m	struct:ceres::internal::Minimizer::Options
trust_region_strategy_type	ceres-solver/include/ceres/solver.h	/^    TrustRegionStrategyType trust_region_strategy_type;$/;"	m	struct:ceres::Solver::Options
trust_region_strategy_type	ceres-solver/include/ceres/solver.h	/^    TrustRegionStrategyType trust_region_strategy_type;$/;"	m	struct:ceres::Solver::Summary
trust_region_strategy_type	ceres-solver/internal/ceres/trust_region_strategy.h	/^    TrustRegionStrategyType trust_region_strategy_type;$/;"	m	struct:ceres::internal::TrustRegionStrategy::Options
tsm	ceres-solver/internal/ceres/compressed_row_sparse_matrix_test.cc	/^  scoped_ptr<TripletSparseMatrix> tsm;$/;"	m	class:ceres::internal::CompressedRowSparseMatrixTest	file:
tsm	ceres-solver/internal/ceres/dense_sparse_matrix_test.cc	/^  scoped_ptr<TripletSparseMatrix> tsm;$/;"	m	class:ceres::internal::DenseSparseMatrixTest	file:
tsm	ceres-solver/internal/ceres/dynamic_compressed_row_sparse_matrix_test.cc	/^  scoped_ptr<TripletSparseMatrix> tsm;$/;"	m	class:ceres::internal::DynamicCompressedRowSparseMatrixTest	file:
tsm_	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.h	/^  scoped_ptr<TripletSparseMatrix> tsm_;$/;"	m	class:ceres::internal::BlockRandomAccessDiagonalMatrix
tsm_	ceres-solver/internal/ceres/block_random_access_sparse_matrix.h	/^  scoped_ptr<TripletSparseMatrix> tsm_;$/;"	m	class:ceres::internal::BlockRandomAccessSparseMatrix
tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^  tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_(),$/;"	f	class:std::tr1::tuple
tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^  tuple() {}$/;"	f	class:std::tr1::tuple
tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^  tuple(const tuple& \/* t *\/)  {}$/;"	f	class:std::tr1::tuple
tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^  tuple(const tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),$/;"	f	class:std::tr1::tuple
tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^class tuple {$/;"	c	namespace:std::tr1
tuple	ceres-solver/internal/ceres/gtest/gtest.h	/^class tuple<> {$/;"	c	namespace:std::tr1
tuple2_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const Tuple2Matcher tuple2_matcher_;$/;"	m	class:testing::internal::BoundSecondMatcher
tuple_element	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct tuple_element : ::std::tr1::tuple_element<I, Tuple> {};$/;"	s	struct:testing::internal::TuplePolicy
tuple_element	ceres-solver/internal/ceres/gtest/gtest.h	/^  struct tuple_element : ::std::tuple_element<I, Tuple> {};$/;"	s	struct:testing::internal::TuplePolicy
tuple_element	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_element {$/;"	s	namespace:std::tr1
tuple_matcher_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const TupleMatcher tuple_matcher_;$/;"	m	class:testing::internal::PointwiseMatcher
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const size_t tuple_size = ::std::tr1::tuple_size<Tuple>::value;$/;"	m	struct:testing::internal::TuplePolicy
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const size_t tuple_size = ::std::tuple_size<Tuple>::value;$/;"	m	struct:testing::internal::TuplePolicy
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^const size_t TuplePolicy< ::std::tuple<Types...> >::tuple_size;$/;"	m	class:testing::internal::TuplePolicy
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^const size_t TuplePolicy<TupleT>::tuple_size;$/;"	m	class:testing::internal::TuplePolicy
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_0_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_10_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_1_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_2_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_3_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_4_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_5_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_6_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_7_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_8_TUPLE_(T) > {$/;"	s	namespace:std::tr1
tuple_size	ceres-solver/internal/ceres/gtest/gtest.h	/^struct tuple_size<GTEST_9_TUPLE_(T) > {$/;"	s	namespace:std::tr1
type	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^    SensorType type;$/;"	m	struct:cartographer::mapping::TrajectoryBuilderInterface::SensorId
type	ceres-solver/internal/ceres/casts.h	/^  typedef T type;$/;"	t	struct:ceres::identity_
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k1), GMOCK_FIELD_TYPE_(Tuple, k2)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k1)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k3), GMOCK_FIELD_TYPE_(Tuple, k4)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k3)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k5), GMOCK_FIELD_TYPE_(Tuple, k6)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k5)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k7), GMOCK_FIELD_TYPE_(Tuple, k8)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k7)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      GMOCK_FIELD_TYPE_(Tuple, k9)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A10> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A4> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A5> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7>, Matcher<A8> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^      Matcher<A5>, Matcher<A6>, Matcher<A7>, Matcher<A8>, Matcher<A9> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult10
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult2
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult3
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult4
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult5
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult6
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult7
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult8
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AllOfResult9
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult10
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult2
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult3
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult4
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult5
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult6
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult7
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult8
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  > type;$/;"	t	struct:testing::internal::AnyOfResult9
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple< > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<GMOCK_FIELD_TYPE_(Tuple, k0)> type;$/;"	t	class:testing::internal::TupleFields
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<Matcher<A1> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<Matcher<A1>, Matcher<A2> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef ::testing::tuple<Matcher<A1>, Matcher<A2>, Matcher<A3> > type;$/;"	t	struct:testing::internal::MatcherTuple
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef M1 type;$/;"	t	struct:testing::internal::AllOfResult1
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef M1 type;$/;"	t	struct:testing::internal::AnyOfResult1
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef RawContainer type;$/;"	t	class:testing::internal::StlContainerView
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Result type();$/;"	t	class:testing::internal::SelectArgs
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef T type;$/;"	t	struct:testing::internal::RemoveConstFromKey
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef const T* type;$/;"	t	struct:testing::internal::DecayArray
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef internal::NativeArray<RawElement> type;$/;"	t	class:testing::internal::StlContainerView
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef std::pair<K, V> type;$/;"	t	struct:testing::internal::RemoveConstFromKey
type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef typename Pointer::element_type type;$/;"	t	struct:testing::internal::PointeeOf
type	ceres-solver/internal/ceres/gmock/gmock.h	/^struct PointeeOf<T*> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::PointeeOf
type	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct DecayArray { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::DecayArray
type	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct remove_reference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::remove_reference
type	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct remove_reference<T&> { typedef T type; }; \/\/ NOLINT$/;"	t	struct:testing::internal::remove_reference
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T12> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16, T17> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15, T16> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14, T15> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13, T14> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T13> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21, T22> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20, T21> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19, T20> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18, T19> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17, T18> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16, T17> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15, T16> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14, T15> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T14> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T26> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30, T31> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29, T30> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28, T29> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27, T28> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T27> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35, T36> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34, T35> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33, T34> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32, T33> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31, T32> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30, T31> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29, T30> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28, T29> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T28> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T40> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;$/;"	t	struct:testing::internal::TypeList
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44, T45> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43, T44> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42, T43> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41, T42> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T41> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48, T49, T50> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48, T49> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47, T48> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44, T45, T46, T47> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44, T45, T46> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44, T45> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43, T44> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42, T43> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^      T42> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^    TestPartResult::Type const type;$/;"	m	class:testing::internal::AssertHelper::AssertHelperData::TestPartResult
type	ceres-solver/internal/ceres/gtest/gtest.h	/^    typedef Tmpl<T> type;$/;"	t	struct:testing::internal::TemplateSel::Bind
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  Type type() const { return type_; }$/;"	f	class:testing::TestPartResult
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T0 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T1 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T2 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T3 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T4 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T5 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T6 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T7 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T8 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T9 type;$/;"	t	struct:std::tr1::gtest_internal::TupleElement
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates0 type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates1<T1> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates2<T1, T2> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates3<T1, T2, T3> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates4<T1, T2, T3, T4> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::internal::Templates
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Types1<T> type;$/;"	t	struct:testing::internal::TypeList
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef bool type;$/;"	t	struct:testing::internal::AssertTypeEq
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef bool_constant<bool_value> type;$/;"	t	struct:std::tr1::bool_constant
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types0 type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types1<T1> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types2<T1, T2> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types3<T1, T2, T3> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types4<T1, T2, T3, T4> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types5<T1, T2, T3, T4, T5> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types6<T1, T2, T3, T4, T5, T6> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;$/;"	t	struct:testing::Types
type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename RemoveConst<T>::type type[N];$/;"	t	struct:testing::internal::RemoveConst
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddRef { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::AddRef
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddReference { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct AddReference<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::AddReference
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct ByRef { typedef const T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct ByRef<T&> { typedef T& type; };  \/\/ NOLINT$/;"	t	struct:std::tr1::gtest_internal::ByRef
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveConst { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveConst<const T> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveConst
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveReference { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	ceres-solver/internal/ceres/gtest/gtest.h	/^struct RemoveReference<T&> { typedef T type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::RemoveReference
type	ceres-solver/internal/ceres/gtest/gtest.h	/^template<> struct EnableIf<true> { typedef void type; };  \/\/ NOLINT$/;"	t	struct:testing::internal::EnableIf
type	ceres-solver/internal/ceres/integral_types.h	/^      type;$/;"	t	struct:ceres::internal::Integer
type	ceres-solver/internal/ceres/integral_types.h	/^      type;$/;"	t	struct:ceres::internal::UnsignedInteger
type	ceres-solver/internal/ceres/integral_types.h	/^  typedef kFalseType type;$/;"	t	struct:ceres::internal::Ternary
type	ceres-solver/internal/ceres/integral_types.h	/^  typedef kTrueType type;$/;"	t	struct:ceres::internal::Ternary
type	ceres-solver/internal/ceres/line_search_direction.h	/^    LineSearchDirectionType type;$/;"	m	struct:ceres::internal::LineSearchDirection::Options
type	ceres-solver/internal/ceres/linear_solver.h	/^    LinearSolverType type;$/;"	m	struct:ceres::internal::LinearSolver::Options
type	ceres-solver/internal/ceres/preconditioner.h	/^    PreconditionerType type;$/;"	m	struct:ceres::internal::Preconditioner::Options
type_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  const TestPartResult::Type type_;$/;"	m	class:testing::internal::SingleFailureChecker	file:
type_	ceres-solver/internal/ceres/gtest/gtest.h	/^  MutexType type_;$/;"	m	class:std::tr1::Mutex
type_	ceres-solver/internal/ceres/gtest/gtest.h	/^  Type type_;$/;"	m	class:testing::TestPartResult
type_	ceres-solver/internal/ceres/line_search_direction.cc	/^  const NonlinearConjugateGradientType type_;$/;"	m	class:ceres::internal::NonlinearConjugateGradient	file:
type_equals	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T1, typename T2> struct type_equals : public false_type {};$/;"	s	namespace:testing::internal
type_equals	ceres-solver/internal/ceres/gmock/gmock.h	/^template <typename T> struct type_equals<T, T> : public true_type {};$/;"	s	namespace:testing::internal
type_param	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestCase
type_param	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestInfo
type_param_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestCase
type_param_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestInfo
u	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double u[] = {4.0, 2.0, 1.0, 0.5, 0.25, 0.167, 0.125, 0.1,$/;"	m	namespace:ceres::examples	file:
u	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^    double u;$/;"	m	struct:ceres::internal::BundleAdjustmentProblem::BundlerResidual	file:
u_	ceres-solver/internal/ceres/gtest/gtest.h	/^  FloatingPointUnion u_;$/;"	m	class:testing::internal::FloatingPoint
uint16	ceres-solver/internal/ceres/integral_types.h	/^typedef UnsignedInteger<16>::type uint16;$/;"	t	namespace:ceres::internal
uint32	ceres-solver/internal/ceres/integral_types.h	/^typedef UnsignedInteger<32>::type uint32;$/;"	t	namespace:ceres::internal
uint32_t	ceres-solver/examples/libmv_bundle_adjuster.cc	/^typedef unsigned __int32 uint32_t;$/;"	t	file:
uint64	ceres-solver/internal/ceres/integral_types.h	/^typedef UnsignedInteger<64>::type uint64;$/;"	t	namespace:ceres::internal
uint8	ceres-solver/internal/ceres/integral_types.h	/^typedef UnsignedInteger< 8>::type uint8;$/;"	t	namespace:ceres::internal
uncaptured_fd_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int uncaptured_fd_;$/;"	m	class:testing::internal::CapturedStream	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem14::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem14	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem18::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem18	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem10::unconstrained_optimal_cost = 87.9458;$/;"	m	class:ceres::examples::TestProblem10	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem11::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem11	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem12::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem12	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem13::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem13	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem15::unconstrained_optimal_cost = 3.07505e-4;$/;"	m	class:ceres::examples::TestProblem15	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem16::unconstrained_optimal_cost = 85822.2;$/;"	m	class:ceres::examples::TestProblem16	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem17::unconstrained_optimal_cost = 5.46489e-5;$/;"	m	class:ceres::examples::TestProblem17	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem19::unconstrained_optimal_cost = 4.01377e-2;$/;"	m	class:ceres::examples::TestProblem19	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem1::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem1	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem2::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem2	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem3::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem3	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem4::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem4	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem5::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem5	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem6::unconstrained_optimal_cost = 124.362;$/;"	m	class:ceres::examples::TestProblem6	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem7::unconstrained_optimal_cost = 0.0;$/;"	m	class:ceres::examples::TestProblem7	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem8::unconstrained_optimal_cost = 8.21487e-3;$/;"	m	class:ceres::examples::TestProblem8	file:
unconstrained_optimal_cost	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem9::unconstrained_optimal_cost = 0.112793e-7;$/;"	m	class:ceres::examples::TestProblem9	file:
uneliminated_row_begins_	ceres-solver/internal/ceres/schur_eliminator.h	/^  int uneliminated_row_begins_;$/;"	m	class:ceres::internal::SchurEliminator
unfinished_submaps_	cartographer/cartographer/mapping/internal/submap_controller.h	/^      unfinished_submaps_;$/;"	m	class:cartographer::mapping::SubmapController
unit_test_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultGlobalTestPartResultReporter	file:
unit_test_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultPerThreadTestPartResultReporter	file:
untyped_actions_	ceres-solver/internal/ceres/gmock/gmock.h	/^  UntypedActions untyped_actions_;$/;"	m	class:testing::internal::ExpectationBase
untyped_expectations_	ceres-solver/internal/ceres/gmock/gmock.h	/^  UntypedExpectations untyped_expectations_;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
untyped_on_call_specs_	ceres-solver/internal/ceres/gmock/gmock.h	/^  UntypedOnCallSpecs untyped_on_call_specs_;$/;"	m	class:testing::internal::UntypedFunctionMockerBase
update	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^void SubmapsDisplay::update(const float wall_dt, const float ros_dt) {$/;"	f	class:cartographer_rviz::SubmapsDisplay
update_indices	cartographer/cartographer/mapping/2d/grid_2d.h	/^  const std::vector<int>& update_indices() const { return update_indices_; }$/;"	f	class:cartographer::mapping::Grid2D
update_indices_	cartographer/cartographer/mapping/2d/grid_2d.h	/^  std::vector<int> update_indices_;$/;"	m	class:cartographer::mapping::Grid2D
update_state_every_iteration	ceres-solver/include/ceres/solver.h	/^    bool update_state_every_iteration;$/;"	m	struct:ceres::Solver::Options
upload_thread_	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^  std::unique_ptr<std::thread> upload_thread_;$/;"	m	class:cartographer::cloud::__anon37::LocalTrajectoryUploader	file:
uploading_map_builder_server_options_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  proto::MapBuilderServerOptions uploading_map_builder_server_options_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
uploading_server_	cartographer/cartographer/cloud/internal/client_server_test.cc	/^  std::unique_ptr<MapBuilderServer> uploading_server_;$/;"	m	class:cartographer::cloud::__anon48::ClientServerTest	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem14::upper_bounds[] = {0.0, 10.0, 100.0, 100.0};$/;"	m	class:ceres::examples::TestProblem14	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double TestProblem18::upper_bounds[] = {2.0, 8.0, 1.0, 7.0, 5.0, 5.0};$/;"	m	class:ceres::examples::TestProblem18	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem10::upper_bounds[] = {$/;"	m	class:ceres::examples::TestProblem10	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem11::upper_bounds[] = {10.0, 10.0, 10.0};$/;"	m	class:ceres::examples::TestProblem11	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem12::upper_bounds[] = {2.0, 9.5, 20.0};$/;"	m	class:ceres::examples::TestProblem12	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem13::upper_bounds[] = {$/;"	m	class:ceres::examples::TestProblem13	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem15::upper_bounds[] = {$/;"	m	class:ceres::examples::TestProblem15	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem16::upper_bounds[] = {100.0, 15.0, 0.0, 0.2};$/;"	m	class:ceres::examples::TestProblem16	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem17::upper_bounds[] = {$/;"	m	class:ceres::examples::TestProblem17	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem19::upper_bounds[] = {$/;"	m	class:ceres::examples::TestProblem19	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem1::upper_bounds[] = {kDoubleMax, kDoubleMax};$/;"	m	class:ceres::examples::TestProblem1	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem2::upper_bounds[] = {kDoubleMax, kDoubleMax};$/;"	m	class:ceres::examples::TestProblem2	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem3::upper_bounds[] = {1.0, 9.0};$/;"	m	class:ceres::examples::TestProblem3	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem4::upper_bounds[] = {1000000.0, 100.0};$/;"	m	class:ceres::examples::TestProblem4	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem5::upper_bounds[] = {10.0, 100.0};$/;"	m	class:ceres::examples::TestProblem5	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem6::upper_bounds[] = {kDoubleMax, kDoubleMax};$/;"	m	class:ceres::examples::TestProblem6	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem7::upper_bounds[] = {0.8, 1.0, 1.0};$/;"	m	class:ceres::examples::TestProblem7	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem8::upper_bounds[] = {$/;"	m	class:ceres::examples::TestProblem8	file:
upper_bounds	ceres-solver/examples/more_garbow_hillstrom.cc	/^const double TestProblem9::upper_bounds[] = {4.2, 2.0, 0.1};$/;"	m	class:ceres::examples::TestProblem9	file:
upper_bounds_	ceres-solver/internal/ceres/parameter_block.h	/^  scoped_array<double> upper_bounds_;$/;"	m	class:ceres::internal::ParameterBlock
use_approximate_eigenvalue_bfgs_scaling	ceres-solver/include/ceres/gradient_problem_solver.h	/^    bool use_approximate_eigenvalue_bfgs_scaling;$/;"	m	struct:ceres::GradientProblemSolver::Options
use_approximate_eigenvalue_bfgs_scaling	ceres-solver/include/ceres/solver.h	/^    bool use_approximate_eigenvalue_bfgs_scaling;$/;"	m	struct:ceres::Solver::Options
use_approximate_eigenvalue_bfgs_scaling	ceres-solver/internal/ceres/line_search_direction.h	/^    bool use_approximate_eigenvalue_bfgs_scaling;$/;"	m	struct:ceres::internal::LineSearchDirection::Options
use_approximate_eigenvalue_bfgs_scaling	ceres-solver/internal/ceres/minimizer.h	/^    bool use_approximate_eigenvalue_bfgs_scaling;$/;"	m	struct:ceres::internal::Minimizer::Options
use_approximate_eigenvalue_scaling_	ceres-solver/internal/ceres/line_search_direction.cc	/^  const bool use_approximate_eigenvalue_scaling_;$/;"	m	class:ceres::internal::BFGS	file:
use_approximate_eigenvalue_scaling_	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  const bool use_approximate_eigenvalue_scaling_;$/;"	m	class:ceres::internal::LowRankInverseHessian
use_automatic_ordering	ceres-solver/internal/ceres/test_util.h	/^  bool use_automatic_ordering;$/;"	m	struct:ceres::internal::SolverConfig
use_explicit_schur_complement	ceres-solver/include/ceres/solver.h	/^    bool use_explicit_schur_complement;$/;"	m	struct:ceres::Solver::Options
use_explicit_schur_complement	ceres-solver/internal/ceres/linear_solver.h	/^    bool use_explicit_schur_complement;$/;"	m	struct:ceres::internal::LinearSolver::Options
use_inner_iterations	ceres-solver/include/ceres/solver.h	/^    bool use_inner_iterations;$/;"	m	struct:ceres::Solver::Options
use_kidnap_detection	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  bool use_kidnap_detection;$/;"	m	struct:cartographer_ros::TrajectoryOptions
use_landmarks	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  bool use_landmarks;$/;"	m	struct:cartographer_ros::TrajectoryOptions
use_nav_sat	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  bool use_nav_sat;$/;"	m	struct:cartographer_ros::TrajectoryOptions
use_nonmonotonic_steps	ceres-solver/include/ceres/solver.h	/^    bool use_nonmonotonic_steps;$/;"	m	struct:ceres::Solver::Options
use_nonmonotonic_steps	ceres-solver/internal/ceres/minimizer.h	/^    bool use_nonmonotonic_steps;$/;"	m	struct:ceres::internal::Minimizer::Options
use_odometry	cartographer_ros/cartographer_ros/cartographer_ros/trajectory_options.h	/^  bool use_odometry;$/;"	m	struct:cartographer_ros::TrajectoryOptions
use_postordering	ceres-solver/include/ceres/solver.h	/^    bool use_postordering;$/;"	m	struct:ceres::Solver::Options
use_postordering	ceres-solver/internal/ceres/linear_solver.h	/^    bool use_postordering;$/;"	m	struct:ceres::internal::LinearSolver::Options
use_quaternions_	ceres-solver/examples/bal_problem.h	/^  bool use_quaternions_;$/;"	m	class:ceres::examples::BALProblem
usecols	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^                                     usecols = (1, 2, 3))$/;"	v
usecols	ceres-solver/examples/slam/pose_graph_3d/plot_results.py	/^                                    usecols = (1, 2, 3))$/;"	v
user_data_	ceres-solver/internal/ceres/c_api.cc	/^  void* user_data_;$/;"	m	class:CallbackCostFunction	file:
user_data_	ceres-solver/internal/ceres/c_api.cc	/^  void* user_data_;$/;"	m	class:CallbackLossFunction	file:
user_state	ceres-solver/internal/ceres/parameter_block.h	/^  const double* user_state() const { return user_state_; }$/;"	f	class:ceres::internal::ParameterBlock
user_state_	ceres-solver/internal/ceres/parameter_block.h	/^  double* user_state_;$/;"	m	class:ceres::internal::ParameterBlock
v	ceres-solver/include/ceres/jet.h	/^  Eigen::Matrix<T, N, 1, Eigen::DontAlign> v;$/;"	m	struct:ceres::Jet
v	ceres-solver/include/ceres/jet.h	/^  alignas(kAlignment) Eigen::Matrix<T, N, 1, kAlignOrNot> v;$/;"	m	struct:ceres::Jet
v	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^    double v;$/;"	m	struct:ceres::internal::BundleAdjustmentProblem::BundlerResidual	file:
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray10
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray11
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray12
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray13
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray14
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray15
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray16
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray17
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray18
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray19
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray20
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray21
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray22
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray23
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray24
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray25
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray26
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray27
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray28
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray29
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray30
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray31
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray32
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray33
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray34
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray35
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray36
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray37
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray38
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray39
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray40
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray41
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray42
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray43
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray44
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray45
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray46
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray47
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray48
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray49
v10_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T10 v10_;$/;"	m	class:testing::internal::ValueArray50
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray11
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray12
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray13
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray14
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray15
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray16
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray17
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray18
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray19
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray20
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray21
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray22
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray23
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray24
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray25
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray26
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray27
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray28
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray29
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray30
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray31
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray32
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray33
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray34
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray35
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray36
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray37
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray38
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray39
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray40
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray41
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray42
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray43
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray44
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray45
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray46
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray47
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray48
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray49
v11_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T11 v11_;$/;"	m	class:testing::internal::ValueArray50
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray12
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray13
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray14
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray15
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray16
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray17
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray18
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray19
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray20
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray21
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray22
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray23
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray24
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray25
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray26
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray27
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray28
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray29
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray30
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray31
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray32
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray33
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray34
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray35
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray36
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray37
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray38
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray39
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray40
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray41
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray42
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray43
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray44
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray45
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray46
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray47
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray48
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray49
v12_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T12 v12_;$/;"	m	class:testing::internal::ValueArray50
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray13
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray14
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray15
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray16
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray17
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray18
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray19
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray20
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray21
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray22
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray23
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray24
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray25
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray26
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray27
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray28
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray29
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray30
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray31
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray32
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray33
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray34
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray35
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray36
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray37
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray38
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray39
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray40
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray41
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray42
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray43
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray44
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray45
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray46
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray47
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray48
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray49
v13_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T13 v13_;$/;"	m	class:testing::internal::ValueArray50
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray14
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray15
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray16
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray17
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray18
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray19
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray20
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray21
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray22
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray23
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray24
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray25
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray26
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray27
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray28
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray29
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray30
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray31
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray32
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray33
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray34
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray35
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray36
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray37
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray38
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray39
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray40
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray41
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray42
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray43
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray44
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray45
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray46
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray47
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray48
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray49
v14_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T14 v14_;$/;"	m	class:testing::internal::ValueArray50
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray15
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray16
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray17
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray18
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray19
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray20
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray21
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray22
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray23
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray24
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray25
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray26
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray27
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray28
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray29
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray30
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray31
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray32
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray33
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray34
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray35
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray36
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray37
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray38
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray39
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray40
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray41
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray42
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray43
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray44
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray45
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray46
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray47
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray48
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray49
v15_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T15 v15_;$/;"	m	class:testing::internal::ValueArray50
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray16
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray17
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray18
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray19
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray20
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray21
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray22
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray23
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray24
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray25
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray26
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray27
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray28
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray29
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray30
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray31
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray32
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray33
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray34
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray35
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray36
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray37
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray38
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray39
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray40
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray41
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray42
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray43
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray44
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray45
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray46
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray47
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray48
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray49
v16_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T16 v16_;$/;"	m	class:testing::internal::ValueArray50
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray17
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray18
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray19
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray20
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray21
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray22
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray23
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray24
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray25
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray26
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray27
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray28
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray29
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray30
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray31
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray32
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray33
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray34
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray35
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray36
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray37
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray38
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray39
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray40
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray41
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray42
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray43
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray44
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray45
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray46
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray47
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray48
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray49
v17_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T17 v17_;$/;"	m	class:testing::internal::ValueArray50
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray18
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray19
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray20
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray21
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray22
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray23
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray24
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray25
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray26
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray27
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray28
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray29
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray30
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray31
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray32
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray33
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray34
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray35
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray36
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray37
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray38
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray39
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray40
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray41
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray42
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray43
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray44
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray45
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray46
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray47
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray48
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray49
v18_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T18 v18_;$/;"	m	class:testing::internal::ValueArray50
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray19
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray20
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray21
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray22
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray23
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray24
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray25
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray26
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray27
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray28
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray29
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray30
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray31
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray32
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray33
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray34
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray35
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray36
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray37
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray38
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray39
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray40
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray41
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray42
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray43
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray44
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray45
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray46
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray47
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray48
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray49
v19_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T19 v19_;$/;"	m	class:testing::internal::ValueArray50
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray1
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray10
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray11
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray12
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray13
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray14
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray15
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray16
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray17
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray18
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray19
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray2
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray20
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray21
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray22
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray23
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray24
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray25
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray26
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray27
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray28
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray29
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray3
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray30
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray31
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray32
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray33
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray34
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray35
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray36
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray37
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray38
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray39
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray4
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray40
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray41
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray42
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray43
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray44
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray45
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray46
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray47
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray48
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray49
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray5
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray50
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray6
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray7
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray8
v1_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T1 v1_;$/;"	m	class:testing::internal::ValueArray9
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray20
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray21
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray22
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray23
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray24
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray25
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray26
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray27
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray28
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray29
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray30
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray31
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray32
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray33
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray34
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray35
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray36
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray37
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray38
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray39
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray40
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray41
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray42
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray43
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray44
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray45
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray46
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray47
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray48
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray49
v20_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T20 v20_;$/;"	m	class:testing::internal::ValueArray50
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray21
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray22
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray23
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray24
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray25
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray26
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray27
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray28
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray29
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray30
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray31
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray32
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray33
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray34
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray35
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray36
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray37
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray38
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray39
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray40
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray41
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray42
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray43
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray44
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray45
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray46
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray47
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray48
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray49
v21_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T21 v21_;$/;"	m	class:testing::internal::ValueArray50
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray22
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray23
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray24
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray25
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray26
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray27
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray28
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray29
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray30
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray31
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray32
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray33
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray34
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray35
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray36
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray37
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray38
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray39
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray40
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray41
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray42
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray43
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray44
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray45
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray46
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray47
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray48
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray49
v22_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T22 v22_;$/;"	m	class:testing::internal::ValueArray50
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray23
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray24
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray25
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray26
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray27
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray28
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray29
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray30
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray31
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray32
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray33
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray34
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray35
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray36
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray37
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray38
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray39
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray40
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray41
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray42
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray43
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray44
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray45
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray46
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray47
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray48
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray49
v23_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T23 v23_;$/;"	m	class:testing::internal::ValueArray50
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray24
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray25
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray26
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray27
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray28
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray29
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray30
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray31
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray32
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray33
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray34
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray35
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray36
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray37
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray38
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray39
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray40
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray41
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray42
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray43
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray44
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray45
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray46
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray47
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray48
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray49
v24_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T24 v24_;$/;"	m	class:testing::internal::ValueArray50
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray25
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray26
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray27
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray28
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray29
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray30
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray31
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray32
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray33
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray34
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray35
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray36
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray37
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray38
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray39
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray40
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray41
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray42
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray43
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray44
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray45
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray46
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray47
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray48
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray49
v25_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T25 v25_;$/;"	m	class:testing::internal::ValueArray50
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray26
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray27
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray28
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray29
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray30
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray31
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray32
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray33
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray34
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray35
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray36
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray37
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray38
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray39
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray40
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray41
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray42
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray43
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray44
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray45
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray46
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray47
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray48
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray49
v26_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T26 v26_;$/;"	m	class:testing::internal::ValueArray50
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray27
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray28
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray29
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray30
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray31
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray32
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray33
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray34
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray35
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray36
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray37
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray38
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray39
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray40
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray41
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray42
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray43
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray44
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray45
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray46
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray47
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray48
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray49
v27_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T27 v27_;$/;"	m	class:testing::internal::ValueArray50
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray28
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray29
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray30
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray31
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray32
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray33
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray34
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray35
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray36
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray37
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray38
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray39
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray40
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray41
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray42
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray43
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray44
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray45
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray46
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray47
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray48
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray49
v28_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T28 v28_;$/;"	m	class:testing::internal::ValueArray50
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray29
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray30
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray31
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray32
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray33
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray34
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray35
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray36
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray37
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray38
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray39
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray40
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray41
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray42
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray43
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray44
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray45
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray46
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray47
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray48
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray49
v29_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T29 v29_;$/;"	m	class:testing::internal::ValueArray50
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray10
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray11
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray12
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray13
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray14
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray15
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray16
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray17
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray18
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray19
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray2
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray20
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray21
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray22
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray23
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray24
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray25
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray26
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray27
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray28
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray29
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray3
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray30
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray31
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray32
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray33
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray34
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray35
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray36
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray37
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray38
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray39
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray4
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray40
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray41
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray42
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray43
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray44
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray45
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray46
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray47
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray48
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray49
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray5
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray50
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray6
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray7
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray8
v2_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T2 v2_;$/;"	m	class:testing::internal::ValueArray9
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray30
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray31
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray32
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray33
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray34
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray35
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray36
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray37
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray38
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray39
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray40
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray41
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray42
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray43
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray44
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray45
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray46
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray47
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray48
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray49
v30_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T30 v30_;$/;"	m	class:testing::internal::ValueArray50
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray31
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray32
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray33
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray34
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray35
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray36
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray37
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray38
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray39
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray40
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray41
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray42
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray43
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray44
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray45
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray46
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray47
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray48
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray49
v31_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T31 v31_;$/;"	m	class:testing::internal::ValueArray50
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray32
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray33
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray34
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray35
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray36
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray37
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray38
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray39
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray40
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray41
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray42
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray43
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray44
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray45
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray46
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray47
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray48
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray49
v32_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T32 v32_;$/;"	m	class:testing::internal::ValueArray50
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray33
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray34
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray35
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray36
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray37
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray38
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray39
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray40
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray41
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray42
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray43
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray44
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray45
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray46
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray47
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray48
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray49
v33_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T33 v33_;$/;"	m	class:testing::internal::ValueArray50
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray34
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray35
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray36
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray37
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray38
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray39
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray40
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray41
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray42
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray43
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray44
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray45
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray46
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray47
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray48
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray49
v34_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T34 v34_;$/;"	m	class:testing::internal::ValueArray50
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray35
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray36
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray37
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray38
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray39
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray40
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray41
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray42
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray43
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray44
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray45
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray46
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray47
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray48
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray49
v35_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T35 v35_;$/;"	m	class:testing::internal::ValueArray50
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray36
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray37
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray38
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray39
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray40
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray41
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray42
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray43
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray44
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray45
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray46
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray47
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray48
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray49
v36_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T36 v36_;$/;"	m	class:testing::internal::ValueArray50
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray37
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray38
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray39
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray40
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray41
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray42
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray43
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray44
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray45
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray46
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray47
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray48
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray49
v37_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T37 v37_;$/;"	m	class:testing::internal::ValueArray50
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray38
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray39
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray40
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray41
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray42
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray43
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray44
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray45
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray46
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray47
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray48
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray49
v38_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T38 v38_;$/;"	m	class:testing::internal::ValueArray50
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray39
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray40
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray41
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray42
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray43
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray44
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray45
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray46
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray47
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray48
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray49
v39_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T39 v39_;$/;"	m	class:testing::internal::ValueArray50
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray10
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray11
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray12
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray13
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray14
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray15
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray16
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray17
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray18
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray19
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray20
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray21
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray22
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray23
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray24
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray25
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray26
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray27
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray28
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray29
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray3
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray30
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray31
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray32
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray33
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray34
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray35
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray36
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray37
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray38
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray39
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray4
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray40
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray41
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray42
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray43
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray44
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray45
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray46
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray47
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray48
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray49
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray5
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray50
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray6
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray7
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray8
v3_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T3 v3_;$/;"	m	class:testing::internal::ValueArray9
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray40
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray41
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray42
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray43
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray44
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray45
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray46
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray47
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray48
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray49
v40_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T40 v40_;$/;"	m	class:testing::internal::ValueArray50
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray41
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray42
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray43
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray44
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray45
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray46
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray47
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray48
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray49
v41_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T41 v41_;$/;"	m	class:testing::internal::ValueArray50
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray42
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray43
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray44
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray45
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray46
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray47
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray48
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray49
v42_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T42 v42_;$/;"	m	class:testing::internal::ValueArray50
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray43
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray44
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray45
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray46
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray47
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray48
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray49
v43_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T43 v43_;$/;"	m	class:testing::internal::ValueArray50
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray44
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray45
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray46
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray47
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray48
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray49
v44_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T44 v44_;$/;"	m	class:testing::internal::ValueArray50
v45_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray45
v45_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray46
v45_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray47
v45_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray48
v45_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray49
v45_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T45 v45_;$/;"	m	class:testing::internal::ValueArray50
v46_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray46
v46_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray47
v46_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray48
v46_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray49
v46_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T46 v46_;$/;"	m	class:testing::internal::ValueArray50
v47_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray47
v47_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray48
v47_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray49
v47_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T47 v47_;$/;"	m	class:testing::internal::ValueArray50
v48_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray48
v48_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray49
v48_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T48 v48_;$/;"	m	class:testing::internal::ValueArray50
v49_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray49
v49_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T49 v49_;$/;"	m	class:testing::internal::ValueArray50
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray10
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray11
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray12
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray13
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray14
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray15
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray16
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray17
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray18
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray19
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray20
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray21
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray22
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray23
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray24
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray25
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray26
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray27
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray28
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray29
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray30
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray31
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray32
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray33
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray34
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray35
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray36
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray37
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray38
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray39
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray4
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray40
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray41
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray42
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray43
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray44
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray45
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray46
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray47
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray48
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray49
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray5
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray50
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray6
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray7
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray8
v4_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T4 v4_;$/;"	m	class:testing::internal::ValueArray9
v50_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T50 v50_;$/;"	m	class:testing::internal::ValueArray50
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray10
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray11
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray12
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray13
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray14
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray15
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray16
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray17
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray18
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray19
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray20
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray21
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray22
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray23
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray24
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray25
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray26
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray27
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray28
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray29
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray30
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray31
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray32
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray33
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray34
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray35
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray36
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray37
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray38
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray39
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray40
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray41
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray42
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray43
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray44
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray45
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray46
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray47
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray48
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray49
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray5
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray50
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray6
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray7
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray8
v5_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T5 v5_;$/;"	m	class:testing::internal::ValueArray9
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray10
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray11
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray12
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray13
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray14
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray15
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray16
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray17
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray18
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray19
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray20
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray21
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray22
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray23
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray24
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray25
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray26
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray27
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray28
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray29
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray30
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray31
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray32
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray33
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray34
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray35
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray36
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray37
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray38
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray39
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray40
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray41
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray42
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray43
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray44
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray45
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray46
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray47
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray48
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray49
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray50
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray6
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray7
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray8
v6_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T6 v6_;$/;"	m	class:testing::internal::ValueArray9
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray10
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray11
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray12
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray13
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray14
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray15
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray16
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray17
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray18
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray19
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray20
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray21
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray22
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray23
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray24
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray25
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray26
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray27
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray28
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray29
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray30
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray31
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray32
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray33
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray34
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray35
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray36
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray37
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray38
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray39
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray40
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray41
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray42
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray43
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray44
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray45
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray46
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray47
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray48
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray49
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray50
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray7
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray8
v7_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T7 v7_;$/;"	m	class:testing::internal::ValueArray9
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray10
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray11
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray12
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray13
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray14
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray15
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray16
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray17
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray18
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray19
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray20
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray21
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray22
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray23
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray24
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray25
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray26
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray27
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray28
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray29
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray30
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray31
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray32
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray33
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray34
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray35
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray36
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray37
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray38
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray39
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray40
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray41
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray42
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray43
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray44
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray45
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray46
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray47
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray48
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray49
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray50
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray8
v8_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T8 v8_;$/;"	m	class:testing::internal::ValueArray9
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray10
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray11
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray12
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray13
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray14
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray15
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray16
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray17
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray18
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray19
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray20
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray21
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray22
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray23
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray24
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray25
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray26
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray27
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray28
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray29
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray30
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray31
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray32
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray33
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray34
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray35
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray36
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray37
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray38
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray39
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray40
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray41
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray42
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray43
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray44
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray45
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray46
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray47
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray48
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray49
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray50
v9_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const T9 v9_;$/;"	m	class:testing::internal::ValueArray9
va_copy	ceres-solver/internal/ceres/stringprintf.cc	59;"	d	file:
value	cartographer/cartographer/common/optional.h	/^  const T& value() const {$/;"	f	class:cartographer::common::optional
value	cartographer/cartographer/mapping/3d/hybrid_grid.h	/^  ValueType value(const Eigen::Array3i& index) const {$/;"	f	class:cartographer::mapping::FlatGrid
value	ceres-solver/internal/ceres/function_sample.h	/^  double value;$/;"	m	struct:ceres::internal::FunctionSample
value	ceres-solver/internal/ceres/gmock/gmock.h	/^  enum { value = kOther };  \/\/ The default kind.$/;"	e	enum:testing::internal::KindOf::__anon193
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* value() const {$/;"	f	class:testing::TestProperty
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* value;$/;"	m	struct:testing::internal::ConstCharPtr
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const bool value = __is_convertible(From, To);$/;"	m	class:testing::internal::ImplicitlyConvertible
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const bool value = bool_value;$/;"	m	struct:std::tr1::bool_constant
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const bool value =$/;"	m	class:testing::internal::ImplicitlyConvertible
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 0;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 10;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 1;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 2;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 3;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 4;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 5;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 6;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 7;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 8;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^  static const int value = 9;$/;"	m	struct:std::tr1::tuple_size
value	ceres-solver/internal/ceres/gtest/gtest.h	/^const bool ImplicitlyConvertible<From, To>::value;$/;"	m	class:testing::internal::ImplicitlyConvertible
value	ceres-solver/internal/ceres/gtest/gtest.h	/^template <bool bool_value> const bool bool_constant<bool_value>::value;$/;"	m	class:std::tr1::bool_constant
value_	cartographer/cartographer/common/optional.h	/^  std::unique_ptr<T> value_;$/;"	m	class:cartographer::common::optional
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^    Result value_;$/;"	m	class:testing::internal::ReturnAction::Impl
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^    T value_;$/;"	m	class:testing::internal::ReturnRefOfCopyAction::Impl
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const T value_;$/;"	m	class:testing::DefaultValue::FixedValueProducer
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^  T value_;$/;"	m	class:testing::internal::ReferenceOrValueWrapper
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const A value_;$/;"	m	class:testing::internal::SetArgumentPointeeAction
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const T value_;$/;"	m	class:testing::internal::ReturnRefOfCopyAction
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const T2 value_;$/;"	m	class:testing::internal::AssignAction
value_	ceres-solver/internal/ceres/gmock/gmock.h	/^  const linked_ptr<R> value_;$/;"	m	class:testing::internal::ReturnAction
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    RawType value_;  \/\/ The raw floating-point number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    T value_;$/;"	m	class:std::tr1::ThreadLocal::ValueHolder
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    T value_;$/;"	m	class:testing::internal::RangeGenerator::Iterator
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    const T value_;  \/\/ The value for each thread.$/;"	m	class:std::tr1::ThreadLocal::InstanceValueHolderFactory
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^    mutable scoped_ptr<const T> value_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T value_;$/;"	m	class:std::tr1::ThreadLocal
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^  T* value_;$/;"	m	class:testing::internal::linked_ptr
value_	ceres-solver/internal/ceres/gtest/gtest.h	/^  std::string value_;$/;"	m	class:testing::TestProperty
value_before_cast_	ceres-solver/internal/ceres/gmock/gmock.h	/^    R value_before_cast_;$/;"	m	class:testing::internal::ReturnAction::Impl
value_is_valid	ceres-solver/internal/ceres/function_sample.h	/^  bool value_is_valid;$/;"	m	struct:ceres::internal::FunctionSample
value_param	ceres-solver/internal/ceres/gtest/gtest.h	/^  const char* value_param() const {$/;"	f	class:testing::TestInfo
value_param_	ceres-solver/internal/ceres/gtest/gtest.h	/^  const internal::scoped_ptr<const ::std::string> value_param_;$/;"	m	class:testing::TestInfo
value_ptr_	ceres-solver/internal/ceres/gmock/gmock.h	/^  T* value_ptr_;$/;"	m	class:testing::internal::ReferenceOrValueWrapper
value_type	ceres-solver/include/ceres/internal/fixed_array.h	/^  typedef T value_type;$/;"	t	class:ceres::internal::FixedArray
value_type	ceres-solver/internal/ceres/gmock/gmock.h	/^  typedef Expectation::Set::value_type value_type;$/;"	t	class:testing::ExpectationSet
value_type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef Element value_type;$/;"	t	class:testing::internal::NativeArray
value_type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T value_type;$/;"	t	class:testing::internal::ParamIterator
value_type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef T value_type;$/;"	t	struct:std::tr1::IteratorTraits
value_type	ceres-solver/internal/ceres/gtest/gtest.h	/^  typedef typename Iterator::value_type value_type;$/;"	t	struct:std::tr1::IteratorTraits
values	ceres-solver/include/ceres/crs_matrix.h	/^  std::vector<double> values;$/;"	m	struct:ceres::CRSMatrix
values	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  const double* values() const { return values_.get(); }$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
values	ceres-solver/internal/ceres/block_random_access_matrix.h	/^  double* values;$/;"	m	struct:ceres::internal::CellInfo
values	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  virtual const double* values() const { return values_.get(); }$/;"	f	class:ceres::internal::BlockSparseMatrix
values	ceres-solver/internal/ceres/compressed_col_sparse_matrix_utils_test.cc	/^  vector<double> values;$/;"	m	class:ceres::internal::SolveUpperTriangularTest	file:
values	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  virtual const double* values() const { return &values_[0]; }$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
values	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^  virtual const double* values() const { return m_.data(); }$/;"	f	class:ceres::internal::DenseSparseMatrix
values	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  virtual const double* values()  const { return values_.get(); }$/;"	f	class:ceres::internal::TripletSparseMatrix
values_	cartographer/cartographer/common/histogram.h	/^  std::vector<float> values_;$/;"	m	class:cartographer::common::Histogram
values_	cartographer/cartographer/sensor/internal/ordered_multi_queue_test.cc	/^  std::vector<std::unique_ptr<Data>> values_;$/;"	m	class:cartographer::sensor::__anon123::OrderedMultiQueueTest	file:
values_	ceres-solver/internal/ceres/block_random_access_dense_matrix.h	/^  scoped_array<double> values_;$/;"	m	class:ceres::internal::BlockRandomAccessDenseMatrix
values_	ceres-solver/internal/ceres/block_sparse_matrix.h	/^  scoped_array<double> values_;$/;"	m	class:ceres::internal::BlockSparseMatrix
values_	ceres-solver/internal/ceres/compressed_row_sparse_matrix.h	/^  std::vector<double> values_;$/;"	m	class:ceres::internal::CompressedRowSparseMatrix
values_	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  scoped_array<double> values_;$/;"	m	class:ceres::internal::BiCubicInterpolatorTest	file:
values_	ceres-solver/internal/ceres/cubic_interpolation_test.cc	/^  scoped_array<double> values_;$/;"	m	class:ceres::internal::CubicInterpolatorTest	file:
values_	ceres-solver/internal/ceres/triplet_sparse_matrix.h	/^  scoped_array<double> values_;$/;"	m	class:ceres::internal::TripletSparseMatrix
variable_	ceres-solver/internal/ceres/c_api_test.cc	/^  T* variable_;$/;"	m	class:ceres::internal::ScopedSetValue	file:
vector_gradient	ceres-solver/internal/ceres/function_sample.h	/^  Vector vector_gradient;$/;"	m	struct:ceres::internal::FunctionSample
vector_gradient_is_valid	ceres-solver/internal/ceres/function_sample.h	/^  bool vector_gradient_is_valid;$/;"	m	struct:ceres::internal::FunctionSample
vector_x	ceres-solver/internal/ceres/function_sample.h	/^  Vector vector_x;$/;"	m	struct:ceres::internal::FunctionSample
vector_x_is_valid	ceres-solver/internal/ceres/function_sample.h	/^  bool vector_x_is_valid;$/;"	m	struct:ceres::internal::FunctionSample
version	cartographer/cartographer/io/submap_painter.h	/^  int version;$/;"	m	struct:cartographer::io::SubmapSlice
version	cartographer/cartographer/io/submap_painter.h	/^  int version;$/;"	m	struct:cartographer::io::SubmapTextures
version	cartographer/cartographer/mapping/pose_graph_interface.h	/^    int version;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::SubmapPose
version	cartographer/docs/source/conf.py	/^version = '1.0.0'$/;"	v
version	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  int version() const { return metadata_version_; }$/;"	f	class:cartographer_rviz::DrawableSubmap
version	cartographer_ros/docs/source/conf.py	/^version = '1.0.0'$/;"	v
version	ceres-solver/docs/source/conf.py	/^version = '1.13'$/;"	v
vertex_weights_	ceres-solver/internal/ceres/graph.h	/^  HashMap<Vertex, double> vertex_weights_;$/;"	m	class:ceres::internal::WeightedGraph
vertices	ceres-solver/internal/ceres/graph.h	/^  const HashSet<Vertex>& vertices() const {$/;"	f	class:ceres::internal::Graph
vertices	ceres-solver/internal/ceres/graph.h	/^  const HashSet<Vertex>& vertices() const {$/;"	f	class:ceres::internal::WeightedGraph
vertices_	ceres-solver/internal/ceres/graph.h	/^  HashSet<Vertex> vertices_;$/;"	m	class:ceres::internal::Graph
vertices_	ceres-solver/internal/ceres/graph.h	/^  HashSet<Vertex> vertices_;$/;"	m	class:ceres::internal::WeightedGraph
view_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  std::unique_ptr<rosbag::View> view_;$/;"	m	class:cartographer_ros::PlayableBag
view_iterator_	cartographer_ros/cartographer_ros/cartographer_ros/playable_bag.h	/^  rosbag::View::const_iterator view_iterator_;$/;"	m	class:cartographer_ros::PlayableBag
view_score_weight	ceres-solver/internal/ceres/canonical_views_clustering.h	/^  double view_score_weight;$/;"	m	struct:ceres::internal::CanonicalViewsClusteringOptions
view_to_canonical_view_	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^  IntMap view_to_canonical_view_;$/;"	m	class:ceres::internal::CanonicalViewsClustering	file:
view_to_canonical_view_similarity_	ceres-solver/internal/ceres/canonical_views_clustering.cc	/^  HashMap<int, double> view_to_canonical_view_similarity_;$/;"	m	class:ceres::internal::CanonicalViewsClustering	file:
visibility	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  bool visibility() const { return visibility_->getBool(); }$/;"	f	class:cartographer_rviz::DrawableSubmap
visibility	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  std::unique_ptr<::rviz::BoolProperty> visibility;$/;"	m	struct:cartographer_rviz::Trajectory
visibility_	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.h	/^  std::unique_ptr<::rviz::BoolProperty> visibility_;$/;"	m	class:cartographer_rviz::DrawableSubmap
visibility_	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.h	/^  bool visibility_ = true;$/;"	m	class:cartographer_rviz::OgreSlice
visibility_all_enabled_	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.h	/^  ::rviz::BoolProperty* visibility_all_enabled_;$/;"	m	class:cartographer_rviz::SubmapsDisplay
visibility_clustering_type	ceres-solver/include/ceres/solver.h	/^    VisibilityClusteringType visibility_clustering_type;$/;"	m	struct:ceres::Solver::Options
visibility_clustering_type	ceres-solver/include/ceres/solver.h	/^    VisibilityClusteringType visibility_clustering_type;$/;"	m	struct:ceres::Solver::Summary
visibility_clustering_type	ceres-solver/internal/ceres/linear_solver.h	/^    VisibilityClusteringType visibility_clustering_type;$/;"	m	struct:ceres::internal::LinearSolver::Options
visibility_clustering_type	ceres-solver/internal/ceres/preconditioner.h	/^    VisibilityClusteringType visibility_clustering_type;$/;"	m	struct:ceres::internal::Preconditioner::Options
voxel_set_	cartographer/cartographer/sensor/internal/voxel_filter.h	/^  std::unordered_set<KeyType> voxel_set_;$/;"	m	class:cartographer::sensor::VoxelFilter
voxel_size_	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  const double voxel_size_;$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
voxels	cartographer/cartographer/io/xray_points_processor.h	/^    mapping::HybridGridBase<bool> voxels;$/;"	m	struct:cartographer::io::XRayPointsProcessor::Aggregation
voxels_	cartographer/cartographer/io/outlier_removing_points_processor.h	/^  mapping::HybridGridBase<VoxelData> voxels_;$/;"	m	class:cartographer::io::OutlierRemovingPointsProcessor
vsnprintf	ceres-solver/internal/ceres/gmock_gtest_all.cc	1594;"	d	file:
w	ceres-solver/internal/ceres/problem_test.cc	/^  double y[4], z[5], w[3];$/;"	m	struct:ceres::internal::DynamicProblem	file:
w_	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  double x_[3], y_[4], z_[5], w_[6];$/;"	m	class:ceres::internal::SchurOrderingTest	file:
wall_time	cartographer/cartographer/common/rate_timer.h	/^    typename ClockType::time_point wall_time;$/;"	m	struct:cartographer::common::RateTimer::Event
wall_timers_	cartographer_ros/cartographer_ros/cartographer_ros/node.h	/^  std::vector<::ros::WallTimer> wall_timers_;$/;"	m	class:cartographer_ros::Node
wide_limits_	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.h	/^  const CellLimits wide_limits_;$/;"	m	class:cartographer::mapping::scan_matching::PrecomputationGrid2D
width	cartographer/cartographer/io/image.h	/^  int width() const { return width_; }$/;"	f	class:cartographer::io::Image
width	cartographer/cartographer/io/submap_painter.h	/^  int width;$/;"	m	struct:cartographer::io::SubmapSlice
width	cartographer/cartographer/io/submap_painter.h	/^  int width;$/;"	m	struct:cartographer::io::SubmapTexture
width	ceres-solver/examples/pgm_image.h	/^int PGMImage<Real>::width() const {$/;"	f	class:ceres::examples::PGMImage
width_	cartographer/cartographer/io/image.h	/^  int width_;$/;"	m	class:cartographer::io::Image
width_	ceres-solver/examples/pgm_image.h	/^  int height_, width_;$/;"	m	class:ceres::examples::PGMImage
width_in_voxels_	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.h	/^  const int width_in_voxels_;$/;"	m	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
will_die_	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.h	/^  bool will_die_;$/;"	m	class:cartographer_ros::ScopedRosLogSink
window_duration_	cartographer/cartographer/common/rate_timer.h	/^  const common::Duration window_duration_;$/;"	m	class:cartographer::common::RateTimer
work_	ceres-solver/internal/ceres/dense_qr_solver.h	/^  Vector work_;$/;"	m	class:ceres::internal::DenseQRSolver
wrapped_cost_function_	ceres-solver/include/ceres/conditioned_cost_function.h	/^  internal::scoped_ptr<CostFunction> wrapped_cost_function_;$/;"	m	class:ceres::ConditionedCostFunction
wrapped_trajectory_builder_	cartographer/cartographer/mapping/internal/collated_trajectory_builder.h	/^  std::unique_ptr<TrajectoryBuilderInterface> wrapped_trajectory_builder_;$/;"	m	class:cartographer::mapping::CollatedTrajectoryBuilder
wrapper_	ceres-solver/internal/ceres/gmock/gmock.h	/^    const linked_ptr<R> wrapper_;$/;"	m	class:testing::internal::ReturnAction::Impl
wrappers_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  std::vector<std::unique_ptr<Counter>> wrappers_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::CounterFamily	file:
wrappers_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  std::vector<std::unique_ptr<Gauge>> wrappers_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::GaugeFamily	file:
wrappers_	cartographer/cartographer/cloud/metrics/prometheus/family_factory.cc	/^  std::vector<std::unique_ptr<Histogram>> wrappers_;$/;"	m	class:cartographer::cloud::metrics::prometheus::__anon34::HistogramFamily	file:
write_fd	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::DeathTestImpl
write_fd	ceres-solver/internal/ceres/gtest/gtest.h	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag
write_fd_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  int write_fd_;$/;"	m	class:testing::internal::DeathTestImpl	file:
write_fd_	ceres-solver/internal/ceres/gtest/gtest.h	/^  int write_fd_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag
write_handle_	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  AutoHandle write_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	file:
writer_	cartographer/cartographer/io/serialization_format_migration_test.cc	/^  std::unique_ptr<ForwardingProtoStreamWriter> writer_;$/;"	m	class:cartographer::io::__anon18::MigrationTest	file:
writer_callback_	cartographer/cartographer/io/internal/in_memory_proto_stream.h	/^  WriterCallback writer_callback_;$/;"	m	class:cartographer::io::ForwardingProtoStreamWriter
x	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  double x = 0.;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
x	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  double x, y;$/;"	m	struct:__anon155::Marker	file:
x	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  double x;$/;"	m	struct:ceres::examples::Constraint2d
x	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  double x;$/;"	m	struct:ceres::examples::Pose2d
x	ceres-solver/internal/ceres/evaluator_test.cc	/^  double x[2];$/;"	m	struct:ceres::internal::EvaluatorTest	file:
x	ceres-solver/internal/ceres/function_sample.h	/^  double x;$/;"	m	struct:ceres::internal::FunctionSample
x	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  scoped_array<double> x;$/;"	m	struct:ceres::internal::LinearLeastSquaresProblem
x	ceres-solver/internal/ceres/schur_complement_solver_test.cc	/^  Vector x;$/;"	m	class:ceres::internal::SchurComplementSolverTest	file:
x	ceres-solver/internal/ceres/solver_test.cc	/^  double *x;$/;"	m	struct:ceres::internal::RememberingCallback	file:
x0_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  double x0_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
x1	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x1 = x[0];$/;"	m	namespace:ceres::examples	file:
x10	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x10 = x[9];$/;"	m	namespace:ceres::examples	file:
x11	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x11 = x[10];$/;"	m	namespace:ceres::examples	file:
x1_	ceres-solver/examples/libmv_homography.cc	/^  const Mat &x1_;$/;"	m	class:__anon158::TerminationCheckingCallback	file:
x1_	ceres-solver/examples/nist.cc	/^  double x1_;$/;"	m	struct:ceres::examples::Nelson	file:
x2	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x2 = x[1];$/;"	m	namespace:ceres::examples	file:
x2_	ceres-solver/examples/libmv_homography.cc	/^  const Mat &x2_;$/;"	m	class:__anon158::TerminationCheckingCallback	file:
x2_	ceres-solver/examples/nist.cc	/^  double x2_;$/;"	m	struct:ceres::examples::Nelson	file:
x3	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x3 = x[2];$/;"	m	namespace:ceres::examples	file:
x4	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x4 = x[3];$/;"	m	namespace:ceres::examples	file:
x5	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x5 = x[4];$/;"	m	namespace:ceres::examples	file:
x6	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x6 = x[5];$/;"	m	namespace:ceres::examples	file:
x7	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x7 = x[6];$/;"	m	namespace:ceres::examples	file:
x8	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x8 = x[7];$/;"	m	namespace:ceres::examples	file:
x9	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const T x9 = x[8];$/;"	m	namespace:ceres::examples	file:
x_	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^  const double x_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor2D
x_	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  const double x_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
x_	ceres-solver/examples/curve_fitting.cc	/^  const double x_;$/;"	m	struct:ExponentialResidual	file:
x_	ceres-solver/examples/libmv_homography.cc	/^  const Vec2 x_;$/;"	m	class:__anon158::HomographySymmetricGeometricCostFunctor	file:
x_	ceres-solver/examples/robust_curve_fitting.cc	/^  const double x_;$/;"	m	struct:ExponentialResidual	file:
x_	ceres-solver/internal/ceres/dogleg_strategy_test.cc	/^  Vector x_;$/;"	m	class:ceres::internal::__anon178::Fixture	file:
x_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> x_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
x_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> x_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
x_	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  double x_[3], y_[4], z_[5], w_[6];$/;"	m	class:ceres::internal::SchurOrderingTest	file:
x_	ceres-solver/internal/ceres/reorder_program_test.cc	/^  double x_;$/;"	m	class:ceres::internal::ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest	file:
x_	ceres-solver/internal/ceres/system_test.cc	/^  double x_[4];$/;"	m	class:ceres::internal::PowellsFunction	file:
x_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  Vector x_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
x_	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  double x_;$/;"	m	class:ceres::internal::LinearSolverAndEvaluatorCreationTest	file:
x_D	ceres-solver/internal/ceres/linear_least_squares_problems.h	/^  scoped_array<double> x_D;$/;"	m	struct:ceres::internal::LinearLeastSquaresProblem
x_cost_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double x_cost_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
x_delta_indices_	ceres-solver/examples/fields_of_experts.h	/^  std::vector<int> x_delta_indices_, y_delta_indices_;$/;"	m	class:ceres::examples::FieldsOfExperts
x_index_offset	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  int x_index_offset = 0;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
x_norm_	ceres-solver/internal/ceres/trust_region_minimizer.h	/^  double x_norm_;$/;"	m	class:ceres::internal::TrustRegionMinimizer
x_values	ceres-solver/internal/ceres/solver_test.cc	/^  std::vector<double> x_values;$/;"	m	struct:ceres::internal::RememberingCallback	file:
xx_	ceres-solver/examples/circle_fit.cc	/^  double xx_, yy_;$/;"	m	class:DistanceFromCircleCost	file:
xy_index_	cartographer/cartographer/mapping/2d/xy_index.h	/^  Eigen::Array2i xy_index_;$/;"	m	class:cartographer::mapping::XYIndexRangeIterator
y	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  double y = 0.;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
y	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  double x, y;$/;"	m	struct:__anon155::Marker	file:
y	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double y[] = {0.0009, 0.0044, 0.0175, 0.0540, 0.1295, 0.2420, 0.3521,$/;"	m	namespace:ceres::examples	file:
y	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double y[] = {0.1957, 0.1947, 0.1735, 0.1600, 0.0844, 0.0627,$/;"	m	namespace:ceres::examples	file:
y	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double y[] = {0.844, 0.908, 0.932, 0.936, 0.925, 0.908, 0.881, 0.850, 0.818,$/;"	m	namespace:ceres::examples	file:
y	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double y[] = {1.366, 1.191, 1.112, 1.013, 0.991,$/;"	m	namespace:ceres::examples	file:
y	ceres-solver/examples/more_garbow_hillstrom.cc	/^  const double y[] = {34780, 28610, 23650, 19630, 16370, 13720, 11540, 9744,$/;"	m	namespace:ceres::examples	file:
y	ceres-solver/examples/more_garbow_hillstrom.cc	/^  double y[] = {0.14, 0.18, 0.22, 0.25,$/;"	m	namespace:ceres::examples	file:
y	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  double y;$/;"	m	struct:ceres::examples::Constraint2d
y	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  double y;$/;"	m	struct:ceres::examples::Pose2d
y	ceres-solver/internal/ceres/evaluator_test.cc	/^  double y[3];$/;"	m	struct:ceres::internal::EvaluatorTest	file:
y	ceres-solver/internal/ceres/problem_test.cc	/^  double y[4], z[5], w[3];$/;"	m	struct:ceres::internal::DynamicProblem	file:
y0_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  double y0_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
y1_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  double y1_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
y_	cartographer/cartographer/mapping/internal/2d/scan_matching/translation_delta_cost_functor_2d.h	/^  const double y_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor2D
y_	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  const double y_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
y_	ceres-solver/examples/curve_fitting.cc	/^  const double y_;$/;"	m	struct:ExponentialResidual	file:
y_	ceres-solver/examples/ellipse_approximation.cc	/^  const Eigen::Vector2d y_;$/;"	m	class:PointToLineSegmentContourCostFunction	file:
y_	ceres-solver/examples/libmv_homography.cc	/^  const Vec2 y_;$/;"	m	class:__anon158::HomographySymmetricGeometricCostFunctor	file:
y_	ceres-solver/examples/nist.cc	/^  double y_;$/;"	m	struct:ceres::examples::Nelson	file:
y_	ceres-solver/examples/robust_curve_fitting.cc	/^  const double y_;$/;"	m	struct:ExponentialResidual	file:
y_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> y_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
y_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> y_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
y_	ceres-solver/internal/ceres/dynamic_sparsity_test.cc	/^  const Eigen::Vector2d y_;$/;"	m	class:ceres::internal::PointToLineSegmentContourCostFunction	file:
y_	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  double x_[3], y_[4], z_[5], w_[6];$/;"	m	class:ceres::internal::SchurOrderingTest	file:
y_	ceres-solver/internal/ceres/reorder_program_test.cc	/^  double y_;$/;"	m	class:ceres::internal::ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest	file:
y_	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  double y_;$/;"	m	class:ceres::internal::LinearSolverAndEvaluatorCreationTest	file:
y_delta_indices_	ceres-solver/examples/fields_of_experts.h	/^  std::vector<int> x_delta_indices_, y_delta_indices_;$/;"	m	class:ceres::examples::FieldsOfExperts
y_index_offset	cartographer/cartographer/mapping/internal/2d/scan_matching/correlative_scan_matcher_2d.h	/^  int y_index_offset = 0;$/;"	m	struct:cartographer::mapping::scan_matching::Candidate2D
yaw_ab_radians_	ceres-solver/examples/slam/pose_graph_2d/pose_graph_2d_error_term.h	/^  const double yaw_ab_radians_;$/;"	m	class:ceres::examples::PoseGraph2dErrorTerm
yaw_radians	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  double yaw_radians;$/;"	m	struct:ceres::examples::Constraint2d
yaw_radians	ceres-solver/examples/slam/pose_graph_2d/types.h	/^  double yaw_radians;$/;"	m	struct:ceres::examples::Pose2d
yy_	ceres-solver/examples/circle_fit.cc	/^  double xx_, yy_;$/;"	m	class:DistanceFromCircleCost	file:
z	cartographer/cartographer/mapping/detect_floors.h	/^  double z;$/;"	m	struct:cartographer::mapping::Floor
z	ceres-solver/internal/ceres/evaluator_test.cc	/^  double z[4];$/;"	m	struct:ceres::internal::EvaluatorTest	file:
z	ceres-solver/internal/ceres/problem_test.cc	/^  double y[4], z[5], w[3];$/;"	m	struct:ceres::internal::DynamicProblem	file:
z0_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  double z0_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
z1_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  double z1_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
z2_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  double z2_;$/;"	m	class:ceres::internal::SixParameterCostFunctorTest	file:
z_	cartographer/cartographer/mapping/internal/3d/scan_matching/translation_delta_cost_functor_3d.h	/^  const double z_;$/;"	m	class:cartographer::mapping::scan_matching::TranslationDeltaCostFunctor3D
z_	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  scoped_array<double> z_;$/;"	m	class:ceres::internal::CgnrLinearOperator
z_	ceres-solver/internal/ceres/dynamic_autodiff_cost_function_test.cc	/^  vector<double> z_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
z_	ceres-solver/internal/ceres/dynamic_numeric_diff_cost_function_test.cc	/^  vector<double> z_;$/;"	m	class:ceres::internal::ThreeParameterCostFunctorTest	file:
z_	ceres-solver/internal/ceres/parameter_block_ordering_test.cc	/^  double x_[3], y_[4], z_[5], w_[6];$/;"	m	class:ceres::internal::SchurOrderingTest	file:
z_	ceres-solver/internal/ceres/reorder_program_test.cc	/^  double z_;$/;"	m	class:ceres::internal::ReorderProgramForSparseNormalCholeskyUsingSuiteSparseTest	file:
z_	ceres-solver/internal/ceres/trust_region_preprocessor_test.cc	/^  double z_;$/;"	m	class:ceres::internal::LinearSolverAndEvaluatorCreationTest	file:
z_values	cartographer/cartographer/mapping/detect_floors.cc	/^  std::vector<double> z_values;$/;"	m	struct:cartographer::mapping::__anon62::Span	file:
zbar_ij	cartographer/cartographer/mapping/pose_graph_interface.h	/^      transform::Rigid3d zbar_ij;$/;"	m	struct:cartographer::mapping::PoseGraphInterface::Constraint::Pose
~AbortingIterationCallback	ceres-solver/internal/ceres/minimizer_test.cc	/^  virtual ~AbortingIterationCallback() {}$/;"	f	class:ceres::internal::AbortingIterationCallback
~AbstractSocketWriter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    virtual ~AbstractSocketWriter() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
~ActionInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~ActionInterface() {}$/;"	f	class:testing::ActionInterface
~AnalyticalSpaCostFunction2D	cartographer/cartographer/mapping/internal/optimization/cost_functions/spa_cost_function_2d.cc	/^  virtual ~AnalyticalSpaCostFunction2D() {}$/;"	f	class:cartographer::mapping::optimization::__anon90::AnalyticalSpaCostFunction2D
~Arguments	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ~Arguments() {$/;"	f	class:testing::internal::Arguments
~ArmijoLineSearch	ceres-solver/internal/ceres/line_search.h	/^  virtual ~ArmijoLineSearch() {}$/;"	f	class:ceres::internal::ArmijoLineSearch
~AssertHelper	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AssertHelper::~AssertHelper() {$/;"	f	class:testing::internal::AssertHelper
~AutoDiffCostFunction	ceres-solver/include/ceres/autodiff_cost_function.h	/^  virtual ~AutoDiffCostFunction() {}$/;"	f	class:ceres::AutoDiffCostFunction
~AutoDiffLocalParameterization	ceres-solver/include/ceres/autodiff_local_parameterization.h	/^  virtual ~AutoDiffLocalParameterization() {}$/;"	f	class:ceres::AutoDiffLocalParameterization
~AutoHandle	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^AutoHandle::~AutoHandle() {$/;"	f	class:testing::internal::AutoHandle
~BALProblem	ceres-solver/examples/bal_problem.cc	/^BALProblem::~BALProblem() {$/;"	f	class:ceres::examples::BALProblem
~BALProblem	ceres-solver/examples/simple_bundle_adjuster.cc	/^  ~BALProblem() {$/;"	f	class:BALProblem
~BFGS	ceres-solver/internal/ceres/line_search_direction.cc	/^  virtual ~BFGS() {}$/;"	f	class:ceres::internal::BFGS
~BadLocalParameterization	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual ~BadLocalParameterization() {}$/;"	f	class:ceres::internal::BadLocalParameterization
~BlockJacobiPreconditioner	ceres-solver/internal/ceres/block_jacobi_preconditioner.cc	/^BlockJacobiPreconditioner::~BlockJacobiPreconditioner() {}$/;"	f	class:ceres::internal::BlockJacobiPreconditioner
~BlockRandomAccessDenseMatrix	ceres-solver/internal/ceres/block_random_access_dense_matrix.cc	/^BlockRandomAccessDenseMatrix::~BlockRandomAccessDenseMatrix() {$/;"	f	class:ceres::internal::BlockRandomAccessDenseMatrix
~BlockRandomAccessDiagonalMatrix	ceres-solver/internal/ceres/block_random_access_diagonal_matrix.cc	/^BlockRandomAccessDiagonalMatrix::~BlockRandomAccessDiagonalMatrix() {$/;"	f	class:ceres::internal::BlockRandomAccessDiagonalMatrix
~BlockRandomAccessDiagonalMatrixAdapter	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual ~BlockRandomAccessDiagonalMatrixAdapter() {}$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessDiagonalMatrixAdapter
~BlockRandomAccessMatrix	ceres-solver/internal/ceres/block_random_access_matrix.cc	/^BlockRandomAccessMatrix::~BlockRandomAccessMatrix() {$/;"	f	class:ceres::internal::BlockRandomAccessMatrix
~BlockRandomAccessSparseMatrix	ceres-solver/internal/ceres/block_random_access_sparse_matrix.cc	/^BlockRandomAccessSparseMatrix::~BlockRandomAccessSparseMatrix() {$/;"	f	class:ceres::internal::BlockRandomAccessSparseMatrix
~BlockRandomAccessSparseMatrixAdapter	ceres-solver/internal/ceres/schur_complement_solver.cc	/^  virtual ~BlockRandomAccessSparseMatrixAdapter() {}$/;"	f	class:ceres::internal::__anon184::BlockRandomAccessSparseMatrixAdapter
~BlockSparseMatrix	ceres-solver/internal/ceres/block_sparse_matrix.cc	/^BlockSparseMatrix::~BlockSparseMatrix() {}$/;"	f	class:ceres::internal::BlockSparseMatrix
~BundleAdjustmentProblem	ceres-solver/internal/ceres/bundle_adjustment_test.cc	/^  ~BundleAdjustmentProblem() {$/;"	f	class:ceres::internal::BundleAdjustmentProblem
~CXSparse	ceres-solver/internal/ceres/cxsparse.cc	/^CXSparse::~CXSparse() {$/;"	f	class:ceres::internal::CXSparse
~CXSparseCholesky	ceres-solver/internal/ceres/cxsparse.cc	/^CXSparseCholesky::~CXSparseCholesky() {$/;"	f	class:ceres::internal::CXSparseCholesky
~CallbackCostFunction	ceres-solver/internal/ceres/c_api.cc	/^  virtual ~CallbackCostFunction() {}$/;"	f	class:CallbackCostFunction
~CapturedStream	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ~CapturedStream() {$/;"	f	class:testing::internal::CapturedStream
~CardinalityInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~CardinalityInterface() {}$/;"	f	class:testing::CardinalityInterface
~CartesianProductGenerator10	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator10() {}$/;"	f	class:testing::internal::CartesianProductGenerator10
~CartesianProductGenerator2	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator2() {}$/;"	f	class:testing::internal::CartesianProductGenerator2
~CartesianProductGenerator3	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator3() {}$/;"	f	class:testing::internal::CartesianProductGenerator3
~CartesianProductGenerator4	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator4() {}$/;"	f	class:testing::internal::CartesianProductGenerator4
~CartesianProductGenerator5	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator5() {}$/;"	f	class:testing::internal::CartesianProductGenerator5
~CartesianProductGenerator6	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator6() {}$/;"	f	class:testing::internal::CartesianProductGenerator6
~CartesianProductGenerator7	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator7() {}$/;"	f	class:testing::internal::CartesianProductGenerator7
~CartesianProductGenerator8	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator8() {}$/;"	f	class:testing::internal::CartesianProductGenerator8
~CartesianProductGenerator9	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~CartesianProductGenerator9() {}$/;"	f	class:testing::internal::CartesianProductGenerator9
~CeresMutexLock	ceres-solver/internal/ceres/mutex.h	/^  ~CeresMutexLock() { mu_->Unlock(); }$/;"	f	class:ceres::internal::CeresMutexLock
~CeresReaderMutexLock	ceres-solver/internal/ceres/mutex.h	/^  ~CeresReaderMutexLock() { mu_->ReaderUnlock(); }$/;"	f	class:ceres::internal::CeresReaderMutexLock
~CeresScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/ceres_scan_matcher_2d.cc	/^CeresScanMatcher2D::~CeresScanMatcher2D() {}$/;"	f	class:cartographer::mapping::scan_matching::CeresScanMatcher2D
~CeresWriterMutexLock	ceres-solver/internal/ceres/mutex.h	/^  ~CeresWriterMutexLock() { mu_->WriterUnlock(); }$/;"	f	class:ceres::internal::CeresWriterMutexLock
~CgnrLinearOperator	ceres-solver/internal/ceres/cgnr_linear_operator.h	/^  virtual ~CgnrLinearOperator() {}$/;"	f	class:ceres::internal::CgnrLinearOperator
~CollatedTrajectoryBuilder	cartographer/cartographer/mapping/internal/collated_trajectory_builder.cc	/^CollatedTrajectoryBuilder::~CollatedTrajectoryBuilder() {}$/;"	f	class:cartographer::mapping::CollatedTrajectoryBuilder
~CollatorInterface	cartographer/cartographer/sensor/collator_interface.h	/^  virtual ~CollatorInterface() {}$/;"	f	class:cartographer::sensor::CollatorInterface
~ComposedLoss	ceres-solver/internal/ceres/loss_function.cc	/^ComposedLoss::~ComposedLoss() {$/;"	f	class:ceres::ComposedLoss
~CompressedRowSparseMatrix	ceres-solver/internal/ceres/compressed_row_sparse_matrix.cc	/^CompressedRowSparseMatrix::~CompressedRowSparseMatrix() {}$/;"	f	class:ceres::internal::CompressedRowSparseMatrix
~ConditionedCostFunction	ceres-solver/internal/ceres/conditioned_cost_function.cc	/^ConditionedCostFunction::~ConditionedCostFunction() {$/;"	f	class:ceres::ConditionedCostFunction
~ConstraintBuilder2D	cartographer/cartographer/mapping/internal/constraints/constraint_builder_2d.cc	/^ConstraintBuilder2D::~ConstraintBuilder2D() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder2D
~ConstraintBuilder3D	cartographer/cartographer/mapping/internal/constraints/constraint_builder_3d.cc	/^ConstraintBuilder3D::~ConstraintBuilder3D() {$/;"	f	class:cartographer::mapping::constraints::ConstraintBuilder3D
~CoordinateDescentMinimizer	ceres-solver/internal/ceres/coordinate_descent_minimizer.cc	/^CoordinateDescentMinimizer::~CoordinateDescentMinimizer() {$/;"	f	class:ceres::internal::CoordinateDescentMinimizer
~CostFunction	ceres-solver/include/ceres/cost_function.h	/^  virtual ~CostFunction() {}$/;"	f	class:ceres::CostFunction
~Covariance	ceres-solver/internal/ceres/covariance.cc	/^Covariance::~Covariance() {$/;"	f	class:ceres::Covariance
~CovarianceImpl	ceres-solver/internal/ceres/covariance_impl.cc	/^CovarianceImpl::~CovarianceImpl() {$/;"	f	class:ceres::internal::CovarianceImpl
~Data	cartographer/cartographer/sensor/data.h	/^  virtual ~Data() {}$/;"	f	class:cartographer::sensor::Data
~DeathTest	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~DeathTest() { }$/;"	f	class:testing::internal::DeathTest
~DeathTestFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~DeathTestFactory() { }$/;"	f	class:testing::internal::DeathTestFactory
~DeathTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ~DeathTestImpl() { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }$/;"	f	class:testing::internal::DeathTestImpl
~DenseSchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^  virtual ~DenseSchurComplementSolver() {}$/;"	f	class:ceres::internal::DenseSchurComplementSolver
~DenseSparseMatrix	ceres-solver/internal/ceres/dense_sparse_matrix.h	/^  virtual ~DenseSparseMatrix() {}$/;"	f	class:ceres::internal::DenseSparseMatrix
~DestructorCountingCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  virtual ~DestructorCountingCostFunction() {$/;"	f	class:ceres::internal::DestructorCountingCostFunction
~DoglegStrategy	ceres-solver/internal/ceres/dogleg_strategy.h	/^  virtual ~DoglegStrategy() {}$/;"	f	class:ceres::internal::DoglegStrategy
~DrawableSubmap	cartographer_ros/cartographer_rviz/cartographer_rviz/drawable_submap.cc	/^DrawableSubmap::~DrawableSubmap() {$/;"	f	class:cartographer_rviz::DrawableSubmap
~DynamicAutoDiffCostFunction	ceres-solver/include/ceres/dynamic_autodiff_cost_function.h	/^  virtual ~DynamicAutoDiffCostFunction() {}$/;"	f	class:ceres::DynamicAutoDiffCostFunction
~DynamicCostFunction	ceres-solver/include/ceres/dynamic_cost_function.h	/^  ~DynamicCostFunction() {}$/;"	f	class:ceres::DynamicCostFunction
~DynamicNumericDiffCostFunction	ceres-solver/include/ceres/dynamic_numeric_diff_cost_function.h	/^  virtual ~DynamicNumericDiffCostFunction() {$/;"	f	class:ceres::DynamicNumericDiffCostFunction
~DynamicSparseNormalCholeskySolver	ceres-solver/internal/ceres/dynamic_sparse_normal_cholesky_solver.h	/^  virtual ~DynamicSparseNormalCholeskySolver() {}$/;"	f	class:ceres::internal::DynamicSparseNormalCholeskySolver
~EigenQuaternionParameterization	ceres-solver/include/ceres/local_parameterization.h	/^  virtual ~EigenQuaternionParameterization() {}$/;"	f	class:ceres::EigenQuaternionParameterization
~EigenSparseCholesky	ceres-solver/internal/ceres/eigensparse.cc	/^EigenSparseCholesky::~EigenSparseCholesky() {}$/;"	f	class:ceres::internal::EigenSparseCholesky
~EigenSparseCholeskyTemplate	ceres-solver/internal/ceres/eigensparse.cc	/^  virtual ~EigenSparseCholeskyTemplate() {}$/;"	f	class:ceres::internal::EigenSparseCholeskyTemplate
~EndianAwareFileReader	ceres-solver/examples/libmv_bundle_adjuster.cc	/^  ~EndianAwareFileReader(void) {$/;"	f	class:__anon155::EndianAwareFileReader
~Environment	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~Environment() {}$/;"	f	class:testing::Environment
~Evaluator	ceres-solver/internal/ceres/evaluator.cc	/^Evaluator::~Evaluator() {}$/;"	f	class:ceres::internal::Evaluator
~EventLogger	ceres-solver/internal/ceres/wall_time.cc	/^EventLogger::~EventLogger() {$/;"	f	class:ceres::internal::EventLogger
~Expectation	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Expectation::~Expectation() {}$/;"	f	class:testing::Expectation
~ExpectationBase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ExpectationBase::~ExpectationBase() {}$/;"	f	class:testing::internal::ExpectationBase
~FakeIterationCallback	ceres-solver/internal/ceres/minimizer_test.cc	/^  virtual ~FakeIterationCallback() {}$/;"	f	class:ceres::internal::FakeIterationCallback
~FastCorrelativeScanMatcher2D	cartographer/cartographer/mapping/internal/2d/scan_matching/fast_correlative_scan_matcher_2d.cc	/^FastCorrelativeScanMatcher2D::~FastCorrelativeScanMatcher2D() {}$/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher2D
~FastCorrelativeScanMatcher3D	cartographer/cartographer/mapping/internal/3d/scan_matching/fast_correlative_scan_matcher_3d.cc	/^FastCorrelativeScanMatcher3D::~FastCorrelativeScanMatcher3D() {}$/;"	f	class:cartographer::mapping::scan_matching::FastCorrelativeScanMatcher3D
~FileResolver	cartographer/cartographer/common/lua_parameter_dictionary.h	/^  virtual ~FileResolver() {}$/;"	f	class:cartographer::common::FileResolver
~FileWriter	cartographer/cartographer/io/file_writer.h	/^  virtual ~FileWriter() {}$/;"	f	class:cartographer::io::FileWriter
~FirstOrderFunction	ceres-solver/include/ceres/gradient_problem.h	/^  virtual ~FirstOrderFunction() {}$/;"	f	class:ceres::FirstOrderFunction
~FixedArray	ceres-solver/include/ceres/internal/fixed_array.h	/^inline FixedArray<T, S>::~FixedArray() {$/;"	f	class:ceres::internal::FixedArray
~FixedRatioSampler	cartographer/cartographer/common/fixed_ratio_sampler.cc	/^FixedRatioSampler::~FixedRatioSampler() {}$/;"	f	class:cartographer::common::FixedRatioSampler
~GTestFlagSaver	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ~GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
~GTestLog	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^GTestLog::~GTestLog() {$/;"	f	class:testing::internal::GTestLog
~GTestMutexLock	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~GTestMutexLock() { mutex_->Unlock(); }$/;"	f	class:std::tr1::GTestMutexLock
~GradientCheckingCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function.cc	/^  virtual ~GradientCheckingCostFunction() { }$/;"	f	class:ceres::internal::__anon179::GradientCheckingCostFunction
~GradientProblemEvaluator	ceres-solver/internal/ceres/gradient_problem_evaluator.h	/^  virtual ~GradientProblemEvaluator() {}$/;"	f	class:ceres::internal::GradientProblemEvaluator
~GradientProblemSolver	ceres-solver/internal/ceres/gradient_problem_solver.cc	/^GradientProblemSolver::~GradientProblemSolver() {$/;"	f	class:ceres::GradientProblemSolver
~HasNewFatalFailureHelper	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {$/;"	f	class:testing::internal::HasNewFatalFailureHelper
~HomogeneousVectorParameterization	ceres-solver/include/ceres/local_parameterization.h	/^  virtual ~HomogeneousVectorParameterization() {}$/;"	f	class:ceres::HomogeneousVectorParameterization
~IdentityParameterization	ceres-solver/include/ceres/local_parameterization.h	/^  virtual ~IdentityParameterization() {}$/;"	f	class:ceres::IdentityParameterization
~ImplicitSchurComplement	ceres-solver/internal/ceres/implicit_schur_complement.cc	/^ImplicitSchurComplement::~ImplicitSchurComplement() {$/;"	f	class:ceres::internal::ImplicitSchurComplement
~InSequence	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^InSequence::~InSequence() {$/;"	f	class:testing::InSequence
~InternalRunDeathTestFlag	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~InternalRunDeathTestFlag() {$/;"	f	class:testing::internal::InternalRunDeathTestFlag
~IterationCallback	ceres-solver/include/ceres/iteration_callback.h	/^  virtual ~IterationCallback() {}$/;"	f	class:ceres::IterationCallback
~IterativeSchurComplementSolver	ceres-solver/internal/ceres/iterative_schur_complement_solver.cc	/^IterativeSchurComplementSolver::~IterativeSchurComplementSolver() {}$/;"	f	class:ceres::internal::IterativeSchurComplementSolver
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator10::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator2::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator3::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator4::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator5::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator6::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator7::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator8::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::CartesianProductGenerator9::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::RangeGenerator::Iterator
~Iterator	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Iterator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
~LBFGS	ceres-solver/internal/ceres/line_search_direction.cc	/^  virtual ~LBFGS() {}$/;"	f	class:ceres::internal::LBFGS
~LevenbergMarquardtStrategy	ceres-solver/internal/ceres/levenberg_marquardt_strategy.cc	/^LevenbergMarquardtStrategy::~LevenbergMarquardtStrategy() {$/;"	f	class:ceres::internal::LevenbergMarquardtStrategy
~LineSearch	ceres-solver/internal/ceres/line_search.h	/^  virtual ~LineSearch() {}$/;"	f	class:ceres::internal::LineSearch
~LineSearchDirection	ceres-solver/internal/ceres/line_search_direction.h	/^  virtual ~LineSearchDirection() {}$/;"	f	class:ceres::internal::LineSearchDirection
~LineSearchMinimizer	ceres-solver/internal/ceres/line_search_minimizer.h	/^  ~LineSearchMinimizer() {}$/;"	f	class:ceres::internal::LineSearchMinimizer
~LineSearchPreprocessor	ceres-solver/internal/ceres/line_search_preprocessor.cc	/^LineSearchPreprocessor::~LineSearchPreprocessor() {$/;"	f	class:ceres::internal::LineSearchPreprocessor
~LinearOperator	ceres-solver/internal/ceres/linear_operator.cc	/^LinearOperator::~LinearOperator() {$/;"	f	class:ceres::internal::LinearOperator
~LinearSolver	ceres-solver/internal/ceres/linear_solver.cc	/^LinearSolver::~LinearSolver() {$/;"	f	class:ceres::internal::LinearSolver
~LocalParameterization	ceres-solver/internal/ceres/local_parameterization.cc	/^LocalParameterization::~LocalParameterization() {$/;"	f	class:ceres::LocalParameterization
~LocalTrajectoryBuilder2D	cartographer/cartographer/mapping/internal/2d/local_trajectory_builder_2d.cc	/^LocalTrajectoryBuilder2D::~LocalTrajectoryBuilder2D() {}$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder2D
~LocalTrajectoryBuilder3D	cartographer/cartographer/mapping/internal/3d/local_trajectory_builder_3d.cc	/^LocalTrajectoryBuilder3D::~LocalTrajectoryBuilder3D() {}$/;"	f	class:cartographer::mapping::LocalTrajectoryBuilder3D
~LocalTrajectoryUploader	cartographer/cartographer/cloud/internal/local_trajectory_uploader.cc	/^LocalTrajectoryUploader::~LocalTrajectoryUploader() {}$/;"	f	class:cartographer::cloud::__anon37::LocalTrajectoryUploader
~LocklessQueue	cartographer/cartographer/common/lockless_queue.h	/^  ~LocklessQueue() {$/;"	f	class:cartographer::common::LocklessQueue
~LogSink	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  virtual ~LogSink() {}$/;"	f	class:google::LogSink
~LoggingCallback	ceres-solver/internal/ceres/callbacks.cc	/^LoggingCallback::~LoggingCallback() {}$/;"	f	class:ceres::internal::LoggingCallback
~LossFunction	ceres-solver/include/ceres/loss_function.h	/^  virtual ~LossFunction() {}$/;"	f	class:ceres::LossFunction
~LossFunctionWrapper	ceres-solver/include/ceres/loss_function.h	/^  virtual ~LossFunctionWrapper() {$/;"	f	class:ceres::LossFunctionWrapper
~LowRankInverseHessian	ceres-solver/internal/ceres/low_rank_inverse_hessian.h	/^  virtual ~LowRankInverseHessian() {}$/;"	f	class:ceres::internal::LowRankInverseHessian
~LuaParameterDictionary	cartographer/cartographer/common/lua_parameter_dictionary.cc	/^LuaParameterDictionary::~LuaParameterDictionary() {$/;"	f	class:cartographer::common::LuaParameterDictionary
~MapBuilderInterface	cartographer/cartographer/mapping/map_builder_interface.h	/^  virtual ~MapBuilderInterface() {}$/;"	f	class:cartographer::mapping::MapBuilderInterface
~MapBuilderServer	cartographer/cartographer/cloud/internal/map_builder_server.h	/^  ~MapBuilderServer() {}$/;"	f	class:cartographer::cloud::MapBuilderServer
~MapBuilderServerInterface	cartographer/cartographer/cloud/map_builder_server_interface.h	/^  virtual ~MapBuilderServerInterface() {}$/;"	f	class:cartographer::cloud::MapBuilderServerInterface
~MatchResultListener	ceres-solver/internal/ceres/gmock/gmock.h	/^inline MatchResultListener::~MatchResultListener() {$/;"	f	class:testing::MatchResultListener
~MatcherBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~MatcherBase() {}$/;"	f	class:testing::internal::MatcherBase
~MatcherDescriberInterface	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~MatcherDescriberInterface() {}$/;"	f	class:testing::MatcherDescriberInterface
~MessageLogger	ceres-solver/internal/ceres/miniglog/glog/logging.h	/^  ~MessageLogger() {$/;"	f	class:MessageLogger
~Minimizer	ceres-solver/internal/ceres/minimizer.cc	/^Minimizer::~Minimizer() {}$/;"	f	class:ceres::internal::Minimizer
~MockObjectRegistry	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ~MockObjectRegistry() {$/;"	f	class:testing::__anon176::MockObjectRegistry
~Mutex	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Mutex::~Mutex() {$/;"	f	class:testing::internal::Mutex
~Mutex	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~Mutex() {$/;"	f	class:std::tr1::Mutex
~Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::~Mutex()            { CERES_SAFE_PTHREAD(pthread_mutex_destroy); }$/;"	f	class:ceres::internal::Mutex
~Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::~Mutex()            { CERES_SAFE_PTHREAD(pthread_rwlock_destroy); }$/;"	f	class:ceres::internal::Mutex
~Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::~Mutex()            { DeleteCriticalSection(&mutex_); }$/;"	f	class:ceres::internal::Mutex
~Mutex	ceres-solver/internal/ceres/mutex.h	/^Mutex::~Mutex()            { assert(mutex_ == 0); }$/;"	f	class:ceres::internal::Mutex
~NaggyMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~NaggyMock() {$/;"	f	class:testing::NaggyMock
~NativeArray	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~NativeArray() {$/;"	f	class:testing::internal::NativeArray
~NiceMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~NiceMock() {$/;"	f	class:testing::NiceMock
~Node	cartographer_ros/cartographer_ros/cartographer_ros/node.cc	/^Node::~Node() { FinishAllTrajectories(); }$/;"	f	class:cartographer_ros::Node
~Node	cartographer_ros/cartographer_ros/cartographer_ros/occupancy_grid_node_main.cc	/^  ~Node() {}$/;"	f	class:cartographer_ros::__anon135::Node
~Notification	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~Notification() {$/;"	f	class:std::tr1::Notification
~NumParameterBlocksCostFunction	ceres-solver/internal/ceres/program_test.cc	/^  virtual ~NumParameterBlocksCostFunction() {$/;"	f	class:ceres::internal::NumParameterBlocksCostFunction
~NumericDiffCostFunction	ceres-solver/include/ceres/numeric_diff_cost_function.h	/^  ~NumericDiffCostFunction() {$/;"	f	class:ceres::NumericDiffCostFunction
~OgreSlice	cartographer_ros/cartographer_rviz/cartographer_rviz/ogre_slice.cc	/^OgreSlice::~OgreSlice() {$/;"	f	class:cartographer_rviz::OgreSlice
~OptimizationProblem2D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_2d.cc	/^OptimizationProblem2D::~OptimizationProblem2D() {}$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem2D
~OptimizationProblem3D	cartographer/cartographer/mapping/internal/optimization/optimization_problem_3d.cc	/^OptimizationProblem3D::~OptimizationProblem3D() {}$/;"	f	class:cartographer::mapping::optimization::OptimizationProblem3D
~OptimizationProblemInterface	cartographer/cartographer/mapping/internal/optimization/optimization_problem_interface.h	/^  virtual ~OptimizationProblemInterface() {}$/;"	f	class:cartographer::mapping::optimization::OptimizationProblemInterface
~OrderedMultiQueue	cartographer/cartographer/sensor/internal/ordered_multi_queue.cc	/^OrderedMultiQueue::~OrderedMultiQueue() {$/;"	f	class:cartographer::sensor::OrderedMultiQueue
~OsStackTraceGetterInterface	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  virtual ~OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
~ParamGeneratorInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ParamGeneratorInterface() {}$/;"	f	class:testing::internal::ParamGeneratorInterface
~ParamIteratorInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ParamIteratorInterface() {}$/;"	f	class:testing::internal::ParamIteratorInterface
~ParameterizedTestCaseInfoBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ParameterizedTestCaseInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestCaseInfoBase
~ParameterizedTestCaseRegistry	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~ParameterizedTestCaseRegistry() {$/;"	f	class:testing::internal::ParameterizedTestCaseRegistry
~PartitionedMatrixView	ceres-solver/internal/ceres/partitioned_matrix_view_impl.h	/^~PartitionedMatrixView() {$/;"	f	class:ceres::internal::PartitionedMatrixView
~PartitionedMatrixViewBase	ceres-solver/internal/ceres/partitioned_matrix_view.h	/^  virtual ~PartitionedMatrixViewBase() {}$/;"	f	class:ceres::internal::PartitionedMatrixViewBase
~PointsProcessor	cartographer/cartographer/io/points_processor.h	/^  virtual ~PointsProcessor() {}$/;"	f	class:cartographer::io::PointsProcessor
~PolynomialParameterization	ceres-solver/internal/ceres/covariance_test.cc	/^  virtual ~PolynomialParameterization() {}$/;"	f	class:ceres::internal::PolynomialParameterization
~PoseGraph2D	cartographer/cartographer/mapping/internal/2d/pose_graph_2d.cc	/^PoseGraph2D::~PoseGraph2D() {$/;"	f	class:cartographer::mapping::PoseGraph2D
~PoseGraph3D	cartographer/cartographer/mapping/internal/3d/pose_graph_3d.cc	/^PoseGraph3D::~PoseGraph3D() {$/;"	f	class:cartographer::mapping::PoseGraph3D
~PoseGraphInterface	cartographer/cartographer/mapping/pose_graph_interface.h	/^  virtual ~PoseGraphInterface() {}$/;"	f	class:cartographer::mapping::PoseGraphInterface
~PoseGraphTrimmer	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  virtual ~PoseGraphTrimmer() {}$/;"	f	class:cartographer::mapping::PoseGraphTrimmer
~PowellEvaluator2	ceres-solver/internal/ceres/trust_region_minimizer_test.cc	/^  virtual ~PowellEvaluator2() {}$/;"	f	class:ceres::internal::PowellEvaluator2
~Preconditioner	ceres-solver/internal/ceres/preconditioner.cc	/^Preconditioner::~Preconditioner() {$/;"	f	class:ceres::internal::Preconditioner
~Preprocessor	ceres-solver/internal/ceres/preprocessor.cc	/^Preprocessor::~Preprocessor() {$/;"	f	class:ceres::internal::Preprocessor
~Problem	ceres-solver/internal/ceres/problem.cc	/^Problem::~Problem() {}$/;"	f	class:ceres::Problem
~ProblemImpl	ceres-solver/internal/ceres/problem_impl.cc	/^ProblemImpl::~ProblemImpl() {$/;"	f	class:ceres::internal::ProblemImpl
~ProductParameterization	ceres-solver/internal/ceres/local_parameterization.cc	/^ProductParameterization::~ProductParameterization() {$/;"	f	class:ceres::ProductParameterization
~ProtoStreamReaderInterface	cartographer/cartographer/io/proto_stream_interface.h	/^  virtual ~ProtoStreamReaderInterface() {}$/;"	f	class:cartographer::io::ProtoStreamReaderInterface
~ProtoStreamWriterInterface	cartographer/cartographer/io/proto_stream_interface.h	/^  virtual ~ProtoStreamWriterInterface() {}$/;"	f	class:cartographer::io::ProtoStreamWriterInterface
~QuadraticCostFunction	ceres-solver/examples/helloworld_analytic_diff.cc	/^  virtual ~QuadraticCostFunction() {}$/;"	f	class:QuadraticCostFunction
~QuadraticTestFunction	ceres-solver/internal/ceres/gradient_problem_test.cc	/^  virtual ~QuadraticTestFunction() {$/;"	f	class:ceres::internal::QuadraticTestFunction
~QuaternionParameterization	ceres-solver/include/ceres/local_parameterization.h	/^  virtual ~QuaternionParameterization() {}$/;"	f	class:ceres::QuaternionParameterization
~RE	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^RE::~RE() {$/;"	f	class:testing::internal::RE
~RangeGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~RangeGenerator() {}$/;"	f	class:testing::internal::RangeGenerator
~RateTimer	cartographer/cartographer/common/rate_timer.h	/^  ~RateTimer() {}$/;"	f	class:cartographer::common::RateTimer
~RegularizationCheckingLinearSolver	ceres-solver/internal/ceres/levenberg_marquardt_strategy_test.cc	/^  virtual ~RegularizationCheckingLinearSolver() {}$/;"	f	class:ceres::internal::RegularizationCheckingLinearSolver
~RememberingCallback	ceres-solver/internal/ceres/solver_test.cc	/^  virtual ~RememberingCallback() {}$/;"	f	struct:ceres::internal::RememberingCallback
~ReturnSentinel	ceres-solver/internal/ceres/gtest/gtest.h	/^    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
~Rosenbrock	ceres-solver/examples/rosenbrock.cc	/^  virtual ~Rosenbrock() {}$/;"	f	class:Rosenbrock
~Rosenbrock	ceres-solver/internal/ceres/gradient_problem_solver_test.cc	/^  virtual ~Rosenbrock() {}$/;"	f	class:ceres::internal::Rosenbrock
~Runnable	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~Runnable() {}$/;"	f	class:std::tr1::ThreadWithParamBase::Runnable
~RunnableImpl	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~RunnableImpl() {}$/;"	f	class:std::tr1::ThreadWithParam::RunnableImpl
~ScaledLoss	ceres-solver/include/ceres/loss_function.h	/^  virtual ~ScaledLoss() {$/;"	f	class:ceres::ScaledLoss
~SchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.h	/^  virtual ~SchurComplementSolver() {}$/;"	f	class:ceres::internal::SchurComplementSolver
~SchurEliminator	ceres-solver/internal/ceres/schur_eliminator_impl.h	/^SchurEliminator<kRowBlockSize, kEBlockSize, kFBlockSize>::~SchurEliminator() {$/;"	f	class:ceres::internal::SchurEliminator
~SchurEliminatorBase	ceres-solver/internal/ceres/schur_eliminator.h	/^  virtual ~SchurEliminatorBase() {}$/;"	f	class:ceres::internal::SchurEliminatorBase
~SchurJacobiPreconditioner	ceres-solver/internal/ceres/schur_jacobi_preconditioner.cc	/^SchurJacobiPreconditioner::~SchurJacobiPreconditioner() {$/;"	f	class:ceres::internal::SchurJacobiPreconditioner
~ScopedExecutionTimer	ceres-solver/internal/ceres/execution_summary.h	/^  ~ScopedExecutionTimer() {$/;"	f	class:ceres::internal::ScopedExecutionTimer
~ScopedFakeTestPartResultReporter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
~ScopedMockLog	ceres-solver/internal/ceres/gmock/mock-log.h	/^  virtual ~ScopedMockLog() { RemoveLogSink(this); }$/;"	f	class:testing::ScopedMockLog
~ScopedPrematureExitFile	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^  ~ScopedPrematureExitFile() {$/;"	f	class:testing::internal::ScopedPrematureExitFile
~ScopedRosLogSink	cartographer_ros/cartographer_ros/cartographer_ros/ros_log_sink.cc	/^ScopedRosLogSink::~ScopedRosLogSink() { RemoveLogSink(this); }$/;"	f	class:cartographer_ros::ScopedRosLogSink
~ScopedSetValue	ceres-solver/internal/ceres/c_api_test.cc	/^  ~ScopedSetValue() {$/;"	f	class:ceres::internal::ScopedSetValue
~SingleFailureChecker	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^SingleFailureChecker::~SingleFailureChecker() {$/;"	f	class:testing::internal::SingleFailureChecker
~SizedCostFunction	ceres-solver/include/ceres/sized_cost_function.h	/^  virtual ~SizedCostFunction() { }$/;"	f	class:ceres::SizedCostFunction
~SocketWriter	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^    virtual ~SocketWriter() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
~Solver	ceres-solver/internal/ceres/solver.cc	/^Solver::~Solver() {}$/;"	f	class:ceres::Solver
~SparseCholesky	ceres-solver/internal/ceres/sparse_cholesky.cc	/^SparseCholesky::~SparseCholesky() {}$/;"	f	class:ceres::internal::SparseCholesky
~SparseMatrix	ceres-solver/internal/ceres/sparse_matrix.cc	/^SparseMatrix::~SparseMatrix() {$/;"	f	class:ceres::internal::SparseMatrix
~SparseMatrixPreconditionerWrapper	ceres-solver/internal/ceres/preconditioner.cc	/^SparseMatrixPreconditionerWrapper::~SparseMatrixPreconditionerWrapper() {$/;"	f	class:ceres::internal::SparseMatrixPreconditionerWrapper
~SparseNormalCholeskySolver	ceres-solver/internal/ceres/sparse_normal_cholesky_solver.cc	/^SparseNormalCholeskySolver::~SparseNormalCholeskySolver() {}$/;"	f	class:ceres::internal::SparseNormalCholeskySolver
~SparseSchurComplementSolver	ceres-solver/internal/ceres/schur_complement_solver.cc	/^SparseSchurComplementSolver::~SparseSchurComplementSolver() {$/;"	f	class:ceres::internal::SparseSchurComplementSolver
~StateUpdatingCallback	ceres-solver/internal/ceres/callbacks.cc	/^StateUpdatingCallback::~StateUpdatingCallback() {}$/;"	f	class:ceres::internal::StateUpdatingCallback
~SteepestDescent	ceres-solver/internal/ceres/line_search_direction.cc	/^  virtual ~SteepestDescent() {}$/;"	f	class:ceres::internal::SteepestDescent
~StreamFileWriter	cartographer/cartographer/io/file_writer.cc	/^StreamFileWriter::~StreamFileWriter() {}$/;"	f	class:cartographer::io::StreamFileWriter
~StrictMock	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~StrictMock() {$/;"	f	class:testing::StrictMock
~Submap	cartographer/cartographer/mapping/submaps.h	/^  virtual ~Submap() {}$/;"	f	class:cartographer::mapping::Submap
~SubmapsDisplay	cartographer_ros/cartographer_rviz/cartographer_rviz/submaps_display.cc	/^SubmapsDisplay::~SubmapsDisplay() {$/;"	f	class:cartographer_rviz::SubmapsDisplay
~SubsetParameterization	ceres-solver/include/ceres/local_parameterization.h	/^  virtual ~SubsetParameterization() {}$/;"	f	class:ceres::SubsetParameterization
~SucceedingIterationCallback	ceres-solver/internal/ceres/minimizer_test.cc	/^  virtual ~SucceedingIterationCallback() {}$/;"	f	class:ceres::internal::SucceedingIterationCallback
~SuiteSparse	ceres-solver/internal/ceres/suitesparse.cc	/^SuiteSparse::~SuiteSparse() { cholmod_finish(&cc_); }$/;"	f	class:ceres::internal::SuiteSparse
~SuiteSparseCholesky	ceres-solver/internal/ceres/suitesparse.cc	/^SuiteSparseCholesky::~SuiteSparseCholesky() {$/;"	f	class:ceres::internal::SuiteSparseCholesky
~Task	cartographer/cartographer/common/task.cc	/^Task::~Task() {$/;"	f	class:cartographer::common::Task
~Test	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^Test::~Test() {$/;"	f	class:testing::Test
~TestCase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestCase::~TestCase() {$/;"	f	class:testing::TestCase
~TestEventListener	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~TestEventListener() {}$/;"	f	class:testing::TestEventListener
~TestEventListeners	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventListeners::~TestEventListeners() { delete repeater_; }$/;"	f	class:testing::TestEventListeners
~TestEventRepeater	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestEventRepeater::~TestEventRepeater() {$/;"	f	class:testing::internal::TestEventRepeater
~TestFactoryBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
~TestInfo	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestInfo::~TestInfo() { delete factory_; }$/;"	f	class:testing::TestInfo
~TestMetaFactoryBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~TestMetaFactoryBase() {}$/;"	f	class:testing::internal::TestMetaFactoryBase
~TestParameterization	ceres-solver/internal/ceres/parameter_block_test.cc	/^  virtual ~TestParameterization() {}$/;"	f	struct:ceres::internal::TestParameterization
~TestPartResultReporterInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~TestPartResultReporterInterface() {}$/;"	f	class:testing::TestPartResultReporterInterface
~TestResult	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^TestResult::~TestResult() {$/;"	f	class:testing::TestResult
~TfBridge	cartographer_ros/cartographer_ros/cartographer_ros/tf_bridge.h	/^  ~TfBridge() {}$/;"	f	class:cartographer_ros::TfBridge
~ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~ThreadLocal() { ThreadLocalRegistry::OnThreadLocalDestroyed(this); }$/;"	f	class:std::tr1::ThreadLocal
~ThreadLocal	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~ThreadLocal() {$/;"	f	class:std::tr1::ThreadLocal
~ThreadLocalBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ThreadLocalBase() {}$/;"	f	class:std::tr1::ThreadLocalBase
~ThreadLocalValueHolderBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ThreadLocalValueHolderBase() {}$/;"	f	class:std::tr1::ThreadLocalValueHolderBase
~ThreadPool	cartographer/cartographer/common/thread_pool.cc	/^ThreadPool::~ThreadPool() {$/;"	f	class:cartographer::common::ThreadPool
~ThreadPoolForTesting	cartographer/cartographer/common/internal/testing/thread_pool_for_testing.cc	/^ThreadPoolForTesting::~ThreadPoolForTesting() {$/;"	f	class:cartographer::common::testing::ThreadPoolForTesting
~ThreadPoolInterface	cartographer/cartographer/common/thread_pool.h	/^  virtual ~ThreadPoolInterface() {}$/;"	f	class:cartographer::common::ThreadPoolInterface
~ThreadWithParam	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ThreadWithParam() {}$/;"	f	class:std::tr1::ThreadWithParam
~ThreadWithParam	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~ThreadWithParam() { Join(); }$/;"	f	class:std::tr1::ThreadWithParam
~ThreadWithParamBase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^ThreadWithParamBase::~ThreadWithParamBase() {$/;"	f	class:testing::internal::ThreadWithParamBase
~ThreadWithParamBase	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ThreadWithParamBase() {}$/;"	f	class:std::tr1::ThreadWithParamBase
~TrajectoryBuilderInterface	cartographer/cartographer/mapping/trajectory_builder_interface.h	/^  virtual ~TrajectoryBuilderInterface() {}$/;"	f	class:cartographer::mapping::TrajectoryBuilderInterface
~TrajectoryBuilderStub	cartographer/cartographer/cloud/internal/client/trajectory_builder_stub.cc	/^TrajectoryBuilderStub::~TrajectoryBuilderStub() {$/;"	f	class:cartographer::cloud::TrajectoryBuilderStub
~Trimmable	cartographer/cartographer/mapping/pose_graph_trimmer.h	/^  virtual ~Trimmable() {}$/;"	f	class:cartographer::mapping::Trimmable
~TripletSparseMatrix	ceres-solver/internal/ceres/triplet_sparse_matrix.cc	/^TripletSparseMatrix::~TripletSparseMatrix() {}$/;"	f	class:ceres::internal::TripletSparseMatrix
~TrustRegionMinimizer	ceres-solver/internal/ceres/trust_region_minimizer.cc	/^TrustRegionMinimizer::~TrustRegionMinimizer() {}$/;"	f	class:ceres::internal::TrustRegionMinimizer
~TrustRegionPreprocessor	ceres-solver/internal/ceres/trust_region_preprocessor.cc	/^TrustRegionPreprocessor::~TrustRegionPreprocessor() {$/;"	f	class:ceres::internal::TrustRegionPreprocessor
~TrustRegionStrategy	ceres-solver/internal/ceres/trust_region_strategy.cc	/^TrustRegionStrategy::~TrustRegionStrategy() {}$/;"	f	class:ceres::internal::TrustRegionStrategy
~TypedExpectation	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~TypedExpectation() {$/;"	f	class:testing::internal::TypedExpectation
~TypedLinearSolver	ceres-solver/internal/ceres/linear_solver.h	/^  virtual ~TypedLinearSolver() {}$/;"	f	class:ceres::internal::TypedLinearSolver
~TypedPreconditioner	ceres-solver/internal/ceres/preconditioner.h	/^  virtual ~TypedPreconditioner() {}$/;"	f	class:ceres::internal::TypedPreconditioner
~UnaryCostFunction	ceres-solver/internal/ceres/gradient_checking_cost_function_test.cc	/^  virtual ~UnaryCostFunction() {}$/;"	f	class:ceres::internal::UnaryCostFunction
~UnaryCostFunction	ceres-solver/internal/ceres/problem_test.cc	/^  virtual ~UnaryCostFunction() {}$/;"	f	class:ceres::internal::UnaryCostFunction
~UnitTest	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UnitTest::~UnitTest() {$/;"	f	class:testing::UnitTest
~UnitTestImpl	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UnitTestImpl::~UnitTestImpl() {$/;"	f	class:testing::internal::UnitTestImpl
~UntypedActionResultHolderBase	ceres-solver/internal/ceres/gmock/gmock.h	/^  virtual ~UntypedActionResultHolderBase() {}$/;"	f	class:testing::internal::UntypedActionResultHolderBase
~UntypedFunctionMockerBase	ceres-solver/internal/ceres/gmock_gtest_all.cc	/^UntypedFunctionMockerBase::~UntypedFunctionMockerBase() {}$/;"	f	class:testing::internal::UntypedFunctionMockerBase
~ValueHolderFactory	ceres-solver/internal/ceres/gtest/gtest.h	/^    virtual ~ValueHolderFactory() {}$/;"	f	class:std::tr1::ThreadLocal::ValueHolderFactory
~ValueProducer	ceres-solver/internal/ceres/gmock/gmock.h	/^    virtual ~ValueProducer() {}$/;"	f	class:testing::DefaultValue::ValueProducer
~ValuesInIteratorRangeGenerator	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~ValuesInIteratorRangeGenerator() {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
~VisibilityBasedPreconditioner	ceres-solver/internal/ceres/visibility_based_preconditioner.cc	/^VisibilityBasedPreconditioner::~VisibilityBasedPreconditioner() {}$/;"	f	class:ceres::internal::VisibilityBasedPreconditioner
~WithParamInterface	ceres-solver/internal/ceres/gtest/gtest.h	/^  virtual ~WithParamInterface() {}$/;"	f	class:testing::WithParamInterface
~WolfeLineSearch	ceres-solver/internal/ceres/line_search.h	/^  virtual ~WolfeLineSearch() {}$/;"	f	class:ceres::internal::WolfeLineSearch
~linked_ptr	ceres-solver/internal/ceres/gtest/gtest.h	/^  ~linked_ptr() { depart(); }$/;"	f	class:testing::internal::linked_ptr
~scoped_array	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  ~scoped_array() {$/;"	f	class:ceres::internal::scoped_array
~scoped_ptr	ceres-solver/include/ceres/internal/scoped_ptr.h	/^  ~scoped_ptr() {$/;"	f	class:ceres::internal::scoped_ptr
